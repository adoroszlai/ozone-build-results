<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201014 22:22:26.319" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:14.831" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:19.090" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 22:18:19.091" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:19.091" starttime="20201014 22:18:14.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:19.092" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 22:18:19.092" starttime="20201014 22:18:19.091"></status>
</kw>
<msg timestamp="20201014 22:18:19.092" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:19.092" starttime="20201014 22:18:14.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:19.099" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:23.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:18:23.064" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:23.064" starttime="20201014 22:18:19.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:23.065" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:18:23.065" starttime="20201014 22:18:23.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:18:23.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:18:23.066" starttime="20201014 22:18:23.065"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:23.066" starttime="20201014 22:18:19.095"></status>
</kw>
<msg timestamp="20201014 22:18:23.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:18:23.066" starttime="20201014 22:18:19.094"></status>
</kw>
<msg timestamp="20201014 22:18:23.067" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:23.067" starttime="20201014 22:18:19.094"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201014 22:18:23.067" starttime="20201014 22:18:23.067"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:23.067" starttime="20201014 22:18:19.093"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:23.067" starttime="20201014 22:18:19.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:23.072" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:26.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:18:26.815" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:26.815" starttime="20201014 22:18:23.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:26.817" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:18:26.817" starttime="20201014 22:18:26.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:18:26.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:18:26.817" starttime="20201014 22:18:26.817"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:26.818" starttime="20201014 22:18:23.069"></status>
</kw>
<msg timestamp="20201014 22:18:26.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:18:26.818" starttime="20201014 22:18:23.069"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:26.818" starttime="20201014 22:18:23.069"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:26.818" starttime="20201014 22:18:23.068"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:26.818" starttime="20201014 22:18:23.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201014 22:18:26.819" starttime="20201014 22:18:26.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:26.823" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:30.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:18:30.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:30.675" starttime="20201014 22:18:26.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:30.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:18:26.511Z",
  "modificationTime" : "2020-10-14T22:18:26.511Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201014 22:18:30.676" starttime="20201014 22:18:30.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:18:30.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:18:30.677" starttime="20201014 22:18:30.677"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:30.677" starttime="20201014 22:18:26.820"></status>
</kw>
<msg timestamp="20201014 22:18:30.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:18:30.678" starttime="20201014 22:18:26.820"></status>
</kw>
<msg timestamp="20201014 22:18:30.678" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:30.678" starttime="20201014 22:18:26.819"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201014 22:18:30.678" starttime="20201014 22:18:30.678"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:18:30.682" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:18:30.683" starttime="20201014 22:18:30.682"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:18:30.683" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:18:30.683" starttime="20201014 22:18:30.683"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:30.684" starttime="20201014 22:18:30.681"></status>
</kw>
<msg timestamp="20201014 22:18:30.684" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:18:30.684" starttime="20201014 22:18:30.681"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:30.684" starttime="20201014 22:18:30.680"></status>
</kw>
<msg timestamp="20201014 22:18:30.684" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201014 22:18:30.684" starttime="20201014 22:18:30.679"></status>
</kw>
<msg timestamp="20201014 22:18:30.684" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201014 22:18:30.684" starttime="20201014 22:18:30.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:30.689" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:34.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:18:34.524" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:34.524" starttime="20201014 22:18:30.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:34.525" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:18:34.525" starttime="20201014 22:18:34.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:18:34.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:18:34.526" starttime="20201014 22:18:34.525"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:34.526" starttime="20201014 22:18:30.685"></status>
</kw>
<msg timestamp="20201014 22:18:34.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:18:34.526" starttime="20201014 22:18:30.685"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:34.526" starttime="20201014 22:18:30.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:34.530" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:43.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:18:43.063" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:43.063" starttime="20201014 22:18:34.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:43.065" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:18:43.065" starttime="20201014 22:18:43.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:18:43.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:18:43.065" starttime="20201014 22:18:43.065"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:43.066" starttime="20201014 22:18:34.527"></status>
</kw>
<msg timestamp="20201014 22:18:43.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:18:43.066" starttime="20201014 22:18:34.527"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:43.066" starttime="20201014 22:18:34.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:43.070" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:48.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:18:48.947" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:48.947" starttime="20201014 22:18:43.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:48.949" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:18:48.949" starttime="20201014 22:18:48.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:18:48.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:18:48.949" starttime="20201014 22:18:48.949"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:48.950" starttime="20201014 22:18:43.067"></status>
</kw>
<msg timestamp="20201014 22:18:48.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:18:48.950" starttime="20201014 22:18:43.067"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:48.950" starttime="20201014 22:18:43.066"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:48.954" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:56.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:18:56.966" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:18:56.966" starttime="20201014 22:18:48.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:56.968" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:18:56.968" starttime="20201014 22:18:56.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:18:56.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:18:56.968" starttime="20201014 22:18:56.968"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:56.969" starttime="20201014 22:18:48.951"></status>
</kw>
<msg timestamp="20201014 22:18:56.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:18:56.969" starttime="20201014 22:18:48.951"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:56.969" starttime="20201014 22:18:48.950"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:18:56.969" critical="yes" starttime="20201014 22:18:14.824"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:18:56.975" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:18:56.975" starttime="20201014 22:18:56.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:18:56.975" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:18:56.975" starttime="20201014 22:18:56.975"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:56.976" starttime="20201014 22:18:56.974"></status>
</kw>
<msg timestamp="20201014 22:18:56.976" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:18:56.976" starttime="20201014 22:18:56.973"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:56.976" starttime="20201014 22:18:56.973"></status>
</kw>
<msg timestamp="20201014 22:18:56.976" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 22:18:56.976" starttime="20201014 22:18:56.972"></status>
</kw>
<msg timestamp="20201014 22:18:56.976" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 22:18:56.976" starttime="20201014 22:18:56.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:56.980" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:19:00.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:19:00.759" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:19:00.759" starttime="20201014 22:18:56.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:19:00.760" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:19:00.760" starttime="20201014 22:19:00.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:19:00.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:19:00.761" starttime="20201014 22:19:00.760"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:00.761" starttime="20201014 22:18:56.977"></status>
</kw>
<msg timestamp="20201014 22:19:00.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:19:00.761" starttime="20201014 22:18:56.977"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:00.761" starttime="20201014 22:18:56.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:19:00.766" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:19:04.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:19:04.475" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:19:04.475" starttime="20201014 22:19:00.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:19:04.476" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:19:04.476" starttime="20201014 22:19:04.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:19:04.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:19:04.477" starttime="20201014 22:19:04.476"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:04.477" starttime="20201014 22:19:00.762"></status>
</kw>
<msg timestamp="20201014 22:19:04.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:19:04.478" starttime="20201014 22:19:00.762"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:04.478" starttime="20201014 22:19:00.761"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:19:04.478" critical="yes" starttime="20201014 22:18:56.970"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201014 22:19:04.479" starttime="20201014 22:18:14.769"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:20:47.847" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:20:47.847" starttime="20201014 22:20:47.847"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:20:47.848" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:20:47.848" starttime="20201014 22:20:47.848"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:47.848" starttime="20201014 22:20:47.845"></status>
</kw>
<msg timestamp="20201014 22:20:47.848" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:20:47.848" starttime="20201014 22:20:47.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:20:47.850" starttime="20201014 22:20:47.849"></status>
</kw>
<msg timestamp="20201014 22:20:47.850" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 22:20:47.850" starttime="20201014 22:20:47.849"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:47.850" starttime="20201014 22:20:47.844"></status>
</kw>
<msg timestamp="20201014 22:20:47.850" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:20:47.850" starttime="20201014 22:20:47.843"></status>
</kw>
<msg timestamp="20201014 22:20:47.850" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:20:47.850" starttime="20201014 22:20:47.843"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 22:20:47.851" level="INFO">${random} = 39076</msg>
<status status="PASS" endtime="20201014 22:20:47.851" starttime="20201014 22:20:47.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:20:47.854" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-39076 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:20:51.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:20:51.925" level="INFO">${output} = 2020-10-14 22:20:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:20:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201014 22:20:51.925" starttime="20201014 22:20:47.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:20:51.926" level="INFO">2020-10-14 22:20:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:20:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:20:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 22:20:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:20:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3D8E9F356EDB-&gt;d6e65083-a2bb-4d3f-9ae2-d8be956ff4d0
2020-10-14 22:20:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201014 22:20:51.926" starttime="20201014 22:20:51.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:20:51.927" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:20:51.927" starttime="20201014 22:20:51.926"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:51.927" starttime="20201014 22:20:47.852"></status>
</kw>
<msg timestamp="20201014 22:20:51.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:20:51.927" starttime="20201014 22:20:47.852"></status>
</kw>
<msg timestamp="20201014 22:20:51.927" level="INFO">${result} = 2020-10-14 22:20:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:20:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201014 22:20:51.928" starttime="20201014 22:20:47.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:20:51.931" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:20:54.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:20:54.330" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 22:20 ofs://om/volume1/bucket1/ozone-39076
-rw-...</msg>
<status status="PASS" endtime="20201014 22:20:54.330" starttime="20201014 22:20:51.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:20:54.331" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 22:20 ofs://om/volume1/bucket1/ozone-39076
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 22:19 ofs://om/volume1/bucket1/ozone-67825
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:19 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:20 ofs://om/volume1/bucket1/wordcount-82.txt</msg>
<status status="PASS" endtime="20201014 22:20:54.331" starttime="20201014 22:20:54.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:20:54.332" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:20:54.332" starttime="20201014 22:20:54.331"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:54.332" starttime="20201014 22:20:51.929"></status>
</kw>
<msg timestamp="20201014 22:20:54.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:20:54.332" starttime="20201014 22:20:51.928"></status>
</kw>
<msg timestamp="20201014 22:20:54.332" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:18 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 22:20 ofs://om/volume1/bucket1/ozone-39076
-rw-...</msg>
<status status="PASS" endtime="20201014 22:20:54.332" starttime="20201014 22:20:51.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:20:54.333" starttime="20201014 22:20:54.333"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 22:20:54.333" critical="yes" starttime="20201014 22:20:47.842"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201014 22:20:54.334" starttime="20201014 22:20:47.795"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:19:15.251" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:19:15.251" starttime="20201014 22:19:15.250"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:19:15.252" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:19:15.252" starttime="20201014 22:19:15.252"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:15.252" starttime="20201014 22:19:15.249"></status>
</kw>
<msg timestamp="20201014 22:19:15.252" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:19:15.252" starttime="20201014 22:19:15.249"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:15.253" starttime="20201014 22:19:15.248"></status>
</kw>
<msg timestamp="20201014 22:19:15.253" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 22:19:15.253" starttime="20201014 22:19:15.247"></status>
</kw>
<msg timestamp="20201014 22:19:15.253" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 22:19:15.253" starttime="20201014 22:19:15.247"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 22:19:15.254" level="INFO">${random} = 67825</msg>
<status status="PASS" endtime="20201014 22:19:15.254" starttime="20201014 22:19:15.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:19:15.256" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-67825 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:19:19.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:19:19.410" level="INFO">${output} = 2020-10-14 22:19:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:19:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201014 22:19:19.410" starttime="20201014 22:19:15.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:19:19.411" level="INFO">2020-10-14 22:19:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:19:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:19:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 22:19:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:19:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C9FFED7AFFA7-&gt;d6e65083-a2bb-4d3f-9ae2-d8be956ff4d0
2020-10-14 22:19:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201014 22:19:19.411" starttime="20201014 22:19:19.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:19:19.411" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:19:19.411" starttime="20201014 22:19:19.411"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:19.412" starttime="20201014 22:19:15.255"></status>
</kw>
<msg timestamp="20201014 22:19:19.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:19:19.412" starttime="20201014 22:19:15.254"></status>
</kw>
<msg timestamp="20201014 22:19:19.412" level="INFO">${result} = 2020-10-14 22:19:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:19:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201014 22:19:19.412" starttime="20201014 22:19:15.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:19:19.415" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:19:21.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:19:21.473" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 22:19 o3fs://bucket1.volume1.om/ozone-67825
dr...</msg>
<status status="PASS" endtime="20201014 22:19:21.473" starttime="20201014 22:19:19.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:19:21.474" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 22:19 o3fs://bucket1.volume1.om/ozone-67825
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:19 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 22:19:21.474" starttime="20201014 22:19:21.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:19:21.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:19:21.475" starttime="20201014 22:19:21.475"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:21.475" starttime="20201014 22:19:19.413"></status>
</kw>
<msg timestamp="20201014 22:19:21.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:19:21.476" starttime="20201014 22:19:19.413"></status>
</kw>
<msg timestamp="20201014 22:19:21.476" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:18 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 22:19 o3fs://bucket1.volume1.om/ozone-67825
dr...</msg>
<status status="PASS" endtime="20201014 22:19:21.476" starttime="20201014 22:19:19.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:19:21.476" starttime="20201014 22:19:21.476"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 22:19:21.477" critical="yes" starttime="20201014 22:19:15.246"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201014 22:19:21.478" starttime="20201014 22:19:15.203"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:19:09.829" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:19:09.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:19:09.833" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201014 22:19:09.833" starttime="20201014 22:19:09.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:19:09.834" level="INFO">rm</msg>
<status status="PASS" endtime="20201014 22:19:09.834" starttime="20201014 22:19:09.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:19:09.834" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:19:09.835" starttime="20201014 22:19:09.834"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:09.835" starttime="20201014 22:19:09.827"></status>
</kw>
<msg timestamp="20201014 22:19:09.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:19:09.835" starttime="20201014 22:19:09.827"></status>
</kw>
<msg timestamp="20201014 22:19:09.835" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201014 22:19:09.835" starttime="20201014 22:19:09.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:19:09.837" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:19:09.837" starttime="20201014 22:19:09.836"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:19:09.840" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:19:09.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:19:09.859" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:19:09.859" starttime="20201014 22:19:09.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:19:09.860" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:19:09.860" starttime="20201014 22:19:09.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:19:09.861" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:19:09.861" starttime="20201014 22:19:09.861"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:09.862" starttime="20201014 22:19:09.838"></status>
</kw>
<msg timestamp="20201014 22:19:09.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:19:09.863" starttime="20201014 22:19:09.838"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:09.863" starttime="20201014 22:19:09.838"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:09.863" starttime="20201014 22:19:09.837"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:09.863" starttime="20201014 22:19:09.826"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:19:09.863" critical="yes" starttime="20201014 22:19:09.825"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201014 22:19:09.864" starttime="20201014 22:19:09.784"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:09.137" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:09.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:18:09.138" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201014 22:18:09.138" starttime="20201014 22:18:09.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:09.139" level="INFO">om</msg>
<status status="PASS" endtime="20201014 22:18:09.140" starttime="20201014 22:18:09.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:18:09.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:18:09.140" starttime="20201014 22:18:09.140"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:09.140" starttime="20201014 22:18:09.130"></status>
</kw>
<msg timestamp="20201014 22:18:09.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:18:09.141" starttime="20201014 22:18:09.130"></status>
</kw>
<msg timestamp="20201014 22:18:09.141" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201014 22:18:09.141" starttime="20201014 22:18:09.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:18:09.141" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:18:09.142" starttime="20201014 22:18:09.141"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:18:09.147" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:18:09.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:18:09.166" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:18:09.166" starttime="20201014 22:18:09.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:18:09.167" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:18:09.167" starttime="20201014 22:18:09.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:18:09.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:18:09.168" starttime="20201014 22:18:09.167"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:09.168" starttime="20201014 22:18:09.143"></status>
</kw>
<msg timestamp="20201014 22:18:09.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:18:09.168" starttime="20201014 22:18:09.143"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:09.168" starttime="20201014 22:18:09.142"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:09.169" starttime="20201014 22:18:09.142"></status>
</kw>
<status status="PASS" endtime="20201014 22:18:09.169" starttime="20201014 22:18:09.129"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:18:09.169" critical="yes" starttime="20201014 22:18:09.128"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201014 22:18:09.170" starttime="20201014 22:18:09.078"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:20:59.774" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:20:59.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:20:59.781" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:20:59.782" starttime="20201014 22:20:59.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:20:59.782" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:20:59.782" starttime="20201014 22:20:59.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:20:59.783" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:20:59.783" starttime="20201014 22:20:59.783"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:59.783" starttime="20201014 22:20:59.772"></status>
</kw>
<msg timestamp="20201014 22:20:59.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:20:59.784" starttime="20201014 22:20:59.771"></status>
</kw>
<msg timestamp="20201014 22:20:59.784" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:20:59.784" starttime="20201014 22:20:59.771"></status>
</kw>
<msg timestamp="20201014 22:20:59.784" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:20:59.784" starttime="20201014 22:20:59.770"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:20:59.787" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:20:59.788" starttime="20201014 22:20:59.787"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:20:59.788" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:20:59.788" starttime="20201014 22:20:59.788"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:59.788" starttime="20201014 22:20:59.787"></status>
</kw>
<msg timestamp="20201014 22:20:59.788" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:20:59.789" starttime="20201014 22:20:59.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:20:59.790" starttime="20201014 22:20:59.789"></status>
</kw>
<msg timestamp="20201014 22:20:59.790" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 22:20:59.790" starttime="20201014 22:20:59.789"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:59.790" starttime="20201014 22:20:59.785"></status>
</kw>
<msg timestamp="20201014 22:20:59.790" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:20:59.790" starttime="20201014 22:20:59.785"></status>
</kw>
<msg timestamp="20201014 22:20:59.790" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:20:59.790" starttime="20201014 22:20:59.784"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:20:59.793" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:21:41.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:21:41.459" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 22:21:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:21:02 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201014 22:21:41.459" starttime="20201014 22:20:59.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:21:41.461" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-14 22:21:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:21:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:21:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 22:21:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:21:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7E532B9A4D48-&gt;d6e65083-a2bb-4d3f-9ae2-d8be956ff4d0
2020-10-14 22:21:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-14 22:21:06 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-10-14 22:21:06 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-10-14 22:21:06 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602714066662, maxDate=1603318866662, sequenceNumber=3, masterKeyId=2))
2020-10-14 22:21:06 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 96 bd cf c9 d2 2e 38 96 c5 81 ea d4 2e 40 03 48 01 5a 0d 33 30 31 32 35 34 30 34 37 31 33 31 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-14 22:21:06 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602714066662, maxDate=1603318866662, sequenceNumber=3, masterKeyId=2)
2020-10-14 22:21:06 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 22:21:07 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 22:21:07 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 22:21:07 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-14 22:21:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602713850368_0003
2020-10-14 22:21:10 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602714066662, maxDate=1603318866662, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 96 bd cf c9 d2 2e 38 96 c5 81 ea d4 2e 40 03 48 01 5a 0d 33 30 31 32 35 34 30 34 37 31 33 31 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-10-14 22:21:10 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 22:21:10 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-14 22:21:10 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-14 22:21:11 INFO  YarnClientImpl:311 - Submitted application application_1602713850368_0003
2020-10-14 22:21:11 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602713850368_0003/
2020-10-14 22:21:11 INFO  Job:1619 - Running job: job_1602713850368_0003
2020-10-14 22:21:19 INFO  Job:1640 - Job job_1602713850368_0003 running in uber mode : false
2020-10-14 22:21:19 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 22:21:30 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 22:21:32 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 22:21:39 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 22:21:40 INFO  Job:1658 - Job job_1602713850368_0003 completed successfully
2020-10-14 22:21:40 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1052781
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50866
		Total time spent by all reduces in occupied slots (ms)=13978
		Total time spent by all map tasks (ms)=25433
		Total time spent by all reduce tasks (ms)=6989
		Total vcore-milliseconds taken by all map tasks=25433
		Total vcore-milliseconds taken by all reduce tasks=6989
		Total megabyte-milliseconds taken by all map tasks=52086784
		Total megabyte-milliseconds taken by all reduce tasks=14313472
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1156
		CPU time spent (ms)=8520
		Physical memory (bytes) snapshot=1227808768
		Virtual memory (bytes) snapshot=14291222528
		Total committed heap usage (bytes)=1031274496
		Peak Map Physical memory (bytes)=377942016
		Peak Map Virtual memory (bytes)=3575513088
		Peak Reduce Physical memory (bytes)=278708224
		Peak Reduce Virtual memory (bytes)=3569750016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.656 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201014 22:21:41.461" starttime="20201014 22:21:41.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:21:41.462" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:21:41.462" starttime="20201014 22:21:41.461"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.462" starttime="20201014 22:20:59.791"></status>
</kw>
<msg timestamp="20201014 22:21:41.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:21:41.462" starttime="20201014 22:20:59.791"></status>
</kw>
<msg timestamp="20201014 22:21:41.463" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 22:21:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:21:02 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201014 22:21:41.463" starttime="20201014 22:20:59.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 22:21:41.464" starttime="20201014 22:21:41.463"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 22:21:41.464" critical="yes" starttime="20201014 22:20:59.770"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:21:41.469" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:21:41.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:21:41.476" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:21:41.476" starttime="20201014 22:21:41.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:21:41.477" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:21:41.477" starttime="20201014 22:21:41.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:21:41.478" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:21:41.478" starttime="20201014 22:21:41.477"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.478" starttime="20201014 22:21:41.467"></status>
</kw>
<msg timestamp="20201014 22:21:41.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:21:41.478" starttime="20201014 22:21:41.467"></status>
</kw>
<msg timestamp="20201014 22:21:41.478" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:21:41.478" starttime="20201014 22:21:41.466"></status>
</kw>
<msg timestamp="20201014 22:21:41.479" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:21:41.479" starttime="20201014 22:21:41.466"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 22:21:41.479" level="INFO">${random} = 18</msg>
<status status="PASS" endtime="20201014 22:21:41.479" starttime="20201014 22:21:41.479"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:21:41.483" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:21:41.483" starttime="20201014 22:21:41.483"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:21:41.484" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:21:41.484" starttime="20201014 22:21:41.483"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.484" starttime="20201014 22:21:41.482"></status>
</kw>
<msg timestamp="20201014 22:21:41.484" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:21:41.484" starttime="20201014 22:21:41.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:21:41.485" starttime="20201014 22:21:41.485"></status>
</kw>
<msg timestamp="20201014 22:21:41.485" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 22:21:41.485" starttime="20201014 22:21:41.484"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.486" starttime="20201014 22:21:41.481"></status>
</kw>
<msg timestamp="20201014 22:21:41.486" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:21:41.486" starttime="20201014 22:21:41.480"></status>
</kw>
<msg timestamp="20201014 22:21:41.486" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:21:41.486" starttime="20201014 22:21:41.479"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:21:41.489" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:21:41.489" starttime="20201014 22:21:41.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:21:41.490" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:21:41.490" starttime="20201014 22:21:41.490"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.490" starttime="20201014 22:21:41.488"></status>
</kw>
<msg timestamp="20201014 22:21:41.490" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:21:41.490" starttime="20201014 22:21:41.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:21:41.492" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201014 22:21:41.492" starttime="20201014 22:21:41.492"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:21:41.493" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201014 22:21:41.493" starttime="20201014 22:21:41.492"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.493" starttime="20201014 22:21:41.491"></status>
</kw>
<msg timestamp="20201014 22:21:41.493" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201014 22:21:41.493" starttime="20201014 22:21:41.491"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.493" starttime="20201014 22:21:41.487"></status>
</kw>
<msg timestamp="20201014 22:21:41.494" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201014 22:21:41.494" starttime="20201014 22:21:41.487"></status>
</kw>
<msg timestamp="20201014 22:21:41.494" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201014 22:21:41.494" starttime="20201014 22:21:41.486"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:21:41.497" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:21:41.497" starttime="20201014 22:21:41.497"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:21:41.498" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:21:41.498" starttime="20201014 22:21:41.497"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.498" starttime="20201014 22:21:41.496"></status>
</kw>
<msg timestamp="20201014 22:21:41.498" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:21:41.498" starttime="20201014 22:21:41.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:21:41.499" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201014 22:21:41.500" starttime="20201014 22:21:41.499"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:21:41.500" level="INFO">${result} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20201014 22:21:41.500" starttime="20201014 22:21:41.500"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.500" starttime="20201014 22:21:41.499"></status>
</kw>
<msg timestamp="20201014 22:21:41.500" level="INFO">${path_with_leading} = /wordcount-18.txt</msg>
<status status="PASS" endtime="20201014 22:21:41.500" starttime="20201014 22:21:41.498"></status>
</kw>
<status status="PASS" endtime="20201014 22:21:41.501" starttime="20201014 22:21:41.495"></status>
</kw>
<msg timestamp="20201014 22:21:41.501" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20201014 22:21:41.501" starttime="20201014 22:21:41.495"></status>
</kw>
<msg timestamp="20201014 22:21:41.501" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-18.txt</msg>
<status status="PASS" endtime="20201014 22:21:41.501" starttime="20201014 22:21:41.494"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:21:41.504" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-18.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:22:18.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:22:18.007" level="INFO">${output} = 2020-10-14 22:21:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-10-14 22:21:44 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201014 22:22:18.007" starttime="20201014 22:21:41.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:22:18.009" level="INFO">2020-10-14 22:21:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-10-14 22:21:44 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-10-14 22:21:44 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602714104178, maxDate=1603318904178, sequenceNumber=4, masterKeyId=2))
2020-10-14 22:21:44 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 e2 d1 c9 d2 2e 38 92 ea 83 ea d4 2e 40 04 48 01 5a 0d 33 30 31 32 35 34 30 34 37 31 33 31 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-14 22:21:44 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602714104178, maxDate=1603318904178, sequenceNumber=4, masterKeyId=2)
2020-10-14 22:21:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 22:21:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:21:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:21:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 22:21:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:21:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-46C4DA750FE3-&gt;d6e65083-a2bb-4d3f-9ae2-d8be956ff4d0
2020-10-14 22:21:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 22:21:46 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 22:21:46 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 22:21:46 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-14 22:21:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602713850368_0004
2020-10-14 22:21:46 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602714104178, maxDate=1603318904178, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 e2 d1 c9 d2 2e 38 92 ea 83 ea d4 2e 40 04 48 01 5a 0d 33 30 31 32 35 34 30 34 37 31 33 31 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-10-14 22:21:47 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 22:21:47 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-14 22:21:47 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-14 22:21:48 INFO  YarnClientImpl:311 - Submitted application application_1602713850368_0004
2020-10-14 22:21:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602713850368_0004/
2020-10-14 22:21:48 INFO  Job:1619 - Running job: job_1602713850368_0004
2020-10-14 22:21:56 INFO  Job:1640 - Job job_1602713850368_0004 running in uber mode : false
2020-10-14 22:21:56 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 22:22:07 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 22:22:09 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 22:22:14 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 22:22:17 INFO  Job:1658 - Job job_1602713850368_0004 completed successfully
2020-10-14 22:22:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48356
		Total time spent by all reduces in occupied slots (ms)=8566
		Total time spent by all map tasks (ms)=24178
		Total time spent by all reduce tasks (ms)=4283
		Total vcore-milliseconds taken by all map tasks=24178
		Total vcore-milliseconds taken by all reduce tasks=4283
		Total megabyte-milliseconds taken by all map tasks=49516544
		Total megabyte-milliseconds taken by all reduce tasks=8771584
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1055
		CPU time spent (ms)=7810
		Physical memory (bytes) snapshot=1266761728
		Virtual memory (bytes) snapshot=14259724288
		Total committed heap usage (bytes)=1135083520
		Peak Map Physical memory (bytes)=347463680
		Peak Map Virtual memory (bytes)=3567165440
		Peak Reduce Physical memory (bytes)=371372032
		Peak Reduce Virtual memory (bytes)=3582201856
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201014 22:22:18.009" starttime="20201014 22:22:18.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:22:18.010" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:22:18.010" starttime="20201014 22:22:18.010"></status>
</kw>
<status status="PASS" endtime="20201014 22:22:18.011" starttime="20201014 22:21:41.502"></status>
</kw>
<msg timestamp="20201014 22:22:18.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:22:18.011" starttime="20201014 22:21:41.502"></status>
</kw>
<msg timestamp="20201014 22:22:18.012" level="INFO">${output} = 2020-10-14 22:21:43 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-10-14 22:21:44 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201014 22:22:18.012" starttime="20201014 22:21:41.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201014 22:22:18.013" starttime="20201014 22:22:18.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 22:22:18.013" starttime="20201014 22:22:18.013"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 22:22:18.013" critical="yes" starttime="20201014 22:21:41.465"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201014 22:22:18.014" starttime="20201014 22:20:59.725"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:19:26.778" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:19:26.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:19:26.785" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:19:26.785" starttime="20201014 22:19:26.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:19:26.786" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:19:26.786" starttime="20201014 22:19:26.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:19:26.787" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:19:26.787" starttime="20201014 22:19:26.786"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:26.787" starttime="20201014 22:19:26.776"></status>
</kw>
<msg timestamp="20201014 22:19:26.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:19:26.787" starttime="20201014 22:19:26.776"></status>
</kw>
<msg timestamp="20201014 22:19:26.787" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:19:26.788" starttime="20201014 22:19:26.775"></status>
</kw>
<msg timestamp="20201014 22:19:26.788" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:19:26.788" starttime="20201014 22:19:26.775"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:19:26.791" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:19:26.791" starttime="20201014 22:19:26.791"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:19:26.792" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:19:26.792" starttime="20201014 22:19:26.792"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:26.792" starttime="20201014 22:19:26.790"></status>
</kw>
<msg timestamp="20201014 22:19:26.792" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:19:26.792" starttime="20201014 22:19:26.790"></status>
</kw>
<status status="PASS" endtime="20201014 22:19:26.793" starttime="20201014 22:19:26.789"></status>
</kw>
<msg timestamp="20201014 22:19:26.793" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 22:19:26.793" starttime="20201014 22:19:26.789"></status>
</kw>
<msg timestamp="20201014 22:19:26.793" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 22:19:26.793" starttime="20201014 22:19:26.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:19:26.796" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:20:05.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:20:05.753" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 22:19:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:19:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201014 22:20:05.753" starttime="20201014 22:19:26.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:20:05.754" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-14 22:19:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:19:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:19:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 22:19:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:19:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3C26736F0203-&gt;d6e65083-a2bb-4d3f-9ae2-d8be956ff4d0
2020-10-14 22:19:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-14 22:19:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-10-14 22:19:31 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-10-14 22:19:31 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602713971431, maxDate=1603318771431, sequenceNumber=1, masterKeyId=2))
2020-10-14 22:19:31 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 da d3 c9 c9 d2 2e 38 da db fb e9 d4 2e 40 01 48 01 5a 0d 33 30 31 32 35 34 30 34 37 31 33 31 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-14 22:19:31 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602713971431, maxDate=1603318771431, sequenceNumber=1, masterKeyId=2)
2020-10-14 22:19:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 22:19:32 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 22:19:32 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-14 22:19:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602713850368_0001
2020-10-14 22:19:32 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602713971431, maxDate=1603318771431, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 da d3 c9 c9 d2 2e 38 da db fb e9 d4 2e 40 01 48 01 5a 0d 33 30 31 32 35 34 30 34 37 31 33 31 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-10-14 22:19:32 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 22:19:32 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-14 22:19:32 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-14 22:19:34 INFO  YarnClientImpl:311 - Submitted application application_1602713850368_0001
2020-10-14 22:19:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602713850368_0001/
2020-10-14 22:19:34 INFO  Job:1619 - Running job: job_1602713850368_0001
2020-10-14 22:19:45 INFO  Job:1640 - Job job_1602713850368_0001 running in uber mode : false
2020-10-14 22:19:45 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 22:19:56 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 22:19:58 INFO  Job:1647 -  map 67% reduce 0%
2020-10-14 22:19:59 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 22:20:03 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 22:20:05 INFO  Job:1658 - Job job_1602713850368_0001 completed successfully
2020-10-14 22:20:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1053005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49210
		Total time spent by all reduces in occupied slots (ms)=9150
		Total time spent by all map tasks (ms)=24605
		Total time spent by all reduce tasks (ms)=4575
		Total vcore-milliseconds taken by all map tasks=24605
		Total vcore-milliseconds taken by all reduce tasks=4575
		Total megabyte-milliseconds taken by all map tasks=50391040
		Total megabyte-milliseconds taken by all reduce tasks=9369600
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=959
		CPU time spent (ms)=7560
		Physical memory (bytes) snapshot=1137606656
		Virtual memory (bytes) snapshot=14266912768
		Total committed heap usage (bytes)=1053294592
		Peak Map Physical memory (bytes)=301686784
		Peak Map Virtual memory (bytes)=3573747712
		Peak Reduce Physical memory (bytes)=291659776
		Peak Reduce Virtual memory (bytes)=3572711424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.428 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201014 22:20:05.755" starttime="20201014 22:20:05.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:20:05.755" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:20:05.755" starttime="20201014 22:20:05.755"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:05.756" starttime="20201014 22:19:26.794"></status>
</kw>
<msg timestamp="20201014 22:20:05.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:20:05.756" starttime="20201014 22:19:26.794"></status>
</kw>
<msg timestamp="20201014 22:20:05.757" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 22:19:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:19:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201014 22:20:05.757" starttime="20201014 22:19:26.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 22:20:05.757" starttime="20201014 22:20:05.757"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 22:20:05.758" critical="yes" starttime="20201014 22:19:26.774"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:20:05.762" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:20:05.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:20:05.768" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:20:05.768" starttime="20201014 22:20:05.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:20:05.769" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:20:05.769" starttime="20201014 22:20:05.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:20:05.769" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:20:05.769" starttime="20201014 22:20:05.769"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:05.770" starttime="20201014 22:20:05.760"></status>
</kw>
<msg timestamp="20201014 22:20:05.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:20:05.770" starttime="20201014 22:20:05.760"></status>
</kw>
<msg timestamp="20201014 22:20:05.770" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:20:05.770" starttime="20201014 22:20:05.759"></status>
</kw>
<msg timestamp="20201014 22:20:05.770" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:20:05.770" starttime="20201014 22:20:05.759"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 22:20:05.771" level="INFO">${random} = 82</msg>
<status status="PASS" endtime="20201014 22:20:05.771" starttime="20201014 22:20:05.771"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:20:05.775" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:20:05.775" starttime="20201014 22:20:05.774"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:20:05.776" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:20:05.776" starttime="20201014 22:20:05.775"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:05.776" starttime="20201014 22:20:05.774"></status>
</kw>
<msg timestamp="20201014 22:20:05.776" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:20:05.776" starttime="20201014 22:20:05.773"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:05.776" starttime="20201014 22:20:05.773"></status>
</kw>
<msg timestamp="20201014 22:20:05.776" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 22:20:05.776" starttime="20201014 22:20:05.772"></status>
</kw>
<msg timestamp="20201014 22:20:05.777" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 22:20:05.777" starttime="20201014 22:20:05.772"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:20:05.780" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:20:05.780" starttime="20201014 22:20:05.779"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:20:05.781" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:20:05.781" starttime="20201014 22:20:05.780"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:05.781" starttime="20201014 22:20:05.779"></status>
</kw>
<msg timestamp="20201014 22:20:05.781" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:20:05.781" starttime="20201014 22:20:05.779"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:05.781" starttime="20201014 22:20:05.778"></status>
</kw>
<msg timestamp="20201014 22:20:05.781" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201014 22:20:05.781" starttime="20201014 22:20:05.777"></status>
</kw>
<msg timestamp="20201014 22:20:05.781" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201014 22:20:05.781" starttime="20201014 22:20:05.777"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:20:05.785" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:20:05.785" starttime="20201014 22:20:05.785"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:20:05.786" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:20:05.786" starttime="20201014 22:20:05.785"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:05.786" starttime="20201014 22:20:05.784"></status>
</kw>
<msg timestamp="20201014 22:20:05.786" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:20:05.786" starttime="20201014 22:20:05.783"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:05.786" starttime="20201014 22:20:05.783"></status>
</kw>
<msg timestamp="20201014 22:20:05.787" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-82.txt</msg>
<status status="PASS" endtime="20201014 22:20:05.787" starttime="20201014 22:20:05.782"></status>
</kw>
<msg timestamp="20201014 22:20:05.787" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-82.txt</msg>
<status status="PASS" endtime="20201014 22:20:05.787" starttime="20201014 22:20:05.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:20:05.790" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-82.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:20:42.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:20:42.015" level="INFO">${output} = 2020-10-14 22:20:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-10-14 22:20:08 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201014 22:20:42.015" starttime="20201014 22:20:05.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:20:42.016" level="INFO">2020-10-14 22:20:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-10-14 22:20:08 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-10-14 22:20:08 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602714008436, maxDate=1603318808436, sequenceNumber=2, masterKeyId=2))
2020-10-14 22:20:08 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 95 f6 cb c9 d2 2e 38 95 fe fd e9 d4 2e 40 02 48 01 5a 0d 33 30 31 32 35 34 30 34 37 31 33 31 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-10-14 22:20:08 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602714008436, maxDate=1603318808436, sequenceNumber=2, masterKeyId=2)
2020-10-14 22:20:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 22:20:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:20:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:20:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 22:20:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:20:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-197FDB2876A7-&gt;d6e65083-a2bb-4d3f-9ae2-d8be956ff4d0
2020-10-14 22:20:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 22:20:10 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 22:20:10 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 22:20:10 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-14 22:20:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602713850368_0002
2020-10-14 22:20:10 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1602714008436, maxDate=1603318808436, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 95 f6 cb c9 d2 2e 38 95 fe fd e9 d4 2e 40 02 48 01 5a 0d 33 30 31 32 35 34 30 34 37 31 33 31 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-10-14 22:20:11 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 22:20:11 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-14 22:20:11 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-10-14 22:20:12 INFO  YarnClientImpl:311 - Submitted application application_1602713850368_0002
2020-10-14 22:20:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602713850368_0002/
2020-10-14 22:20:13 INFO  Job:1619 - Running job: job_1602713850368_0002
2020-10-14 22:20:21 INFO  Job:1640 - Job job_1602713850368_0002 running in uber mode : false
2020-10-14 22:20:21 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 22:20:32 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 22:20:34 INFO  Job:1647 -  map 67% reduce 0%
2020-10-14 22:20:35 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 22:20:40 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 22:20:41 INFO  Job:1658 - Job job_1602713850368_0002 completed successfully
2020-10-14 22:20:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1115537
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49112
		Total time spent by all reduces in occupied slots (ms)=8540
		Total time spent by all map tasks (ms)=24556
		Total time spent by all reduce tasks (ms)=4270
		Total vcore-milliseconds taken by all map tasks=24556
		Total vcore-milliseconds taken by all reduce tasks=4270
		Total megabyte-milliseconds taken by all map tasks=50290688
		Total megabyte-milliseconds taken by all reduce tasks=8744960
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=972
		CPU time spent (ms)=7940
		Physical memory (bytes) snapshot=1223000064
		Virtual memory (bytes) snapshot=14276632576
		Total committed heap usage (bytes)=1099431936
		Peak Map Physical memory (bytes)=376963072
		Peak Map Virtual memory (bytes)=3573825536
		Peak Reduce Physical memory (bytes)=295022592
		Peak Reduce Virtual memory (bytes)=3578687488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201014 22:20:42.017" starttime="20201014 22:20:42.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:20:42.017" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:20:42.017" starttime="20201014 22:20:42.017"></status>
</kw>
<status status="PASS" endtime="20201014 22:20:42.018" starttime="20201014 22:20:05.788"></status>
</kw>
<msg timestamp="20201014 22:20:42.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:20:42.018" starttime="20201014 22:20:05.788"></status>
</kw>
<msg timestamp="20201014 22:20:42.019" level="INFO">${output} = 2020-10-14 22:20:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.7:8032
2020-10-14 22:20:08 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201014 22:20:42.019" starttime="20201014 22:20:05.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201014 22:20:42.019" starttime="20201014 22:20:42.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 22:20:42.020" starttime="20201014 22:20:42.020"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 22:20:42.020" critical="yes" starttime="20201014 22:20:05.758"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201014 22:20:42.022" starttime="20201014 22:19:26.728"></status>
</suite>
<status status="PASS" elapsedtime="216279" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
