<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201014 22:28:28.764" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:24:13.168" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:24:24.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:24:24.569" level="INFO">${output} = 2020-10-14 22:24:14,990 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:15,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201014 22:24:24.569" starttime="20201014 22:24:13.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:24:24.571" level="INFO">2020-10-14 22:24:14,990 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:15,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:24:15,455 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-14 22:24:18,280 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-10-14 22:24:18,281 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-10-14 22:24:18,281 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-10-14 22:24:18,281 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-10-14 22:24:18,281 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-10-14 22:24:18,281 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-10-14 22:24:18,281 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-10-14 22:24:18,285 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-10-14 22:24:18,290 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:18,354 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-05682, with testuser/scm@EXAMPLE.COM as owner.
2020-10-14 22:24:18,888 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-05682/bucket-0-66329, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-14 22:24:19,306 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:20,306 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:21,307 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:21,704 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-14 22:24:22,308 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,544
Average Time spent in bucket creation: 00:00:00,220
Average Time spent in key creation: 00:00:01,384
Average Time spent in key write: 00:00:01,628
Total bytes written: 10240
Total Execution time: 00:00:08,376
***************************************************</msg>
<status status="PASS" endtime="20201014 22:24:24.571" starttime="20201014 22:24:24.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:24:24.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:24:24.572" starttime="20201014 22:24:24.571"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:24.572" starttime="20201014 22:24:13.162"></status>
</kw>
<msg timestamp="20201014 22:24:24.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:24:24.572" starttime="20201014 22:24:13.162"></status>
</kw>
<msg timestamp="20201014 22:24:24.573" level="INFO">${result} = 2020-10-14 22:24:14,990 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:15,455 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201014 22:24:24.573" starttime="20201014 22:24:13.161"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201014 22:24:24.574" starttime="20201014 22:24:24.573"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:24.574" starttime="20201014 22:24:24.573"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 22:24:24.574" critical="yes" starttime="20201014 22:24:13.160"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:24:24.581" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:24:33.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:24:33.343" level="INFO">${output} = 2020-10-14 22:24:26,304 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:26,548 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201014 22:24:33.343" starttime="20201014 22:24:24.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:24:33.345" level="INFO">2020-10-14 22:24:26,304 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:26,548 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:24:26,548 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-14 22:24:26,755 [main] INFO freon.BaseFreonGenerator: Executing test with prefix fb3fejrjbj
2020-10-14 22:24:26,779 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-14 22:24:27,781 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:28,291 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-10-14 22:24:28,375 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-10-14 22:24:28,782 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:28,993 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-10-14 22:24:29,409 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:24:29,410 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-BB917F278B74-&gt;dd61c043-1840-4372-8b6c-8f8e6462b568
2020-10-14 22:24:29,411 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 22:24:29,782 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:30,782 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:31,783 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:32,784 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-14 22:24:32,952 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3450.205319, max=3450.205319, mean=3450.205319, stddev=0.0, median=3450.205319, p75=3450.205319, p95=3450.205319, p98=3450.205319, p99=3450.205319, p999=3450.205319, mean_rate=0.22157682820577018, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-14 22:24:32,953 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-10-14 22:24:32,956 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-14 22:24:32,956 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201014 22:24:33.345" starttime="20201014 22:24:33.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:24:33.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:24:33.346" starttime="20201014 22:24:33.346"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:33.346" starttime="20201014 22:24:24.577"></status>
</kw>
<msg timestamp="20201014 22:24:33.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:24:33.347" starttime="20201014 22:24:24.576"></status>
</kw>
<msg timestamp="20201014 22:24:33.347" level="INFO">${result} = 2020-10-14 22:24:26,304 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:26,548 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201014 22:24:33.347" starttime="20201014 22:24:24.576"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201014 22:24:33.348" starttime="20201014 22:24:33.348"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:33.348" starttime="20201014 22:24:33.347"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 22:24:33.348" critical="yes" starttime="20201014 22:24:24.575"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:24:33.354" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:24:38.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:24:38.227" level="INFO">${output} = 2020-10-14 22:24:35,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:35,326 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201014 22:24:38.227" starttime="20201014 22:24:33.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:24:38.228" level="INFO">2020-10-14 22:24:35,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:35,326 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:24:35,326 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-14 22:24:35,538 [main] INFO freon.BaseFreonGenerator: Executing test with prefix lhwysxjd4w
2020-10-14 22:24:35,561 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-14 22:24:36,563 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:37,563 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-14 22:24:38,178 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=222.579323, max=222.579323, mean=222.579323, stddev=0.0, median=222.579323, p75=222.579323, p95=222.579323, p98=222.579323, p99=222.579323, p999=222.579323, mean_rate=0.8903571574873008, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-14 22:24:38,179 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-14 22:24:38,181 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-14 22:24:38,181 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201014 22:24:38.228" starttime="20201014 22:24:38.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:24:38.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:24:38.229" starttime="20201014 22:24:38.228"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:38.229" starttime="20201014 22:24:33.351"></status>
</kw>
<msg timestamp="20201014 22:24:38.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:24:38.230" starttime="20201014 22:24:33.351"></status>
</kw>
<msg timestamp="20201014 22:24:38.230" level="INFO">${result} = 2020-10-14 22:24:35,068 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:35,326 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201014 22:24:38.230" starttime="20201014 22:24:33.350"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201014 22:24:38.231" starttime="20201014 22:24:38.231"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:38.231" starttime="20201014 22:24:38.230"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 22:24:38.231" critical="yes" starttime="20201014 22:24:33.349"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:24:38.238" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:24:42.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:24:42.885" level="INFO">${output} = 2020-10-14 22:24:39,946 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:40,148 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201014 22:24:42.885" starttime="20201014 22:24:38.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:24:42.886" level="INFO">2020-10-14 22:24:39,946 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:40,148 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:24:40,148 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-10-14 22:24:40,309 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 7alqiuanwx
2020-10-14 22:24:40,330 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-10-14 22:24:41,331 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-10-14 22:24:42,332 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-10-14 22:24:42,846 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=80.530951, max=80.530951, mean=80.530951, stddev=0.0, median=80.530951, p75=80.530951, p95=80.530951, p98=80.530951, p99=80.530951, p999=80.530951, mean_rate=0.8843883826285713, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-10-14 22:24:42,847 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-10-14 22:24:42,852 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-10-14 22:24:42,852 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201014 22:24:42.886" starttime="20201014 22:24:42.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:24:42.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:24:42.887" starttime="20201014 22:24:42.886"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:42.887" starttime="20201014 22:24:38.234"></status>
</kw>
<msg timestamp="20201014 22:24:42.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:24:42.887" starttime="20201014 22:24:38.233"></status>
</kw>
<msg timestamp="20201014 22:24:42.887" level="INFO">${result} = 2020-10-14 22:24:39,946 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-10-14 22:24:40,148 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201014 22:24:42.887" starttime="20201014 22:24:38.233"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201014 22:24:42.889" starttime="20201014 22:24:42.888"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:42.889" starttime="20201014 22:24:42.888"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 22:24:42.889" critical="yes" starttime="20201014 22:24:38.232"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201014 22:24:42.891" starttime="20201014 22:24:13.134"></status>
</suite>
<status status="PASS" endtime="20201014 22:24:42.894" starttime="20201014 22:24:13.107"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:24:05.190" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:24:05.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:24:05.193" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:24:05.193" starttime="20201014 22:24:05.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:24:05.196" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:24:05.196" starttime="20201014 22:24:05.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:24:05.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:24:05.197" starttime="20201014 22:24:05.197"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:05.197" starttime="20201014 22:24:05.179"></status>
</kw>
<msg timestamp="20201014 22:24:05.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:24:05.198" starttime="20201014 22:24:05.178"></status>
</kw>
<msg timestamp="20201014 22:24:05.198" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:24:05.198" starttime="20201014 22:24:05.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:24:05.201" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:24:05.201" starttime="20201014 22:24:05.200"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:24:05.211" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:24:05.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:24:05.231" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:24:05.231" starttime="20201014 22:24:05.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:24:05.232" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:24:05.232" starttime="20201014 22:24:05.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:24:05.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:24:05.233" starttime="20201014 22:24:05.232"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:05.233" starttime="20201014 22:24:05.203"></status>
</kw>
<msg timestamp="20201014 22:24:05.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:24:05.234" starttime="20201014 22:24:05.202"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:05.234" starttime="20201014 22:24:05.202"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:05.234" starttime="20201014 22:24:05.201"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:05.234" starttime="20201014 22:24:05.176"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:24:05.234" critical="yes" starttime="20201014 22:24:05.175"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201014 22:24:05.236" starttime="20201014 22:24:05.053"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 22:24:48.778" level="INFO">${random} = 69929</msg>
<status status="PASS" endtime="20201014 22:24:48.778" starttime="20201014 22:24:48.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201014 22:24:48.779" level="INFO">${source} = 69929-source</msg>
<status status="PASS" endtime="20201014 22:24:48.779" starttime="20201014 22:24:48.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201014 22:24:48.781" level="INFO">${target} = 69929-target</msg>
<status status="PASS" endtime="20201014 22:24:48.781" starttime="20201014 22:24:48.780"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:24:48.787" level="INFO">Running command 'ozone sh volume create 69929-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:24:52.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:24:52.500" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:24:52.500" starttime="20201014 22:24:48.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:24:52.501" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:24:52.501" starttime="20201014 22:24:52.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:24:52.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:24:52.502" starttime="20201014 22:24:52.501"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:52.502" starttime="20201014 22:24:48.781"></status>
</kw>
<msg timestamp="20201014 22:24:52.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:24:52.502" starttime="20201014 22:24:48.781"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:52.503" starttime="20201014 22:24:48.781"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:24:52.507" level="INFO">Running command 'ozone sh volume create 69929-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:24:57.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:24:57.349" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:24:57.349" starttime="20201014 22:24:52.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:24:57.350" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:24:57.350" starttime="20201014 22:24:57.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:24:57.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:24:57.350" starttime="20201014 22:24:57.350"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:57.351" starttime="20201014 22:24:52.503"></status>
</kw>
<msg timestamp="20201014 22:24:57.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:24:57.351" starttime="20201014 22:24:52.503"></status>
</kw>
<status status="PASS" endtime="20201014 22:24:57.351" starttime="20201014 22:24:52.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:24:57.357" level="INFO">Running command 'ozone sh bucket create 69929-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:01.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:01.110" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:01.110" starttime="20201014 22:24:57.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:01.111" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:25:01.111" starttime="20201014 22:25:01.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:01.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:01.112" starttime="20201014 22:25:01.111"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:01.112" starttime="20201014 22:24:57.353"></status>
</kw>
<msg timestamp="20201014 22:25:01.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:01.112" starttime="20201014 22:24:57.353"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:01.112" starttime="20201014 22:24:57.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:01.116" level="INFO">Running command 'ozone sh key put 69929-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:07.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:07.051" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:07.051" starttime="20201014 22:25:01.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:07.052" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:25:07.052" starttime="20201014 22:25:07.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:07.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:07.052" starttime="20201014 22:25:07.052"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:07.053" starttime="20201014 22:25:01.113"></status>
</kw>
<msg timestamp="20201014 22:25:07.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:07.053" starttime="20201014 22:25:01.113"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:07.053" starttime="20201014 22:25:01.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:07.058" level="INFO">Running command 'ozone sh bucket create 69929-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:10.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:10.792" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:10.793" starttime="20201014 22:25:07.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:10.794" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:25:10.794" starttime="20201014 22:25:10.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:10.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:10.794" starttime="20201014 22:25:10.794"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:10.795" starttime="20201014 22:25:07.054"></status>
</kw>
<msg timestamp="20201014 22:25:10.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:10.795" starttime="20201014 22:25:07.054"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:10.795" starttime="20201014 22:25:07.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:10.799" level="INFO">Running command 'ozone sh bucket link 69929-source/readable-bucket 69929-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:14.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:14.384" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:14.384" starttime="20201014 22:25:10.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:14.385" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:25:14.385" starttime="20201014 22:25:14.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:14.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:14.386" starttime="20201014 22:25:14.385"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:14.386" starttime="20201014 22:25:10.796"></status>
</kw>
<msg timestamp="20201014 22:25:14.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:14.386" starttime="20201014 22:25:10.796"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:14.386" starttime="20201014 22:25:10.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:14.391" level="INFO">Running command 'ozone sh bucket link 69929-source/readable-bucket 69929-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:18.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:18.158" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:18.158" starttime="20201014 22:25:14.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:18.159" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:25:18.159" starttime="20201014 22:25:18.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:18.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:18.160" starttime="20201014 22:25:18.160"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:18.160" starttime="20201014 22:25:14.387"></status>
</kw>
<msg timestamp="20201014 22:25:18.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:18.161" starttime="20201014 22:25:14.387"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:18.161" starttime="20201014 22:25:14.387"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:18.164" level="INFO">Running command 'ozone sh bucket link 69929-source/unreadable-bucket 69929-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:21.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:21.888" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:21.888" starttime="20201014 22:25:18.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:21.889" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:25:21.890" starttime="20201014 22:25:21.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:21.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:21.890" starttime="20201014 22:25:21.890"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:21.891" starttime="20201014 22:25:18.162"></status>
</kw>
<msg timestamp="20201014 22:25:21.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:21.891" starttime="20201014 22:25:18.162"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:21.891" starttime="20201014 22:25:18.161"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:21.895" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 69929-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:25.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:25.588" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:25.589" starttime="20201014 22:25:21.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:25.590" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201014 22:25:25.590" starttime="20201014 22:25:25.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:25.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:25.591" starttime="20201014 22:25:25.590"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:25.591" starttime="20201014 22:25:21.892"></status>
</kw>
<msg timestamp="20201014 22:25:25.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:25.592" starttime="20201014 22:25:21.892"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:25.592" starttime="20201014 22:25:21.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:25.596" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 69929-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:29.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:29.316" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:29.316" starttime="20201014 22:25:25.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:29.317" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201014 22:25:29.317" starttime="20201014 22:25:29.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:29.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:29.318" starttime="20201014 22:25:29.318"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:29.318" starttime="20201014 22:25:25.593"></status>
</kw>
<msg timestamp="20201014 22:25:29.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:29.319" starttime="20201014 22:25:25.593"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:29.319" starttime="20201014 22:25:25.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:29.323" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 69929-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:33.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:33.201" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:33.201" starttime="20201014 22:25:29.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:33.202" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201014 22:25:33.203" starttime="20201014 22:25:33.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:33.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:33.203" starttime="20201014 22:25:33.203"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:33.203" starttime="20201014 22:25:29.320"></status>
</kw>
<msg timestamp="20201014 22:25:33.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:33.204" starttime="20201014 22:25:29.319"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:33.204" starttime="20201014 22:25:29.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:33.207" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 69929-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:36.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:36.569" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:36.569" starttime="20201014 22:25:33.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:36.570" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201014 22:25:36.570" starttime="20201014 22:25:36.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:36.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:36.571" starttime="20201014 22:25:36.570"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:36.571" starttime="20201014 22:25:33.205"></status>
</kw>
<msg timestamp="20201014 22:25:36.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:36.571" starttime="20201014 22:25:33.205"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:36.571" starttime="20201014 22:25:33.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:36.577" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 69929-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:40.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:40.365" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:40.365" starttime="20201014 22:25:36.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:40.366" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201014 22:25:40.366" starttime="20201014 22:25:40.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:40.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:40.367" starttime="20201014 22:25:40.366"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.367" starttime="20201014 22:25:36.572"></status>
</kw>
<msg timestamp="20201014 22:25:40.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:40.367" starttime="20201014 22:25:36.572"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.368" starttime="20201014 22:25:36.571"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.368" starttime="20201014 22:24:57.352"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.368" starttime="20201014 22:24:57.351"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.368" starttime="20201014 22:24:48.777"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:40.374" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:40.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:40.377" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:25:40.377" starttime="20201014 22:25:40.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:40.378" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:25:40.378" starttime="20201014 22:25:40.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:40.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:40.379" starttime="20201014 22:25:40.378"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.379" starttime="20201014 22:25:40.371"></status>
</kw>
<msg timestamp="20201014 22:25:40.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:40.379" starttime="20201014 22:25:40.371"></status>
</kw>
<msg timestamp="20201014 22:25:40.379" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:25:40.379" starttime="20201014 22:25:40.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:25:40.381" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:25:40.381" starttime="20201014 22:25:40.380"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:40.387" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:40.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:40.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:25:40.403" starttime="20201014 22:25:40.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:40.404" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:25:40.404" starttime="20201014 22:25:40.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:40.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:40.405" starttime="20201014 22:25:40.404"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.405" starttime="20201014 22:25:40.382"></status>
</kw>
<msg timestamp="20201014 22:25:40.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:40.405" starttime="20201014 22:25:40.382"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.405" starttime="20201014 22:25:40.382"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.405" starttime="20201014 22:25:40.381"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.406" starttime="20201014 22:25:40.370"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:40.406" starttime="20201014 22:25:40.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:40.410" level="INFO">Running command 'ozone sh bucket link 69929-source/no-such-bucket 69929-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:43.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:43.828" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:43.828" starttime="20201014 22:25:40.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:43.830" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:25:43.830" starttime="20201014 22:25:43.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:43.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:43.831" starttime="20201014 22:25:43.830"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:43.831" starttime="20201014 22:25:40.407"></status>
</kw>
<msg timestamp="20201014 22:25:43.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:43.831" starttime="20201014 22:25:40.406"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:43.831" starttime="20201014 22:25:40.406"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:43.834" level="INFO">Running command 'ozone sh key list 69929-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:47.252" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 22:25:47.252" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:47.252" starttime="20201014 22:25:43.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:47.253" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20201014 22:25:47.253" starttime="20201014 22:25:47.252"></status>
</kw>
<msg timestamp="20201014 22:25:47.253" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:47.253" starttime="20201014 22:25:43.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201014 22:25:47.254" starttime="20201014 22:25:47.254"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:25:47.254" critical="yes" starttime="20201014 22:25:40.368"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:47.261" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:47.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:47.264" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:25:47.264" starttime="20201014 22:25:47.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:47.265" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:25:47.265" starttime="20201014 22:25:47.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:47.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:47.265" starttime="20201014 22:25:47.265"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:47.266" starttime="20201014 22:25:47.258"></status>
</kw>
<msg timestamp="20201014 22:25:47.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:47.266" starttime="20201014 22:25:47.258"></status>
</kw>
<msg timestamp="20201014 22:25:47.266" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:25:47.266" starttime="20201014 22:25:47.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:25:47.267" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:25:47.267" starttime="20201014 22:25:47.266"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:47.271" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:47.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:47.288" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:25:47.288" starttime="20201014 22:25:47.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:47.289" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:25:47.289" starttime="20201014 22:25:47.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:47.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:47.290" starttime="20201014 22:25:47.289"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:47.290" starttime="20201014 22:25:47.268"></status>
</kw>
<msg timestamp="20201014 22:25:47.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:47.290" starttime="20201014 22:25:47.268"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:47.290" starttime="20201014 22:25:47.267"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:47.290" starttime="20201014 22:25:47.267"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:47.291" starttime="20201014 22:25:47.257"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:47.291" starttime="20201014 22:25:47.256"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:47.299" level="INFO">Running command 'ozone sh bucket link 69929-source/bucket1 69929-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:50.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:50.699" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:50.699" starttime="20201014 22:25:47.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:50.701" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:25:50.701" starttime="20201014 22:25:50.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:50.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:50.702" starttime="20201014 22:25:50.701"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:50.702" starttime="20201014 22:25:47.292"></status>
</kw>
<msg timestamp="20201014 22:25:50.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:50.702" starttime="20201014 22:25:47.291"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:50.702" starttime="20201014 22:25:47.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:50.709" level="INFO">Running command 'ozone sh bucket create 69929-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:25:54.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:25:54.427" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:25:54.427" starttime="20201014 22:25:50.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:25:54.428" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:25:54.428" starttime="20201014 22:25:54.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:25:54.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:25:54.429" starttime="20201014 22:25:54.429"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:54.429" starttime="20201014 22:25:50.704"></status>
</kw>
<msg timestamp="20201014 22:25:54.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:25:54.430" starttime="20201014 22:25:50.703"></status>
</kw>
<status status="PASS" endtime="20201014 22:25:54.430" starttime="20201014 22:25:50.703"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:25:54.434" level="INFO">Running command 'ozone sh key put 69929-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:01.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:01.368" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:26:01.368" starttime="20201014 22:25:54.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:01.369" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:26:01.369" starttime="20201014 22:26:01.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:01.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:01.370" starttime="20201014 22:26:01.369"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:01.370" starttime="20201014 22:25:54.431"></status>
</kw>
<msg timestamp="20201014 22:26:01.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:01.370" starttime="20201014 22:25:54.431"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:01.370" starttime="20201014 22:25:54.430"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201014 22:26:01.372" level="INFO">${postfix} = 19731</msg>
<status status="PASS" endtime="20201014 22:26:01.372" starttime="20201014 22:26:01.372"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201014 22:26:01.373" level="INFO">${tmpfile} = /tmp/tempkey-19731</msg>
<status status="PASS" endtime="20201014 22:26:01.373" starttime="20201014 22:26:01.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:01.376" level="INFO">Running command 'ozone sh key get -f 69929-target/link1/key1 /tmp/tempkey-19731 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:07.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:07.716" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:26:07.716" starttime="20201014 22:26:01.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:07.717" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:26:07.717" starttime="20201014 22:26:07.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:07.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:07.718" starttime="20201014 22:26:07.717"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.718" starttime="20201014 22:26:01.374"></status>
</kw>
<msg timestamp="20201014 22:26:07.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:07.718" starttime="20201014 22:26:01.373"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.719" starttime="20201014 22:26:01.373"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201014 22:26:07.722" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-19731 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:07.724" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201014 22:26:07.724" starttime="20201014 22:26:07.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:07.729" level="INFO">Running command 'rm -f /tmp/tempkey-19731 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:07.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:07.731" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:26:07.731" starttime="20201014 22:26:07.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:07.732" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:26:07.733" starttime="20201014 22:26:07.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:07.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:07.733" starttime="20201014 22:26:07.733"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.734" starttime="20201014 22:26:07.726"></status>
</kw>
<msg timestamp="20201014 22:26:07.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:07.734" starttime="20201014 22:26:07.725"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.734" starttime="20201014 22:26:07.724"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:26:07.735" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201014 22:26:07.735" starttime="20201014 22:26:07.734"></status>
</kw>
<msg timestamp="20201014 22:26:07.735" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201014 22:26:07.735" starttime="20201014 22:26:01.371"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:07.736" starttime="20201014 22:26:07.735"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.736" starttime="20201014 22:26:01.370"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:26:07.736" critical="yes" starttime="20201014 22:25:47.255"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:07.742" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:07.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:07.744" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:26:07.744" starttime="20201014 22:26:07.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:07.745" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:26:07.745" starttime="20201014 22:26:07.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:07.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:07.746" starttime="20201014 22:26:07.746"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.746" starttime="20201014 22:26:07.739"></status>
</kw>
<msg timestamp="20201014 22:26:07.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:07.747" starttime="20201014 22:26:07.739"></status>
</kw>
<msg timestamp="20201014 22:26:07.747" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:26:07.747" starttime="20201014 22:26:07.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:26:07.748" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:26:07.748" starttime="20201014 22:26:07.747"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:07.756" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:07.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:07.776" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:26:07.776" starttime="20201014 22:26:07.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:07.777" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:26:07.778" starttime="20201014 22:26:07.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:07.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:07.778" starttime="20201014 22:26:07.778"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.779" starttime="20201014 22:26:07.749"></status>
</kw>
<msg timestamp="20201014 22:26:07.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:07.779" starttime="20201014 22:26:07.749"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.779" starttime="20201014 22:26:07.748"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.779" starttime="20201014 22:26:07.748"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.779" starttime="20201014 22:26:07.738"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:07.779" starttime="20201014 22:26:07.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:07.791" level="INFO">Running command 'ozone sh key put 69929-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:14.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:14.114" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:26:14.114" starttime="20201014 22:26:07.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:14.116" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:26:14.117" starttime="20201014 22:26:14.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:14.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:14.118" starttime="20201014 22:26:14.117"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:14.120" starttime="20201014 22:26:07.780"></status>
</kw>
<msg timestamp="20201014 22:26:14.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:14.120" starttime="20201014 22:26:07.780"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:14.120" starttime="20201014 22:26:07.779"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201014 22:26:14.122" level="INFO">${postfix} = 29260</msg>
<status status="PASS" endtime="20201014 22:26:14.122" starttime="20201014 22:26:14.122"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201014 22:26:14.123" level="INFO">${tmpfile} = /tmp/tempkey-29260</msg>
<status status="PASS" endtime="20201014 22:26:14.123" starttime="20201014 22:26:14.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:14.128" level="INFO">Running command 'ozone sh key get -f 69929-source/bucket1/key2 /tmp/tempkey-29260 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:20.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:20.472" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:26:20.472" starttime="20201014 22:26:14.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:20.473" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:26:20.474" starttime="20201014 22:26:20.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:20.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:20.474" starttime="20201014 22:26:20.474"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.475" starttime="20201014 22:26:14.124"></status>
</kw>
<msg timestamp="20201014 22:26:20.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:20.475" starttime="20201014 22:26:14.124"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.475" starttime="20201014 22:26:14.123"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201014 22:26:20.477" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-29260 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:20.480" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201014 22:26:20.480" starttime="20201014 22:26:20.475"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:20.486" level="INFO">Running command 'rm -f /tmp/tempkey-29260 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:20.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:20.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:26:20.488" starttime="20201014 22:26:20.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:20.489" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:26:20.489" starttime="20201014 22:26:20.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:20.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:20.490" starttime="20201014 22:26:20.489"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.490" starttime="20201014 22:26:20.482"></status>
</kw>
<msg timestamp="20201014 22:26:20.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:20.490" starttime="20201014 22:26:20.481"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.491" starttime="20201014 22:26:20.481"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:26:20.492" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201014 22:26:20.492" starttime="20201014 22:26:20.491"></status>
</kw>
<msg timestamp="20201014 22:26:20.492" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201014 22:26:20.492" starttime="20201014 22:26:14.121"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:20.494" starttime="20201014 22:26:20.493"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.494" starttime="20201014 22:26:14.120"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:26:20.494" critical="yes" starttime="20201014 22:26:07.737"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:20.501" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:20.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:20.504" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:26:20.504" starttime="20201014 22:26:20.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:20.505" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:26:20.505" starttime="20201014 22:26:20.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:20.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:20.506" starttime="20201014 22:26:20.506"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.506" starttime="20201014 22:26:20.498"></status>
</kw>
<msg timestamp="20201014 22:26:20.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:20.507" starttime="20201014 22:26:20.498"></status>
</kw>
<msg timestamp="20201014 22:26:20.507" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:26:20.507" starttime="20201014 22:26:20.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:26:20.507" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:26:20.507" starttime="20201014 22:26:20.507"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:20.513" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:20.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:20.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:26:20.527" starttime="20201014 22:26:20.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:20.528" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:26:20.528" starttime="20201014 22:26:20.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:20.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:20.528" starttime="20201014 22:26:20.528"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.529" starttime="20201014 22:26:20.509"></status>
</kw>
<msg timestamp="20201014 22:26:20.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:20.529" starttime="20201014 22:26:20.509"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.529" starttime="20201014 22:26:20.508"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.529" starttime="20201014 22:26:20.508"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.530" starttime="20201014 22:26:20.496"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:20.530" starttime="20201014 22:26:20.496"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:20.534" level="INFO">Running command 'ozone sh key list 69929-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:24.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:24.541" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201014 22:26:24.541" starttime="20201014 22:26:20.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:24.542" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201014 22:26:24.543" starttime="20201014 22:26:24.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:24.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:24.543" starttime="20201014 22:26:24.543"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:24.544" starttime="20201014 22:26:20.531"></status>
</kw>
<msg timestamp="20201014 22:26:24.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:24.544" starttime="20201014 22:26:20.531"></status>
</kw>
<msg timestamp="20201014 22:26:24.544" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201014 22:26:24.544" starttime="20201014 22:26:20.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:24.550" level="INFO">Running command 'ozone sh key list 69929-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:28.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:28.285" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201014 22:26:28.285" starttime="20201014 22:26:24.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:28.286" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201014 22:26:28.286" starttime="20201014 22:26:28.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:28.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:28.287" starttime="20201014 22:26:28.287"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:28.288" starttime="20201014 22:26:24.545"></status>
</kw>
<msg timestamp="20201014 22:26:28.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:28.288" starttime="20201014 22:26:24.545"></status>
</kw>
<msg timestamp="20201014 22:26:28.288" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201014 22:26:28.288" starttime="20201014 22:26:24.544"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:28.289" starttime="20201014 22:26:28.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:28.289" starttime="20201014 22:26:28.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:28.290" starttime="20201014 22:26:28.289"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:26:28.290" critical="yes" starttime="20201014 22:26:20.495"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:28.297" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:28.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:28.300" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:26:28.300" starttime="20201014 22:26:28.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:28.301" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:26:28.301" starttime="20201014 22:26:28.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:28.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:28.301" starttime="20201014 22:26:28.301"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:28.302" starttime="20201014 22:26:28.293"></status>
</kw>
<msg timestamp="20201014 22:26:28.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:28.302" starttime="20201014 22:26:28.293"></status>
</kw>
<msg timestamp="20201014 22:26:28.302" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:26:28.302" starttime="20201014 22:26:28.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:26:28.303" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:26:28.303" starttime="20201014 22:26:28.302"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:28.307" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:28.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:28.324" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:26:28.324" starttime="20201014 22:26:28.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:28.325" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:26:28.325" starttime="20201014 22:26:28.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:28.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:28.326" starttime="20201014 22:26:28.326"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:28.326" starttime="20201014 22:26:28.304"></status>
</kw>
<msg timestamp="20201014 22:26:28.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:28.327" starttime="20201014 22:26:28.304"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:28.327" starttime="20201014 22:26:28.304"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:28.327" starttime="20201014 22:26:28.303"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:28.327" starttime="20201014 22:26:28.292"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:28.327" starttime="20201014 22:26:28.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:28.332" level="INFO">Running command 'ozone sh key delete 69929-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:32.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:32.658" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:26:32.659" starttime="20201014 22:26:28.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:32.660" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:26:32.660" starttime="20201014 22:26:32.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:32.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:32.660" starttime="20201014 22:26:32.660"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:32.661" starttime="20201014 22:26:28.328"></status>
</kw>
<msg timestamp="20201014 22:26:32.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:32.661" starttime="20201014 22:26:28.328"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:32.661" starttime="20201014 22:26:28.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:32.666" level="INFO">Running command 'ozone sh key list 69929-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:36.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:36.887" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201014 22:26:36.887" starttime="20201014 22:26:32.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:36.888" level="INFO">key1</msg>
<status status="PASS" endtime="20201014 22:26:36.888" starttime="20201014 22:26:36.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:36.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:36.889" starttime="20201014 22:26:36.889"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:36.889" starttime="20201014 22:26:32.662"></status>
</kw>
<msg timestamp="20201014 22:26:36.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:36.890" starttime="20201014 22:26:32.662"></status>
</kw>
<msg timestamp="20201014 22:26:36.890" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201014 22:26:36.890" starttime="20201014 22:26:32.661"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:36.890" starttime="20201014 22:26:36.890"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:26:36.891" critical="yes" starttime="20201014 22:26:28.291"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:36.898" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:36.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:36.899" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:26:36.899" starttime="20201014 22:26:36.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:36.901" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:26:36.901" starttime="20201014 22:26:36.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:36.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:36.901" starttime="20201014 22:26:36.901"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:36.902" starttime="20201014 22:26:36.894"></status>
</kw>
<msg timestamp="20201014 22:26:36.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:36.902" starttime="20201014 22:26:36.893"></status>
</kw>
<msg timestamp="20201014 22:26:36.902" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:26:36.902" starttime="20201014 22:26:36.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:26:36.903" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:26:36.903" starttime="20201014 22:26:36.902"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:36.908" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:36.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:36.922" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:26:36.922" starttime="20201014 22:26:36.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:36.923" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:26:36.923" starttime="20201014 22:26:36.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:36.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:36.924" starttime="20201014 22:26:36.923"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:36.924" starttime="20201014 22:26:36.904"></status>
</kw>
<msg timestamp="20201014 22:26:36.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:36.924" starttime="20201014 22:26:36.904"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:36.924" starttime="20201014 22:26:36.903"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:36.925" starttime="20201014 22:26:36.903"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:36.925" starttime="20201014 22:26:36.893"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:36.925" starttime="20201014 22:26:36.892"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:36.930" level="INFO">Running command 'ozone sh bucket list 69929-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:40.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:40.751" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:26:40.751" starttime="20201014 22:26:36.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:40.752" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:43.739Z",
  "modificationTime" : "2020-10-14T22:25:43.739Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:21.685Z",
  "modificationTime" : "2020-10-14T22:25:21.685Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:50.606Z",
  "modificationTime" : "2020-10-14T22:25:50.606Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:14.281Z",
  "modificationTime" : "2020-10-14T22:25:14.281Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:18.023Z",
  "modificationTime" : "2020-10-14T22:25:18.023Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201014 22:26:40.753" starttime="20201014 22:26:40.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:40.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:40.753" starttime="20201014 22:26:40.753"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:40.754" starttime="20201014 22:26:36.926"></status>
</kw>
<msg timestamp="20201014 22:26:40.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:40.754" starttime="20201014 22:26:36.926"></status>
</kw>
<msg timestamp="20201014 22:26:40.754" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:26:40.754" starttime="20201014 22:26:36.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:40.755" starttime="20201014 22:26:40.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:40.755" starttime="20201014 22:26:40.755"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:26:40.755" critical="yes" starttime="20201014 22:26:36.891"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:40.761" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:40.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:40.764" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:26:40.764" starttime="20201014 22:26:40.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:40.765" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:26:40.765" starttime="20201014 22:26:40.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:40.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:40.766" starttime="20201014 22:26:40.765"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:40.766" starttime="20201014 22:26:40.758"></status>
</kw>
<msg timestamp="20201014 22:26:40.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:40.767" starttime="20201014 22:26:40.758"></status>
</kw>
<msg timestamp="20201014 22:26:40.767" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:26:40.767" starttime="20201014 22:26:40.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:26:40.768" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:26:40.768" starttime="20201014 22:26:40.767"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:40.773" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:40.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:40.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:26:40.791" starttime="20201014 22:26:40.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:40.792" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:26:40.792" starttime="20201014 22:26:40.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:40.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:40.793" starttime="20201014 22:26:40.792"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:40.793" starttime="20201014 22:26:40.769"></status>
</kw>
<msg timestamp="20201014 22:26:40.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:40.793" starttime="20201014 22:26:40.769"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:40.794" starttime="20201014 22:26:40.768"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:40.794" starttime="20201014 22:26:40.768"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:40.794" starttime="20201014 22:26:40.757"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:40.794" starttime="20201014 22:26:40.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:40.799" level="INFO">Running command 'ozone sh bucket info 69929-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:44.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:44.565" level="INFO">${output} = 69929-source bucket1</msg>
<status status="PASS" endtime="20201014 22:26:44.565" starttime="20201014 22:26:40.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:44.566" level="INFO">69929-source bucket1</msg>
<status status="PASS" endtime="20201014 22:26:44.566" starttime="20201014 22:26:44.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:44.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:44.567" starttime="20201014 22:26:44.566"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:44.567" starttime="20201014 22:26:40.795"></status>
</kw>
<msg timestamp="20201014 22:26:44.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:44.567" starttime="20201014 22:26:40.795"></status>
</kw>
<msg timestamp="20201014 22:26:44.568" level="INFO">${result} = 69929-source bucket1</msg>
<status status="PASS" endtime="20201014 22:26:44.568" starttime="20201014 22:26:40.794"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:44.568" starttime="20201014 22:26:44.568"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:26:44.569" critical="yes" starttime="20201014 22:26:40.756"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:44.575" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:44.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:44.578" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:26:44.578" starttime="20201014 22:26:44.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:44.579" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:26:44.579" starttime="20201014 22:26:44.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:44.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:44.580" starttime="20201014 22:26:44.579"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:44.580" starttime="20201014 22:26:44.572"></status>
</kw>
<msg timestamp="20201014 22:26:44.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:44.580" starttime="20201014 22:26:44.572"></status>
</kw>
<msg timestamp="20201014 22:26:44.581" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:26:44.581" starttime="20201014 22:26:44.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:26:44.581" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:26:44.581" starttime="20201014 22:26:44.581"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:44.587" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:44.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:44.599" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:26:44.599" starttime="20201014 22:26:44.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:44.601" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:26:44.601" starttime="20201014 22:26:44.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:44.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:44.602" starttime="20201014 22:26:44.601"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:44.602" starttime="20201014 22:26:44.583"></status>
</kw>
<msg timestamp="20201014 22:26:44.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:44.602" starttime="20201014 22:26:44.583"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:44.602" starttime="20201014 22:26:44.582"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:44.602" starttime="20201014 22:26:44.581"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:44.603" starttime="20201014 22:26:44.571"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:44.603" starttime="20201014 22:26:44.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:44.607" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 69929-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:48.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:48.200" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:26:48.200" starttime="20201014 22:26:44.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:48.202" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201014 22:26:48.202" starttime="20201014 22:26:48.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:48.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:48.202" starttime="20201014 22:26:48.202"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:48.203" starttime="20201014 22:26:44.604"></status>
</kw>
<msg timestamp="20201014 22:26:48.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:48.203" starttime="20201014 22:26:44.603"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:48.203" starttime="20201014 22:26:44.603"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:48.208" level="INFO">Running command 'ozone sh bucket getacl 69929-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:52.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:52.203" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201014 22:26:52.203" starttime="20201014 22:26:48.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:52.204" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201014 22:26:52.204" starttime="20201014 22:26:52.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:52.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:52.205" starttime="20201014 22:26:52.204"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:52.205" starttime="20201014 22:26:48.205"></status>
</kw>
<msg timestamp="20201014 22:26:52.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:52.206" starttime="20201014 22:26:48.205"></status>
</kw>
<msg timestamp="20201014 22:26:52.206" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201014 22:26:52.206" starttime="20201014 22:26:48.204"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:52.207" starttime="20201014 22:26:52.206"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:52.207" starttime="20201014 22:26:48.203"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:52.213" level="INFO">Running command 'ozone sh bucket getacl 69929-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:56.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:56.149" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:26:56.149" starttime="20201014 22:26:52.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:56.150" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:26:56.150" starttime="20201014 22:26:56.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:56.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:56.151" starttime="20201014 22:26:56.151"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:56.151" starttime="20201014 22:26:52.209"></status>
</kw>
<msg timestamp="20201014 22:26:56.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:56.152" starttime="20201014 22:26:52.208"></status>
</kw>
<msg timestamp="20201014 22:26:56.152" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201014 22:26:56.152" starttime="20201014 22:26:52.208"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:26:56.153" starttime="20201014 22:26:56.152"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:56.154" starttime="20201014 22:26:52.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:56.158" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 69929-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:26:59.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:26:59.932" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:26:59.933" starttime="20201014 22:26:56.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:26:59.934" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201014 22:26:59.934" starttime="20201014 22:26:59.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:26:59.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:26:59.935" starttime="20201014 22:26:59.934"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:59.935" starttime="20201014 22:26:56.155"></status>
</kw>
<msg timestamp="20201014 22:26:59.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:26:59.935" starttime="20201014 22:26:56.155"></status>
</kw>
<status status="PASS" endtime="20201014 22:26:59.935" starttime="20201014 22:26:56.154"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:26:59.940" level="INFO">Running command 'ozone sh bucket getacl 69929-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:04.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:04.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:04.050" starttime="20201014 22:26:59.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:04.051" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:04.051" starttime="20201014 22:27:04.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:04.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:04.052" starttime="20201014 22:27:04.051"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:04.052" starttime="20201014 22:26:59.937"></status>
</kw>
<msg timestamp="20201014 22:27:04.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:04.052" starttime="20201014 22:26:59.937"></status>
</kw>
<msg timestamp="20201014 22:27:04.052" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201014 22:27:04.052" starttime="20201014 22:26:59.936"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:04.053" starttime="20201014 22:27:04.052"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:04.053" starttime="20201014 22:26:59.936"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:04.058" level="INFO">Running command 'ozone sh bucket getacl 69929-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:08.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:08.249" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201014 22:27:08.249" starttime="20201014 22:27:04.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:08.250" level="INFO">READ</msg>
<status status="PASS" endtime="20201014 22:27:08.250" starttime="20201014 22:27:08.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:08.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:08.251" starttime="20201014 22:27:08.250"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:08.251" starttime="20201014 22:27:04.055"></status>
</kw>
<msg timestamp="20201014 22:27:08.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:08.251" starttime="20201014 22:27:04.055"></status>
</kw>
<msg timestamp="20201014 22:27:08.251" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201014 22:27:08.251" starttime="20201014 22:27:04.054"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:08.252" starttime="20201014 22:27:08.252"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:08.252" starttime="20201014 22:27:04.053"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:27:08.253" critical="yes" starttime="20201014 22:26:44.569"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:08.260" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:08.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:08.262" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:27:08.262" starttime="20201014 22:27:08.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:08.263" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:27:08.263" starttime="20201014 22:27:08.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:08.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:08.264" starttime="20201014 22:27:08.263"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:08.264" starttime="20201014 22:27:08.256"></status>
</kw>
<msg timestamp="20201014 22:27:08.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:08.264" starttime="20201014 22:27:08.256"></status>
</kw>
<msg timestamp="20201014 22:27:08.264" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:27:08.264" starttime="20201014 22:27:08.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:27:08.265" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:27:08.265" starttime="20201014 22:27:08.265"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:08.271" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:08.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:08.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:08.285" starttime="20201014 22:27:08.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:08.286" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:08.286" starttime="20201014 22:27:08.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:08.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:08.287" starttime="20201014 22:27:08.286"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:08.287" starttime="20201014 22:27:08.267"></status>
</kw>
<msg timestamp="20201014 22:27:08.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:08.287" starttime="20201014 22:27:08.267"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:08.288" starttime="20201014 22:27:08.266"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:08.288" starttime="20201014 22:27:08.265"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:08.288" starttime="20201014 22:27:08.255"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:08.288" starttime="20201014 22:27:08.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:08.292" level="INFO">Running command 'ozone sh bucket link 69929-source/bucket2 69929-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:11.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:11.813" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:11.813" starttime="20201014 22:27:08.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:11.814" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:27:11.814" starttime="20201014 22:27:11.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:11.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:11.815" starttime="20201014 22:27:11.814"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:11.815" starttime="20201014 22:27:08.289"></status>
</kw>
<msg timestamp="20201014 22:27:11.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:11.816" starttime="20201014 22:27:08.289"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:11.816" starttime="20201014 22:27:08.288"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:11.820" level="INFO">Running command 'ozone sh bucket create 69929-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:15.524" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 22:27:15.524" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:15.524" starttime="20201014 22:27:11.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:15.525" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201014 22:27:15.526" starttime="20201014 22:27:15.525"></status>
</kw>
<msg timestamp="20201014 22:27:15.526" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:15.526" starttime="20201014 22:27:11.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:15.527" starttime="20201014 22:27:15.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:15.531" level="INFO">Running command 'ozone sh bucket create 69929-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:19.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:19.435" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:19.435" starttime="20201014 22:27:15.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:19.436" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:27:19.436" starttime="20201014 22:27:19.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:19.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:19.437" starttime="20201014 22:27:19.436"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:19.437" starttime="20201014 22:27:15.528"></status>
</kw>
<msg timestamp="20201014 22:27:19.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:19.437" starttime="20201014 22:27:15.527"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:19.437" starttime="20201014 22:27:15.527"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:19.442" level="INFO">Running command 'ozone sh bucket link 69929-source/bucket1 69929-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:23.058" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 22:27:23.058" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:23.058" starttime="20201014 22:27:19.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.063" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201014 22:27:23.063" starttime="20201014 22:27:23.059"></status>
</kw>
<msg timestamp="20201014 22:27:23.063" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:23.063" starttime="20201014 22:27:19.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:23.064" starttime="20201014 22:27:23.063"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:27:23.064" critical="yes" starttime="20201014 22:27:08.253"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:23.072" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:23.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:23.076" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:27:23.077" starttime="20201014 22:27:23.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.078" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:27:23.078" starttime="20201014 22:27:23.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:23.079" starttime="20201014 22:27:23.078"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.079" starttime="20201014 22:27:23.068"></status>
</kw>
<msg timestamp="20201014 22:27:23.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:23.079" starttime="20201014 22:27:23.068"></status>
</kw>
<msg timestamp="20201014 22:27:23.079" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:27:23.079" starttime="20201014 22:27:23.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:27:23.080" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:27:23.080" starttime="20201014 22:27:23.080"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:23.084" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:23.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:23.109" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:23.109" starttime="20201014 22:27:23.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.111" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:23.111" starttime="20201014 22:27:23.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:23.111" starttime="20201014 22:27:23.111"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.112" starttime="20201014 22:27:23.082"></status>
</kw>
<msg timestamp="20201014 22:27:23.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:23.112" starttime="20201014 22:27:23.081"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.112" starttime="20201014 22:27:23.081"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.112" starttime="20201014 22:27:23.080"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.112" starttime="20201014 22:27:23.067"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.112" starttime="20201014 22:27:23.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:23.117" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:23.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:23.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:23.122" starttime="20201014 22:27:23.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.123" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:23.123" starttime="20201014 22:27:23.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:23.124" starttime="20201014 22:27:23.124"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.124" starttime="20201014 22:27:23.115"></status>
</kw>
<msg timestamp="20201014 22:27:23.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:23.125" starttime="20201014 22:27:23.114"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.125" starttime="20201014 22:27:23.114"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:23.130" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:23.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:23.134" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:27:23.134" starttime="20201014 22:27:23.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.135" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:27:23.135" starttime="20201014 22:27:23.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:23.136" starttime="20201014 22:27:23.135"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.136" starttime="20201014 22:27:23.126"></status>
</kw>
<msg timestamp="20201014 22:27:23.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:23.136" starttime="20201014 22:27:23.126"></status>
</kw>
<msg timestamp="20201014 22:27:23.136" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:27:23.136" starttime="20201014 22:27:23.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:27:23.137" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:27:23.137" starttime="20201014 22:27:23.137"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:23.143" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:23.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:23.157" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:23.157" starttime="20201014 22:27:23.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.158" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:23.158" starttime="20201014 22:27:23.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:23.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:23.159" starttime="20201014 22:27:23.158"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.159" starttime="20201014 22:27:23.139"></status>
</kw>
<msg timestamp="20201014 22:27:23.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:23.160" starttime="20201014 22:27:23.138"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.160" starttime="20201014 22:27:23.138"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.160" starttime="20201014 22:27:23.137"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.160" starttime="20201014 22:27:23.125"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:23.160" starttime="20201014 22:27:23.125"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:23.165" level="INFO">Running command 'ozone sh key list 69929-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:27.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:27.324" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:27.324" starttime="20201014 22:27:23.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.325" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "69929-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-10-14T22:25:04.452Z",
  "modificationTime" : "2020-10-14T22:25:06.464Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201014 22:27:27.325" starttime="20201014 22:27:27.324"></status>
</kw>
<msg timestamp="20201014 22:27:27.325" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:27.326" starttime="20201014 22:27:23.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:27.326" starttime="20201014 22:27:27.326"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.326" starttime="20201014 22:27:23.113"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.326" starttime="20201014 22:27:23.113"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:27:27.327" critical="yes" starttime="20201014 22:27:23.065"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:27.333" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:27.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:27.336" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:27:27.336" starttime="20201014 22:27:27.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.337" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:27:27.337" starttime="20201014 22:27:27.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:27.338" starttime="20201014 22:27:27.337"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.338" starttime="20201014 22:27:27.330"></status>
</kw>
<msg timestamp="20201014 22:27:27.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:27.338" starttime="20201014 22:27:27.330"></status>
</kw>
<msg timestamp="20201014 22:27:27.338" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:27:27.338" starttime="20201014 22:27:27.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:27:27.339" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:27:27.339" starttime="20201014 22:27:27.339"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:27.343" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:27.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:27.360" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:27.360" starttime="20201014 22:27:27.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.361" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:27.361" starttime="20201014 22:27:27.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:27.362" starttime="20201014 22:27:27.361"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.362" starttime="20201014 22:27:27.341"></status>
</kw>
<msg timestamp="20201014 22:27:27.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:27.363" starttime="20201014 22:27:27.340"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.363" starttime="20201014 22:27:27.340"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.363" starttime="20201014 22:27:27.339"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.363" starttime="20201014 22:27:27.329"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.363" starttime="20201014 22:27:27.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:27.369" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:27.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:27.372" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:27.372" starttime="20201014 22:27:27.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.373" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:27.374" starttime="20201014 22:27:27.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:27.374" starttime="20201014 22:27:27.374"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.375" starttime="20201014 22:27:27.365"></status>
</kw>
<msg timestamp="20201014 22:27:27.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:27.375" starttime="20201014 22:27:27.365"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.375" starttime="20201014 22:27:27.364"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:27.381" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:27.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:27.382" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:27:27.382" starttime="20201014 22:27:27.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.383" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:27:27.383" starttime="20201014 22:27:27.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:27.384" starttime="20201014 22:27:27.384"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.384" starttime="20201014 22:27:27.377"></status>
</kw>
<msg timestamp="20201014 22:27:27.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:27.385" starttime="20201014 22:27:27.376"></status>
</kw>
<msg timestamp="20201014 22:27:27.385" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:27:27.385" starttime="20201014 22:27:27.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:27:27.386" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:27:27.386" starttime="20201014 22:27:27.385"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:27.391" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:27.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:27.404" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:27.405" starttime="20201014 22:27:27.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.406" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:27.406" starttime="20201014 22:27:27.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:27.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:27.406" starttime="20201014 22:27:27.406"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.407" starttime="20201014 22:27:27.387"></status>
</kw>
<msg timestamp="20201014 22:27:27.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:27.407" starttime="20201014 22:27:27.387"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.407" starttime="20201014 22:27:27.386"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.407" starttime="20201014 22:27:27.386"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.408" starttime="20201014 22:27:27.375"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:27.408" starttime="20201014 22:27:27.375"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:27.412" level="INFO">Running command 'ozone sh key list 69929-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:31.127" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 22:27:31.127" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:31.128" starttime="20201014 22:27:27.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.129" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201014 22:27:31.129" starttime="20201014 22:27:31.128"></status>
</kw>
<msg timestamp="20201014 22:27:31.129" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:31.129" starttime="20201014 22:27:27.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:31.130" starttime="20201014 22:27:31.130"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.130" starttime="20201014 22:27:27.364"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.130" starttime="20201014 22:27:27.363"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:27:31.130" critical="yes" starttime="20201014 22:27:27.328"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:31.136" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:31.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:31.140" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:27:31.140" starttime="20201014 22:27:31.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.141" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:27:31.141" starttime="20201014 22:27:31.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:31.141" starttime="20201014 22:27:31.141"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.142" starttime="20201014 22:27:31.134"></status>
</kw>
<msg timestamp="20201014 22:27:31.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:31.142" starttime="20201014 22:27:31.133"></status>
</kw>
<msg timestamp="20201014 22:27:31.142" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:27:31.142" starttime="20201014 22:27:31.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:27:31.143" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:27:31.143" starttime="20201014 22:27:31.142"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:31.149" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:31.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:31.163" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:31.163" starttime="20201014 22:27:31.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.164" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:31.164" starttime="20201014 22:27:31.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:31.165" starttime="20201014 22:27:31.164"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.165" starttime="20201014 22:27:31.144"></status>
</kw>
<msg timestamp="20201014 22:27:31.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:31.165" starttime="20201014 22:27:31.144"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.166" starttime="20201014 22:27:31.143"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.166" starttime="20201014 22:27:31.143"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.166" starttime="20201014 22:27:31.132"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.166" starttime="20201014 22:27:31.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:31.172" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:31.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:31.177" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:31.177" starttime="20201014 22:27:31.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.178" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:31.178" starttime="20201014 22:27:31.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:31.179" starttime="20201014 22:27:31.178"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.179" starttime="20201014 22:27:31.168"></status>
</kw>
<msg timestamp="20201014 22:27:31.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:31.179" starttime="20201014 22:27:31.167"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.179" starttime="20201014 22:27:31.167"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:31.184" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:31.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:31.186" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:27:31.187" starttime="20201014 22:27:31.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.187" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:27:31.188" starttime="20201014 22:27:31.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:31.188" starttime="20201014 22:27:31.188"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.189" starttime="20201014 22:27:31.181"></status>
</kw>
<msg timestamp="20201014 22:27:31.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:31.189" starttime="20201014 22:27:31.181"></status>
</kw>
<msg timestamp="20201014 22:27:31.189" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:27:31.189" starttime="20201014 22:27:31.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:27:31.190" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:27:31.190" starttime="20201014 22:27:31.189"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:31.195" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:31.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:31.207" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:31.208" starttime="20201014 22:27:31.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.209" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:31.209" starttime="20201014 22:27:31.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:31.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:31.209" starttime="20201014 22:27:31.209"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.210" starttime="20201014 22:27:31.191"></status>
</kw>
<msg timestamp="20201014 22:27:31.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:31.210" starttime="20201014 22:27:31.191"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.210" starttime="20201014 22:27:31.190"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.210" starttime="20201014 22:27:31.190"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.210" starttime="20201014 22:27:31.180"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:31.210" starttime="20201014 22:27:31.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:31.217" level="INFO">Running command 'ozone sh bucket info 69929-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:34.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:34.928" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:34.928" starttime="20201014 22:27:31.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:34.929" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:21.685Z",
  "modificationTime" : "2020-10-14T22:25:21.685Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201014 22:27:34.929" starttime="20201014 22:27:34.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:34.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:34.930" starttime="20201014 22:27:34.930"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:34.930" starttime="20201014 22:27:31.211"></status>
</kw>
<msg timestamp="20201014 22:27:34.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:34.931" starttime="20201014 22:27:31.211"></status>
</kw>
<msg timestamp="20201014 22:27:34.931" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:34.931" starttime="20201014 22:27:31.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:34.932" starttime="20201014 22:27:34.931"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:34.932" starttime="20201014 22:27:34.932"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:34.935" level="INFO">Running command 'ozone sh key list 69929-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:38.440" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 22:27:38.441" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:38.441" starttime="20201014 22:27:34.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:38.442" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201014 22:27:38.442" starttime="20201014 22:27:38.441"></status>
</kw>
<msg timestamp="20201014 22:27:38.442" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:38.442" starttime="20201014 22:27:34.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:38.443" starttime="20201014 22:27:38.442"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:38.443" starttime="20201014 22:27:31.167"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:38.443" starttime="20201014 22:27:31.166"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:27:38.443" critical="yes" starttime="20201014 22:27:31.131"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:38.449" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:38.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:38.453" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:27:38.453" starttime="20201014 22:27:38.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:38.454" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:27:38.454" starttime="20201014 22:27:38.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:38.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:38.455" starttime="20201014 22:27:38.454"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:38.455" starttime="20201014 22:27:38.446"></status>
</kw>
<msg timestamp="20201014 22:27:38.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:38.455" starttime="20201014 22:27:38.446"></status>
</kw>
<msg timestamp="20201014 22:27:38.455" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:27:38.455" starttime="20201014 22:27:38.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:27:38.456" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:27:38.456" starttime="20201014 22:27:38.456"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:38.460" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:38.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:38.475" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:38.475" starttime="20201014 22:27:38.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:38.476" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:38.476" starttime="20201014 22:27:38.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:38.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:38.477" starttime="20201014 22:27:38.476"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:38.477" starttime="20201014 22:27:38.458"></status>
</kw>
<msg timestamp="20201014 22:27:38.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:38.477" starttime="20201014 22:27:38.457"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:38.477" starttime="20201014 22:27:38.457"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:38.477" starttime="20201014 22:27:38.456"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:38.478" starttime="20201014 22:27:38.445"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:38.478" starttime="20201014 22:27:38.445"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:38.483" level="INFO">Running command 'ozone sh bucket link 69929-target/loop1 69929-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:41.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:41.973" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:41.973" starttime="20201014 22:27:38.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:41.974" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:27:41.974" starttime="20201014 22:27:41.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:41.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:41.975" starttime="20201014 22:27:41.974"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:41.975" starttime="20201014 22:27:38.479"></status>
</kw>
<msg timestamp="20201014 22:27:41.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:41.976" starttime="20201014 22:27:38.479"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:41.976" starttime="20201014 22:27:38.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:41.980" level="INFO">Running command 'ozone sh bucket link 69929-target/loop2 69929-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:45.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:45.696" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:45.696" starttime="20201014 22:27:41.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:45.697" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:27:45.697" starttime="20201014 22:27:45.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:45.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:45.698" starttime="20201014 22:27:45.697"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:45.699" starttime="20201014 22:27:41.977"></status>
</kw>
<msg timestamp="20201014 22:27:45.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:45.699" starttime="20201014 22:27:41.977"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:45.699" starttime="20201014 22:27:41.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:45.703" level="INFO">Running command 'ozone sh bucket link 69929-target/loop3 69929-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:49.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:49.248" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:49.248" starttime="20201014 22:27:45.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:49.249" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:27:49.249" starttime="20201014 22:27:49.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:49.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:49.250" starttime="20201014 22:27:49.250"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:49.251" starttime="20201014 22:27:45.700"></status>
</kw>
<msg timestamp="20201014 22:27:49.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:49.251" starttime="20201014 22:27:45.700"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:49.251" starttime="20201014 22:27:45.699"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:49.256" level="INFO">Running command 'ozone sh key list 69929-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:52.859" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 22:27:52.859" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:52.859" starttime="20201014 22:27:49.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:52.860" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20201014 22:27:52.860" starttime="20201014 22:27:52.859"></status>
</kw>
<msg timestamp="20201014 22:27:52.860" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:52.860" starttime="20201014 22:27:49.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201014 22:27:52.861" starttime="20201014 22:27:52.861"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:27:52.861" critical="yes" starttime="20201014 22:27:38.444"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:52.868" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:52.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:52.871" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:27:52.871" starttime="20201014 22:27:52.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:52.872" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:27:52.872" starttime="20201014 22:27:52.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:52.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:52.873" starttime="20201014 22:27:52.872"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:52.873" starttime="20201014 22:27:52.865"></status>
</kw>
<msg timestamp="20201014 22:27:52.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:52.873" starttime="20201014 22:27:52.865"></status>
</kw>
<msg timestamp="20201014 22:27:52.874" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:27:52.874" starttime="20201014 22:27:52.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:27:52.874" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:27:52.874" starttime="20201014 22:27:52.874"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:52.878" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:52.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:52.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:27:52.902" starttime="20201014 22:27:52.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:52.903" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:27:52.903" starttime="20201014 22:27:52.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:52.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:52.904" starttime="20201014 22:27:52.903"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:52.904" starttime="20201014 22:27:52.876"></status>
</kw>
<msg timestamp="20201014 22:27:52.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:52.904" starttime="20201014 22:27:52.876"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:52.904" starttime="20201014 22:27:52.875"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:52.904" starttime="20201014 22:27:52.875"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:52.905" starttime="20201014 22:27:52.864"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:52.905" starttime="20201014 22:27:52.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:52.909" level="INFO">Running command 'ozone sh bucket link 69929-source/bucket1 69929-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:27:56.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:27:56.742" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:27:56.742" starttime="20201014 22:27:52.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:27:56.743" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:27:56.743" starttime="20201014 22:27:56.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:27:56.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:27:56.744" starttime="20201014 22:27:56.743"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:56.744" starttime="20201014 22:27:52.906"></status>
</kw>
<msg timestamp="20201014 22:27:56.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:27:56.745" starttime="20201014 22:27:52.905"></status>
</kw>
<status status="PASS" endtime="20201014 22:27:56.745" starttime="20201014 22:27:52.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:27:56.749" level="INFO">Running command 'ozone sh key put 69929-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:28:03.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:28:03.127" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:28:03.127" starttime="20201014 22:27:56.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:28:03.129" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:28:03.129" starttime="20201014 22:28:03.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:28:03.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:28:03.129" starttime="20201014 22:28:03.129"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:03.130" starttime="20201014 22:27:56.746"></status>
</kw>
<msg timestamp="20201014 22:28:03.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:28:03.130" starttime="20201014 22:27:56.746"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:03.130" starttime="20201014 22:27:56.745"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201014 22:28:03.132" level="INFO">${postfix} = 83432</msg>
<status status="PASS" endtime="20201014 22:28:03.132" starttime="20201014 22:28:03.131"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201014 22:28:03.133" level="INFO">${tmpfile} = /tmp/tempkey-83432</msg>
<status status="PASS" endtime="20201014 22:28:03.133" starttime="20201014 22:28:03.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:28:03.138" level="INFO">Running command 'ozone sh key get -f 69929-target/link1/key3 /tmp/tempkey-83432 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:28:08.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:28:08.820" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:28:08.820" starttime="20201014 22:28:03.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:28:08.821" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:28:08.821" starttime="20201014 22:28:08.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:28:08.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:28:08.822" starttime="20201014 22:28:08.821"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.822" starttime="20201014 22:28:03.134"></status>
</kw>
<msg timestamp="20201014 22:28:08.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:28:08.822" starttime="20201014 22:28:03.134"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.823" starttime="20201014 22:28:03.133"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201014 22:28:08.827" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-83432 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:28:08.828" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201014 22:28:08.828" starttime="20201014 22:28:08.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:28:08.834" level="INFO">Running command 'rm -f /tmp/tempkey-83432 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:28:08.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:28:08.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:28:08.836" starttime="20201014 22:28:08.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:28:08.837" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:28:08.837" starttime="20201014 22:28:08.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:28:08.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:28:08.837" starttime="20201014 22:28:08.837"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.838" starttime="20201014 22:28:08.830"></status>
</kw>
<msg timestamp="20201014 22:28:08.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:28:08.838" starttime="20201014 22:28:08.830"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.838" starttime="20201014 22:28:08.829"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:28:08.839" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201014 22:28:08.839" starttime="20201014 22:28:08.838"></status>
</kw>
<msg timestamp="20201014 22:28:08.839" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201014 22:28:08.839" starttime="20201014 22:28:03.131"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:28:08.840" starttime="20201014 22:28:08.839"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.840" starttime="20201014 22:28:03.130"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:28:08.840" critical="yes" starttime="20201014 22:27:52.862"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:28:08.847" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:28:08.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:28:08.849" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201014 22:28:08.849" starttime="20201014 22:28:08.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:28:08.850" level="INFO">scm</msg>
<status status="PASS" endtime="20201014 22:28:08.850" starttime="20201014 22:28:08.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:28:08.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:28:08.851" starttime="20201014 22:28:08.850"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.852" starttime="20201014 22:28:08.844"></status>
</kw>
<msg timestamp="20201014 22:28:08.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:28:08.852" starttime="20201014 22:28:08.843"></status>
</kw>
<msg timestamp="20201014 22:28:08.852" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201014 22:28:08.852" starttime="20201014 22:28:08.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201014 22:28:08.853" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201014 22:28:08.853" starttime="20201014 22:28:08.852"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:28:08.858" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:28:08.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:28:08.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 22:28:08.877" starttime="20201014 22:28:08.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:28:08.878" level="INFO"></msg>
<status status="PASS" endtime="20201014 22:28:08.878" starttime="20201014 22:28:08.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:28:08.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:28:08.879" starttime="20201014 22:28:08.878"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.879" starttime="20201014 22:28:08.854"></status>
</kw>
<msg timestamp="20201014 22:28:08.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:28:08.880" starttime="20201014 22:28:08.854"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.880" starttime="20201014 22:28:08.853"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.880" starttime="20201014 22:28:08.853"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.880" starttime="20201014 22:28:08.842"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:08.880" starttime="20201014 22:28:08.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:28:08.884" level="INFO">Running command 'ozone sh bucket delete 69929-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:28:12.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:28:12.369" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:28:12.369" starttime="20201014 22:28:08.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:28:12.370" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201014 22:28:12.370" starttime="20201014 22:28:12.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:28:12.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:28:12.371" starttime="20201014 22:28:12.370"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:12.371" starttime="20201014 22:28:08.881"></status>
</kw>
<msg timestamp="20201014 22:28:12.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:28:12.372" starttime="20201014 22:28:08.881"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:12.372" starttime="20201014 22:28:08.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:28:12.376" level="INFO">Running command 'ozone sh bucket list 69929-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:28:16.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:28:16.107" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:28:16.107" starttime="20201014 22:28:12.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:28:16.108" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:27:19.258Z",
  "modificationTime" : "2020-10-14T22:27:19.258Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:43.739Z",
  "modificationTime" : "2020-10-14T22:25:43.739Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:21.685Z",
  "modificationTime" : "2020-10-14T22:25:21.685Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:27:11.704Z",
  "modificationTime" : "2020-10-14T22:27:11.704Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:27:56.571Z",
  "modificationTime" : "2020-10-14T22:27:56.571Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:27:49.039Z",
  "modificationTime" : "2020-10-14T22:27:49.039Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:27:41.780Z",
  "modificationTime" : "2020-10-14T22:27:41.780Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:27:45.519Z",
  "modificationTime" : "2020-10-14T22:27:45.519Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:14.281Z",
  "modificationTime" : "2020-10-14T22:25:14.281Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "69929-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T22:25:18.023Z",
  "modificationTime" : "2020-10-14T22:25:18.023Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "69929-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201014 22:28:16.108" starttime="20201014 22:28:16.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:28:16.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:28:16.109" starttime="20201014 22:28:16.108"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:16.109" starttime="20201014 22:28:12.373"></status>
</kw>
<msg timestamp="20201014 22:28:16.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:28:16.110" starttime="20201014 22:28:12.373"></status>
</kw>
<msg timestamp="20201014 22:28:16.110" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201014 22:28:16.110" starttime="20201014 22:28:12.372"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201014 22:28:16.111" starttime="20201014 22:28:16.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:28:16.115" level="INFO">Running command 'ozone sh key list 69929-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:28:19.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:28:19.986" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201014 22:28:19.986" starttime="20201014 22:28:16.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:28:19.987" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201014 22:28:19.987" starttime="20201014 22:28:19.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:28:19.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:28:19.988" starttime="20201014 22:28:19.987"></status>
</kw>
<status status="PASS" endtime="20201014 22:28:19.989" starttime="20201014 22:28:16.112"></status>
</kw>
<msg timestamp="20201014 22:28:19.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:28:19.989" starttime="20201014 22:28:16.112"></status>
</kw>
<msg timestamp="20201014 22:28:19.989" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201014 22:28:19.989" starttime="20201014 22:28:16.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201014 22:28:19.990" starttime="20201014 22:28:19.989"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 22:28:19.991" critical="yes" starttime="20201014 22:28:08.841"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201014 22:28:19.994" starttime="20201014 22:24:48.723"></status>
</suite>
<status status="PASS" elapsedtime="241241" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
