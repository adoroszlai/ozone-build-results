<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201014 21:47:37.426" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:45:11.420" level="INFO">${random} = 03676</msg>
<status status="PASS" endtime="20201014 21:45:11.420" starttime="20201014 21:45:11.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20201014 21:45:11.420" level="INFO">${prefix} = 03676</msg>
<status status="PASS" endtime="20201014 21:45:11.420" starttime="20201014 21:45:11.420"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:11.421" starttime="20201014 21:45:11.419"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:11.433" level="INFO">Running command 'ozone sh volume info /03676-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:17.745" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 21:45:17.745" level="INFO">${output} = VOLUME_NOT_FOUND Volume 03676-rpcbasic is not found</msg>
<status status="PASS" endtime="20201014 21:45:17.745" starttime="20201014 21:45:11.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:17.746" level="INFO">VOLUME_NOT_FOUND Volume 03676-rpcbasic is not found</msg>
<status status="PASS" endtime="20201014 21:45:17.746" starttime="20201014 21:45:17.745"></status>
</kw>
<msg timestamp="20201014 21:45:17.747" level="INFO">${result} = VOLUME_NOT_FOUND Volume 03676-rpcbasic is not found</msg>
<status status="PASS" endtime="20201014 21:45:17.747" starttime="20201014 21:45:11.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:17.747" starttime="20201014 21:45:17.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:17.754" level="INFO">Running command 'ozone sh volume create /03676-rpcbasic --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:20.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:20.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:45:20.265" starttime="20201014 21:45:17.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:20.266" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:45:20.266" starttime="20201014 21:45:20.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:20.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:20.267" starttime="20201014 21:45:20.266"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:20.267" starttime="20201014 21:45:17.749"></status>
</kw>
<msg timestamp="20201014 21:45:20.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:20.267" starttime="20201014 21:45:17.748"></status>
</kw>
<msg timestamp="20201014 21:45:20.268" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201014 21:45:20.268" starttime="20201014 21:45:17.748"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:20.268" starttime="20201014 21:45:20.268"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:20.281" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="03676-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:22.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:22.796" level="INFO">${output} = {
  "metadata": {},
  "name": "03676-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-14T21:45:20.009Z",
  "mo...</msg>
<status status="PASS" endtime="20201014 21:45:22.796" starttime="20201014 21:45:20.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:22.797" level="INFO">{
  "metadata": {},
  "name": "03676-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-14T21:45:20.009Z",
  "modificationTime": "2020-10-14T21:45:22.527050Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201014 21:45:22.798" starttime="20201014 21:45:22.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:22.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:22.798" starttime="20201014 21:45:22.798"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:22.799" starttime="20201014 21:45:20.269"></status>
</kw>
<msg timestamp="20201014 21:45:22.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:22.799" starttime="20201014 21:45:20.269"></status>
</kw>
<msg timestamp="20201014 21:45:22.799" level="INFO">${result} = {
  "metadata": {},
  "name": "03676-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-14T21:45:20.009Z",
  "mo...</msg>
<status status="PASS" endtime="20201014 21:45:22.799" starttime="20201014 21:45:20.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:22.800" starttime="20201014 21:45:22.799"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:22.803" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="03676-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:25.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:25.095" level="INFO">${output} = {
  "metadata": {},
  "name": "03676-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-14T21:45:20.009Z",
  "mo...</msg>
<status status="PASS" endtime="20201014 21:45:25.095" starttime="20201014 21:45:22.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:25.097" level="INFO">{
  "metadata": {},
  "name": "03676-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-14T21:45:20.009Z",
  "modificationTime": "2020-10-14T21:45:24.853059Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "usedBytes": 0
}</msg>
<status status="PASS" endtime="20201014 21:45:25.097" starttime="20201014 21:45:25.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:25.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:25.097" starttime="20201014 21:45:25.097"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:25.098" starttime="20201014 21:45:22.801"></status>
</kw>
<msg timestamp="20201014 21:45:25.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:25.098" starttime="20201014 21:45:22.800"></status>
</kw>
<msg timestamp="20201014 21:45:25.098" level="INFO">${result} = {
  "metadata": {},
  "name": "03676-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "quotaInBytes": 109951162777600,
  "quotaInCounts": 100,
  "creationTime": "2020-10-14T21:45:20.009Z",
  "mo...</msg>
<status status="PASS" endtime="20201014 21:45:25.098" starttime="20201014 21:45:22.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:25.099" starttime="20201014 21:45:25.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:25.102" level="INFO">Running command 'ozone sh volume setquota /03676-rpcbasic --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:27.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:27.098" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:45:27.099" starttime="20201014 21:45:25.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:27.100" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:45:27.100" starttime="20201014 21:45:27.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:27.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:27.101" starttime="20201014 21:45:27.100"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:27.101" starttime="20201014 21:45:25.100"></status>
</kw>
<msg timestamp="20201014 21:45:27.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:27.101" starttime="20201014 21:45:25.099"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:27.102" starttime="20201014 21:45:25.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:27.106" level="INFO">Running command 'ozone sh volume info /03676-rpcbasic | jq -r '. | select(.name=="03676-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:29.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:29.377" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201014 21:45:29.377" starttime="20201014 21:45:27.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:29.378" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201014 21:45:29.378" starttime="20201014 21:45:29.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:29.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:29.379" starttime="20201014 21:45:29.379"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:29.379" starttime="20201014 21:45:27.103"></status>
</kw>
<msg timestamp="20201014 21:45:29.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:29.380" starttime="20201014 21:45:27.103"></status>
</kw>
<msg timestamp="20201014 21:45:29.380" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201014 21:45:29.380" starttime="20201014 21:45:27.102"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:29.380" starttime="20201014 21:45:29.380"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --count-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:29.386" level="INFO">Running command 'ozone sh bucket create /03676-rpcbasic/bb1 --space-quota 10TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:31.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:31.661" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:45:31.661" starttime="20201014 21:45:29.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:31.662" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:45:31.662" starttime="20201014 21:45:31.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:31.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:31.663" starttime="20201014 21:45:31.662"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:31.663" starttime="20201014 21:45:29.382"></status>
</kw>
<msg timestamp="20201014 21:45:31.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:31.663" starttime="20201014 21:45:29.381"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:31.664" starttime="20201014 21:45:29.381"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:31.667" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:33.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:33.902" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20201014 21:45:33.902" starttime="20201014 21:45:31.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:33.903" level="INFO">DISK</msg>
<status status="PASS" endtime="20201014 21:45:33.903" starttime="20201014 21:45:33.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:33.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:33.904" starttime="20201014 21:45:33.903"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:33.904" starttime="20201014 21:45:31.665"></status>
</kw>
<msg timestamp="20201014 21:45:33.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:33.904" starttime="20201014 21:45:31.665"></status>
</kw>
<msg timestamp="20201014 21:45:33.905" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20201014 21:45:33.905" starttime="20201014 21:45:31.664"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:33.905" starttime="20201014 21:45:33.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:33.908" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:36.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:36.171" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20201014 21:45:36.171" starttime="20201014 21:45:33.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:36.172" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20201014 21:45:36.172" starttime="20201014 21:45:36.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:36.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:36.173" starttime="20201014 21:45:36.173"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:36.173" starttime="20201014 21:45:33.906"></status>
</kw>
<msg timestamp="20201014 21:45:36.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:36.174" starttime="20201014 21:45:33.906"></status>
</kw>
<msg timestamp="20201014 21:45:36.174" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20201014 21:45:36.174" starttime="20201014 21:45:33.905"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:36.174" starttime="20201014 21:45:36.174"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:36.178" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:38.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:38.512" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20201014 21:45:38.513" starttime="20201014 21:45:36.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:38.521" level="INFO">100</msg>
<status status="PASS" endtime="20201014 21:45:38.522" starttime="20201014 21:45:38.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:38.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:38.522" starttime="20201014 21:45:38.522"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:38.523" starttime="20201014 21:45:36.176"></status>
</kw>
<msg timestamp="20201014 21:45:38.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:38.523" starttime="20201014 21:45:36.175"></status>
</kw>
<msg timestamp="20201014 21:45:38.523" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20201014 21:45:38.523" starttime="20201014 21:45:36.175"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:38.524" starttime="20201014 21:45:38.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --count-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:38.529" level="INFO">Running command 'ozone sh bucket setquota /03676-rpcbasic/bb1 --space-quota 1TB --count-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:40.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:40.622" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:45:40.622" starttime="20201014 21:45:38.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:40.624" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:45:40.624" starttime="20201014 21:45:40.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:40.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:40.624" starttime="20201014 21:45:40.624"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:40.625" starttime="20201014 21:45:38.525"></status>
</kw>
<msg timestamp="20201014 21:45:40.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:40.625" starttime="20201014 21:45:38.525"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:40.625" starttime="20201014 21:45:38.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:40.629" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:43.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:43.058" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20201014 21:45:43.058" starttime="20201014 21:45:40.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:43.059" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20201014 21:45:43.059" starttime="20201014 21:45:43.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:43.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:43.060" starttime="20201014 21:45:43.059"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:43.060" starttime="20201014 21:45:40.626"></status>
</kw>
<msg timestamp="20201014 21:45:43.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:43.061" starttime="20201014 21:45:40.626"></status>
</kw>
<msg timestamp="20201014 21:45:43.061" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20201014 21:45:43.061" starttime="20201014 21:45:40.625"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:43.061" starttime="20201014 21:45:43.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:43.067" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:45.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:45.248" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20201014 21:45:45.248" starttime="20201014 21:45:43.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:45.249" level="INFO">1000</msg>
<status status="PASS" endtime="20201014 21:45:45.249" starttime="20201014 21:45:45.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:45.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:45.250" starttime="20201014 21:45:45.250"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:45.250" starttime="20201014 21:45:43.063"></status>
</kw>
<msg timestamp="20201014 21:45:45.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:45.251" starttime="20201014 21:45:43.063"></status>
</kw>
<msg timestamp="20201014 21:45:45.251" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20201014 21:45:45.251" starttime="20201014 21:45:43.062"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:45.252" starttime="20201014 21:45:45.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:45.256" level="INFO">Running command 'ozone sh bucket list /03676-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:47.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:47.469" level="INFO">${output} = 03676-rpcbasic</msg>
<status status="PASS" endtime="20201014 21:45:47.469" starttime="20201014 21:45:45.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:47.470" level="INFO">03676-rpcbasic</msg>
<status status="PASS" endtime="20201014 21:45:47.470" starttime="20201014 21:45:47.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:47.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:47.471" starttime="20201014 21:45:47.471"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:47.471" starttime="20201014 21:45:45.253"></status>
</kw>
<msg timestamp="20201014 21:45:47.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:47.472" starttime="20201014 21:45:45.253"></status>
</kw>
<msg timestamp="20201014 21:45:47.472" level="INFO">${result} = 03676-rpcbasic</msg>
<status status="PASS" endtime="20201014 21:45:47.472" starttime="20201014 21:45:45.252"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:45:47.472" starttime="20201014 21:45:47.472"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:47.478" level="INFO">Running command 'ozone sh key put /03676-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:53.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:53.185" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:45:53.185" starttime="20201014 21:45:47.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:53.186" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:45:53.186" starttime="20201014 21:45:53.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:53.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:53.187" starttime="20201014 21:45:53.186"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:53.187" starttime="20201014 21:45:47.474"></status>
</kw>
<msg timestamp="20201014 21:45:53.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:53.187" starttime="20201014 21:45:47.474"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:53.188" starttime="20201014 21:45:47.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:53.192" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:53.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:53.195" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:45:53.195" starttime="20201014 21:45:53.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:53.196" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:45:53.196" starttime="20201014 21:45:53.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:53.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:53.197" starttime="20201014 21:45:53.196"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:53.197" starttime="20201014 21:45:53.189"></status>
</kw>
<msg timestamp="20201014 21:45:53.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:53.197" starttime="20201014 21:45:53.188"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:53.198" starttime="20201014 21:45:53.188"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:53.202" level="INFO">Running command 'ozone sh key get /03676-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:56.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:56.985" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:45:56.985" starttime="20201014 21:45:53.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:56.986" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:45:56.986" starttime="20201014 21:45:56.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:56.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:56.987" starttime="20201014 21:45:56.986"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:56.987" starttime="20201014 21:45:53.199"></status>
</kw>
<msg timestamp="20201014 21:45:56.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:56.987" starttime="20201014 21:45:53.199"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:56.987" starttime="20201014 21:45:53.198"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:56.991" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:45:56.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:45:56.995" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:45:56.995" starttime="20201014 21:45:56.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:45:56.996" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:45:56.996" starttime="20201014 21:45:56.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:45:56.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:45:56.997" starttime="20201014 21:45:56.996"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:56.997" starttime="20201014 21:45:56.989"></status>
</kw>
<msg timestamp="20201014 21:45:56.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:45:56.997" starttime="20201014 21:45:56.988"></status>
</kw>
<status status="PASS" endtime="20201014 21:45:56.998" starttime="20201014 21:45:56.988"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:45:57.002" level="INFO">Running command 'ozone sh key put -t RATIS /03676-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:01.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:01.411" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:01.411" starttime="20201014 21:45:56.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:01.413" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:01.413" starttime="20201014 21:46:01.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:01.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:01.413" starttime="20201014 21:46:01.413"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:01.414" starttime="20201014 21:45:56.999"></status>
</kw>
<msg timestamp="20201014 21:46:01.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:01.414" starttime="20201014 21:45:56.998"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:01.414" starttime="20201014 21:45:56.998"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:01.419" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:01.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:01.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:01.420" starttime="20201014 21:46:01.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:01.421" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:01.421" starttime="20201014 21:46:01.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:01.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:01.421" starttime="20201014 21:46:01.421"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:01.422" starttime="20201014 21:46:01.415"></status>
</kw>
<msg timestamp="20201014 21:46:01.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:01.422" starttime="20201014 21:46:01.415"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:01.422" starttime="20201014 21:46:01.414"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:01.427" level="INFO">Running command 'ozone sh key get /03676-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:05.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:05.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:05.423" starttime="20201014 21:46:01.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:05.424" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:05.424" starttime="20201014 21:46:05.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:05.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:05.425" starttime="20201014 21:46:05.424"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:05.425" starttime="20201014 21:46:01.423"></status>
</kw>
<msg timestamp="20201014 21:46:05.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:05.425" starttime="20201014 21:46:01.423"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:05.425" starttime="20201014 21:46:01.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:05.431" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:05.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:05.432" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:05.432" starttime="20201014 21:46:05.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:05.433" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:05.433" starttime="20201014 21:46:05.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:05.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:05.434" starttime="20201014 21:46:05.433"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:05.434" starttime="20201014 21:46:05.427"></status>
</kw>
<msg timestamp="20201014 21:46:05.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:05.434" starttime="20201014 21:46:05.426"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:05.435" starttime="20201014 21:46:05.426"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:05.439" level="INFO">Running command 'ozone sh key info /03676-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:07.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:07.772" level="INFO">${output} = {
  "volumeName": "03676-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-14T21:45:59.201Z",
  "modificationTime": "2020-10-14T21:46:00.944Z",
...</msg>
<status status="PASS" endtime="20201014 21:46:07.772" starttime="20201014 21:46:05.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:07.773" level="INFO">{
  "volumeName": "03676-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-14T21:45:59.201Z",
  "modificationTime": "2020-10-14T21:46:00.944Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 105035330958065660,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201014 21:46:07.773" starttime="20201014 21:46:07.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:07.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:07.774" starttime="20201014 21:46:07.773"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:07.774" starttime="20201014 21:46:05.436"></status>
</kw>
<msg timestamp="20201014 21:46:07.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:07.774" starttime="20201014 21:46:05.436"></status>
</kw>
<msg timestamp="20201014 21:46:07.774" level="INFO">${result} = {
  "volumeName": "03676-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-10-14T21:45:59.201Z",
  "modificationTime": "2020-10-14T21:46:00.944Z",
...</msg>
<status status="PASS" endtime="20201014 21:46:07.774" starttime="20201014 21:46:05.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:07.775" starttime="20201014 21:46:07.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:07.780" level="INFO">Running command 'ozone sh key delete /03676-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:09.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:09.976" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:09.976" starttime="20201014 21:46:07.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:09.977" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:09.977" starttime="20201014 21:46:09.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:09.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:09.978" starttime="20201014 21:46:09.978"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:09.978" starttime="20201014 21:46:07.776"></status>
</kw>
<msg timestamp="20201014 21:46:09.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:09.979" starttime="20201014 21:46:07.776"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:09.979" starttime="20201014 21:46:07.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:09.983" level="INFO">Running command 'ozone sh key cp /03676-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:14.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:14.669" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:14.670" starttime="20201014 21:46:09.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:14.671" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:14.671" starttime="20201014 21:46:14.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:14.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:14.671" starttime="20201014 21:46:14.671"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:14.672" starttime="20201014 21:46:09.980"></status>
</kw>
<msg timestamp="20201014 21:46:14.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:14.672" starttime="20201014 21:46:09.980"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:14.672" starttime="20201014 21:46:09.979"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:14.678" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:14.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:14.680" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:14.680" starttime="20201014 21:46:14.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:14.682" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:14.682" starttime="20201014 21:46:14.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:14.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:14.683" starttime="20201014 21:46:14.682"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:14.683" starttime="20201014 21:46:14.674"></status>
</kw>
<msg timestamp="20201014 21:46:14.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:14.683" starttime="20201014 21:46:14.673"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:14.683" starttime="20201014 21:46:14.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:14.687" level="INFO">Running command 'ozone sh key get /03676-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:18.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:18.765" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:18.765" starttime="20201014 21:46:14.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:18.766" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:18.766" starttime="20201014 21:46:18.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:18.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:18.767" starttime="20201014 21:46:18.766"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:18.767" starttime="20201014 21:46:14.684"></status>
</kw>
<msg timestamp="20201014 21:46:18.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:18.767" starttime="20201014 21:46:14.684"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:18.768" starttime="20201014 21:46:14.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:18.772" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:18.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:18.774" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:18.774" starttime="20201014 21:46:18.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:18.775" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:18.775" starttime="20201014 21:46:18.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:18.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:18.776" starttime="20201014 21:46:18.775"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:18.776" starttime="20201014 21:46:18.769"></status>
</kw>
<msg timestamp="20201014 21:46:18.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:18.776" starttime="20201014 21:46:18.768"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:18.776" starttime="20201014 21:46:18.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:18.780" level="INFO">Running command 'ozone sh key delete /03676-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:20.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:20.919" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:20.919" starttime="20201014 21:46:18.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:20.920" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:20.921" starttime="20201014 21:46:20.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:20.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:20.921" starttime="20201014 21:46:20.921"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:20.922" starttime="20201014 21:46:18.777"></status>
</kw>
<msg timestamp="20201014 21:46:20.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:20.922" starttime="20201014 21:46:18.777"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:20.922" starttime="20201014 21:46:18.776"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:20.925" level="INFO">Running command 'ozone sh key get /03676-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:23.064" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 21:46:23.064" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201014 21:46:23.065" starttime="20201014 21:46:20.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:23.066" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201014 21:46:23.066" starttime="20201014 21:46:23.065"></status>
</kw>
<msg timestamp="20201014 21:46:23.066" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20201014 21:46:23.066" starttime="20201014 21:46:20.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:23.067" starttime="20201014 21:46:23.066"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:23.071" level="INFO">Running command 'ozone sh key get --force /03676-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:26.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:26.985" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:26.985" starttime="20201014 21:46:23.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:26.986" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:26.986" starttime="20201014 21:46:26.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:26.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:26.986" starttime="20201014 21:46:26.986"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:26.987" starttime="20201014 21:46:23.068"></status>
</kw>
<msg timestamp="20201014 21:46:26.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:26.987" starttime="20201014 21:46:23.068"></status>
</kw>
<msg timestamp="20201014 21:46:26.987" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201014 21:46:26.987" starttime="20201014 21:46:23.067"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:26.987" starttime="20201014 21:46:26.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:26.992" level="INFO">Running command 'ozone sh key info /03676-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:29.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:29.185" level="INFO">${output} = {
  "volumeName": "03676-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-14T21:45:49.579Z",
  "modificationTime": "2020-10-14T21:45:52.686Z",
  "rep...</msg>
<status status="PASS" endtime="20201014 21:46:29.185" starttime="20201014 21:46:26.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:29.187" level="INFO">{
  "volumeName": "03676-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-14T21:45:49.579Z",
  "modificationTime": "2020-10-14T21:45:52.686Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 105035330324856830,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20201014 21:46:29.187" starttime="20201014 21:46:29.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:29.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:29.187" starttime="20201014 21:46:29.187"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:29.188" starttime="20201014 21:46:26.989"></status>
</kw>
<msg timestamp="20201014 21:46:29.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:29.188" starttime="20201014 21:46:26.988"></status>
</kw>
<msg timestamp="20201014 21:46:29.188" level="INFO">${result} = {
  "volumeName": "03676-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-10-14T21:45:49.579Z",
  "modificationTime": "2020-10-14T21:45:52.686Z",
  "rep...</msg>
<status status="PASS" endtime="20201014 21:46:29.188" starttime="20201014 21:46:26.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:29.189" starttime="20201014 21:46:29.188"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:29.193" level="INFO">Running command 'ozone sh key list /03676-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:31.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:31.535" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201014 21:46:31.535" starttime="20201014 21:46:29.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:31.536" level="INFO">key1</msg>
<status status="PASS" endtime="20201014 21:46:31.536" starttime="20201014 21:46:31.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:31.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:31.537" starttime="20201014 21:46:31.536"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:31.537" starttime="20201014 21:46:29.190"></status>
</kw>
<msg timestamp="20201014 21:46:31.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:31.537" starttime="20201014 21:46:29.190"></status>
</kw>
<msg timestamp="20201014 21:46:31.538" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20201014 21:46:31.538" starttime="20201014 21:46:29.189"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:31.538" starttime="20201014 21:46:31.538"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:31.542" level="INFO">Running command 'ozone sh key rename /03676-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:33.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:33.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:33.724" starttime="20201014 21:46:31.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:33.725" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:33.725" starttime="20201014 21:46:33.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:33.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:33.726" starttime="20201014 21:46:33.725"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:33.726" starttime="20201014 21:46:31.539"></status>
</kw>
<msg timestamp="20201014 21:46:33.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:33.726" starttime="20201014 21:46:31.539"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:33.727" starttime="20201014 21:46:31.538"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:33.731" level="INFO">Running command 'ozone sh key list /03676-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:36.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:36.171" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20201014 21:46:36.171" starttime="20201014 21:46:33.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:36.172" level="INFO">key2</msg>
<status status="PASS" endtime="20201014 21:46:36.172" starttime="20201014 21:46:36.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:36.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:36.173" starttime="20201014 21:46:36.172"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:36.173" starttime="20201014 21:46:33.728"></status>
</kw>
<msg timestamp="20201014 21:46:36.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:36.173" starttime="20201014 21:46:33.727"></status>
</kw>
<msg timestamp="20201014 21:46:36.173" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20201014 21:46:36.173" starttime="20201014 21:46:33.727"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:36.174" starttime="20201014 21:46:36.173"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:36.179" level="INFO">Running command 'ozone sh key delete /03676-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:38.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:38.309" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:38.309" starttime="20201014 21:46:36.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:38.310" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:38.310" starttime="20201014 21:46:38.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:38.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:38.311" starttime="20201014 21:46:38.310"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:38.311" starttime="20201014 21:46:36.175"></status>
</kw>
<msg timestamp="20201014 21:46:38.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:38.312" starttime="20201014 21:46:36.175"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:38.312" starttime="20201014 21:46:36.174"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:38.312" starttime="20201014 21:45:47.473"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:38.312" starttime="20201014 21:45:47.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:38.315" level="INFO">Running command 'ozone sh bucket clrquota --space-quota /03676-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:40.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:40.451" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:40.451" starttime="20201014 21:46:38.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:40.452" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:40.452" starttime="20201014 21:46:40.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:40.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:40.453" starttime="20201014 21:46:40.452"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:40.453" starttime="20201014 21:46:38.313"></status>
</kw>
<msg timestamp="20201014 21:46:40.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:40.454" starttime="20201014 21:46:38.313"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:40.454" starttime="20201014 21:46:38.312"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:40.459" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:42.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:42.844" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:46:42.844" starttime="20201014 21:46:40.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:42.845" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:46:42.845" starttime="20201014 21:46:42.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:42.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:42.846" starttime="20201014 21:46:42.845"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:42.846" starttime="20201014 21:46:40.455"></status>
</kw>
<msg timestamp="20201014 21:46:42.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:42.846" starttime="20201014 21:46:40.455"></status>
</kw>
<msg timestamp="20201014 21:46:42.846" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:46:42.846" starttime="20201014 21:46:40.454"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:42.847" starttime="20201014 21:46:42.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket clrquota --count-quota ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:42.852" level="INFO">Running command 'ozone sh bucket clrquota --count-quota /03676-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:44.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:44.828" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:44.828" starttime="20201014 21:46:42.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:44.829" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:44.829" starttime="20201014 21:46:44.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:44.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:44.830" starttime="20201014 21:46:44.829"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:44.830" starttime="20201014 21:46:42.848"></status>
</kw>
<msg timestamp="20201014 21:46:44.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:44.830" starttime="20201014 21:46:42.848"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:44.831" starttime="20201014 21:46:42.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:44.835" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:47.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:47.303" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:46:47.303" starttime="20201014 21:46:44.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:47.304" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:46:47.304" starttime="20201014 21:46:47.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:47.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:47.305" starttime="20201014 21:46:47.304"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:47.305" starttime="20201014 21:46:44.832"></status>
</kw>
<msg timestamp="20201014 21:46:47.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:47.305" starttime="20201014 21:46:44.831"></status>
</kw>
<msg timestamp="20201014 21:46:47.306" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:46:47.306" starttime="20201014 21:46:44.831"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:47.306" starttime="20201014 21:46:47.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:47.310" level="INFO">Running command 'ozone sh volume clrquota --space-quota /03676-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:49.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:49.464" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:49.464" starttime="20201014 21:46:47.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:49.465" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:49.465" starttime="20201014 21:46:49.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:49.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:49.466" starttime="20201014 21:46:49.465"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:49.466" starttime="20201014 21:46:47.307"></status>
</kw>
<msg timestamp="20201014 21:46:49.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:49.466" starttime="20201014 21:46:47.307"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:49.467" starttime="20201014 21:46:47.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:49.472" level="INFO">Running command 'ozone sh volume info /03676-rpcbasic | jq -r '. | select(.name=="03676-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:51.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:51.726" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:46:51.726" starttime="20201014 21:46:49.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:51.727" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:46:51.727" starttime="20201014 21:46:51.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:51.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:51.728" starttime="20201014 21:46:51.727"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:51.728" starttime="20201014 21:46:49.468"></status>
</kw>
<msg timestamp="20201014 21:46:51.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:51.728" starttime="20201014 21:46:49.468"></status>
</kw>
<msg timestamp="20201014 21:46:51.729" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:46:51.729" starttime="20201014 21:46:49.467"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:51.729" starttime="20201014 21:46:51.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume clrquota --count-quota ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:51.733" level="INFO">Running command 'ozone sh volume clrquota --count-quota /03676-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:53.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:53.955" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:53.955" starttime="20201014 21:46:51.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:53.956" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:53.956" starttime="20201014 21:46:53.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:53.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:53.957" starttime="20201014 21:46:53.957"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:53.958" starttime="20201014 21:46:51.730"></status>
</kw>
<msg timestamp="20201014 21:46:53.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:53.958" starttime="20201014 21:46:51.730"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:53.958" starttime="20201014 21:46:51.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:53.963" level="INFO">Running command 'ozone sh volume info /03676-rpcbasic | jq -r '. | select(.name=="03676-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:56.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:56.110" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:46:56.110" starttime="20201014 21:46:53.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:56.111" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:46:56.111" starttime="20201014 21:46:56.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:56.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:56.112" starttime="20201014 21:46:56.111"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:56.112" starttime="20201014 21:46:53.959"></status>
</kw>
<msg timestamp="20201014 21:46:56.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:56.112" starttime="20201014 21:46:53.959"></status>
</kw>
<msg timestamp="20201014 21:46:56.112" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:46:56.112" starttime="20201014 21:46:53.958"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:46:56.113" starttime="20201014 21:46:56.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:56.117" level="INFO">Running command 'ozone sh bucket delete /03676-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:46:58.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:46:58.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:46:58.403" starttime="20201014 21:46:56.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:46:58.404" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:46:58.404" starttime="20201014 21:46:58.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:46:58.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:46:58.405" starttime="20201014 21:46:58.405"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:58.405" starttime="20201014 21:46:56.114"></status>
</kw>
<msg timestamp="20201014 21:46:58.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:46:58.406" starttime="20201014 21:46:56.114"></status>
</kw>
<status status="PASS" endtime="20201014 21:46:58.406" starttime="20201014 21:46:56.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:46:58.411" level="INFO">Running command 'ozone sh volume delete /03676-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:00.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:00.472" level="INFO">${output} = Volume 03676-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201014 21:47:00.472" starttime="20201014 21:46:58.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:00.473" level="INFO">Volume 03676-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201014 21:47:00.473" starttime="20201014 21:47:00.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:00.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:00.474" starttime="20201014 21:47:00.473"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:00.474" starttime="20201014 21:46:58.407"></status>
</kw>
<msg timestamp="20201014 21:47:00.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:00.474" starttime="20201014 21:46:58.407"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:00.475" starttime="20201014 21:46:58.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:00.479" level="INFO">Running command 'ozone sh volume create /03676-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:02.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:02.656" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:47:02.656" starttime="20201014 21:47:00.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:02.657" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:47:02.657" starttime="20201014 21:47:02.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:02.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:02.658" starttime="20201014 21:47:02.657"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:02.658" starttime="20201014 21:47:00.476"></status>
</kw>
<msg timestamp="20201014 21:47:02.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:02.658" starttime="20201014 21:47:00.475"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:02.659" starttime="20201014 21:47:00.475"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:02.663" level="INFO">Running command 'ozone sh volume info /03676-rpcbasic | jq -r '. | select(.name=="03676-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:04.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:04.820" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:47:04.820" starttime="20201014 21:47:02.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:04.821" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:47:04.822" starttime="20201014 21:47:04.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:04.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:04.822" starttime="20201014 21:47:04.822"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:04.823" starttime="20201014 21:47:02.660"></status>
</kw>
<msg timestamp="20201014 21:47:04.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:04.823" starttime="20201014 21:47:02.660"></status>
</kw>
<msg timestamp="20201014 21:47:04.823" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:47:04.823" starttime="20201014 21:47:02.659"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:47:04.824" starttime="20201014 21:47:04.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:04.827" level="INFO">Running command 'ozone sh volume info /03676-rpcbasic | jq -r '. | select(.name=="03676-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:07.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:07.097" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:47:07.097" starttime="20201014 21:47:04.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:07.099" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:47:07.099" starttime="20201014 21:47:07.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:07.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:07.100" starttime="20201014 21:47:07.099"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:07.100" starttime="20201014 21:47:04.825"></status>
</kw>
<msg timestamp="20201014 21:47:07.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:07.100" starttime="20201014 21:47:04.824"></status>
</kw>
<msg timestamp="20201014 21:47:07.100" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:47:07.100" starttime="20201014 21:47:04.824"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:47:07.101" starttime="20201014 21:47:07.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:07.106" level="INFO">Running command 'ozone sh bucket create /03676-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:09.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:09.295" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:47:09.295" starttime="20201014 21:47:07.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:09.303" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:47:09.303" starttime="20201014 21:47:09.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:09.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:09.304" starttime="20201014 21:47:09.303"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:09.304" starttime="20201014 21:47:07.102"></status>
</kw>
<msg timestamp="20201014 21:47:09.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:09.304" starttime="20201014 21:47:07.102"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:09.305" starttime="20201014 21:47:07.101"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:09.309" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:11.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:11.553" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:47:11.553" starttime="20201014 21:47:09.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:11.554" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:47:11.554" starttime="20201014 21:47:11.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:11.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:11.555" starttime="20201014 21:47:11.554"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:11.555" starttime="20201014 21:47:09.306"></status>
</kw>
<msg timestamp="20201014 21:47:11.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:11.555" starttime="20201014 21:47:09.306"></status>
</kw>
<msg timestamp="20201014 21:47:11.556" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:47:11.556" starttime="20201014 21:47:09.305"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:47:11.556" starttime="20201014 21:47:11.556"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:11.560" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:13.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:13.683" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:47:13.683" starttime="20201014 21:47:11.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:13.684" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:47:13.684" starttime="20201014 21:47:13.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:13.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:13.685" starttime="20201014 21:47:13.685"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:13.685" starttime="20201014 21:47:11.557"></status>
</kw>
<msg timestamp="20201014 21:47:13.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:13.686" starttime="20201014 21:47:11.557"></status>
</kw>
<msg timestamp="20201014 21:47:13.686" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:47:13.686" starttime="20201014 21:47:11.556"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:47:13.687" starttime="20201014 21:47:13.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:13.691" level="INFO">Running command 'ozone sh volume setquota /03676-rpcbasic --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:15.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:15.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:47:15.710" starttime="20201014 21:47:13.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:15.711" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:47:15.712" starttime="20201014 21:47:15.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:15.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:15.712" starttime="20201014 21:47:15.712"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:15.712" starttime="20201014 21:47:13.688"></status>
</kw>
<msg timestamp="20201014 21:47:15.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:15.713" starttime="20201014 21:47:13.687"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:15.713" starttime="20201014 21:47:13.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:15.717" level="INFO">Running command 'ozone sh volume info /03676-rpcbasic | jq -r '. | select(.name=="03676-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:18.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:18.092" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:47:18.092" starttime="20201014 21:47:15.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:18.093" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:47:18.093" starttime="20201014 21:47:18.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:18.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:18.094" starttime="20201014 21:47:18.094"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:18.095" starttime="20201014 21:47:15.714"></status>
</kw>
<msg timestamp="20201014 21:47:18.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:18.095" starttime="20201014 21:47:15.714"></status>
</kw>
<msg timestamp="20201014 21:47:18.095" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:47:18.095" starttime="20201014 21:47:15.713"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:47:18.096" starttime="20201014 21:47:18.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:18.100" level="INFO">Running command 'ozone sh volume info /03676-rpcbasic | jq -r '. | select(.name=="03676-rpcbasic") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:20.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:20.235" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:47:20.235" starttime="20201014 21:47:18.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:20.236" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:47:20.236" starttime="20201014 21:47:20.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:20.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:20.237" starttime="20201014 21:47:20.236"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:20.237" starttime="20201014 21:47:18.097"></status>
</kw>
<msg timestamp="20201014 21:47:20.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:20.237" starttime="20201014 21:47:18.097"></status>
</kw>
<msg timestamp="20201014 21:47:20.237" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:47:20.237" starttime="20201014 21:47:18.096"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:47:20.238" starttime="20201014 21:47:20.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 0TB --count-quota 0</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:20.242" level="INFO">Running command 'ozone sh bucket setquota /03676-rpcbasic/bb1 --space-quota 0TB --count-quota 0 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:22.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:22.231" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:47:22.231" starttime="20201014 21:47:20.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:22.232" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:47:22.232" starttime="20201014 21:47:22.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:22.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:22.233" starttime="20201014 21:47:22.232"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:22.233" starttime="20201014 21:47:20.239"></status>
</kw>
<msg timestamp="20201014 21:47:22.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:22.233" starttime="20201014 21:47:20.239"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:22.234" starttime="20201014 21:47:20.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:22.238" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:24.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:24.437" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:47:24.437" starttime="20201014 21:47:22.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:24.438" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:47:24.438" starttime="20201014 21:47:24.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:24.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:24.439" starttime="20201014 21:47:24.438"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:24.439" starttime="20201014 21:47:22.235"></status>
</kw>
<msg timestamp="20201014 21:47:24.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:24.439" starttime="20201014 21:47:22.235"></status>
</kw>
<msg timestamp="20201014 21:47:24.439" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:47:24.439" starttime="20201014 21:47:22.234"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:47:24.440" starttime="20201014 21:47:24.440"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:24.444" level="INFO">Running command 'ozone sh bucket info /03676-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInCounts' 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:26.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:26.687" level="INFO">${output} = -1</msg>
<status status="PASS" endtime="20201014 21:47:26.687" starttime="20201014 21:47:24.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:26.688" level="INFO">-1</msg>
<status status="PASS" endtime="20201014 21:47:26.688" starttime="20201014 21:47:26.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:26.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:26.689" starttime="20201014 21:47:26.688"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:26.689" starttime="20201014 21:47:24.441"></status>
</kw>
<msg timestamp="20201014 21:47:26.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:26.689" starttime="20201014 21:47:24.441"></status>
</kw>
<msg timestamp="20201014 21:47:26.689" level="INFO">${result} = -1</msg>
<status status="PASS" endtime="20201014 21:47:26.689" starttime="20201014 21:47:24.440"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>-1</arg>
</arguments>
<status status="PASS" endtime="20201014 21:47:26.690" starttime="20201014 21:47:26.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:26.695" level="INFO">Running command 'ozone sh bucket delete /03676-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:28.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:28.670" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:47:28.670" starttime="20201014 21:47:26.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:28.671" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:47:28.671" starttime="20201014 21:47:28.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:28.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:28.672" starttime="20201014 21:47:28.672"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:28.672" starttime="20201014 21:47:26.691"></status>
</kw>
<msg timestamp="20201014 21:47:28.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:28.673" starttime="20201014 21:47:26.691"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:28.673" starttime="20201014 21:47:26.690"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:47:28.677" level="INFO">Running command 'ozone sh volume delete /03676-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:47:30.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:47:30.446" level="INFO">${output} = Volume 03676-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201014 21:47:30.447" starttime="20201014 21:47:28.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:47:30.448" level="INFO">Volume 03676-rpcbasic is deleted</msg>
<status status="PASS" endtime="20201014 21:47:30.448" starttime="20201014 21:47:30.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:47:30.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:47:30.448" starttime="20201014 21:47:30.448"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:30.449" starttime="20201014 21:47:28.674"></status>
</kw>
<msg timestamp="20201014 21:47:30.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:47:30.449" starttime="20201014 21:47:28.673"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:30.449" starttime="20201014 21:47:28.673"></status>
</kw>
<status status="PASS" endtime="20201014 21:47:30.449" starttime="20201014 21:45:11.423"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 21:47:30.449" critical="yes" starttime="20201014 21:45:11.421"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20201014 21:47:30.451" starttime="20201014 21:45:11.252"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
