<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201014 22:02:01.857" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:48:50.469" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:48:52.835" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 21:48:52.835" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 21:48:52.835" starttime="20201014 21:48:50.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:48:52.836" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 21:48:52.836" starttime="20201014 21:48:52.836"></status>
</kw>
<msg timestamp="20201014 21:48:52.837" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 21:48:52.837" starttime="20201014 21:48:50.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:48:52.844" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:48:54.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:48:54.929" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:48:54.929" starttime="20201014 21:48:52.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:48:54.931" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:48:54.931" starttime="20201014 21:48:54.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:48:54.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:48:54.931" starttime="20201014 21:48:54.931"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:54.932" starttime="20201014 21:48:52.839"></status>
</kw>
<msg timestamp="20201014 21:48:54.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:48:54.932" starttime="20201014 21:48:52.838"></status>
</kw>
<msg timestamp="20201014 21:48:54.932" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201014 21:48:54.932" starttime="20201014 21:48:52.838"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201014 21:48:54.932" starttime="20201014 21:48:54.932"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:54.933" starttime="20201014 21:48:52.837"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:54.933" starttime="20201014 21:48:52.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:48:54.937" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:48:56.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:48:56.851" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:48:56.851" starttime="20201014 21:48:54.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:48:56.852" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:48:56.852" starttime="20201014 21:48:56.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:48:56.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:48:56.853" starttime="20201014 21:48:56.852"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:56.853" starttime="20201014 21:48:54.934"></status>
</kw>
<msg timestamp="20201014 21:48:56.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:48:56.853" starttime="20201014 21:48:54.934"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:56.854" starttime="20201014 21:48:54.934"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:56.854" starttime="20201014 21:48:54.933"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:56.854" starttime="20201014 21:48:54.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201014 21:48:56.854" starttime="20201014 21:48:56.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:48:56.858" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:48:59.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:48:59.055" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T21:48:56.828Z",
  "modificat...</msg>
<status status="PASS" endtime="20201014 21:48:59.055" starttime="20201014 21:48:56.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:48:59.056" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T21:48:56.828Z",
  "modificationTime" : "2020-10-14T21:48:56.828Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201014 21:48:59.056" starttime="20201014 21:48:59.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:48:59.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:48:59.057" starttime="20201014 21:48:59.057"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:59.058" starttime="20201014 21:48:56.856"></status>
</kw>
<msg timestamp="20201014 21:48:59.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:48:59.059" starttime="20201014 21:48:56.855"></status>
</kw>
<msg timestamp="20201014 21:48:59.059" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T21:48:56.828Z",
  "modificat...</msg>
<status status="PASS" endtime="20201014 21:48:59.059" starttime="20201014 21:48:56.854"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201014 21:48:59.060" starttime="20201014 21:48:59.059"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:48:59.064" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:48:59.064" starttime="20201014 21:48:59.063"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:48:59.064" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:48:59.064" starttime="20201014 21:48:59.064"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:59.065" starttime="20201014 21:48:59.063"></status>
</kw>
<msg timestamp="20201014 21:48:59.065" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:48:59.065" starttime="20201014 21:48:59.062"></status>
</kw>
<status status="PASS" endtime="20201014 21:48:59.065" starttime="20201014 21:48:59.062"></status>
</kw>
<msg timestamp="20201014 21:48:59.065" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201014 21:48:59.065" starttime="20201014 21:48:59.061"></status>
</kw>
<msg timestamp="20201014 21:48:59.065" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201014 21:48:59.065" starttime="20201014 21:48:59.060"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:48:59.069" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:49:01.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:49:01.202" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:49:01.202" starttime="20201014 21:48:59.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:49:01.203" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:49:01.203" starttime="20201014 21:49:01.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:49:01.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:49:01.204" starttime="20201014 21:49:01.203"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:01.204" starttime="20201014 21:48:59.066"></status>
</kw>
<msg timestamp="20201014 21:49:01.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:49:01.204" starttime="20201014 21:48:59.066"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:01.204" starttime="20201014 21:48:59.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:49:01.209" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:49:06.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:49:06.487" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:49:06.487" starttime="20201014 21:49:01.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:49:06.488" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:49:06.488" starttime="20201014 21:49:06.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:49:06.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:49:06.489" starttime="20201014 21:49:06.488"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:06.489" starttime="20201014 21:49:01.206"></status>
</kw>
<msg timestamp="20201014 21:49:06.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:49:06.489" starttime="20201014 21:49:01.205"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:06.490" starttime="20201014 21:49:01.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:49:06.493" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:49:10.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:49:10.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:49:10.342" starttime="20201014 21:49:06.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:49:10.343" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:49:10.343" starttime="20201014 21:49:10.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:49:10.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:49:10.344" starttime="20201014 21:49:10.343"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:10.344" starttime="20201014 21:49:06.491"></status>
</kw>
<msg timestamp="20201014 21:49:10.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:49:10.344" starttime="20201014 21:49:06.490"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:10.344" starttime="20201014 21:49:06.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:49:10.348" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:49:14.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:49:14.269" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:49:14.269" starttime="20201014 21:49:10.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:49:14.270" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:49:14.270" starttime="20201014 21:49:14.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:49:14.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:49:14.271" starttime="20201014 21:49:14.271"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:14.271" starttime="20201014 21:49:10.345"></status>
</kw>
<msg timestamp="20201014 21:49:14.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:49:14.272" starttime="20201014 21:49:10.345"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:14.272" starttime="20201014 21:49:10.345"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 21:49:14.272" critical="yes" starttime="20201014 21:48:50.463"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:49:14.278" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:49:14.278" starttime="20201014 21:49:14.277"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:49:14.278" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:49:14.278" starttime="20201014 21:49:14.278"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:14.279" starttime="20201014 21:49:14.277"></status>
</kw>
<msg timestamp="20201014 21:49:14.279" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:49:14.279" starttime="20201014 21:49:14.276"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:14.279" starttime="20201014 21:49:14.276"></status>
</kw>
<msg timestamp="20201014 21:49:14.279" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 21:49:14.279" starttime="20201014 21:49:14.275"></status>
</kw>
<msg timestamp="20201014 21:49:14.280" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 21:49:14.280" starttime="20201014 21:49:14.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:49:14.283" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:49:16.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:49:16.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:49:16.400" starttime="20201014 21:49:14.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:49:16.401" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:49:16.401" starttime="20201014 21:49:16.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:49:16.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:49:16.402" starttime="20201014 21:49:16.401"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:16.402" starttime="20201014 21:49:14.280"></status>
</kw>
<msg timestamp="20201014 21:49:16.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:49:16.402" starttime="20201014 21:49:14.280"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:16.402" starttime="20201014 21:49:14.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:49:16.406" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:49:18.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:49:18.575" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:49:18.575" starttime="20201014 21:49:16.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:49:18.576" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:49:18.576" starttime="20201014 21:49:18.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:49:18.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:49:18.577" starttime="20201014 21:49:18.577"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:18.577" starttime="20201014 21:49:16.403"></status>
</kw>
<msg timestamp="20201014 21:49:18.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:49:18.578" starttime="20201014 21:49:16.403"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:18.578" starttime="20201014 21:49:16.402"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 21:49:18.578" critical="yes" starttime="20201014 21:49:14.273"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201014 21:49:18.579" starttime="20201014 21:48:50.412"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:50:55.092" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:50:55.092" starttime="20201014 21:50:55.092"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:50:55.093" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:50:55.093" starttime="20201014 21:50:55.092"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:55.093" starttime="20201014 21:50:55.091"></status>
</kw>
<msg timestamp="20201014 21:50:55.093" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:50:55.093" starttime="20201014 21:50:55.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:50:55.094" starttime="20201014 21:50:55.093"></status>
</kw>
<msg timestamp="20201014 21:50:55.094" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 21:50:55.094" starttime="20201014 21:50:55.093"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:55.094" starttime="20201014 21:50:55.090"></status>
</kw>
<msg timestamp="20201014 21:50:55.094" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:50:55.094" starttime="20201014 21:50:55.090"></status>
</kw>
<msg timestamp="20201014 21:50:55.094" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:50:55.094" starttime="20201014 21:50:55.088"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:50:55.095" level="INFO">${random} = 24293</msg>
<status status="PASS" endtime="20201014 21:50:55.095" starttime="20201014 21:50:55.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:50:55.102" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-24293 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:51:00.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:51:00.885" level="INFO">${output} = 2020-10-14 21:50:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:50:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 ...</msg>
<status status="PASS" endtime="20201014 21:51:00.885" starttime="20201014 21:50:55.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:51:00.887" level="INFO">2020-10-14 21:50:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:50:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 21:50:57 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-14 21:50:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:50:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-95824A3E0EED-&gt;24cbb549-0690-42c0-aa18-f6941416f8a5
2020-10-14 21:50:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201014 21:51:00.887" starttime="20201014 21:51:00.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:51:00.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:51:00.887" starttime="20201014 21:51:00.887"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:00.888" starttime="20201014 21:50:55.096"></status>
</kw>
<msg timestamp="20201014 21:51:00.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:51:00.888" starttime="20201014 21:50:55.096"></status>
</kw>
<msg timestamp="20201014 21:51:00.888" level="INFO">${result} = 2020-10-14 21:50:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:50:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 ...</msg>
<status status="PASS" endtime="20201014 21:51:00.888" starttime="20201014 21:50:55.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:51:00.892" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:51:02.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:51:02.770" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:49 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-14 21:51 ofs://om/volume1/bucket1/ozone-24293
-rw-...</msg>
<status status="PASS" endtime="20201014 21:51:02.771" starttime="20201014 21:51:00.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:51:02.772" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:49 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-14 21:51 ofs://om/volume1/bucket1/ozone-24293
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-14 21:49 ofs://om/volume1/bucket1/ozone-90262
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:49 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:50 ofs://om/volume1/bucket1/wordcount-39.txt</msg>
<status status="PASS" endtime="20201014 21:51:02.772" starttime="20201014 21:51:02.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:51:02.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:51:02.773" starttime="20201014 21:51:02.772"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:02.773" starttime="20201014 21:51:00.889"></status>
</kw>
<msg timestamp="20201014 21:51:02.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:51:02.773" starttime="20201014 21:51:00.889"></status>
</kw>
<msg timestamp="20201014 21:51:02.774" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:49 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-14 21:51 ofs://om/volume1/bucket1/ozone-24293
-rw-...</msg>
<status status="PASS" endtime="20201014 21:51:02.774" starttime="20201014 21:51:00.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:51:02.774" starttime="20201014 21:51:02.774"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 21:51:02.775" critical="yes" starttime="20201014 21:50:55.088"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201014 21:51:02.776" starttime="20201014 21:50:55.040"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:49:23.305" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:49:23.305" starttime="20201014 21:49:23.305"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:49:23.306" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:49:23.306" starttime="20201014 21:49:23.305"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:23.306" starttime="20201014 21:49:23.304"></status>
</kw>
<msg timestamp="20201014 21:49:23.306" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:49:23.306" starttime="20201014 21:49:23.304"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:23.306" starttime="20201014 21:49:23.303"></status>
</kw>
<msg timestamp="20201014 21:49:23.306" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:49:23.306" starttime="20201014 21:49:23.303"></status>
</kw>
<msg timestamp="20201014 21:49:23.306" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:49:23.306" starttime="20201014 21:49:23.301"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:49:23.307" level="INFO">${random} = 90262</msg>
<status status="PASS" endtime="20201014 21:49:23.307" starttime="20201014 21:49:23.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:49:23.313" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-90262 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:49:26.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:49:26.916" level="INFO">${output} = 2020-10-14 21:49:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:49:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 ...</msg>
<status status="PASS" endtime="20201014 21:49:26.916" starttime="20201014 21:49:23.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:49:26.918" level="INFO">2020-10-14 21:49:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:49:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 21:49:25 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-14 21:49:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:49:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-97C86395268B-&gt;24cbb549-0690-42c0-aa18-f6941416f8a5
2020-10-14 21:49:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201014 21:49:26.918" starttime="20201014 21:49:26.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:49:26.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:49:26.918" starttime="20201014 21:49:26.918"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:26.919" starttime="20201014 21:49:23.308"></status>
</kw>
<msg timestamp="20201014 21:49:26.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:49:26.919" starttime="20201014 21:49:23.307"></status>
</kw>
<msg timestamp="20201014 21:49:26.919" level="INFO">${result} = 2020-10-14 21:49:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:49:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 ...</msg>
<status status="PASS" endtime="20201014 21:49:26.919" starttime="20201014 21:49:23.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:49:26.923" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:49:28.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:49:28.840" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:49 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-14 21:49 o3fs://bucket1.volume1.om/ozone-90262
dr...</msg>
<status status="PASS" endtime="20201014 21:49:28.840" starttime="20201014 21:49:26.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:49:28.841" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:49 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-14 21:49 o3fs://bucket1.volume1.om/ozone-90262
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:49 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 21:49:28.841" starttime="20201014 21:49:28.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:49:28.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:49:28.842" starttime="20201014 21:49:28.842"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:28.842" starttime="20201014 21:49:26.920"></status>
</kw>
<msg timestamp="20201014 21:49:28.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:49:28.843" starttime="20201014 21:49:26.920"></status>
</kw>
<msg timestamp="20201014 21:49:28.843" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:49 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-10-14 21:49 o3fs://bucket1.volume1.om/ozone-90262
dr...</msg>
<status status="PASS" endtime="20201014 21:49:28.843" starttime="20201014 21:49:26.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:49:28.843" starttime="20201014 21:49:28.843"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 21:49:28.843" critical="yes" starttime="20201014 21:49:23.301"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201014 21:49:28.845" starttime="20201014 21:49:23.253"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:51:07.710" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:51:07.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:51:07.714" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:51:07.714" starttime="20201014 21:51:07.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:51:07.715" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:51:07.715" starttime="20201014 21:51:07.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:51:07.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:51:07.716" starttime="20201014 21:51:07.715"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:07.716" starttime="20201014 21:51:07.704"></status>
</kw>
<msg timestamp="20201014 21:51:07.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:51:07.716" starttime="20201014 21:51:07.704"></status>
</kw>
<msg timestamp="20201014 21:51:07.716" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:51:07.716" starttime="20201014 21:51:07.703"></status>
</kw>
<msg timestamp="20201014 21:51:07.717" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:51:07.717" starttime="20201014 21:51:07.703"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:51:07.720" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:51:07.720" starttime="20201014 21:51:07.719"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:51:07.720" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:51:07.720" starttime="20201014 21:51:07.720"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:07.721" starttime="20201014 21:51:07.719"></status>
</kw>
<msg timestamp="20201014 21:51:07.721" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:51:07.721" starttime="20201014 21:51:07.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:51:07.722" starttime="20201014 21:51:07.721"></status>
</kw>
<msg timestamp="20201014 21:51:07.722" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 21:51:07.722" starttime="20201014 21:51:07.721"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:07.722" starttime="20201014 21:51:07.718"></status>
</kw>
<msg timestamp="20201014 21:51:07.722" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:51:07.722" starttime="20201014 21:51:07.717"></status>
</kw>
<msg timestamp="20201014 21:51:07.722" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:51:07.722" starttime="20201014 21:51:07.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:51:07.725" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:51:44.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:51:44.470" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:51:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:51:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201014 21:51:44.470" starttime="20201014 21:51:07.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:51:44.471" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:51:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:51:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 21:51:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-14 21:51:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:51:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-98F62C8B9FC4-&gt;24cbb549-0690-42c0-aa18-f6941416f8a5
2020-10-14 21:51:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-14 21:51:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-14 21:51:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 21:51:13 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-14 21:51:14 INFO  JobSubmitter:198 - number of splits:3
2020-10-14 21:51:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602712098099_0003
2020-10-14 21:51:14 INFO  YarnClientImpl:273 - Submitted application application_1602712098099_0003
2020-10-14 21:51:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602712098099_0003/
2020-10-14 21:51:14 INFO  Job:1339 - Running job: job_1602712098099_0003
2020-10-14 21:51:21 INFO  Job:1360 - Job job_1602712098099_0003 running in uber mode : false
2020-10-14 21:51:21 INFO  Job:1367 -  map 0% reduce 0%
2020-10-14 21:51:28 INFO  Job:1367 -  map 33% reduce 0%
2020-10-14 21:51:33 INFO  Job:1367 -  map 67% reduce 0%
2020-10-14 21:51:38 INFO  Job:1367 -  map 100% reduce 0%
2020-10-14 21:51:42 INFO  Job:1367 -  map 100% reduce 100%
2020-10-14 21:51:43 INFO  Job:1378 - Job job_1602712098099_0003 completed successfully
2020-10-14 21:51:43 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614257
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41884
		Total time spent by all reduces in occupied slots (ms)=15040
		Total time spent by all map tasks (ms)=10471
		Total time spent by all reduce tasks (ms)=3760
		Total vcore-milliseconds taken by all map tasks=10471
		Total vcore-milliseconds taken by all reduce tasks=3760
		Total megabyte-milliseconds taken by all map tasks=42889216
		Total megabyte-milliseconds taken by all reduce tasks=15400960
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=664
		CPU time spent (ms)=7370
		Physical memory (bytes) snapshot=1139261440
		Virtual memory (bytes) snapshot=16069881856
		Total committed heap usage (bytes)=1048051712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.476 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201014 21:51:44.471" starttime="20201014 21:51:44.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:51:44.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:51:44.472" starttime="20201014 21:51:44.472"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.472" starttime="20201014 21:51:07.723"></status>
</kw>
<msg timestamp="20201014 21:51:44.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:51:44.473" starttime="20201014 21:51:07.723"></status>
</kw>
<msg timestamp="20201014 21:51:44.473" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:51:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:51:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201014 21:51:44.473" starttime="20201014 21:51:07.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 21:51:44.473" starttime="20201014 21:51:44.473"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 21:51:44.474" critical="yes" starttime="20201014 21:51:07.703"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:51:44.478" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:51:44.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:51:44.484" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:51:44.484" starttime="20201014 21:51:44.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:51:44.485" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:51:44.485" starttime="20201014 21:51:44.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:51:44.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:51:44.486" starttime="20201014 21:51:44.485"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.486" starttime="20201014 21:51:44.476"></status>
</kw>
<msg timestamp="20201014 21:51:44.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:51:44.486" starttime="20201014 21:51:44.475"></status>
</kw>
<msg timestamp="20201014 21:51:44.487" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:51:44.487" starttime="20201014 21:51:44.475"></status>
</kw>
<msg timestamp="20201014 21:51:44.487" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:51:44.487" starttime="20201014 21:51:44.475"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:51:44.487" level="INFO">${random} = 20</msg>
<status status="PASS" endtime="20201014 21:51:44.487" starttime="20201014 21:51:44.487"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:51:44.491" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:51:44.491" starttime="20201014 21:51:44.490"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:51:44.491" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:51:44.491" starttime="20201014 21:51:44.491"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.491" starttime="20201014 21:51:44.490"></status>
</kw>
<msg timestamp="20201014 21:51:44.492" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:51:44.492" starttime="20201014 21:51:44.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:51:44.492" starttime="20201014 21:51:44.492"></status>
</kw>
<msg timestamp="20201014 21:51:44.493" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 21:51:44.493" starttime="20201014 21:51:44.492"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.493" starttime="20201014 21:51:44.489"></status>
</kw>
<msg timestamp="20201014 21:51:44.493" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:51:44.493" starttime="20201014 21:51:44.488"></status>
</kw>
<msg timestamp="20201014 21:51:44.493" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:51:44.493" starttime="20201014 21:51:44.488"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:51:44.496" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:51:44.496" starttime="20201014 21:51:44.496"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:51:44.496" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:51:44.497" starttime="20201014 21:51:44.496"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.497" starttime="20201014 21:51:44.495"></status>
</kw>
<msg timestamp="20201014 21:51:44.497" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:51:44.497" starttime="20201014 21:51:44.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:51:44.498" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201014 21:51:44.498" starttime="20201014 21:51:44.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:51:44.499" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201014 21:51:44.499" starttime="20201014 21:51:44.499"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.499" starttime="20201014 21:51:44.497"></status>
</kw>
<msg timestamp="20201014 21:51:44.499" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201014 21:51:44.499" starttime="20201014 21:51:44.497"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.500" starttime="20201014 21:51:44.494"></status>
</kw>
<msg timestamp="20201014 21:51:44.500" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201014 21:51:44.500" starttime="20201014 21:51:44.494"></status>
</kw>
<msg timestamp="20201014 21:51:44.500" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201014 21:51:44.500" starttime="20201014 21:51:44.493"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:51:44.503" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:51:44.503" starttime="20201014 21:51:44.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:51:44.503" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:51:44.503" starttime="20201014 21:51:44.503"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.504" starttime="20201014 21:51:44.502"></status>
</kw>
<msg timestamp="20201014 21:51:44.504" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:51:44.504" starttime="20201014 21:51:44.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:51:44.505" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201014 21:51:44.505" starttime="20201014 21:51:44.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:51:44.505" level="INFO">${result} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201014 21:51:44.505" starttime="20201014 21:51:44.505"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.506" starttime="20201014 21:51:44.504"></status>
</kw>
<msg timestamp="20201014 21:51:44.506" level="INFO">${path_with_leading} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201014 21:51:44.506" starttime="20201014 21:51:44.504"></status>
</kw>
<status status="PASS" endtime="20201014 21:51:44.506" starttime="20201014 21:51:44.501"></status>
</kw>
<msg timestamp="20201014 21:51:44.506" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201014 21:51:44.506" starttime="20201014 21:51:44.500"></status>
</kw>
<msg timestamp="20201014 21:51:44.506" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201014 21:51:44.506" starttime="20201014 21:51:44.500"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:51:44.509" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-20.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:52:20.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:52:20.017" level="INFO">${output} = 2020-10-14 21:51:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-14 21:51:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201014 21:52:20.017" starttime="20201014 21:51:44.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:52:20.018" level="INFO">2020-10-14 21:51:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-14 21:51:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 21:51:46 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:51:46 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 21:51:46 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-14 21:51:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:51:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D215E26C7520-&gt;24cbb549-0690-42c0-aa18-f6941416f8a5
2020-10-14 21:51:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 21:51:48 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-14 21:51:48 INFO  JobSubmitter:198 - number of splits:3
2020-10-14 21:51:50 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602712098099_0004
2020-10-14 21:51:51 INFO  YarnClientImpl:273 - Submitted application application_1602712098099_0004
2020-10-14 21:51:51 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602712098099_0004/
2020-10-14 21:51:51 INFO  Job:1339 - Running job: job_1602712098099_0004
2020-10-14 21:51:58 INFO  Job:1360 - Job job_1602712098099_0004 running in uber mode : false
2020-10-14 21:51:58 INFO  Job:1367 -  map 0% reduce 0%
2020-10-14 21:52:05 INFO  Job:1367 -  map 33% reduce 0%
2020-10-14 21:52:09 INFO  Job:1367 -  map 67% reduce 0%
2020-10-14 21:52:14 INFO  Job:1367 -  map 100% reduce 0%
2020-10-14 21:52:19 INFO  Job:1367 -  map 100% reduce 100%
2020-10-14 21:52:19 INFO  Job:1378 - Job job_1602712098099_0004 completed successfully
2020-10-14 21:52:19 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=677009
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40956
		Total time spent by all reduces in occupied slots (ms)=14900
		Total time spent by all map tasks (ms)=10239
		Total time spent by all reduce tasks (ms)=3725
		Total vcore-milliseconds taken by all map tasks=10239
		Total vcore-milliseconds taken by all reduce tasks=3725
		Total megabyte-milliseconds taken by all map tasks=41938944
		Total megabyte-milliseconds taken by all reduce tasks=15257600
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=642
		CPU time spent (ms)=7550
		Physical memory (bytes) snapshot=1126518784
		Virtual memory (bytes) snapshot=16052637696
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201014 21:52:20.018" starttime="20201014 21:52:20.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:52:20.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:52:20.019" starttime="20201014 21:52:20.018"></status>
</kw>
<status status="PASS" endtime="20201014 21:52:20.019" starttime="20201014 21:51:44.507"></status>
</kw>
<msg timestamp="20201014 21:52:20.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:52:20.019" starttime="20201014 21:51:44.507"></status>
</kw>
<msg timestamp="20201014 21:52:20.020" level="INFO">${output} = 2020-10-14 21:51:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-14 21:51:46 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201014 21:52:20.020" starttime="20201014 21:51:44.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201014 21:52:20.020" starttime="20201014 21:52:20.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 21:52:20.021" starttime="20201014 21:52:20.020"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 21:52:20.021" critical="yes" starttime="20201014 21:51:44.474"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201014 21:52:20.022" starttime="20201014 21:51:07.655"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:49:33.620" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:49:33.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:49:33.625" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:49:33.625" starttime="20201014 21:49:33.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:49:33.626" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:49:33.626" starttime="20201014 21:49:33.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:49:33.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:49:33.627" starttime="20201014 21:49:33.626"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:33.627" starttime="20201014 21:49:33.616"></status>
</kw>
<msg timestamp="20201014 21:49:33.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:49:33.627" starttime="20201014 21:49:33.615"></status>
</kw>
<msg timestamp="20201014 21:49:33.627" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:49:33.628" starttime="20201014 21:49:33.615"></status>
</kw>
<msg timestamp="20201014 21:49:33.628" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:49:33.628" starttime="20201014 21:49:33.615"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:49:33.631" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:49:33.631" starttime="20201014 21:49:33.630"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:49:33.631" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:49:33.631" starttime="20201014 21:49:33.631"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:33.632" starttime="20201014 21:49:33.630"></status>
</kw>
<msg timestamp="20201014 21:49:33.632" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:49:33.632" starttime="20201014 21:49:33.629"></status>
</kw>
<status status="PASS" endtime="20201014 21:49:33.632" starttime="20201014 21:49:33.629"></status>
</kw>
<msg timestamp="20201014 21:49:33.632" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:49:33.632" starttime="20201014 21:49:33.628"></status>
</kw>
<msg timestamp="20201014 21:49:33.632" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:49:33.632" starttime="20201014 21:49:33.628"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:49:33.637" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:50:11.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:50:11.500" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:49:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:49:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201014 21:50:11.500" starttime="20201014 21:49:33.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:50:11.501" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:49:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:49:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 21:49:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-14 21:49:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:49:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DCF537C6D538-&gt;24cbb549-0690-42c0-aa18-f6941416f8a5
2020-10-14 21:49:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-14 21:49:37 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-14 21:49:37 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-14 21:49:37 INFO  JobSubmitter:198 - number of splits:3
2020-10-14 21:49:37 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602712098099_0001
2020-10-14 21:49:38 INFO  YarnClientImpl:273 - Submitted application application_1602712098099_0001
2020-10-14 21:49:38 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602712098099_0001/
2020-10-14 21:49:38 INFO  Job:1339 - Running job: job_1602712098099_0001
2020-10-14 21:49:48 INFO  Job:1360 - Job job_1602712098099_0001 running in uber mode : false
2020-10-14 21:49:48 INFO  Job:1367 -  map 0% reduce 0%
2020-10-14 21:49:55 INFO  Job:1367 -  map 33% reduce 0%
2020-10-14 21:49:59 INFO  Job:1367 -  map 67% reduce 0%
2020-10-14 21:50:04 INFO  Job:1367 -  map 100% reduce 0%
2020-10-14 21:50:09 INFO  Job:1367 -  map 100% reduce 100%
2020-10-14 21:50:10 INFO  Job:1378 - Job job_1602712098099_0001 completed successfully
2020-10-14 21:50:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=614469
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39752
		Total time spent by all reduces in occupied slots (ms)=15520
		Total time spent by all map tasks (ms)=9938
		Total time spent by all reduce tasks (ms)=3880
		Total vcore-milliseconds taken by all map tasks=9938
		Total vcore-milliseconds taken by all reduce tasks=3880
		Total megabyte-milliseconds taken by all map tasks=40706048
		Total megabyte-milliseconds taken by all reduce tasks=15892480
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=601
		CPU time spent (ms)=6850
		Physical memory (bytes) snapshot=1139142656
		Virtual memory (bytes) snapshot=16064880640
		Total committed heap usage (bytes)=1052770304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.866 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201014 21:50:11.501" starttime="20201014 21:50:11.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:50:11.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:50:11.502" starttime="20201014 21:50:11.502"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:11.502" starttime="20201014 21:49:33.633"></status>
</kw>
<msg timestamp="20201014 21:50:11.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:50:11.503" starttime="20201014 21:49:33.633"></status>
</kw>
<msg timestamp="20201014 21:50:11.503" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:49:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:49:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201014 21:50:11.503" starttime="20201014 21:49:33.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 21:50:11.504" starttime="20201014 21:50:11.503"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 21:50:11.504" critical="yes" starttime="20201014 21:49:33.614"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:50:11.510" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:50:11.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:50:11.520" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:50:11.520" starttime="20201014 21:50:11.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:50:11.521" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:50:11.521" starttime="20201014 21:50:11.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:50:11.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:50:11.521" starttime="20201014 21:50:11.521"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:11.522" starttime="20201014 21:50:11.508"></status>
</kw>
<msg timestamp="20201014 21:50:11.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:50:11.522" starttime="20201014 21:50:11.507"></status>
</kw>
<msg timestamp="20201014 21:50:11.522" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:50:11.522" starttime="20201014 21:50:11.507"></status>
</kw>
<msg timestamp="20201014 21:50:11.522" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201014 21:50:11.522" starttime="20201014 21:50:11.507"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:50:11.523" level="INFO">${random} = 39</msg>
<status status="PASS" endtime="20201014 21:50:11.523" starttime="20201014 21:50:11.523"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:50:11.527" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:50:11.527" starttime="20201014 21:50:11.526"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:50:11.527" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:50:11.527" starttime="20201014 21:50:11.527"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:11.527" starttime="20201014 21:50:11.526"></status>
</kw>
<msg timestamp="20201014 21:50:11.527" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:50:11.527" starttime="20201014 21:50:11.525"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:11.528" starttime="20201014 21:50:11.524"></status>
</kw>
<msg timestamp="20201014 21:50:11.528" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:50:11.528" starttime="20201014 21:50:11.524"></status>
</kw>
<msg timestamp="20201014 21:50:11.528" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:50:11.528" starttime="20201014 21:50:11.523"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:50:11.531" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:50:11.531" starttime="20201014 21:50:11.530"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:50:11.531" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:50:11.531" starttime="20201014 21:50:11.531"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:11.532" starttime="20201014 21:50:11.530"></status>
</kw>
<msg timestamp="20201014 21:50:11.532" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:50:11.532" starttime="20201014 21:50:11.530"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:11.532" starttime="20201014 21:50:11.529"></status>
</kw>
<msg timestamp="20201014 21:50:11.532" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201014 21:50:11.532" starttime="20201014 21:50:11.529"></status>
</kw>
<msg timestamp="20201014 21:50:11.532" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201014 21:50:11.532" starttime="20201014 21:50:11.528"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:50:11.535" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:50:11.535" starttime="20201014 21:50:11.535"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:50:11.536" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:50:11.536" starttime="20201014 21:50:11.535"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:11.536" starttime="20201014 21:50:11.534"></status>
</kw>
<msg timestamp="20201014 21:50:11.536" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:50:11.536" starttime="20201014 21:50:11.534"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:11.536" starttime="20201014 21:50:11.533"></status>
</kw>
<msg timestamp="20201014 21:50:11.536" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-39.txt</msg>
<status status="PASS" endtime="20201014 21:50:11.536" starttime="20201014 21:50:11.533"></status>
</kw>
<msg timestamp="20201014 21:50:11.537" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-39.txt</msg>
<status status="PASS" endtime="20201014 21:50:11.537" starttime="20201014 21:50:11.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:50:11.540" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-39.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:50:50.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:50:50.049" level="INFO">${output} = 2020-10-14 21:50:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-14 21:50:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201014 21:50:50.049" starttime="20201014 21:50:11.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:50:50.050" level="INFO">2020-10-14 21:50:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-14 21:50:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 21:50:13 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:50:13 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-10-14 21:50:13 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-10-14 21:50:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:50:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9AAB3351DBDC-&gt;24cbb549-0690-42c0-aa18-f6941416f8a5
2020-10-14 21:50:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 21:50:15 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-10-14 21:50:15 INFO  JobSubmitter:198 - number of splits:3
2020-10-14 21:50:17 INFO  JobSubmitter:287 - Submitting tokens for job: job_1602712098099_0002
2020-10-14 21:50:18 INFO  YarnClientImpl:273 - Submitted application application_1602712098099_0002
2020-10-14 21:50:18 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1602712098099_0002/
2020-10-14 21:50:18 INFO  Job:1339 - Running job: job_1602712098099_0002
2020-10-14 21:50:25 INFO  Job:1360 - Job job_1602712098099_0002 running in uber mode : false
2020-10-14 21:50:25 INFO  Job:1367 -  map 0% reduce 0%
2020-10-14 21:50:32 INFO  Job:1367 -  map 33% reduce 0%
2020-10-14 21:50:37 INFO  Job:1367 -  map 67% reduce 0%
2020-10-14 21:50:42 INFO  Job:1367 -  map 100% reduce 0%
2020-10-14 21:50:46 INFO  Job:1367 -  map 100% reduce 100%
2020-10-14 21:50:49 INFO  Job:1378 - Job job_1602712098099_0002 completed successfully
2020-10-14 21:50:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=677093
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41052
		Total time spent by all reduces in occupied slots (ms)=15444
		Total time spent by all map tasks (ms)=10263
		Total time spent by all reduce tasks (ms)=3861
		Total vcore-milliseconds taken by all map tasks=10263
		Total vcore-milliseconds taken by all reduce tasks=3861
		Total megabyte-milliseconds taken by all map tasks=42037248
		Total megabyte-milliseconds taken by all reduce tasks=15814656
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=626
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1152012288
		Virtual memory (bytes) snapshot=16074657792
		Total committed heap usage (bytes)=1052246016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201014 21:50:50.051" starttime="20201014 21:50:50.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:50:50.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:50:50.051" starttime="20201014 21:50:50.051"></status>
</kw>
<status status="PASS" endtime="20201014 21:50:50.052" starttime="20201014 21:50:11.537"></status>
</kw>
<msg timestamp="20201014 21:50:50.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:50:50.052" starttime="20201014 21:50:11.537"></status>
</kw>
<msg timestamp="20201014 21:50:50.052" level="INFO">${output} = 2020-10-14 21:50:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-10-14 21:50:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201014 21:50:50.052" starttime="20201014 21:50:11.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201014 21:50:50.053" starttime="20201014 21:50:50.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 21:50:50.053" starttime="20201014 21:50:50.053"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 21:50:50.053" critical="yes" starttime="20201014 21:50:11.505"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201014 21:50:50.054" starttime="20201014 21:49:33.566"></status>
</suite>
<status status="PASS" elapsedtime="190350" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:28.619" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:31.119" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 21:53:31.119" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 21:53:31.119" starttime="20201014 21:53:28.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:31.120" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 21:53:31.120" starttime="20201014 21:53:31.120"></status>
</kw>
<msg timestamp="20201014 21:53:31.121" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 21:53:31.121" starttime="20201014 21:53:28.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:31.127" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:33.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:53:33.304" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:53:33.304" starttime="20201014 21:53:31.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:33.305" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:53:33.306" starttime="20201014 21:53:33.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:53:33.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:53:33.306" starttime="20201014 21:53:33.306"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:33.307" starttime="20201014 21:53:31.123"></status>
</kw>
<msg timestamp="20201014 21:53:33.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:53:33.307" starttime="20201014 21:53:31.122"></status>
</kw>
<msg timestamp="20201014 21:53:33.307" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201014 21:53:33.307" starttime="20201014 21:53:31.122"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201014 21:53:33.308" starttime="20201014 21:53:33.307"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:33.308" starttime="20201014 21:53:31.122"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:33.308" starttime="20201014 21:53:31.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:33.313" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:35.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:53:35.424" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:53:35.424" starttime="20201014 21:53:33.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:35.425" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:53:35.425" starttime="20201014 21:53:35.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:53:35.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:53:35.426" starttime="20201014 21:53:35.425"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:35.426" starttime="20201014 21:53:33.310"></status>
</kw>
<msg timestamp="20201014 21:53:35.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:53:35.426" starttime="20201014 21:53:33.309"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:35.426" starttime="20201014 21:53:33.309"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:35.427" starttime="20201014 21:53:33.308"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:35.427" starttime="20201014 21:53:33.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201014 21:53:35.427" starttime="20201014 21:53:35.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:35.431" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:37.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:53:37.665" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T21:53:35.393Z",
  "modificat...</msg>
<status status="PASS" endtime="20201014 21:53:37.665" starttime="20201014 21:53:35.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:37.666" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T21:53:35.393Z",
  "modificationTime" : "2020-10-14T21:53:35.393Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201014 21:53:37.666" starttime="20201014 21:53:37.666"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:53:37.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:53:37.667" starttime="20201014 21:53:37.667"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:37.667" starttime="20201014 21:53:35.428"></status>
</kw>
<msg timestamp="20201014 21:53:37.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:53:37.668" starttime="20201014 21:53:35.428"></status>
</kw>
<msg timestamp="20201014 21:53:37.668" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T21:53:35.393Z",
  "modificat...</msg>
<status status="PASS" endtime="20201014 21:53:37.668" starttime="20201014 21:53:35.427"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201014 21:53:37.668" starttime="20201014 21:53:37.668"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:53:37.672" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:53:37.672" starttime="20201014 21:53:37.672"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:53:37.673" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:53:37.673" starttime="20201014 21:53:37.672"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:37.673" starttime="20201014 21:53:37.671"></status>
</kw>
<msg timestamp="20201014 21:53:37.673" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:53:37.673" starttime="20201014 21:53:37.671"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:37.674" starttime="20201014 21:53:37.670"></status>
</kw>
<msg timestamp="20201014 21:53:37.674" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201014 21:53:37.674" starttime="20201014 21:53:37.669"></status>
</kw>
<msg timestamp="20201014 21:53:37.674" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201014 21:53:37.674" starttime="20201014 21:53:37.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:37.679" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:39.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:53:39.916" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:53:39.916" starttime="20201014 21:53:37.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:39.917" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:53:39.917" starttime="20201014 21:53:39.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:53:39.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:53:39.918" starttime="20201014 21:53:39.918"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:39.918" starttime="20201014 21:53:37.675"></status>
</kw>
<msg timestamp="20201014 21:53:39.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:53:39.919" starttime="20201014 21:53:37.675"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:39.919" starttime="20201014 21:53:37.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:39.924" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:45.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:53:45.195" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:53:45.195" starttime="20201014 21:53:39.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:45.196" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:53:45.196" starttime="20201014 21:53:45.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:53:45.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:53:45.196" starttime="20201014 21:53:45.196"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:45.197" starttime="20201014 21:53:39.920"></status>
</kw>
<msg timestamp="20201014 21:53:45.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:53:45.197" starttime="20201014 21:53:39.920"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:45.197" starttime="20201014 21:53:39.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:45.201" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:49.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:53:49.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:53:49.362" starttime="20201014 21:53:45.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:49.365" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:53:49.365" starttime="20201014 21:53:49.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:53:49.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:53:49.365" starttime="20201014 21:53:49.365"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:49.366" starttime="20201014 21:53:45.198"></status>
</kw>
<msg timestamp="20201014 21:53:49.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:53:49.366" starttime="20201014 21:53:45.198"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:49.366" starttime="20201014 21:53:45.197"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:49.370" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:53.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:53:53.565" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:53:53.565" starttime="20201014 21:53:49.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:53.567" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:53:53.567" starttime="20201014 21:53:53.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:53:53.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:53:53.567" starttime="20201014 21:53:53.567"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:53.568" starttime="20201014 21:53:49.367"></status>
</kw>
<msg timestamp="20201014 21:53:53.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:53:53.568" starttime="20201014 21:53:49.367"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:53.568" starttime="20201014 21:53:49.366"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 21:53:53.568" critical="yes" starttime="20201014 21:53:28.612"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:53:53.573" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:53:53.573" starttime="20201014 21:53:53.573"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:53:53.574" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:53:53.574" starttime="20201014 21:53:53.574"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:53.574" starttime="20201014 21:53:53.572"></status>
</kw>
<msg timestamp="20201014 21:53:53.574" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:53:53.574" starttime="20201014 21:53:53.572"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:53.575" starttime="20201014 21:53:53.571"></status>
</kw>
<msg timestamp="20201014 21:53:53.575" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 21:53:53.575" starttime="20201014 21:53:53.571"></status>
</kw>
<msg timestamp="20201014 21:53:53.575" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 21:53:53.575" starttime="20201014 21:53:53.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:53.579" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:55.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:53:55.810" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:53:55.810" starttime="20201014 21:53:53.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:55.811" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:53:55.812" starttime="20201014 21:53:55.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:53:55.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:53:55.812" starttime="20201014 21:53:55.812"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:55.813" starttime="20201014 21:53:53.576"></status>
</kw>
<msg timestamp="20201014 21:53:55.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:53:55.813" starttime="20201014 21:53:53.576"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:55.813" starttime="20201014 21:53:53.575"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:53:55.818" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:53:57.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:53:57.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:53:57.835" starttime="20201014 21:53:55.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:53:57.836" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:53:57.836" starttime="20201014 21:53:57.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:53:57.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:53:57.837" starttime="20201014 21:53:57.837"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:57.837" starttime="20201014 21:53:55.814"></status>
</kw>
<msg timestamp="20201014 21:53:57.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:53:57.838" starttime="20201014 21:53:55.814"></status>
</kw>
<status status="PASS" endtime="20201014 21:53:57.838" starttime="20201014 21:53:55.813"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 21:53:57.838" critical="yes" starttime="20201014 21:53:53.569"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201014 21:53:57.840" starttime="20201014 21:53:28.553"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:55:44.685" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:55:44.685" starttime="20201014 21:55:44.684"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:55:44.685" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:55:44.685" starttime="20201014 21:55:44.685"></status>
</kw>
<status status="PASS" endtime="20201014 21:55:44.685" starttime="20201014 21:55:44.684"></status>
</kw>
<msg timestamp="20201014 21:55:44.685" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:55:44.685" starttime="20201014 21:55:44.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:55:44.686" starttime="20201014 21:55:44.686"></status>
</kw>
<msg timestamp="20201014 21:55:44.686" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 21:55:44.686" starttime="20201014 21:55:44.686"></status>
</kw>
<status status="PASS" endtime="20201014 21:55:44.687" starttime="20201014 21:55:44.683"></status>
</kw>
<msg timestamp="20201014 21:55:44.687" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:55:44.687" starttime="20201014 21:55:44.682"></status>
</kw>
<msg timestamp="20201014 21:55:44.687" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:55:44.687" starttime="20201014 21:55:44.681"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:55:44.687" level="INFO">${random} = 00944</msg>
<status status="PASS" endtime="20201014 21:55:44.687" starttime="20201014 21:55:44.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:55:44.694" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-00944 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:55:48.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:55:48.318" level="INFO">${output} = 2020-10-14 21:55:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:55:48.318" starttime="20201014 21:55:44.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:55:48.319" level="INFO">2020-10-14 21:55:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:46 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-14 21:55:46 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:55:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 21:55:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 21:55:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:55:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DC3F929F247D-&gt;794e3716-744b-444d-8fb6-2e499ba170d6
2020-10-14 21:55:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 21:55:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201014 21:55:48.319" starttime="20201014 21:55:48.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:55:48.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:55:48.320" starttime="20201014 21:55:48.319"></status>
</kw>
<status status="PASS" endtime="20201014 21:55:48.320" starttime="20201014 21:55:44.688"></status>
</kw>
<msg timestamp="20201014 21:55:48.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:55:48.320" starttime="20201014 21:55:44.688"></status>
</kw>
<msg timestamp="20201014 21:55:48.321" level="INFO">${result} = 2020-10-14 21:55:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:55:48.321" starttime="20201014 21:55:44.688"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:55:48.324" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:55:50.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:55:50.164" level="INFO">${output} = 2020-10-14 21:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:55:50.164" starttime="20201014 21:55:48.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:55:50.165" level="INFO">2020-10-14 21:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:49 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:53 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-14 21:55 ofs://om/volume1/bucket1/ozone-00944
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-14 21:54 ofs://om/volume1/bucket1/ozone-69762
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:53 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:55 ofs://om/volume1/bucket1/wordcount-94.txt
2020-10-14 21:55:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201014 21:55:50.165" starttime="20201014 21:55:50.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:55:50.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:55:50.166" starttime="20201014 21:55:50.166"></status>
</kw>
<status status="PASS" endtime="20201014 21:55:50.166" starttime="20201014 21:55:48.322"></status>
</kw>
<msg timestamp="20201014 21:55:50.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:55:50.167" starttime="20201014 21:55:48.321"></status>
</kw>
<msg timestamp="20201014 21:55:50.167" level="INFO">${result} = 2020-10-14 21:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:55:50.167" starttime="20201014 21:55:48.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:55:50.167" starttime="20201014 21:55:50.167"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 21:55:50.167" critical="yes" starttime="20201014 21:55:44.680"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201014 21:55:50.168" starttime="20201014 21:55:44.632"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:54:02.652" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:54:02.652" starttime="20201014 21:54:02.652"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:54:02.653" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:54:02.653" starttime="20201014 21:54:02.652"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:02.653" starttime="20201014 21:54:02.651"></status>
</kw>
<msg timestamp="20201014 21:54:02.653" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:54:02.653" starttime="20201014 21:54:02.651"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:02.653" starttime="20201014 21:54:02.650"></status>
</kw>
<msg timestamp="20201014 21:54:02.653" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:54:02.653" starttime="20201014 21:54:02.650"></status>
</kw>
<msg timestamp="20201014 21:54:02.653" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:54:02.653" starttime="20201014 21:54:02.648"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:54:02.654" level="INFO">${random} = 69762</msg>
<status status="PASS" endtime="20201014 21:54:02.654" starttime="20201014 21:54:02.654"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:54:02.661" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-69762 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:54:06.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:54:06.282" level="INFO">${output} = 2020-10-14 21:54:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:54:06.282" starttime="20201014 21:54:02.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:54:06.283" level="INFO">2020-10-14 21:54:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:04 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-14 21:54:04 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:54:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 21:54:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 21:54:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:54:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0A9F012E80D1-&gt;794e3716-744b-444d-8fb6-2e499ba170d6
2020-10-14 21:54:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 21:54:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201014 21:54:06.283" starttime="20201014 21:54:06.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:54:06.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:54:06.284" starttime="20201014 21:54:06.283"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:06.284" starttime="20201014 21:54:02.655"></status>
</kw>
<msg timestamp="20201014 21:54:06.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:54:06.284" starttime="20201014 21:54:02.655"></status>
</kw>
<msg timestamp="20201014 21:54:06.284" level="INFO">${result} = 2020-10-14 21:54:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:54:06.284" starttime="20201014 21:54:02.654"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:54:06.288" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:54:08.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:54:08.048" level="INFO">${output} = 2020-10-14 21:54:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:54:08.048" starttime="20201014 21:54:06.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:54:08.049" level="INFO">2020-10-14 21:54:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:07 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:53 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-10-14 21:54 o3fs://bucket1.volume1.om/ozone-69762
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:53 o3fs://bucket1.volume1.om/user
2020-10-14 21:54:08 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201014 21:54:08.049" starttime="20201014 21:54:08.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:54:08.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:54:08.050" starttime="20201014 21:54:08.049"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:08.050" starttime="20201014 21:54:06.285"></status>
</kw>
<msg timestamp="20201014 21:54:08.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:54:08.050" starttime="20201014 21:54:06.285"></status>
</kw>
<msg timestamp="20201014 21:54:08.050" level="INFO">${result} = 2020-10-14 21:54:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:54:08.050" starttime="20201014 21:54:06.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:54:08.051" starttime="20201014 21:54:08.051"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 21:54:08.051" critical="yes" starttime="20201014 21:54:02.648"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201014 21:54:08.052" starttime="20201014 21:54:02.599"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:55:54.915" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:55:54.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:55:54.924" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:55:54.924" starttime="20201014 21:55:54.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:55:54.925" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:55:54.925" starttime="20201014 21:55:54.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:55:54.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:55:54.926" starttime="20201014 21:55:54.926"></status>
</kw>
<status status="PASS" endtime="20201014 21:55:54.926" starttime="20201014 21:55:54.910"></status>
</kw>
<msg timestamp="20201014 21:55:54.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:55:54.926" starttime="20201014 21:55:54.909"></status>
</kw>
<msg timestamp="20201014 21:55:54.927" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:55:54.927" starttime="20201014 21:55:54.909"></status>
</kw>
<msg timestamp="20201014 21:55:54.927" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:55:54.927" starttime="20201014 21:55:54.909"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:55:54.930" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:55:54.930" starttime="20201014 21:55:54.930"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:55:54.931" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:55:54.931" starttime="20201014 21:55:54.930"></status>
</kw>
<status status="PASS" endtime="20201014 21:55:54.931" starttime="20201014 21:55:54.929"></status>
</kw>
<msg timestamp="20201014 21:55:54.931" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:55:54.931" starttime="20201014 21:55:54.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:55:54.932" starttime="20201014 21:55:54.932"></status>
</kw>
<msg timestamp="20201014 21:55:54.932" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 21:55:54.932" starttime="20201014 21:55:54.931"></status>
</kw>
<status status="PASS" endtime="20201014 21:55:54.933" starttime="20201014 21:55:54.928"></status>
</kw>
<msg timestamp="20201014 21:55:54.933" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:55:54.933" starttime="20201014 21:55:54.928"></status>
</kw>
<msg timestamp="20201014 21:55:54.933" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:55:54.933" starttime="20201014 21:55:54.927"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:55:54.936" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:56:37.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:56:37.598" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55...</msg>
<status status="PASS" endtime="20201014 21:56:37.598" starttime="20201014 21:55:54.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:56:37.599" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-14 21:55:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:55:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 21:55:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 21:55:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:55:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E75B0F74F333-&gt;794e3716-744b-444d-8fb6-2e499ba170d6
2020-10-14 21:55:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-14 21:55:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-14 21:55:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 21:55:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 21:56:01 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 21:56:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602712385353_0003
2020-10-14 21:56:01 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-14 21:56:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:02 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 21:56:02 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-14 21:56:02 INFO  YarnClientImpl:324 - Submitted application application_1602712385353_0003
2020-10-14 21:56:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602712385353_0003/
2020-10-14 21:56:02 INFO  Job:1619 - Running job: job_1602712385353_0003
2020-10-14 21:56:10 INFO  Job:1640 - Job job_1602712385353_0003 running in uber mode : false
2020-10-14 21:56:10 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 21:56:16 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 21:56:22 INFO  Job:1647 -  map 67% reduce 0%
2020-10-14 21:56:27 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 21:56:35 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 21:56:36 INFO  Job:1658 - Job job_1602712385353_0003 completed successfully
2020-10-14 21:56:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020265
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41432
		Total time spent by all reduces in occupied slots (ms)=25612
		Total time spent by all map tasks (ms)=10358
		Total time spent by all reduce tasks (ms)=6403
		Total vcore-milliseconds taken by all map tasks=10358
		Total vcore-milliseconds taken by all reduce tasks=6403
		Total megabyte-milliseconds taken by all map tasks=42426368
		Total megabyte-milliseconds taken by all reduce tasks=26226688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=693
		CPU time spent (ms)=7590
		Physical memory (bytes) snapshot=1172373504
		Virtual memory (bytes) snapshot=16067719168
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=293113856
		Peak Map Virtual memory (bytes)=4012503040
		Peak Reduce Physical memory (bytes)=294924288
		Peak Reduce Virtual memory (bytes)=4031119360
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.731 seconds
2020-10-14 21:56:37 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-14 21:56:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201014 21:56:37.600" starttime="20201014 21:56:37.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:56:37.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:56:37.600" starttime="20201014 21:56:37.600"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.600" starttime="20201014 21:55:54.934"></status>
</kw>
<msg timestamp="20201014 21:56:37.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:56:37.601" starttime="20201014 21:55:54.933"></status>
</kw>
<msg timestamp="20201014 21:56:37.601" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55...</msg>
<status status="PASS" endtime="20201014 21:56:37.601" starttime="20201014 21:55:54.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 21:56:37.602" starttime="20201014 21:56:37.601"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 21:56:37.602" critical="yes" starttime="20201014 21:55:54.908"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:56:37.607" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:56:37.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:56:37.613" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:56:37.613" starttime="20201014 21:56:37.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:56:37.614" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:56:37.614" starttime="20201014 21:56:37.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:56:37.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:56:37.614" starttime="20201014 21:56:37.614"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.614" starttime="20201014 21:56:37.604"></status>
</kw>
<msg timestamp="20201014 21:56:37.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:56:37.615" starttime="20201014 21:56:37.604"></status>
</kw>
<msg timestamp="20201014 21:56:37.615" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:56:37.615" starttime="20201014 21:56:37.603"></status>
</kw>
<msg timestamp="20201014 21:56:37.615" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:56:37.615" starttime="20201014 21:56:37.603"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:56:37.616" level="INFO">${random} = 29</msg>
<status status="PASS" endtime="20201014 21:56:37.616" starttime="20201014 21:56:37.615"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:56:37.619" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:56:37.619" starttime="20201014 21:56:37.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:56:37.619" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:56:37.619" starttime="20201014 21:56:37.619"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.620" starttime="20201014 21:56:37.618"></status>
</kw>
<msg timestamp="20201014 21:56:37.620" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:56:37.620" starttime="20201014 21:56:37.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:56:37.621" starttime="20201014 21:56:37.620"></status>
</kw>
<msg timestamp="20201014 21:56:37.621" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 21:56:37.621" starttime="20201014 21:56:37.620"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.621" starttime="20201014 21:56:37.617"></status>
</kw>
<msg timestamp="20201014 21:56:37.621" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:56:37.621" starttime="20201014 21:56:37.616"></status>
</kw>
<msg timestamp="20201014 21:56:37.621" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 21:56:37.621" starttime="20201014 21:56:37.616"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:56:37.624" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:56:37.624" starttime="20201014 21:56:37.624"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:56:37.625" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:56:37.625" starttime="20201014 21:56:37.624"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.625" starttime="20201014 21:56:37.623"></status>
</kw>
<msg timestamp="20201014 21:56:37.625" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:56:37.625" starttime="20201014 21:56:37.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:56:37.626" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201014 21:56:37.626" starttime="20201014 21:56:37.626"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:56:37.627" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201014 21:56:37.627" starttime="20201014 21:56:37.627"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.627" starttime="20201014 21:56:37.626"></status>
</kw>
<msg timestamp="20201014 21:56:37.627" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201014 21:56:37.627" starttime="20201014 21:56:37.625"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.627" starttime="20201014 21:56:37.622"></status>
</kw>
<msg timestamp="20201014 21:56:37.627" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201014 21:56:37.628" starttime="20201014 21:56:37.622"></status>
</kw>
<msg timestamp="20201014 21:56:37.628" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201014 21:56:37.628" starttime="20201014 21:56:37.621"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 21:56:37.631" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 21:56:37.631" starttime="20201014 21:56:37.630"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:56:37.631" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 21:56:37.631" starttime="20201014 21:56:37.631"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.631" starttime="20201014 21:56:37.630"></status>
</kw>
<msg timestamp="20201014 21:56:37.632" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 21:56:37.632" starttime="20201014 21:56:37.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:56:37.633" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201014 21:56:37.633" starttime="20201014 21:56:37.632"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:56:37.633" level="INFO">${result} = /wordcount-29.txt</msg>
<status status="PASS" endtime="20201014 21:56:37.633" starttime="20201014 21:56:37.633"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.633" starttime="20201014 21:56:37.632"></status>
</kw>
<msg timestamp="20201014 21:56:37.634" level="INFO">${path_with_leading} = /wordcount-29.txt</msg>
<status status="PASS" endtime="20201014 21:56:37.634" starttime="20201014 21:56:37.632"></status>
</kw>
<status status="PASS" endtime="20201014 21:56:37.634" starttime="20201014 21:56:37.629"></status>
</kw>
<msg timestamp="20201014 21:56:37.634" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-29.txt</msg>
<status status="PASS" endtime="20201014 21:56:37.634" starttime="20201014 21:56:37.628"></status>
</kw>
<msg timestamp="20201014 21:56:37.634" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-29.txt</msg>
<status status="PASS" endtime="20201014 21:56:37.634" starttime="20201014 21:56:37.628"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:56:37.639" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-29.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:57:16.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:57:16.540" level="INFO">${output} = 2020-10-14 21:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:57:16.540" starttime="20201014 21:56:37.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:57:16.541" level="INFO">2020-10-14 21:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-14 21:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 21:56:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-14 21:56:40 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:56:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 21:56:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 21:56:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:56:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-91A6C5150C0E-&gt;794e3716-744b-444d-8fb6-2e499ba170d6
2020-10-14 21:56:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 21:56:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 21:56:44 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 21:56:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602712385353_0004
2020-10-14 21:56:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-14 21:56:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:44 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 21:56:44 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-14 21:56:44 INFO  YarnClientImpl:324 - Submitted application application_1602712385353_0004
2020-10-14 21:56:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602712385353_0004/
2020-10-14 21:56:44 INFO  Job:1619 - Running job: job_1602712385353_0004
2020-10-14 21:56:51 INFO  Job:1640 - Job job_1602712385353_0004 running in uber mode : false
2020-10-14 21:56:51 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 21:56:58 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 21:57:04 INFO  Job:1647 -  map 67% reduce 0%
2020-10-14 21:57:11 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 21:57:15 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 21:57:16 INFO  Job:1658 - Job job_1602712385353_0004 completed successfully
2020-10-14 21:57:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:57:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1082921
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39743
		OFS: Number of bytes written=22237
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42560
		Total time spent by all reduces in occupied slots (ms)=15536
		Total time spent by all map tasks (ms)=10640
		Total time spent by all reduce tasks (ms)=3884
		Total vcore-milliseconds taken by all map tasks=10640
		Total vcore-milliseconds taken by all reduce tasks=3884
		Total megabyte-milliseconds taken by all map tasks=43581440
		Total megabyte-milliseconds taken by all reduce tasks=15908864
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=300
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=642
		CPU time spent (ms)=7460
		Physical memory (bytes) snapshot=1173397504
		Virtual memory (bytes) snapshot=16065163264
		Total committed heap usage (bytes)=1059586048
		Peak Map Physical memory (bytes)=297508864
		Peak Map Virtual memory (bytes)=4012425216
		Peak Reduce Physical memory (bytes)=298938368
		Peak Reduce Virtual memory (bytes)=4036292608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-14 21:57:16 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201014 21:57:16.541" starttime="20201014 21:57:16.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:57:16.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:57:16.542" starttime="20201014 21:57:16.542"></status>
</kw>
<status status="PASS" endtime="20201014 21:57:16.542" starttime="20201014 21:56:37.635"></status>
</kw>
<msg timestamp="20201014 21:57:16.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:57:16.543" starttime="20201014 21:56:37.635"></status>
</kw>
<msg timestamp="20201014 21:57:16.543" level="INFO">${output} = 2020-10-14 21:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:56:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:57:16.543" starttime="20201014 21:56:37.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201014 21:57:16.544" starttime="20201014 21:57:16.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 21:57:16.544" starttime="20201014 21:57:16.544"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 21:57:16.544" critical="yes" starttime="20201014 21:56:37.602"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201014 21:57:16.546" starttime="20201014 21:55:54.858"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:54:13.039" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:54:13.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:54:13.043" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:54:13.043" starttime="20201014 21:54:13.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:54:13.044" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:54:13.044" starttime="20201014 21:54:13.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:54:13.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:54:13.044" starttime="20201014 21:54:13.044"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:13.044" starttime="20201014 21:54:13.032"></status>
</kw>
<msg timestamp="20201014 21:54:13.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:54:13.045" starttime="20201014 21:54:13.032"></status>
</kw>
<msg timestamp="20201014 21:54:13.045" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:54:13.045" starttime="20201014 21:54:13.032"></status>
</kw>
<msg timestamp="20201014 21:54:13.045" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:54:13.045" starttime="20201014 21:54:13.032"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:54:13.048" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:54:13.048" starttime="20201014 21:54:13.048"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:54:13.049" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:54:13.049" starttime="20201014 21:54:13.048"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:13.049" starttime="20201014 21:54:13.047"></status>
</kw>
<msg timestamp="20201014 21:54:13.049" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:54:13.049" starttime="20201014 21:54:13.047"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:13.050" starttime="20201014 21:54:13.046"></status>
</kw>
<msg timestamp="20201014 21:54:13.050" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:54:13.050" starttime="20201014 21:54:13.046"></status>
</kw>
<msg timestamp="20201014 21:54:13.050" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:54:13.050" starttime="20201014 21:54:13.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:54:13.053" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:54:55.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:54:55.616" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:54:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54...</msg>
<status status="PASS" endtime="20201014 21:54:55.616" starttime="20201014 21:54:13.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:54:55.617" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:54:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-14 21:54:15 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:54:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 21:54:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 21:54:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:54:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2416AE8C8738-&gt;794e3716-744b-444d-8fb6-2e499ba170d6
2020-10-14 21:54:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-14 21:54:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-14 21:54:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 21:54:17 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 21:54:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602712385353_0001
2020-10-14 21:54:17 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-14 21:54:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:17 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 21:54:17 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-14 21:54:18 INFO  YarnClientImpl:324 - Submitted application application_1602712385353_0001
2020-10-14 21:54:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602712385353_0001/
2020-10-14 21:54:18 INFO  Job:1619 - Running job: job_1602712385353_0001
2020-10-14 21:54:28 INFO  Job:1640 - Job job_1602712385353_0001 running in uber mode : false
2020-10-14 21:54:28 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 21:54:35 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 21:54:41 INFO  Job:1647 -  map 67% reduce 0%
2020-10-14 21:54:46 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 21:54:53 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 21:54:54 INFO  Job:1658 - Job job_1602712385353_0001 completed successfully
2020-10-14 21:54:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1020469
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40924
		Total time spent by all reduces in occupied slots (ms)=25856
		Total time spent by all map tasks (ms)=10231
		Total time spent by all reduce tasks (ms)=6464
		Total vcore-milliseconds taken by all map tasks=10231
		Total vcore-milliseconds taken by all reduce tasks=6464
		Total megabyte-milliseconds taken by all map tasks=41906176
		Total megabyte-milliseconds taken by all reduce tasks=26476544
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=646
		CPU time spent (ms)=6970
		Physical memory (bytes) snapshot=1173561344
		Virtual memory (bytes) snapshot=16061337600
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=292880384
		Peak Map Virtual memory (bytes)=4011548672
		Peak Reduce Physical memory (bytes)=299716608
		Peak Reduce Virtual memory (bytes)=4031766528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.542 seconds
2020-10-14 21:54:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:55 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-10-14 21:54:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201014 21:54:55.618" starttime="20201014 21:54:55.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:54:55.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:54:55.619" starttime="20201014 21:54:55.618"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:55.619" starttime="20201014 21:54:13.051"></status>
</kw>
<msg timestamp="20201014 21:54:55.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:54:55.619" starttime="20201014 21:54:13.051"></status>
</kw>
<msg timestamp="20201014 21:54:55.620" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:54:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54...</msg>
<status status="PASS" endtime="20201014 21:54:55.620" starttime="20201014 21:54:13.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 21:54:55.620" starttime="20201014 21:54:55.620"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 21:54:55.620" critical="yes" starttime="20201014 21:54:13.031"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:54:55.626" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:54:55.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:54:55.633" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:54:55.633" starttime="20201014 21:54:55.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:54:55.634" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:54:55.634" starttime="20201014 21:54:55.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:54:55.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:54:55.635" starttime="20201014 21:54:55.634"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:55.635" starttime="20201014 21:54:55.623"></status>
</kw>
<msg timestamp="20201014 21:54:55.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:54:55.635" starttime="20201014 21:54:55.623"></status>
</kw>
<msg timestamp="20201014 21:54:55.635" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:54:55.635" starttime="20201014 21:54:55.623"></status>
</kw>
<msg timestamp="20201014 21:54:55.635" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201014 21:54:55.635" starttime="20201014 21:54:55.622"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:54:55.636" level="INFO">${random} = 94</msg>
<status status="PASS" endtime="20201014 21:54:55.636" starttime="20201014 21:54:55.636"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:54:55.639" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:54:55.639" starttime="20201014 21:54:55.639"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:54:55.640" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:54:55.640" starttime="20201014 21:54:55.640"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:55.640" starttime="20201014 21:54:55.639"></status>
</kw>
<msg timestamp="20201014 21:54:55.640" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:54:55.640" starttime="20201014 21:54:55.638"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:55.640" starttime="20201014 21:54:55.637"></status>
</kw>
<msg timestamp="20201014 21:54:55.641" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:54:55.641" starttime="20201014 21:54:55.637"></status>
</kw>
<msg timestamp="20201014 21:54:55.641" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:54:55.641" starttime="20201014 21:54:55.636"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:54:55.644" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:54:55.644" starttime="20201014 21:54:55.643"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:54:55.644" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:54:55.644" starttime="20201014 21:54:55.644"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:55.644" starttime="20201014 21:54:55.643"></status>
</kw>
<msg timestamp="20201014 21:54:55.645" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:54:55.645" starttime="20201014 21:54:55.643"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:55.645" starttime="20201014 21:54:55.642"></status>
</kw>
<msg timestamp="20201014 21:54:55.645" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201014 21:54:55.645" starttime="20201014 21:54:55.641"></status>
</kw>
<msg timestamp="20201014 21:54:55.645" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201014 21:54:55.645" starttime="20201014 21:54:55.641"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:54:55.648" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:54:55.648" starttime="20201014 21:54:55.648"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:54:55.649" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:54:55.649" starttime="20201014 21:54:55.648"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:55.649" starttime="20201014 21:54:55.647"></status>
</kw>
<msg timestamp="20201014 21:54:55.649" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:54:55.649" starttime="20201014 21:54:55.647"></status>
</kw>
<status status="PASS" endtime="20201014 21:54:55.649" starttime="20201014 21:54:55.646"></status>
</kw>
<msg timestamp="20201014 21:54:55.649" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-94.txt</msg>
<status status="PASS" endtime="20201014 21:54:55.649" starttime="20201014 21:54:55.646"></status>
</kw>
<msg timestamp="20201014 21:54:55.649" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-94.txt</msg>
<status status="PASS" endtime="20201014 21:54:55.649" starttime="20201014 21:54:55.645"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:54:55.655" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-94.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:55:39.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:55:39.737" level="INFO">${output} = 2020-10-14 21:54:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:55:39.737" starttime="20201014 21:54:55.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:55:39.738" level="INFO">2020-10-14 21:54:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-10-14 21:54:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 21:54:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-10-14 21:54:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-10-14 21:54:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 21:54:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 21:54:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:54:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B8CD51455100-&gt;794e3716-744b-444d-8fb6-2e499ba170d6
2020-10-14 21:54:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 21:54:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 21:55:02 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 21:55:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602712385353_0002
2020-10-14 21:55:02 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-14 21:55:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:02 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 21:55:02 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-10-14 21:55:02 INFO  YarnClientImpl:324 - Submitted application application_1602712385353_0002
2020-10-14 21:55:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602712385353_0002/
2020-10-14 21:55:02 INFO  Job:1619 - Running job: job_1602712385353_0002
2020-10-14 21:55:11 INFO  Job:1640 - Job job_1602712385353_0002 running in uber mode : false
2020-10-14 21:55:11 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 21:55:17 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 21:55:23 INFO  Job:1647 -  map 67% reduce 0%
2020-10-14 21:55:29 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 21:55:36 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 21:55:39 INFO  Job:1658 - Job job_1602712385353_0002 completed successfully
2020-10-14 21:55:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:55:39 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1083005
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41956
		Total time spent by all reduces in occupied slots (ms)=25312
		Total time spent by all map tasks (ms)=10489
		Total time spent by all reduce tasks (ms)=6328
		Total vcore-milliseconds taken by all map tasks=10489
		Total vcore-milliseconds taken by all reduce tasks=6328
		Total megabyte-milliseconds taken by all map tasks=42962944
		Total megabyte-milliseconds taken by all reduce tasks=25919488
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=626
		CPU time spent (ms)=7200
		Physical memory (bytes) snapshot=1169928192
		Virtual memory (bytes) snapshot=16064229376
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=295084032
		Peak Map Virtual memory (bytes)=4012986368
		Peak Reduce Physical memory (bytes)=291180544
		Peak Reduce Virtual memory (bytes)=4030361600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237
2020-10-14 21:55:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201014 21:55:39.739" starttime="20201014 21:55:39.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:55:39.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:55:39.740" starttime="20201014 21:55:39.739"></status>
</kw>
<status status="PASS" endtime="20201014 21:55:39.740" starttime="20201014 21:54:55.650"></status>
</kw>
<msg timestamp="20201014 21:55:39.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:55:39.740" starttime="20201014 21:54:55.650"></status>
</kw>
<msg timestamp="20201014 21:55:39.741" level="INFO">${output} = 2020-10-14 21:54:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-10-14 21:54:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201014 21:55:39.741" starttime="20201014 21:54:55.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201014 21:55:39.741" starttime="20201014 21:55:39.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 21:55:39.741" starttime="20201014 21:55:39.741"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 21:55:39.742" critical="yes" starttime="20201014 21:54:55.621"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201014 21:55:39.743" starttime="20201014 21:54:12.984"></status>
</suite>
<status status="PASS" elapsedtime="208723" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:58:31.642" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:58:35.435" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 21:58:35.435" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 21:58:35.435" starttime="20201014 21:58:31.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:58:35.436" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 21:58:35.436" starttime="20201014 21:58:35.435"></status>
</kw>
<msg timestamp="20201014 21:58:35.437" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201014 21:58:35.437" starttime="20201014 21:58:31.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:58:35.443" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:58:38.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:58:38.819" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:58:38.819" starttime="20201014 21:58:35.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:58:38.820" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:58:38.820" starttime="20201014 21:58:38.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:58:38.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:58:38.821" starttime="20201014 21:58:38.820"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:38.821" starttime="20201014 21:58:35.439"></status>
</kw>
<msg timestamp="20201014 21:58:38.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:58:38.821" starttime="20201014 21:58:35.439"></status>
</kw>
<msg timestamp="20201014 21:58:38.822" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201014 21:58:38.822" starttime="20201014 21:58:35.438"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201014 21:58:38.822" starttime="20201014 21:58:38.822"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:38.822" starttime="20201014 21:58:35.438"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:38.822" starttime="20201014 21:58:35.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:58:38.827" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:58:42.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:58:42.089" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:58:42.089" starttime="20201014 21:58:38.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:58:42.090" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:58:42.090" starttime="20201014 21:58:42.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:58:42.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:58:42.091" starttime="20201014 21:58:42.090"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:42.091" starttime="20201014 21:58:38.824"></status>
</kw>
<msg timestamp="20201014 21:58:42.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:58:42.091" starttime="20201014 21:58:38.824"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:42.092" starttime="20201014 21:58:38.823"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:42.092" starttime="20201014 21:58:38.823"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:42.092" starttime="20201014 21:58:38.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201014 21:58:42.092" starttime="20201014 21:58:42.092"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:58:42.097" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:58:45.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:58:45.706" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T21:58:41.911Z",
  "modificat...</msg>
<status status="PASS" endtime="20201014 21:58:45.706" starttime="20201014 21:58:42.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:58:45.707" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T21:58:41.911Z",
  "modificationTime" : "2020-10-14T21:58:41.911Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201014 21:58:45.707" starttime="20201014 21:58:45.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:58:45.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:58:45.708" starttime="20201014 21:58:45.707"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:45.708" starttime="20201014 21:58:42.094"></status>
</kw>
<msg timestamp="20201014 21:58:45.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:58:45.708" starttime="20201014 21:58:42.093"></status>
</kw>
<msg timestamp="20201014 21:58:45.709" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-10-14T21:58:41.911Z",
  "modificat...</msg>
<status status="PASS" endtime="20201014 21:58:45.709" starttime="20201014 21:58:42.092"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201014 21:58:45.709" starttime="20201014 21:58:45.709"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:58:45.712" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:58:45.712" starttime="20201014 21:58:45.712"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:58:45.713" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:58:45.713" starttime="20201014 21:58:45.713"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:45.713" starttime="20201014 21:58:45.712"></status>
</kw>
<msg timestamp="20201014 21:58:45.713" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:58:45.713" starttime="20201014 21:58:45.711"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:45.714" starttime="20201014 21:58:45.711"></status>
</kw>
<msg timestamp="20201014 21:58:45.714" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201014 21:58:45.714" starttime="20201014 21:58:45.710"></status>
</kw>
<msg timestamp="20201014 21:58:45.714" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201014 21:58:45.714" starttime="20201014 21:58:45.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:58:45.717" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:58:48.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:58:48.909" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:58:48.909" starttime="20201014 21:58:45.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:58:48.910" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:58:48.910" starttime="20201014 21:58:48.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:58:48.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:58:48.911" starttime="20201014 21:58:48.910"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:48.911" starttime="20201014 21:58:45.715"></status>
</kw>
<msg timestamp="20201014 21:58:48.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:58:48.911" starttime="20201014 21:58:45.715"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:48.911" starttime="20201014 21:58:45.714"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:58:48.917" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:58:56.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:58:56.297" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:58:56.297" starttime="20201014 21:58:48.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:58:56.298" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:58:56.299" starttime="20201014 21:58:56.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:58:56.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:58:56.299" starttime="20201014 21:58:56.299"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:56.300" starttime="20201014 21:58:48.913"></status>
</kw>
<msg timestamp="20201014 21:58:56.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:58:56.300" starttime="20201014 21:58:48.912"></status>
</kw>
<status status="PASS" endtime="20201014 21:58:56.300" starttime="20201014 21:58:48.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:58:56.304" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:59:02.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:59:02.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:59:02.605" starttime="20201014 21:58:56.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:59:02.607" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:59:02.607" starttime="20201014 21:59:02.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:59:02.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:59:02.607" starttime="20201014 21:59:02.607"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:02.608" starttime="20201014 21:58:56.301"></status>
</kw>
<msg timestamp="20201014 21:59:02.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:59:02.608" starttime="20201014 21:58:56.301"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:02.608" starttime="20201014 21:58:56.300"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:59:02.612" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:59:07.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:59:07.887" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:59:07.887" starttime="20201014 21:59:02.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:59:07.888" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:59:07.889" starttime="20201014 21:59:07.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:59:07.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:59:07.889" starttime="20201014 21:59:07.889"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:07.889" starttime="20201014 21:59:02.609"></status>
</kw>
<msg timestamp="20201014 21:59:07.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:59:07.890" starttime="20201014 21:59:02.609"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:07.890" starttime="20201014 21:59:02.608"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 21:59:07.890" critical="yes" starttime="20201014 21:58:31.634"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:59:07.896" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:59:07.896" starttime="20201014 21:59:07.895"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:59:07.896" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:59:07.896" starttime="20201014 21:59:07.896"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:07.896" starttime="20201014 21:59:07.894"></status>
</kw>
<msg timestamp="20201014 21:59:07.897" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:59:07.897" starttime="20201014 21:59:07.894"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:07.897" starttime="20201014 21:59:07.893"></status>
</kw>
<msg timestamp="20201014 21:59:07.897" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 21:59:07.897" starttime="20201014 21:59:07.893"></status>
</kw>
<msg timestamp="20201014 21:59:07.897" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 21:59:07.897" starttime="20201014 21:59:07.892"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:59:07.902" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:59:11.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:59:11.057" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:59:11.057" starttime="20201014 21:59:07.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:59:11.058" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:59:11.058" starttime="20201014 21:59:11.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:59:11.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:59:11.059" starttime="20201014 21:59:11.058"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:11.059" starttime="20201014 21:59:07.898"></status>
</kw>
<msg timestamp="20201014 21:59:11.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:59:11.059" starttime="20201014 21:59:07.898"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:11.059" starttime="20201014 21:59:07.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:59:11.063" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:59:14.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:59:14.025" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201014 21:59:14.025" starttime="20201014 21:59:11.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:59:14.027" level="INFO"></msg>
<status status="PASS" endtime="20201014 21:59:14.027" starttime="20201014 21:59:14.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:59:14.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:59:14.027" starttime="20201014 21:59:14.027"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:14.028" starttime="20201014 21:59:11.060"></status>
</kw>
<msg timestamp="20201014 21:59:14.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:59:14.028" starttime="20201014 21:59:11.060"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:14.028" starttime="20201014 21:59:11.059"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201014 21:59:14.028" critical="yes" starttime="20201014 21:59:07.891"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201014 21:59:14.029" starttime="20201014 21:58:31.578"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:01:02.365" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:01:02.365" starttime="20201014 22:01:02.364"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:01:02.366" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:01:02.366" starttime="20201014 22:01:02.365"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:02.366" starttime="20201014 22:01:02.363"></status>
</kw>
<msg timestamp="20201014 22:01:02.366" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:01:02.366" starttime="20201014 22:01:02.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:01:02.367" starttime="20201014 22:01:02.367"></status>
</kw>
<msg timestamp="20201014 22:01:02.367" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 22:01:02.367" starttime="20201014 22:01:02.366"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:02.367" starttime="20201014 22:01:02.362"></status>
</kw>
<msg timestamp="20201014 22:01:02.367" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:01:02.367" starttime="20201014 22:01:02.361"></status>
</kw>
<msg timestamp="20201014 22:01:02.368" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:01:02.368" starttime="20201014 22:01:02.360"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 22:01:02.368" level="INFO">${random} = 66961</msg>
<status status="PASS" endtime="20201014 22:01:02.368" starttime="20201014 22:01:02.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:01:02.371" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-66961 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:01:05.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:01:05.789" level="INFO">${output} = 2020-10-14 22:01:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:01:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201014 22:01:05.789" starttime="20201014 22:01:02.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:01:05.790" level="INFO">2020-10-14 22:01:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:01:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:01:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 22:01:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:01:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C80768E42136-&gt;2bb6f7cf-633e-4981-8270-09f18399c176
2020-10-14 22:01:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201014 22:01:05.790" starttime="20201014 22:01:05.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:01:05.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:01:05.791" starttime="20201014 22:01:05.790"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:05.791" starttime="20201014 22:01:02.369"></status>
</kw>
<msg timestamp="20201014 22:01:05.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:01:05.791" starttime="20201014 22:01:02.369"></status>
</kw>
<msg timestamp="20201014 22:01:05.791" level="INFO">${result} = 2020-10-14 22:01:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:01:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201014 22:01:05.791" starttime="20201014 22:01:02.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:01:05.795" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:01:07.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:01:07.779" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 21:59 ofs://om/volume1/bucket1/ozone-03146
-rw-...</msg>
<status status="PASS" endtime="20201014 22:01:07.779" starttime="20201014 22:01:05.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:01:07.780" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 21:59 ofs://om/volume1/bucket1/ozone-03146
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 22:01 ofs://om/volume1/bucket1/ozone-66961
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:59 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 22:00 ofs://om/volume1/bucket1/wordcount-44.txt</msg>
<status status="PASS" endtime="20201014 22:01:07.780" starttime="20201014 22:01:07.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:01:07.781" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:01:07.781" starttime="20201014 22:01:07.781"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:07.781" starttime="20201014 22:01:05.793"></status>
</kw>
<msg timestamp="20201014 22:01:07.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:01:07.782" starttime="20201014 22:01:05.792"></status>
</kw>
<msg timestamp="20201014 22:01:07.782" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 21:59 ofs://om/volume1/bucket1/ozone-03146
-rw-...</msg>
<status status="PASS" endtime="20201014 22:01:07.782" starttime="20201014 22:01:05.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:01:07.783" starttime="20201014 22:01:07.782"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 22:01:07.783" critical="yes" starttime="20201014 22:01:02.358"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201014 22:01:07.784" starttime="20201014 22:01:02.279"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:59:18.897" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:59:18.897" starttime="20201014 21:59:18.896"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:59:18.898" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:59:18.898" starttime="20201014 21:59:18.898"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:18.898" starttime="20201014 21:59:18.895"></status>
</kw>
<msg timestamp="20201014 21:59:18.898" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:59:18.898" starttime="20201014 21:59:18.895"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:18.899" starttime="20201014 21:59:18.894"></status>
</kw>
<msg timestamp="20201014 21:59:18.899" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:59:18.899" starttime="20201014 21:59:18.893"></status>
</kw>
<msg timestamp="20201014 21:59:18.899" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:59:18.899" starttime="20201014 21:59:18.893"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 21:59:18.899" level="INFO">${random} = 03146</msg>
<status status="PASS" endtime="20201014 21:59:18.900" starttime="20201014 21:59:18.899"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:59:18.902" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-03146 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:59:22.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:59:22.959" level="INFO">${output} = 2020-10-14 21:59:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 21:59:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201014 21:59:22.959" starttime="20201014 21:59:18.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:59:22.960" level="INFO">2020-10-14 21:59:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 21:59:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 21:59:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 21:59:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:59:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BA36968ABD98-&gt;2bb6f7cf-633e-4981-8270-09f18399c176
2020-10-14 21:59:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.</msg>
<status status="PASS" endtime="20201014 21:59:22.960" starttime="20201014 21:59:22.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:59:22.961" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:59:22.961" starttime="20201014 21:59:22.960"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:22.961" starttime="20201014 21:59:18.900"></status>
</kw>
<msg timestamp="20201014 21:59:22.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:59:22.961" starttime="20201014 21:59:18.900"></status>
</kw>
<msg timestamp="20201014 21:59:22.962" level="INFO">${result} = 2020-10-14 21:59:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 21:59:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201014 21:59:22.962" starttime="20201014 21:59:18.900"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:59:22.965" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:59:24.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:59:24.838" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 21:59 o3fs://bucket1.volume1.om/ozone-03146
dr...</msg>
<status status="PASS" endtime="20201014 21:59:24.839" starttime="20201014 21:59:22.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:59:24.840" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 21:59 o3fs://bucket1.volume1.om/ozone-03146
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:59 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201014 21:59:24.840" starttime="20201014 21:59:24.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:59:24.840" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:59:24.840" starttime="20201014 21:59:24.840"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:24.841" starttime="20201014 21:59:22.963"></status>
</kw>
<msg timestamp="20201014 21:59:24.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:59:24.841" starttime="20201014 21:59:22.962"></status>
</kw>
<msg timestamp="20201014 21:59:24.841" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-10-14 21:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-10-14 21:59 o3fs://bucket1.volume1.om/ozone-03146
dr...</msg>
<status status="PASS" endtime="20201014 21:59:24.841" starttime="20201014 21:59:22.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201014 21:59:24.842" starttime="20201014 21:59:24.841"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201014 21:59:24.842" critical="yes" starttime="20201014 21:59:18.892"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201014 21:59:24.843" starttime="20201014 21:59:18.846"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:01:12.506" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:01:12.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:01:12.514" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:01:12.514" starttime="20201014 22:01:12.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:01:12.515" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:01:12.515" starttime="20201014 22:01:12.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:01:12.516" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:01:12.516" starttime="20201014 22:01:12.515"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:12.516" starttime="20201014 22:01:12.503"></status>
</kw>
<msg timestamp="20201014 22:01:12.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:01:12.516" starttime="20201014 22:01:12.503"></status>
</kw>
<msg timestamp="20201014 22:01:12.516" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:01:12.517" starttime="20201014 22:01:12.503"></status>
</kw>
<msg timestamp="20201014 22:01:12.517" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:01:12.517" starttime="20201014 22:01:12.502"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:01:12.521" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:01:12.521" starttime="20201014 22:01:12.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:01:12.521" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:01:12.521" starttime="20201014 22:01:12.521"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:12.522" starttime="20201014 22:01:12.520"></status>
</kw>
<msg timestamp="20201014 22:01:12.522" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:01:12.522" starttime="20201014 22:01:12.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:01:12.523" starttime="20201014 22:01:12.522"></status>
</kw>
<msg timestamp="20201014 22:01:12.523" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 22:01:12.523" starttime="20201014 22:01:12.522"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:12.523" starttime="20201014 22:01:12.519"></status>
</kw>
<msg timestamp="20201014 22:01:12.523" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:01:12.524" starttime="20201014 22:01:12.518"></status>
</kw>
<msg timestamp="20201014 22:01:12.524" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:01:12.524" starttime="20201014 22:01:12.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:01:12.528" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:01:52.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:01:52.752" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 22:01:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:01:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201014 22:01:52.752" starttime="20201014 22:01:12.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:01:52.753" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-14 22:01:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:01:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:01:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 22:01:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:01:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DD7FE4717A5E-&gt;2bb6f7cf-633e-4981-8270-09f18399c176
2020-10-14 22:01:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-14 22:01:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-14 22:01:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 22:01:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 22:01:19 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 22:01:19 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-14 22:01:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602712690856_0003
2020-10-14 22:01:19 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-14 22:01:19 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 22:01:19 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-14 22:01:19 INFO  YarnClientImpl:311 - Submitted application application_1602712690856_0003
2020-10-14 22:01:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602712690856_0003/
2020-10-14 22:01:19 INFO  Job:1619 - Running job: job_1602712690856_0003
2020-10-14 22:01:27 INFO  Job:1640 - Job job_1602712690856_0003 running in uber mode : false
2020-10-14 22:01:27 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 22:01:34 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 22:01:39 INFO  Job:1647 -  map 67% reduce 0%
2020-10-14 22:01:45 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 22:01:52 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 22:01:52 INFO  Job:1658 - Job job_1602712690856_0003 completed successfully
2020-10-14 22:01:52 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043273
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41660
		Total time spent by all reduces in occupied slots (ms)=15444
		Total time spent by all map tasks (ms)=10415
		Total time spent by all reduce tasks (ms)=3861
		Total vcore-milliseconds taken by all map tasks=10415
		Total vcore-milliseconds taken by all reduce tasks=3861
		Total megabyte-milliseconds taken by all map tasks=42659840
		Total megabyte-milliseconds taken by all reduce tasks=15814656
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=7240
		Physical memory (bytes) snapshot=1447227392
		Virtual memory (bytes) snapshot=16031031296
		Total committed heap usage (bytes)=1668808704
		Peak Map Physical memory (bytes)=369876992
		Peak Map Virtual memory (bytes)=4012621824
		Peak Reduce Physical memory (bytes)=377143296
		Peak Reduce Virtual memory (bytes)=4016521216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.367 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201014 22:01:52.753" starttime="20201014 22:01:52.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:01:52.754" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:01:52.754" starttime="20201014 22:01:52.753"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.754" starttime="20201014 22:01:12.525"></status>
</kw>
<msg timestamp="20201014 22:01:52.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:01:52.754" starttime="20201014 22:01:12.525"></status>
</kw>
<msg timestamp="20201014 22:01:52.755" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 22:01:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:01:14 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201014 22:01:52.755" starttime="20201014 22:01:12.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 22:01:52.756" starttime="20201014 22:01:52.755"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 22:01:52.756" critical="yes" starttime="20201014 22:01:12.502"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:01:52.761" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:01:52.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:01:52.766" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:01:52.766" starttime="20201014 22:01:52.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:01:52.767" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:01:52.767" starttime="20201014 22:01:52.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:01:52.768" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:01:52.768" starttime="20201014 22:01:52.767"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.768" starttime="20201014 22:01:52.759"></status>
</kw>
<msg timestamp="20201014 22:01:52.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:01:52.768" starttime="20201014 22:01:52.758"></status>
</kw>
<msg timestamp="20201014 22:01:52.769" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:01:52.769" starttime="20201014 22:01:52.758"></status>
</kw>
<msg timestamp="20201014 22:01:52.769" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:01:52.769" starttime="20201014 22:01:52.757"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 22:01:52.769" level="INFO">${random} = 44</msg>
<status status="PASS" endtime="20201014 22:01:52.769" starttime="20201014 22:01:52.769"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:01:52.773" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:01:52.773" starttime="20201014 22:01:52.773"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:01:52.774" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:01:52.774" starttime="20201014 22:01:52.773"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.774" starttime="20201014 22:01:52.772"></status>
</kw>
<msg timestamp="20201014 22:01:52.774" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:01:52.774" starttime="20201014 22:01:52.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201014 22:01:52.775" starttime="20201014 22:01:52.775"></status>
</kw>
<msg timestamp="20201014 22:01:52.775" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201014 22:01:52.775" starttime="20201014 22:01:52.774"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.775" starttime="20201014 22:01:52.771"></status>
</kw>
<msg timestamp="20201014 22:01:52.776" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:01:52.776" starttime="20201014 22:01:52.770"></status>
</kw>
<msg timestamp="20201014 22:01:52.776" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201014 22:01:52.776" starttime="20201014 22:01:52.770"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:01:52.779" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:01:52.779" starttime="20201014 22:01:52.779"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:01:52.780" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:01:52.780" starttime="20201014 22:01:52.779"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.780" starttime="20201014 22:01:52.778"></status>
</kw>
<msg timestamp="20201014 22:01:52.780" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:01:52.780" starttime="20201014 22:01:52.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:01:52.782" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201014 22:01:52.782" starttime="20201014 22:01:52.782"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:01:52.783" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201014 22:01:52.783" starttime="20201014 22:01:52.782"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.783" starttime="20201014 22:01:52.781"></status>
</kw>
<msg timestamp="20201014 22:01:52.783" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201014 22:01:52.783" starttime="20201014 22:01:52.780"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.783" starttime="20201014 22:01:52.777"></status>
</kw>
<msg timestamp="20201014 22:01:52.783" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201014 22:01:52.783" starttime="20201014 22:01:52.776"></status>
</kw>
<msg timestamp="20201014 22:01:52.784" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201014 22:01:52.784" starttime="20201014 22:01:52.776"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201014 22:01:52.787" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201014 22:01:52.787" starttime="20201014 22:01:52.786"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:01:52.788" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201014 22:01:52.788" starttime="20201014 22:01:52.787"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.788" starttime="20201014 22:01:52.786"></status>
</kw>
<msg timestamp="20201014 22:01:52.788" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201014 22:01:52.788" starttime="20201014 22:01:52.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:01:52.790" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201014 22:01:52.790" starttime="20201014 22:01:52.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:01:52.790" level="INFO">${result} = /wordcount-44.txt</msg>
<status status="PASS" endtime="20201014 22:01:52.790" starttime="20201014 22:01:52.790"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.790" starttime="20201014 22:01:52.789"></status>
</kw>
<msg timestamp="20201014 22:01:52.791" level="INFO">${path_with_leading} = /wordcount-44.txt</msg>
<status status="PASS" endtime="20201014 22:01:52.791" starttime="20201014 22:01:52.788"></status>
</kw>
<status status="PASS" endtime="20201014 22:01:52.791" starttime="20201014 22:01:52.785"></status>
</kw>
<msg timestamp="20201014 22:01:52.791" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-44.txt</msg>
<status status="PASS" endtime="20201014 22:01:52.791" starttime="20201014 22:01:52.784"></status>
</kw>
<msg timestamp="20201014 22:01:52.791" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-44.txt</msg>
<status status="PASS" endtime="20201014 22:01:52.791" starttime="20201014 22:01:52.784"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:01:52.794" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-44.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:01:54.926" level="INFO">${rc} = 255</msg>
<msg timestamp="20201014 22:01:54.926" level="INFO">${output} = 2020-10-14 22:01:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-44....</msg>
<status status="PASS" endtime="20201014 22:01:54.926" starttime="20201014 22:01:52.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:01:54.927" level="INFO">2020-10-14 22:01:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-44.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</msg>
<status status="PASS" endtime="20201014 22:01:54.928" starttime="20201014 22:01:54.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:01:54.928" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201014 22:01:54.929" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201014 22:01:54.929" starttime="20201014 22:01:54.928"></status>
</kw>
<status status="FAIL" endtime="20201014 22:01:54.929" starttime="20201014 22:01:52.792"></status>
</kw>
<msg timestamp="20201014 22:01:54.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201014 22:01:54.929" starttime="20201014 22:01:52.792"></status>
</kw>
<status status="FAIL" endtime="20201014 22:01:54.929" starttime="20201014 22:01:52.791"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201014 22:01:54.929" critical="yes" starttime="20201014 22:01:52.757">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201014 22:01:54.931" starttime="20201014 22:01:12.459"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:59:29.863" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 21:59:29.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 21:59:29.872" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 21:59:29.872" starttime="20201014 21:59:29.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 21:59:29.873" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 21:59:29.873" starttime="20201014 21:59:29.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 21:59:29.873" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 21:59:29.873" starttime="20201014 21:59:29.873"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:29.874" starttime="20201014 21:59:29.861"></status>
</kw>
<msg timestamp="20201014 21:59:29.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 21:59:29.874" starttime="20201014 21:59:29.860"></status>
</kw>
<msg timestamp="20201014 21:59:29.874" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 21:59:29.874" starttime="20201014 21:59:29.860"></status>
</kw>
<msg timestamp="20201014 21:59:29.874" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 21:59:29.874" starttime="20201014 21:59:29.859"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 21:59:29.879" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 21:59:29.879" starttime="20201014 21:59:29.878"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 21:59:29.880" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 21:59:29.880" starttime="20201014 21:59:29.879"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:29.880" starttime="20201014 21:59:29.878"></status>
</kw>
<msg timestamp="20201014 21:59:29.880" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 21:59:29.880" starttime="20201014 21:59:29.877"></status>
</kw>
<status status="PASS" endtime="20201014 21:59:29.880" starttime="20201014 21:59:29.876"></status>
</kw>
<msg timestamp="20201014 21:59:29.880" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:59:29.880" starttime="20201014 21:59:29.875"></status>
</kw>
<msg timestamp="20201014 21:59:29.881" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 21:59:29.881" starttime="20201014 21:59:29.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 21:59:29.884" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:00:16.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:00:16.540" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:59:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 21:59:32 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201014 22:00:16.540" starttime="20201014 21:59:29.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:00:16.541" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:59:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 21:59:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 21:59:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 21:59:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 21:59:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-033150EF6566-&gt;2bb6f7cf-633e-4981-8270-09f18399c176
2020-10-14 21:59:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-10-14 21:59:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-14 21:59:33 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 21:59:34 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 21:59:34 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-14 21:59:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602712690856_0001
2020-10-14 21:59:34 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-14 21:59:34 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 21:59:34 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-14 21:59:35 INFO  YarnClientImpl:311 - Submitted application application_1602712690856_0001
2020-10-14 21:59:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602712690856_0001/
2020-10-14 21:59:35 INFO  Job:1619 - Running job: job_1602712690856_0001
2020-10-14 21:59:46 INFO  Job:1640 - Job job_1602712690856_0001 running in uber mode : false
2020-10-14 21:59:46 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 21:59:52 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 21:59:58 INFO  Job:1647 -  map 67% reduce 0%
2020-10-14 22:00:04 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 22:00:12 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 22:00:15 INFO  Job:1658 - Job job_1602712690856_0001 completed successfully
2020-10-14 22:00:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1043493
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43236
		Total time spent by all reduces in occupied slots (ms)=26812
		Total time spent by all map tasks (ms)=10809
		Total time spent by all reduce tasks (ms)=6703
		Total vcore-milliseconds taken by all map tasks=10809
		Total vcore-milliseconds taken by all reduce tasks=6703
		Total megabyte-milliseconds taken by all map tasks=44273664
		Total megabyte-milliseconds taken by all reduce tasks=27455488
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=608
		CPU time spent (ms)=7600
		Physical memory (bytes) snapshot=1461833728
		Virtual memory (bytes) snapshot=16052301824
		Total committed heap usage (bytes)=1778909184
		Peak Map Physical memory (bytes)=371630080
		Peak Map Virtual memory (bytes)=4014862336
		Peak Reduce Physical memory (bytes)=367579136
		Peak Reduce Virtual memory (bytes)=4018180096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 42.627 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201014 22:00:16.542" starttime="20201014 22:00:16.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:00:16.542" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:00:16.542" starttime="20201014 22:00:16.542"></status>
</kw>
<status status="PASS" endtime="20201014 22:00:16.543" starttime="20201014 21:59:29.882"></status>
</kw>
<msg timestamp="20201014 22:00:16.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:00:16.543" starttime="20201014 21:59:29.881"></status>
</kw>
<msg timestamp="20201014 22:00:16.543" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-10-14 21:59:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 21:59:32 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201014 22:00:16.544" starttime="20201014 21:59:29.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 22:00:16.544" starttime="20201014 22:00:16.544"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 22:00:16.544" critical="yes" starttime="20201014 21:59:29.859"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:00:16.549" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:00:16.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:00:16.554" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:00:16.554" starttime="20201014 22:00:16.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:00:16.555" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:00:16.555" starttime="20201014 22:00:16.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:00:16.556" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:00:16.556" starttime="20201014 22:00:16.556"></status>
</kw>
<status status="PASS" endtime="20201014 22:00:16.556" starttime="20201014 22:00:16.547"></status>
</kw>
<msg timestamp="20201014 22:00:16.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:00:16.557" starttime="20201014 22:00:16.546"></status>
</kw>
<msg timestamp="20201014 22:00:16.557" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:00:16.557" starttime="20201014 22:00:16.546"></status>
</kw>
<msg timestamp="20201014 22:00:16.557" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar</msg>
<status status="PASS" endtime="20201014 22:00:16.557" starttime="20201014 22:00:16.546"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201014 22:00:16.558" level="INFO">${random} = 44</msg>
<status status="PASS" endtime="20201014 22:00:16.558" starttime="20201014 22:00:16.557"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:00:16.561" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:00:16.561" starttime="20201014 22:00:16.561"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:00:16.562" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:00:16.562" starttime="20201014 22:00:16.561"></status>
</kw>
<status status="PASS" endtime="20201014 22:00:16.562" starttime="20201014 22:00:16.560"></status>
</kw>
<msg timestamp="20201014 22:00:16.562" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:00:16.562" starttime="20201014 22:00:16.560"></status>
</kw>
<status status="PASS" endtime="20201014 22:00:16.563" starttime="20201014 22:00:16.559"></status>
</kw>
<msg timestamp="20201014 22:00:16.563" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 22:00:16.563" starttime="20201014 22:00:16.559"></status>
</kw>
<msg timestamp="20201014 22:00:16.563" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201014 22:00:16.563" starttime="20201014 22:00:16.558"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:00:16.566" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:00:16.566" starttime="20201014 22:00:16.566"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:00:16.567" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:00:16.567" starttime="20201014 22:00:16.566"></status>
</kw>
<status status="PASS" endtime="20201014 22:00:16.567" starttime="20201014 22:00:16.565"></status>
</kw>
<msg timestamp="20201014 22:00:16.567" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:00:16.567" starttime="20201014 22:00:16.565"></status>
</kw>
<status status="PASS" endtime="20201014 22:00:16.568" starttime="20201014 22:00:16.564"></status>
</kw>
<msg timestamp="20201014 22:00:16.568" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201014 22:00:16.568" starttime="20201014 22:00:16.564"></status>
</kw>
<msg timestamp="20201014 22:00:16.568" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201014 22:00:16.568" starttime="20201014 22:00:16.563"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201014 22:00:16.571" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201014 22:00:16.571" starttime="20201014 22:00:16.571"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201014 22:00:16.572" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201014 22:00:16.572" starttime="20201014 22:00:16.572"></status>
</kw>
<status status="PASS" endtime="20201014 22:00:16.572" starttime="20201014 22:00:16.570"></status>
</kw>
<msg timestamp="20201014 22:00:16.572" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201014 22:00:16.572" starttime="20201014 22:00:16.570"></status>
</kw>
<status status="PASS" endtime="20201014 22:00:16.573" starttime="20201014 22:00:16.569"></status>
</kw>
<msg timestamp="20201014 22:00:16.573" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-44.txt</msg>
<status status="PASS" endtime="20201014 22:00:16.573" starttime="20201014 22:00:16.569"></status>
</kw>
<msg timestamp="20201014 22:00:16.573" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-44.txt</msg>
<status status="PASS" endtime="20201014 22:00:16.573" starttime="20201014 22:00:16.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201014 22:00:16.576" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.0.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-44.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201014 22:00:57.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20201014 22:00:57.548" level="INFO">${output} = 2020-10-14 22:00:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-14 22:00:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201014 22:00:57.548" starttime="20201014 22:00:16.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201014 22:00:57.549" level="INFO">2020-10-14 22:00:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-14 22:00:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-10-14 22:00:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-10-14 22:00:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-10-14 22:00:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-10-14 22:00:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-10-14 22:00:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C6CC78183A17-&gt;2bb6f7cf-633e-4981-8270-09f18399c176
2020-10-14 22:00:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReportRegistration(...) before.
2020-10-14 22:00:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-10-14 22:00:22 INFO  JobSubmitter:202 - number of splits:3
2020-10-14 22:00:22 INFO  deprecation:1394 - yarn.resourcemanager.system-metrics-publisher.enabled is deprecated. Instead, use yarn.system-metrics-publisher.enabled
2020-10-14 22:00:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1602712690856_0002
2020-10-14 22:00:23 INFO  JobSubmitter:299 - Executing with tokens: []
2020-10-14 22:00:23 INFO  Configuration:2752 - resource-types.xml not found
2020-10-14 22:00:23 INFO  ResourceUtils:419 - Unable to find 'resource-types.xml'.
2020-10-14 22:00:23 INFO  YarnClientImpl:311 - Submitted application application_1602712690856_0002
2020-10-14 22:00:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1602712690856_0002/
2020-10-14 22:00:23 INFO  Job:1619 - Running job: job_1602712690856_0002
2020-10-14 22:00:31 INFO  Job:1640 - Job job_1602712690856_0002 running in uber mode : false
2020-10-14 22:00:31 INFO  Job:1647 -  map 0% reduce 0%
2020-10-14 22:00:38 INFO  Job:1647 -  map 33% reduce 0%
2020-10-14 22:00:44 INFO  Job:1647 -  map 67% reduce 0%
2020-10-14 22:00:49 INFO  Job:1647 -  map 100% reduce 0%
2020-10-14 22:00:54 INFO  Job:1647 -  map 100% reduce 100%
2020-10-14 22:00:57 INFO  Job:1658 - Job job_1602712690856_0002 completed successfully
2020-10-14 22:00:57 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32030
		FILE: Number of bytes written=1106021
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39746
		O3FS: Number of bytes written=22237
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41356
		Total time spent by all reduces in occupied slots (ms)=15292
		Total time spent by all map tasks (ms)=10339
		Total time spent by all reduce tasks (ms)=3823
		Total vcore-milliseconds taken by all map tasks=10339
		Total vcore-milliseconds taken by all reduce tasks=3823
		Total megabyte-milliseconds taken by all map tasks=42348544
		Total megabyte-milliseconds taken by all reduce tasks=15659008
	Map-Reduce Framework
		Map input records=1053
		Map output records=4508
		Map output bytes=55078
		Map output materialized bytes=32042
		Input split bytes=303
		Combine input records=4508
		Combine output records=1798
		Reduce input groups=1534
		Reduce shuffle bytes=32042
		Reduce input records=1798
		Reduce output records=1534
		Spilled Records=3596
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=7750
		Physical memory (bytes) snapshot=1481023488
		Virtual memory (bytes) snapshot=16073523200
		Total committed heap usage (bytes)=1798307840
		Peak Map Physical memory (bytes)=371662848
		Peak Map Virtual memory (bytes)=4024610816
		Peak Reduce Physical memory (bytes)=383447040
		Peak Reduce Virtual memory (bytes)=4027883520
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39443
	File Output Format Counters 
		Bytes Written=22237</msg>
<status status="PASS" endtime="20201014 22:00:57.549" starttime="20201014 22:00:57.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201014 22:00:57.550" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201014 22:00:57.550" starttime="20201014 22:00:57.549"></status>
</kw>
<status status="PASS" endtime="20201014 22:00:57.550" starttime="20201014 22:00:16.574"></status>
</kw>
<msg timestamp="20201014 22:00:57.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201014 22:00:57.551" starttime="20201014 22:00:16.574"></status>
</kw>
<msg timestamp="20201014 22:00:57.551" level="INFO">${output} = 2020-10-14 22:00:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2020-10-14 22:00:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201014 22:00:57.551" starttime="20201014 22:00:16.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201014 22:00:57.552" starttime="20201014 22:00:57.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201014 22:00:57.552" starttime="20201014 22:00:57.552"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201014 22:00:57.553" critical="yes" starttime="20201014 22:00:16.545"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201014 22:00:57.554" starttime="20201014 21:59:29.816"></status>
</suite>
<status status="FAIL" elapsedtime="184163" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="FAIL" elapsedtime="583236" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="23">Critical Tests</stat>
<stat fail="1" pass="23">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozone-mr" pass="23">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="1" id="s1-s3" name="hadoop32" pass="7">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="1" id="s1-s3-s4" name="mapreduce-ofs" pass="1">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
