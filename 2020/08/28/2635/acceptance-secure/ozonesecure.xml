<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200828 13:18:13.919" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:50:28.578" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:50:28.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:50:28.580" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 12:50:28.580" starttime="20200828 12:50:28.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.581" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 12:50:28.581" starttime="20200828 12:50:28.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:50:28.582" starttime="20200828 12:50:28.582"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.582" starttime="20200828 12:50:28.572"></status>
</kw>
<msg timestamp="20200828 12:50:28.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:50:28.583" starttime="20200828 12:50:28.572"></status>
</kw>
<msg timestamp="20200828 12:50:28.583" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 12:50:28.583" starttime="20200828 12:50:28.571"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:50:28.589" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:50:28.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:50:28.604" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 12:50:28.604" starttime="20200828 12:50:28.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.605" level="INFO"></msg>
<status status="PASS" endtime="20200828 12:50:28.606" starttime="20200828 12:50:28.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:50:28.607" starttime="20200828 12:50:28.606"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.607" starttime="20200828 12:50:28.585"></status>
</kw>
<msg timestamp="20200828 12:50:28.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:50:28.607" starttime="20200828 12:50:28.584"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.607" starttime="20200828 12:50:28.584"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.608" starttime="20200828 12:50:28.583"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.608" starttime="20200828 12:50:28.571"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.608" starttime="20200828 12:50:28.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:50:28.612" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:50:28.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:50:28.744" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20200828 12:50:28.744" starttime="20200828 12:50:28.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.745" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Fri, 28 Aug 2020 12:50:28 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC5hXgUcawAwkojnbHdD56N2geZqpuIWIDn56CJS6inCW/F2jmjWeRYX3rC7zoW0HncncZz9mFi3fgbyO9YE9+I296
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1598655028735&amp;s=F1nDgcZeOB/lkoLRKTztns0TkUeOHPWmJ8t1J8YZ5tA="; Path=/; HttpOnly
Last-Modified: Fri, 28 Aug 2020 12:38:02 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200828 12:50:28.746" starttime="20200828 12:50:28.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:50:28.746" starttime="20200828 12:50:28.746"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.747" starttime="20200828 12:50:28.609"></status>
</kw>
<msg timestamp="20200828 12:50:28.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:50:28.747" starttime="20200828 12:50:28.609"></status>
</kw>
<msg timestamp="20200828 12:50:28.747" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20200828 12:50:28.747" starttime="20200828 12:50:28.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200828 12:50:28.748" starttime="20200828 12:50:28.748"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200828 12:50:28.748" critical="yes" starttime="20200828 12:50:28.569"></status>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:50:28.761" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:50:28.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:50:28.764" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 12:50:28.764" starttime="20200828 12:50:28.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.765" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 12:50:28.766" starttime="20200828 12:50:28.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:50:28.766" starttime="20200828 12:50:28.766"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.767" starttime="20200828 12:50:28.754"></status>
</kw>
<msg timestamp="20200828 12:50:28.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:50:28.767" starttime="20200828 12:50:28.753"></status>
</kw>
<msg timestamp="20200828 12:50:28.767" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 12:50:28.767" starttime="20200828 12:50:28.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 12:50:28.769" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 12:50:28.769" starttime="20200828 12:50:28.768"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:50:28.774" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:50:28.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:50:28.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 12:50:28.791" starttime="20200828 12:50:28.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.792" level="INFO"></msg>
<status status="PASS" endtime="20200828 12:50:28.792" starttime="20200828 12:50:28.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:50:28.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:50:28.793" starttime="20200828 12:50:28.792"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.793" starttime="20200828 12:50:28.771"></status>
</kw>
<msg timestamp="20200828 12:50:28.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:50:28.793" starttime="20200828 12:50:28.771"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.794" starttime="20200828 12:50:28.770"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.794" starttime="20200828 12:50:28.770"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.794" starttime="20200828 12:50:28.752"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:28.794" starttime="20200828 12:50:28.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:50:28.800" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:55:28.751" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20200828 12:55:28.751" starttime="20200828 12:50:28.796"></status>
</kw>
<status status="FAIL" endtime="20200828 12:55:28.751" starttime="20200828 12:50:28.795"></status>
</kw>
<msg timestamp="20200828 12:55:28.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 12:55:28.752" starttime="20200828 12:50:28.795"></status>
</kw>
<status status="FAIL" endtime="20200828 12:55:28.752" starttime="20200828 12:50:28.794"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20200828 12:55:28.753" critical="yes" starttime="20200828 12:50:28.749">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20200828 12:55:28.754" starttime="20200828 12:50:28.534"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s2" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200828 12:55:28.769" level="INFO">${random} = 12824</msg>
<status status="PASS" endtime="20200828 12:55:28.769" starttime="20200828 12:55:28.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20200828 12:55:28.770" level="INFO">${source} = 12824-source</msg>
<status status="PASS" endtime="20200828 12:55:28.770" starttime="20200828 12:55:28.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20200828 12:55:28.771" level="INFO">${target} = 12824-target</msg>
<status status="PASS" endtime="20200828 12:55:28.771" starttime="20200828 12:55:28.771"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:55:28.775" level="INFO">Running command 'ozone sh volume create 12824-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:55:32.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:55:32.403" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:55:32.403" starttime="20200828 12:55:28.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:55:32.404" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:55:32.404" starttime="20200828 12:55:32.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:55:32.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:55:32.405" starttime="20200828 12:55:32.404"></status>
</kw>
<status status="PASS" endtime="20200828 12:55:32.405" starttime="20200828 12:55:28.772"></status>
</kw>
<msg timestamp="20200828 12:55:32.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:55:32.406" starttime="20200828 12:55:28.772"></status>
</kw>
<status status="PASS" endtime="20200828 12:55:32.406" starttime="20200828 12:55:28.772"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:55:32.410" level="INFO">Running command 'ozone sh volume create 12824-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:55:36.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:55:36.139" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:55:36.139" starttime="20200828 12:55:32.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:55:36.140" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:55:36.140" starttime="20200828 12:55:36.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:55:36.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:55:36.141" starttime="20200828 12:55:36.140"></status>
</kw>
<status status="PASS" endtime="20200828 12:55:36.141" starttime="20200828 12:55:32.407"></status>
</kw>
<msg timestamp="20200828 12:55:36.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:55:36.141" starttime="20200828 12:55:32.407"></status>
</kw>
<status status="PASS" endtime="20200828 12:55:36.142" starttime="20200828 12:55:32.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:55:36.148" level="INFO">Running command 'ozone sh bucket create 12824-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:55:40.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:55:40.211" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:55:40.212" starttime="20200828 12:55:36.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:55:40.212" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:55:40.213" starttime="20200828 12:55:40.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:55:40.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:55:40.213" starttime="20200828 12:55:40.213"></status>
</kw>
<status status="PASS" endtime="20200828 12:55:40.214" starttime="20200828 12:55:36.144"></status>
</kw>
<msg timestamp="20200828 12:55:40.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:55:40.214" starttime="20200828 12:55:36.144"></status>
</kw>
<status status="PASS" endtime="20200828 12:55:40.214" starttime="20200828 12:55:36.143"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:55:40.219" level="INFO">Running command 'ozone sh key put 12824-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:58:46.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:58:46.775" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:58:46.775" starttime="20200828 12:55:40.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:58:46.776" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:58:46.776" starttime="20200828 12:58:46.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:58:46.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:58:46.776" starttime="20200828 12:58:46.776"></status>
</kw>
<status status="PASS" endtime="20200828 12:58:46.777" starttime="20200828 12:55:40.215"></status>
</kw>
<msg timestamp="20200828 12:58:46.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:58:46.777" starttime="20200828 12:55:40.215"></status>
</kw>
<status status="PASS" endtime="20200828 12:58:46.777" starttime="20200828 12:55:40.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:58:46.781" level="INFO">Running command 'ozone sh bucket create 12824-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:58:50.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:58:50.669" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:58:50.669" starttime="20200828 12:58:46.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:58:50.670" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:58:50.670" starttime="20200828 12:58:50.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:58:50.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:58:50.671" starttime="20200828 12:58:50.670"></status>
</kw>
<status status="PASS" endtime="20200828 12:58:50.671" starttime="20200828 12:58:46.778"></status>
</kw>
<msg timestamp="20200828 12:58:50.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:58:50.671" starttime="20200828 12:58:46.778"></status>
</kw>
<status status="PASS" endtime="20200828 12:58:50.672" starttime="20200828 12:58:46.778"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:58:50.676" level="INFO">Running command 'ozone sh bucket link 12824-source/readable-bucket 12824-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:58:54.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:58:54.338" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:58:54.338" starttime="20200828 12:58:50.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:58:54.339" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:58:54.339" starttime="20200828 12:58:54.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:58:54.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:58:54.340" starttime="20200828 12:58:54.339"></status>
</kw>
<status status="PASS" endtime="20200828 12:58:54.340" starttime="20200828 12:58:50.673"></status>
</kw>
<msg timestamp="20200828 12:58:54.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:58:54.340" starttime="20200828 12:58:50.672"></status>
</kw>
<status status="PASS" endtime="20200828 12:58:54.341" starttime="20200828 12:58:50.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:58:54.345" level="INFO">Running command 'ozone sh bucket link 12824-source/readable-bucket 12824-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:58:57.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:58:57.987" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:58:57.987" starttime="20200828 12:58:54.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:58:57.988" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:58:57.989" starttime="20200828 12:58:57.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:58:57.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:58:57.990" starttime="20200828 12:58:57.989"></status>
</kw>
<status status="PASS" endtime="20200828 12:58:57.990" starttime="20200828 12:58:54.342"></status>
</kw>
<msg timestamp="20200828 12:58:57.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:58:57.990" starttime="20200828 12:58:54.341"></status>
</kw>
<status status="PASS" endtime="20200828 12:58:57.991" starttime="20200828 12:58:54.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:58:57.994" level="INFO">Running command 'ozone sh bucket link 12824-source/unreadable-bucket 12824-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:01.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:01.680" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:01.680" starttime="20200828 12:58:57.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:01.682" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:59:01.682" starttime="20200828 12:59:01.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:01.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:01.682" starttime="20200828 12:59:01.682"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:01.683" starttime="20200828 12:58:57.991"></status>
</kw>
<msg timestamp="20200828 12:59:01.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:01.683" starttime="20200828 12:58:57.991"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:01.683" starttime="20200828 12:58:57.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:01.688" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 12824-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:05.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:05.222" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:05.222" starttime="20200828 12:59:01.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:05.223" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200828 12:59:05.223" starttime="20200828 12:59:05.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:05.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:05.224" starttime="20200828 12:59:05.224"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:05.224" starttime="20200828 12:59:01.685"></status>
</kw>
<msg timestamp="20200828 12:59:05.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:05.225" starttime="20200828 12:59:01.684"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:05.225" starttime="20200828 12:59:01.684"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:05.230" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 12824-source 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:09.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:09.100" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:09.100" starttime="20200828 12:59:05.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:09.101" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200828 12:59:09.101" starttime="20200828 12:59:09.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:09.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:09.102" starttime="20200828 12:59:09.101"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:09.102" starttime="20200828 12:59:05.226"></status>
</kw>
<msg timestamp="20200828 12:59:09.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:09.103" starttime="20200828 12:59:05.226"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:09.103" starttime="20200828 12:59:05.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:09.108" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 12824-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:12.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:12.670" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:12.670" starttime="20200828 12:59:09.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:12.671" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200828 12:59:12.671" starttime="20200828 12:59:12.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:12.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:12.672" starttime="20200828 12:59:12.671"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:12.672" starttime="20200828 12:59:09.104"></status>
</kw>
<msg timestamp="20200828 12:59:12.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:12.672" starttime="20200828 12:59:09.103"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:12.673" starttime="20200828 12:59:09.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:12.676" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 12824-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:16.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:16.274" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:16.274" starttime="20200828 12:59:12.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:16.275" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200828 12:59:16.275" starttime="20200828 12:59:16.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:16.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:16.276" starttime="20200828 12:59:16.275"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:16.276" starttime="20200828 12:59:12.674"></status>
</kw>
<msg timestamp="20200828 12:59:16.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:16.277" starttime="20200828 12:59:12.673"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:16.277" starttime="20200828 12:59:12.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:16.281" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 12824-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:19.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:19.991" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:19.991" starttime="20200828 12:59:16.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:19.992" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200828 12:59:19.993" starttime="20200828 12:59:19.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:19.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:19.993" starttime="20200828 12:59:19.993"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:19.994" starttime="20200828 12:59:16.278"></status>
</kw>
<msg timestamp="20200828 12:59:19.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:19.994" starttime="20200828 12:59:16.278"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:19.994" starttime="20200828 12:59:16.277"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:19.995" starttime="20200828 12:55:36.143"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:19.995" starttime="20200828 12:55:36.142"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:19.995" starttime="20200828 12:55:28.768"></status>
</kw>
<test id="s1-s1-s2-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:20.002" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:20.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:20.005" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 12:59:20.005" starttime="20200828 12:59:20.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:20.006" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 12:59:20.007" starttime="20200828 12:59:20.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:20.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:20.008" starttime="20200828 12:59:20.007"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:20.008" starttime="20200828 12:59:19.999"></status>
</kw>
<msg timestamp="20200828 12:59:20.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:20.008" starttime="20200828 12:59:19.998"></status>
</kw>
<msg timestamp="20200828 12:59:20.009" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 12:59:20.009" starttime="20200828 12:59:19.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 12:59:20.010" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 12:59:20.011" starttime="20200828 12:59:20.009"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:20.016" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:20.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:20.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 12:59:20.037" starttime="20200828 12:59:20.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:20.038" level="INFO"></msg>
<status status="PASS" endtime="20200828 12:59:20.039" starttime="20200828 12:59:20.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:20.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:20.039" starttime="20200828 12:59:20.039"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:20.040" starttime="20200828 12:59:20.013"></status>
</kw>
<msg timestamp="20200828 12:59:20.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:20.040" starttime="20200828 12:59:20.012"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:20.040" starttime="20200828 12:59:20.011"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:20.040" starttime="20200828 12:59:20.011"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:20.041" starttime="20200828 12:59:19.997"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:20.041" starttime="20200828 12:59:19.997"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:20.046" level="INFO">Running command 'ozone sh bucket link 12824-source/no-such-bucket 12824-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:23.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:23.835" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:23.835" starttime="20200828 12:59:20.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:23.837" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:59:23.837" starttime="20200828 12:59:23.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:23.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:23.838" starttime="20200828 12:59:23.837"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:23.838" starttime="20200828 12:59:20.043"></status>
</kw>
<msg timestamp="20200828 12:59:23.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:23.838" starttime="20200828 12:59:20.042"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:23.839" starttime="20200828 12:59:20.041"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:23.842" level="INFO">Running command 'ozone sh key list 12824-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:27.525" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 12:59:27.525" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:27.525" starttime="20200828 12:59:23.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:27.527" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket not found</msg>
<status status="PASS" endtime="20200828 12:59:27.527" starttime="20200828 12:59:27.526"></status>
</kw>
<msg timestamp="20200828 12:59:27.527" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:27.527" starttime="20200828 12:59:23.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200828 12:59:27.528" starttime="20200828 12:59:27.527"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 12:59:27.528" critical="yes" starttime="20200828 12:59:19.995"></status>
</test>
<test id="s1-s1-s2-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:27.537" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:27.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:27.539" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 12:59:27.539" starttime="20200828 12:59:27.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:27.540" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 12:59:27.540" starttime="20200828 12:59:27.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:27.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:27.541" starttime="20200828 12:59:27.540"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:27.541" starttime="20200828 12:59:27.533"></status>
</kw>
<msg timestamp="20200828 12:59:27.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:27.541" starttime="20200828 12:59:27.533"></status>
</kw>
<msg timestamp="20200828 12:59:27.542" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 12:59:27.542" starttime="20200828 12:59:27.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 12:59:27.544" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 12:59:27.544" starttime="20200828 12:59:27.543"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:27.550" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:27.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:27.570" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 12:59:27.571" starttime="20200828 12:59:27.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:27.572" level="INFO"></msg>
<status status="PASS" endtime="20200828 12:59:27.572" starttime="20200828 12:59:27.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:27.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:27.573" starttime="20200828 12:59:27.572"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:27.574" starttime="20200828 12:59:27.547"></status>
</kw>
<msg timestamp="20200828 12:59:27.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:27.574" starttime="20200828 12:59:27.546"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:27.575" starttime="20200828 12:59:27.545"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:27.575" starttime="20200828 12:59:27.544"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:27.575" starttime="20200828 12:59:27.531"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:27.575" starttime="20200828 12:59:27.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:27.580" level="INFO">Running command 'ozone sh bucket link 12824-source/bucket1 12824-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:31.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:31.184" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:31.185" starttime="20200828 12:59:27.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:31.186" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:59:31.186" starttime="20200828 12:59:31.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:31.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:31.187" starttime="20200828 12:59:31.186"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:31.187" starttime="20200828 12:59:27.577"></status>
</kw>
<msg timestamp="20200828 12:59:31.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:31.188" starttime="20200828 12:59:27.576"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:31.188" starttime="20200828 12:59:27.575"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:31.192" level="INFO">Running command 'ozone sh bucket create 12824-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:59:34.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:59:34.836" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 12:59:34.836" starttime="20200828 12:59:31.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:59:34.837" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 12:59:34.838" starttime="20200828 12:59:34.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:59:34.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:59:34.839" starttime="20200828 12:59:34.838"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:34.839" starttime="20200828 12:59:31.189"></status>
</kw>
<msg timestamp="20200828 12:59:34.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:59:34.839" starttime="20200828 12:59:31.189"></status>
</kw>
<status status="PASS" endtime="20200828 12:59:34.839" starttime="20200828 12:59:31.188"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:59:34.843" level="INFO">Running command 'ozone sh key put 12824-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:01:27.530" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200828 13:01:27.531" starttime="20200828 12:59:34.841"></status>
</kw>
<status status="FAIL" endtime="20200828 13:01:27.531" starttime="20200828 12:59:34.841"></status>
</kw>
<msg timestamp="20200828 13:01:27.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 13:01:27.531" starttime="20200828 12:59:34.840"></status>
</kw>
<status status="FAIL" endtime="20200828 13:01:27.532" starttime="20200828 12:59:34.840"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:01:27.532" critical="yes" starttime="20200828 12:59:27.529">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s2-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:01:27.542" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:01:27.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:01:27.544" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:01:27.544" starttime="20200828 13:01:27.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:01:27.545" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:01:27.545" starttime="20200828 13:01:27.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:01:27.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:01:27.546" starttime="20200828 13:01:27.545"></status>
</kw>
<status status="PASS" endtime="20200828 13:01:27.546" starttime="20200828 13:01:27.537"></status>
</kw>
<msg timestamp="20200828 13:01:27.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:01:27.546" starttime="20200828 13:01:27.536"></status>
</kw>
<msg timestamp="20200828 13:01:27.546" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:01:27.546" starttime="20200828 13:01:27.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:01:27.547" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:01:27.547" starttime="20200828 13:01:27.547"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:01:27.552" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:01:27.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:01:27.571" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:01:27.571" starttime="20200828 13:01:27.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:01:27.572" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:01:27.572" starttime="20200828 13:01:27.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:01:27.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:01:27.573" starttime="20200828 13:01:27.572"></status>
</kw>
<status status="PASS" endtime="20200828 13:01:27.573" starttime="20200828 13:01:27.549"></status>
</kw>
<msg timestamp="20200828 13:01:27.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:01:27.573" starttime="20200828 13:01:27.549"></status>
</kw>
<status status="PASS" endtime="20200828 13:01:27.573" starttime="20200828 13:01:27.548"></status>
</kw>
<status status="PASS" endtime="20200828 13:01:27.574" starttime="20200828 13:01:27.547"></status>
</kw>
<status status="PASS" endtime="20200828 13:01:27.574" starttime="20200828 13:01:27.535"></status>
</kw>
<status status="PASS" endtime="20200828 13:01:27.574" starttime="20200828 13:01:27.535"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:01:27.579" level="INFO">Running command 'ozone sh key put 12824-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:27.535" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200828 13:03:27.535" starttime="20200828 13:01:27.576"></status>
</kw>
<status status="FAIL" endtime="20200828 13:03:27.536" starttime="20200828 13:01:27.575"></status>
</kw>
<msg timestamp="20200828 13:03:27.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 13:03:27.536" starttime="20200828 13:01:27.575"></status>
</kw>
<status status="FAIL" endtime="20200828 13:03:27.537" starttime="20200828 13:01:27.574"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:03:27.537" critical="yes" starttime="20200828 13:01:27.534">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s2-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:27.546" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:27.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:27.548" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:03:27.548" starttime="20200828 13:03:27.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:27.549" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:03:27.549" starttime="20200828 13:03:27.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:27.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:27.550" starttime="20200828 13:03:27.549"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:27.550" starttime="20200828 13:03:27.542"></status>
</kw>
<msg timestamp="20200828 13:03:27.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:27.551" starttime="20200828 13:03:27.542"></status>
</kw>
<msg timestamp="20200828 13:03:27.551" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:03:27.551" starttime="20200828 13:03:27.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:03:27.552" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:03:27.552" starttime="20200828 13:03:27.551"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:27.556" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:27.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:27.579" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:03:27.579" starttime="20200828 13:03:27.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:27.581" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:03:27.581" starttime="20200828 13:03:27.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:27.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:27.582" starttime="20200828 13:03:27.581"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:27.582" starttime="20200828 13:03:27.554"></status>
</kw>
<msg timestamp="20200828 13:03:27.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:27.582" starttime="20200828 13:03:27.553"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:27.583" starttime="20200828 13:03:27.552"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:27.583" starttime="20200828 13:03:27.552"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:27.583" starttime="20200828 13:03:27.541"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:27.583" starttime="20200828 13:03:27.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:27.588" level="INFO">Running command 'ozone sh key list 12824-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:31.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:31.371" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200828 13:03:31.371" starttime="20200828 13:03:27.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:31.372" level="INFO">key1</msg>
<status status="PASS" endtime="20200828 13:03:31.372" starttime="20200828 13:03:31.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:31.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:31.373" starttime="20200828 13:03:31.372"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:31.373" starttime="20200828 13:03:27.585"></status>
</kw>
<msg timestamp="20200828 13:03:31.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:31.373" starttime="20200828 13:03:27.584"></status>
</kw>
<msg timestamp="20200828 13:03:31.374" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20200828 13:03:31.374" starttime="20200828 13:03:27.583"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:31.378" level="INFO">Running command 'ozone sh key list 12824-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:35.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:35.130" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200828 13:03:35.130" starttime="20200828 13:03:31.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:35.131" level="INFO">key1</msg>
<status status="PASS" endtime="20200828 13:03:35.132" starttime="20200828 13:03:35.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:35.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:35.133" starttime="20200828 13:03:35.132"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:35.133" starttime="20200828 13:03:31.375"></status>
</kw>
<msg timestamp="20200828 13:03:35.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:35.133" starttime="20200828 13:03:31.375"></status>
</kw>
<msg timestamp="20200828 13:03:35.133" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20200828 13:03:35.134" starttime="20200828 13:03:31.374"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20200828 13:03:35.134" starttime="20200828 13:03:35.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200828 13:03:35.135" starttime="20200828 13:03:35.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<msg timestamp="20200828 13:03:35.136" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20200828 13:03:35.136" starttime="20200828 13:03:35.135"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:03:35.136" critical="yes" starttime="20200828 13:03:27.539">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s2-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:35.143" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:35.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:35.146" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:03:35.146" starttime="20200828 13:03:35.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:35.147" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:03:35.147" starttime="20200828 13:03:35.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:35.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:35.148" starttime="20200828 13:03:35.147"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:35.148" starttime="20200828 13:03:35.140"></status>
</kw>
<msg timestamp="20200828 13:03:35.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:35.149" starttime="20200828 13:03:35.139"></status>
</kw>
<msg timestamp="20200828 13:03:35.149" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:03:35.149" starttime="20200828 13:03:35.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:03:35.150" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:03:35.150" starttime="20200828 13:03:35.149"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:35.155" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:35.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:35.175" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:03:35.175" starttime="20200828 13:03:35.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:35.177" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:03:35.177" starttime="20200828 13:03:35.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:35.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:35.178" starttime="20200828 13:03:35.177"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:35.178" starttime="20200828 13:03:35.151"></status>
</kw>
<msg timestamp="20200828 13:03:35.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:35.178" starttime="20200828 13:03:35.151"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:35.179" starttime="20200828 13:03:35.150"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:35.179" starttime="20200828 13:03:35.150"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:35.179" starttime="20200828 13:03:35.138"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:35.179" starttime="20200828 13:03:35.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:35.183" level="INFO">Running command 'ozone sh key delete 12824-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:38.694" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:03:38.694" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:03:38.694" starttime="20200828 13:03:35.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:38.695" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20200828 13:03:38.695" starttime="20200828 13:03:38.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:38.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200828 13:03:38.697" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20200828 13:03:38.697" starttime="20200828 13:03:38.696"></status>
</kw>
<status status="FAIL" endtime="20200828 13:03:38.697" starttime="20200828 13:03:35.181"></status>
</kw>
<msg timestamp="20200828 13:03:38.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 13:03:38.697" starttime="20200828 13:03:35.180"></status>
</kw>
<status status="FAIL" endtime="20200828 13:03:38.697" starttime="20200828 13:03:35.179"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:03:38.698" critical="yes" starttime="20200828 13:03:35.137">255 != 0</status>
</test>
<test id="s1-s1-s2-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:38.704" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:38.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:38.707" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:03:38.707" starttime="20200828 13:03:38.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:38.708" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:03:38.708" starttime="20200828 13:03:38.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:38.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:38.709" starttime="20200828 13:03:38.708"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:38.709" starttime="20200828 13:03:38.701"></status>
</kw>
<msg timestamp="20200828 13:03:38.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:38.710" starttime="20200828 13:03:38.701"></status>
</kw>
<msg timestamp="20200828 13:03:38.710" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:03:38.710" starttime="20200828 13:03:38.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:03:38.711" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:03:38.711" starttime="20200828 13:03:38.710"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:38.715" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:38.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:38.734" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:03:38.734" starttime="20200828 13:03:38.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:38.735" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:03:38.735" starttime="20200828 13:03:38.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:38.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:38.736" starttime="20200828 13:03:38.735"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:38.736" starttime="20200828 13:03:38.713"></status>
</kw>
<msg timestamp="20200828 13:03:38.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:38.736" starttime="20200828 13:03:38.712"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:38.737" starttime="20200828 13:03:38.711"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:38.737" starttime="20200828 13:03:38.711"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:38.737" starttime="20200828 13:03:38.700"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:38.737" starttime="20200828 13:03:38.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:38.743" level="INFO">Running command 'ozone sh bucket list 12824-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:42.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:42.449" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:03:42.450" starttime="20200828 13:03:38.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:42.451" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:59:23.645Z",
  "modificationTime" : "2020-08-28T12:59:23.645Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:59:01.500Z",
  "modificationTime" : "2020-08-28T12:59:01.500Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:59:31.009Z",
  "modificationTime" : "2020-08-28T12:59:31.009Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:58:54.248Z",
  "modificationTime" : "2020-08-28T12:58:54.248Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:58:57.794Z",
  "modificationTime" : "2020-08-28T12:58:57.794Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200828 13:03:42.451" starttime="20200828 13:03:42.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:42.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:42.452" starttime="20200828 13:03:42.451"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:42.452" starttime="20200828 13:03:38.739"></status>
</kw>
<msg timestamp="20200828 13:03:42.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:42.452" starttime="20200828 13:03:38.738"></status>
</kw>
<msg timestamp="20200828 13:03:42.453" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:03:42.453" starttime="20200828 13:03:38.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200828 13:03:42.454" starttime="20200828 13:03:42.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20200828 13:03:42.454" starttime="20200828 13:03:42.454"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:03:42.454" critical="yes" starttime="20200828 13:03:38.698"></status>
</test>
<test id="s1-s1-s2-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:42.461" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:42.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:42.464" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:03:42.465" starttime="20200828 13:03:42.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:42.466" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:03:42.466" starttime="20200828 13:03:42.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:42.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:42.466" starttime="20200828 13:03:42.466"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:42.467" starttime="20200828 13:03:42.459"></status>
</kw>
<msg timestamp="20200828 13:03:42.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:42.467" starttime="20200828 13:03:42.458"></status>
</kw>
<msg timestamp="20200828 13:03:42.467" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:03:42.467" starttime="20200828 13:03:42.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:03:42.468" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:03:42.468" starttime="20200828 13:03:42.468"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:42.473" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:42.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:42.493" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:03:42.493" starttime="20200828 13:03:42.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:42.495" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:03:42.495" starttime="20200828 13:03:42.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:42.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:42.495" starttime="20200828 13:03:42.495"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:42.496" starttime="20200828 13:03:42.470"></status>
</kw>
<msg timestamp="20200828 13:03:42.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:42.496" starttime="20200828 13:03:42.470"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:42.496" starttime="20200828 13:03:42.469"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:42.497" starttime="20200828 13:03:42.468"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:42.497" starttime="20200828 13:03:42.457"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:42.497" starttime="20200828 13:03:42.457"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:42.502" level="INFO">Running command 'ozone sh bucket info 12824-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:46.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:46.434" level="INFO">${output} = 12824-source bucket1</msg>
<status status="PASS" endtime="20200828 13:03:46.434" starttime="20200828 13:03:42.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:46.436" level="INFO">12824-source bucket1</msg>
<status status="PASS" endtime="20200828 13:03:46.436" starttime="20200828 13:03:46.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:46.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:46.437" starttime="20200828 13:03:46.436"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:46.437" starttime="20200828 13:03:42.498"></status>
</kw>
<msg timestamp="20200828 13:03:46.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:46.437" starttime="20200828 13:03:42.498"></status>
</kw>
<msg timestamp="20200828 13:03:46.437" level="INFO">${result} = 12824-source bucket1</msg>
<status status="PASS" endtime="20200828 13:03:46.438" starttime="20200828 13:03:42.497"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20200828 13:03:46.438" starttime="20200828 13:03:46.438"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:03:46.439" critical="yes" starttime="20200828 13:03:42.455"></status>
</test>
<test id="s1-s1-s2-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:46.445" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:46.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:46.447" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:03:46.447" starttime="20200828 13:03:46.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:46.448" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:03:46.448" starttime="20200828 13:03:46.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:46.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:46.449" starttime="20200828 13:03:46.449"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:46.450" starttime="20200828 13:03:46.442"></status>
</kw>
<msg timestamp="20200828 13:03:46.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:46.450" starttime="20200828 13:03:46.442"></status>
</kw>
<msg timestamp="20200828 13:03:46.450" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:03:46.451" starttime="20200828 13:03:46.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:03:46.451" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:03:46.452" starttime="20200828 13:03:46.451"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:46.457" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:46.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:46.476" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:03:46.476" starttime="20200828 13:03:46.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:46.477" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:03:46.477" starttime="20200828 13:03:46.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:46.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:46.478" starttime="20200828 13:03:46.478"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:46.478" starttime="20200828 13:03:46.454"></status>
</kw>
<msg timestamp="20200828 13:03:46.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:46.479" starttime="20200828 13:03:46.453"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:46.479" starttime="20200828 13:03:46.453"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:46.479" starttime="20200828 13:03:46.452"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:46.479" starttime="20200828 13:03:46.441"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:46.479" starttime="20200828 13:03:46.440"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:46.484" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 12824-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:49.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:49.971" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:03:49.971" starttime="20200828 13:03:46.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:49.973" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200828 13:03:49.973" starttime="20200828 13:03:49.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:49.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:49.973" starttime="20200828 13:03:49.973"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:49.974" starttime="20200828 13:03:46.481"></status>
</kw>
<msg timestamp="20200828 13:03:49.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:49.974" starttime="20200828 13:03:46.480"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:49.974" starttime="20200828 13:03:46.480"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:49.980" level="INFO">Running command 'ozone sh bucket getacl 12824-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:53.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:53.623" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200828 13:03:53.623" starttime="20200828 13:03:49.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:53.625" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200828 13:03:53.625" starttime="20200828 13:03:53.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:53.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:53.625" starttime="20200828 13:03:53.625"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:53.626" starttime="20200828 13:03:49.977"></status>
</kw>
<msg timestamp="20200828 13:03:53.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:53.626" starttime="20200828 13:03:49.976"></status>
</kw>
<msg timestamp="20200828 13:03:53.626" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20200828 13:03:53.626" starttime="20200828 13:03:49.975"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200828 13:03:53.627" starttime="20200828 13:03:53.627"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:53.627" starttime="20200828 13:03:49.975"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:53.634" level="INFO">Running command 'ozone sh bucket getacl 12824-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:03:57.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:03:57.359" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:03:57.359" starttime="20200828 13:03:53.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:03:57.360" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:03:57.361" starttime="20200828 13:03:57.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:03:57.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:03:57.361" starttime="20200828 13:03:57.361"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:57.362" starttime="20200828 13:03:53.629"></status>
</kw>
<msg timestamp="20200828 13:03:57.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:03:57.362" starttime="20200828 13:03:53.629"></status>
</kw>
<msg timestamp="20200828 13:03:57.362" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200828 13:03:57.362" starttime="20200828 13:03:53.628"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200828 13:03:57.363" starttime="20200828 13:03:57.362"></status>
</kw>
<status status="PASS" endtime="20200828 13:03:57.363" starttime="20200828 13:03:53.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:03:57.368" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 12824-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:00.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:00.966" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:00.966" starttime="20200828 13:03:57.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:00.967" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20200828 13:04:00.967" starttime="20200828 13:04:00.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:00.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:00.968" starttime="20200828 13:04:00.967"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:00.968" starttime="20200828 13:03:57.364"></status>
</kw>
<msg timestamp="20200828 13:04:00.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:00.969" starttime="20200828 13:03:57.364"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:00.969" starttime="20200828 13:03:57.363"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:00.976" level="INFO">Running command 'ozone sh bucket getacl 12824-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:04.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:04.866" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:04.866" starttime="20200828 13:04:00.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:04.867" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:04.868" starttime="20200828 13:04:04.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:04.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:04.868" starttime="20200828 13:04:04.868"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:04.869" starttime="20200828 13:04:00.971"></status>
</kw>
<msg timestamp="20200828 13:04:04.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:04.869" starttime="20200828 13:04:00.971"></status>
</kw>
<msg timestamp="20200828 13:04:04.869" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20200828 13:04:04.869" starttime="20200828 13:04:00.970"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:04.870" starttime="20200828 13:04:04.869"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:04.870" starttime="20200828 13:04:00.969"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:04.876" level="INFO">Running command 'ozone sh bucket getacl 12824-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:08.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:08.875" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20200828 13:04:08.875" starttime="20200828 13:04:04.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:08.877" level="INFO">READ</msg>
<status status="PASS" endtime="20200828 13:04:08.877" starttime="20200828 13:04:08.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:08.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:08.879" starttime="20200828 13:04:08.877"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:08.879" starttime="20200828 13:04:04.873"></status>
</kw>
<msg timestamp="20200828 13:04:08.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:08.880" starttime="20200828 13:04:04.872"></status>
</kw>
<msg timestamp="20200828 13:04:08.880" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20200828 13:04:08.880" starttime="20200828 13:04:04.871"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:08.881" starttime="20200828 13:04:08.880"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:08.882" starttime="20200828 13:04:04.870"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:04:08.882" critical="yes" starttime="20200828 13:03:46.439"></status>
</test>
<test id="s1-s1-s2-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:08.891" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:08.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:08.892" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:04:08.892" starttime="20200828 13:04:08.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:08.893" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:04:08.894" starttime="20200828 13:04:08.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:08.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:08.894" starttime="20200828 13:04:08.894"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:08.895" starttime="20200828 13:04:08.886"></status>
</kw>
<msg timestamp="20200828 13:04:08.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:08.895" starttime="20200828 13:04:08.886"></status>
</kw>
<msg timestamp="20200828 13:04:08.895" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:04:08.896" starttime="20200828 13:04:08.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:04:08.896" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:04:08.896" starttime="20200828 13:04:08.896"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:08.902" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:08.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:08.920" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:08.920" starttime="20200828 13:04:08.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:08.921" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:08.921" starttime="20200828 13:04:08.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:08.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:08.922" starttime="20200828 13:04:08.922"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:08.923" starttime="20200828 13:04:08.898"></status>
</kw>
<msg timestamp="20200828 13:04:08.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:08.923" starttime="20200828 13:04:08.898"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:08.923" starttime="20200828 13:04:08.897"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:08.923" starttime="20200828 13:04:08.897"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:08.924" starttime="20200828 13:04:08.884"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:08.924" starttime="20200828 13:04:08.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:08.930" level="INFO">Running command 'ozone sh bucket link 12824-source/bucket2 12824-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:12.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:12.681" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:12.682" starttime="20200828 13:04:08.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:12.683" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:04:12.683" starttime="20200828 13:04:12.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:12.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:12.684" starttime="20200828 13:04:12.683"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:12.684" starttime="20200828 13:04:08.925"></status>
</kw>
<msg timestamp="20200828 13:04:12.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:12.684" starttime="20200828 13:04:08.925"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:12.685" starttime="20200828 13:04:08.924"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:12.687" level="INFO">Running command 'ozone sh bucket create 12824-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:16.191" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:04:16.191" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:16.191" starttime="20200828 13:04:12.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:16.192" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200828 13:04:16.193" starttime="20200828 13:04:16.192"></status>
</kw>
<msg timestamp="20200828 13:04:16.193" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:16.193" starttime="20200828 13:04:12.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:16.194" starttime="20200828 13:04:16.193"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:16.198" level="INFO">Running command 'ozone sh bucket create 12824-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:19.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:19.769" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:19.769" starttime="20200828 13:04:16.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:19.770" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:04:19.770" starttime="20200828 13:04:19.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:19.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:19.771" starttime="20200828 13:04:19.771"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:19.771" starttime="20200828 13:04:16.195"></status>
</kw>
<msg timestamp="20200828 13:04:19.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:19.772" starttime="20200828 13:04:16.195"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:19.772" starttime="20200828 13:04:16.194"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:19.775" level="INFO">Running command 'ozone sh bucket link 12824-source/bucket1 12824-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:23.250" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:04:23.250" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:23.250" starttime="20200828 13:04:19.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.251" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20200828 13:04:23.251" starttime="20200828 13:04:23.250"></status>
</kw>
<msg timestamp="20200828 13:04:23.252" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:23.252" starttime="20200828 13:04:19.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:23.252" starttime="20200828 13:04:23.252"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:04:23.252" critical="yes" starttime="20200828 13:04:08.883"></status>
</test>
<test id="s1-s1-s2-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:23.260" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:23.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:23.263" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:04:23.263" starttime="20200828 13:04:23.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.264" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:04:23.264" starttime="20200828 13:04:23.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:23.265" starttime="20200828 13:04:23.264"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.266" starttime="20200828 13:04:23.256"></status>
</kw>
<msg timestamp="20200828 13:04:23.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:23.266" starttime="20200828 13:04:23.256"></status>
</kw>
<msg timestamp="20200828 13:04:23.266" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:04:23.266" starttime="20200828 13:04:23.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:04:23.267" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:04:23.267" starttime="20200828 13:04:23.267"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:23.275" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:23.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:23.290" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:23.290" starttime="20200828 13:04:23.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.291" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:23.291" starttime="20200828 13:04:23.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:23.292" starttime="20200828 13:04:23.291"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.292" starttime="20200828 13:04:23.271"></status>
</kw>
<msg timestamp="20200828 13:04:23.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:23.293" starttime="20200828 13:04:23.270"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.293" starttime="20200828 13:04:23.270"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.293" starttime="20200828 13:04:23.268"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.293" starttime="20200828 13:04:23.255"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.293" starttime="20200828 13:04:23.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:23.299" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:23.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:23.302" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:23.302" starttime="20200828 13:04:23.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.303" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:23.304" starttime="20200828 13:04:23.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:23.304" starttime="20200828 13:04:23.304"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.305" starttime="20200828 13:04:23.295"></status>
</kw>
<msg timestamp="20200828 13:04:23.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:23.305" starttime="20200828 13:04:23.295"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.305" starttime="20200828 13:04:23.295"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:23.311" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:23.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:23.314" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:04:23.314" starttime="20200828 13:04:23.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.315" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:04:23.315" starttime="20200828 13:04:23.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:23.316" starttime="20200828 13:04:23.315"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.316" starttime="20200828 13:04:23.307"></status>
</kw>
<msg timestamp="20200828 13:04:23.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:23.316" starttime="20200828 13:04:23.307"></status>
</kw>
<msg timestamp="20200828 13:04:23.317" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:04:23.317" starttime="20200828 13:04:23.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:04:23.318" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:04:23.318" starttime="20200828 13:04:23.317"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:23.323" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:23.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:23.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:23.342" starttime="20200828 13:04:23.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.344" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:23.344" starttime="20200828 13:04:23.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:23.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:23.345" starttime="20200828 13:04:23.344"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.345" starttime="20200828 13:04:23.319"></status>
</kw>
<msg timestamp="20200828 13:04:23.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:23.346" starttime="20200828 13:04:23.319"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.346" starttime="20200828 13:04:23.318"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.346" starttime="20200828 13:04:23.318"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.346" starttime="20200828 13:04:23.306"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:23.346" starttime="20200828 13:04:23.305"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:23.350" level="INFO">Running command 'ozone sh key list 12824-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:27.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:27.167" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:27.167" starttime="20200828 13:04:23.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.168" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "12824-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-08-28T12:55:43.722Z",
  "modificationTime" : "2020-08-28T12:58:45.558Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20200828 13:04:27.168" starttime="20200828 13:04:27.167"></status>
</kw>
<msg timestamp="20200828 13:04:27.168" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:27.169" starttime="20200828 13:04:23.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:27.169" starttime="20200828 13:04:27.169"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.169" starttime="20200828 13:04:23.294"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.169" starttime="20200828 13:04:23.294"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:04:27.170" critical="yes" starttime="20200828 13:04:23.253"></status>
</test>
<test id="s1-s1-s2-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:27.178" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:27.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:27.180" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:04:27.180" starttime="20200828 13:04:27.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.181" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:04:27.182" starttime="20200828 13:04:27.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:27.182" starttime="20200828 13:04:27.182"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.183" starttime="20200828 13:04:27.174"></status>
</kw>
<msg timestamp="20200828 13:04:27.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:27.183" starttime="20200828 13:04:27.173"></status>
</kw>
<msg timestamp="20200828 13:04:27.183" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:04:27.183" starttime="20200828 13:04:27.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:04:27.184" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:04:27.184" starttime="20200828 13:04:27.184"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:27.189" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:27.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:27.219" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:27.219" starttime="20200828 13:04:27.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.224" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:27.224" starttime="20200828 13:04:27.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:27.225" starttime="20200828 13:04:27.224"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.225" starttime="20200828 13:04:27.186"></status>
</kw>
<msg timestamp="20200828 13:04:27.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:27.226" starttime="20200828 13:04:27.186"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.226" starttime="20200828 13:04:27.185"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.226" starttime="20200828 13:04:27.184"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.226" starttime="20200828 13:04:27.172"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.226" starttime="20200828 13:04:27.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:27.232" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:27.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:27.236" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:27.237" starttime="20200828 13:04:27.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.238" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:27.238" starttime="20200828 13:04:27.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:27.239" starttime="20200828 13:04:27.238"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.239" starttime="20200828 13:04:27.229"></status>
</kw>
<msg timestamp="20200828 13:04:27.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:27.239" starttime="20200828 13:04:27.228"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.240" starttime="20200828 13:04:27.228"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:27.245" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:27.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:27.248" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:04:27.248" starttime="20200828 13:04:27.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.250" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:04:27.250" starttime="20200828 13:04:27.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:27.251" starttime="20200828 13:04:27.250"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.251" starttime="20200828 13:04:27.242"></status>
</kw>
<msg timestamp="20200828 13:04:27.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:27.251" starttime="20200828 13:04:27.241"></status>
</kw>
<msg timestamp="20200828 13:04:27.252" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:04:27.252" starttime="20200828 13:04:27.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:04:27.252" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:04:27.253" starttime="20200828 13:04:27.252"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:27.258" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:27.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:27.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:27.274" starttime="20200828 13:04:27.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.275" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:27.276" starttime="20200828 13:04:27.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:27.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:27.276" starttime="20200828 13:04:27.276"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.277" starttime="20200828 13:04:27.255"></status>
</kw>
<msg timestamp="20200828 13:04:27.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:27.277" starttime="20200828 13:04:27.254"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.277" starttime="20200828 13:04:27.253"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.277" starttime="20200828 13:04:27.253"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.278" starttime="20200828 13:04:27.240"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:27.278" starttime="20200828 13:04:27.240"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:27.281" level="INFO">Running command 'ozone sh key list 12824-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:30.729" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:04:30.729" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:30.729" starttime="20200828 13:04:27.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.731" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20200828 13:04:30.731" starttime="20200828 13:04:30.730"></status>
</kw>
<msg timestamp="20200828 13:04:30.731" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:30.731" starttime="20200828 13:04:27.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:30.732" starttime="20200828 13:04:30.732"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.732" starttime="20200828 13:04:27.227"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.732" starttime="20200828 13:04:27.227"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:04:30.733" critical="yes" starttime="20200828 13:04:27.171"></status>
</test>
<test id="s1-s1-s2-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:30.739" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:30.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:30.742" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:04:30.742" starttime="20200828 13:04:30.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.743" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:04:30.743" starttime="20200828 13:04:30.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:30.744" starttime="20200828 13:04:30.743"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.745" starttime="20200828 13:04:30.736"></status>
</kw>
<msg timestamp="20200828 13:04:30.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:30.745" starttime="20200828 13:04:30.736"></status>
</kw>
<msg timestamp="20200828 13:04:30.745" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:04:30.745" starttime="20200828 13:04:30.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:04:30.746" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:04:30.746" starttime="20200828 13:04:30.746"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:30.751" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:30.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:30.770" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:30.770" starttime="20200828 13:04:30.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.771" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:30.771" starttime="20200828 13:04:30.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:30.772" starttime="20200828 13:04:30.771"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.772" starttime="20200828 13:04:30.748"></status>
</kw>
<msg timestamp="20200828 13:04:30.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:30.772" starttime="20200828 13:04:30.748"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.773" starttime="20200828 13:04:30.747"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.773" starttime="20200828 13:04:30.746"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.773" starttime="20200828 13:04:30.735"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.773" starttime="20200828 13:04:30.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:30.778" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:30.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:30.782" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:30.783" starttime="20200828 13:04:30.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.784" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:30.784" starttime="20200828 13:04:30.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:30.785" starttime="20200828 13:04:30.784"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.785" starttime="20200828 13:04:30.775"></status>
</kw>
<msg timestamp="20200828 13:04:30.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:30.785" starttime="20200828 13:04:30.775"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.785" starttime="20200828 13:04:30.774"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:30.790" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:30.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:30.793" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:04:30.793" starttime="20200828 13:04:30.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.794" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:04:30.794" starttime="20200828 13:04:30.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:30.795" starttime="20200828 13:04:30.794"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.795" starttime="20200828 13:04:30.787"></status>
</kw>
<msg timestamp="20200828 13:04:30.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:30.796" starttime="20200828 13:04:30.787"></status>
</kw>
<msg timestamp="20200828 13:04:30.796" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:04:30.796" starttime="20200828 13:04:30.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:04:30.797" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:04:30.797" starttime="20200828 13:04:30.796"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:30.803" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:30.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:30.818" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:30.818" starttime="20200828 13:04:30.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.819" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:30.819" starttime="20200828 13:04:30.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:30.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:30.820" starttime="20200828 13:04:30.819"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.820" starttime="20200828 13:04:30.799"></status>
</kw>
<msg timestamp="20200828 13:04:30.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:30.821" starttime="20200828 13:04:30.799"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.821" starttime="20200828 13:04:30.798"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.821" starttime="20200828 13:04:30.797"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.821" starttime="20200828 13:04:30.786"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:30.821" starttime="20200828 13:04:30.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:30.827" level="INFO">Running command 'ozone sh bucket info 12824-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:34.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:34.900" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:34.900" starttime="20200828 13:04:30.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:34.901" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:59:01.500Z",
  "modificationTime" : "2020-08-28T12:59:01.500Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "unreadable-bucket"
}</msg>
<status status="PASS" endtime="20200828 13:04:34.902" starttime="20200828 13:04:34.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:34.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:34.902" starttime="20200828 13:04:34.902"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:34.903" starttime="20200828 13:04:30.822"></status>
</kw>
<msg timestamp="20200828 13:04:34.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:34.903" starttime="20200828 13:04:30.822"></status>
</kw>
<msg timestamp="20200828 13:04:34.903" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:34.903" starttime="20200828 13:04:30.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:34.904" starttime="20200828 13:04:34.903"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:34.904" starttime="20200828 13:04:34.904"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:34.908" level="INFO">Running command 'ozone sh key list 12824-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:38.506" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:04:38.506" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:38.506" starttime="20200828 13:04:34.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:38.508" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED org.apache.hadoop.ozone.om.exceptions.OMException: User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20200828 13:04:38.508" starttime="20200828 13:04:38.507"></status>
</kw>
<msg timestamp="20200828 13:04:38.508" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:38.508" starttime="20200828 13:04:34.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:38.509" starttime="20200828 13:04:38.508"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:38.509" starttime="20200828 13:04:30.774"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:38.509" starttime="20200828 13:04:30.773"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:04:38.509" critical="yes" starttime="20200828 13:04:30.734"></status>
</test>
<test id="s1-s1-s2-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:38.516" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:38.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:38.519" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:04:38.519" starttime="20200828 13:04:38.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:38.520" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:04:38.520" starttime="20200828 13:04:38.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:38.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:38.521" starttime="20200828 13:04:38.520"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:38.521" starttime="20200828 13:04:38.513"></status>
</kw>
<msg timestamp="20200828 13:04:38.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:38.522" starttime="20200828 13:04:38.513"></status>
</kw>
<msg timestamp="20200828 13:04:38.522" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:04:38.522" starttime="20200828 13:04:38.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:04:38.523" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:04:38.523" starttime="20200828 13:04:38.522"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:38.528" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:38.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:38.543" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:38.544" starttime="20200828 13:04:38.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:38.545" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:38.545" starttime="20200828 13:04:38.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:38.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:38.546" starttime="20200828 13:04:38.545"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:38.546" starttime="20200828 13:04:38.525"></status>
</kw>
<msg timestamp="20200828 13:04:38.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:38.546" starttime="20200828 13:04:38.525"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:38.547" starttime="20200828 13:04:38.524"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:38.547" starttime="20200828 13:04:38.523"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:38.547" starttime="20200828 13:04:38.512"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:38.547" starttime="20200828 13:04:38.511"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:38.552" level="INFO">Running command 'ozone sh bucket link 12824-target/loop1 12824-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:42.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:42.037" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:42.037" starttime="20200828 13:04:38.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:42.038" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:04:42.039" starttime="20200828 13:04:42.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:42.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:42.039" starttime="20200828 13:04:42.039"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:42.040" starttime="20200828 13:04:38.548"></status>
</kw>
<msg timestamp="20200828 13:04:42.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:42.040" starttime="20200828 13:04:38.548"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:42.041" starttime="20200828 13:04:38.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:42.045" level="INFO">Running command 'ozone sh bucket link 12824-target/loop2 12824-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:45.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:45.628" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:45.628" starttime="20200828 13:04:42.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:45.629" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:04:45.629" starttime="20200828 13:04:45.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:45.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:45.630" starttime="20200828 13:04:45.630"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:45.631" starttime="20200828 13:04:42.042"></status>
</kw>
<msg timestamp="20200828 13:04:45.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:45.631" starttime="20200828 13:04:42.041"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:45.631" starttime="20200828 13:04:42.041"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:45.637" level="INFO">Running command 'ozone sh bucket link 12824-target/loop3 12824-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:49.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:49.521" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:49.521" starttime="20200828 13:04:45.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:49.523" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:04:49.523" starttime="20200828 13:04:49.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:49.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:49.524" starttime="20200828 13:04:49.523"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:49.524" starttime="20200828 13:04:45.632"></status>
</kw>
<msg timestamp="20200828 13:04:49.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:49.524" starttime="20200828 13:04:45.632"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:49.525" starttime="20200828 13:04:45.631"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:49.528" level="INFO">Running command 'ozone sh key list 12824-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:53.035" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:04:53.036" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:53.036" starttime="20200828 13:04:49.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:53.037" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS org.apache.hadoop.ozone.om.exceptions.OMException: Detected loop in bucket links</msg>
<status status="PASS" endtime="20200828 13:04:53.037" starttime="20200828 13:04:53.036"></status>
</kw>
<msg timestamp="20200828 13:04:53.037" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:53.037" starttime="20200828 13:04:49.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20200828 13:04:53.038" starttime="20200828 13:04:53.038"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:04:53.038" critical="yes" starttime="20200828 13:04:38.510"></status>
</test>
<test id="s1-s1-s2-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:53.045" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:53.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:53.048" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:04:53.048" starttime="20200828 13:04:53.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:53.049" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:04:53.049" starttime="20200828 13:04:53.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:53.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:53.050" starttime="20200828 13:04:53.049"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:53.050" starttime="20200828 13:04:53.042"></status>
</kw>
<msg timestamp="20200828 13:04:53.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:53.050" starttime="20200828 13:04:53.041"></status>
</kw>
<msg timestamp="20200828 13:04:53.051" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:04:53.051" starttime="20200828 13:04:53.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:04:53.052" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:04:53.052" starttime="20200828 13:04:53.051"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:53.056" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:53.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:53.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:04:53.073" starttime="20200828 13:04:53.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:53.075" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:04:53.075" starttime="20200828 13:04:53.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:53.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:53.075" starttime="20200828 13:04:53.075"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:53.076" starttime="20200828 13:04:53.054"></status>
</kw>
<msg timestamp="20200828 13:04:53.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:53.076" starttime="20200828 13:04:53.053"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:53.076" starttime="20200828 13:04:53.053"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:53.077" starttime="20200828 13:04:53.052"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:53.077" starttime="20200828 13:04:53.040"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:53.077" starttime="20200828 13:04:53.040"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:53.082" level="INFO">Running command 'ozone sh bucket link 12824-source/bucket1 12824-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:04:56.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:04:56.660" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:04:56.660" starttime="20200828 13:04:53.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:04:56.661" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:04:56.662" starttime="20200828 13:04:56.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:04:56.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:04:56.662" starttime="20200828 13:04:56.662"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:56.663" starttime="20200828 13:04:53.078"></status>
</kw>
<msg timestamp="20200828 13:04:56.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:04:56.663" starttime="20200828 13:04:53.078"></status>
</kw>
<status status="PASS" endtime="20200828 13:04:56.663" starttime="20200828 13:04:53.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:04:56.667" level="INFO">Running command 'ozone sh key put 12824-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:06:53.040" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200828 13:06:53.040" starttime="20200828 13:04:56.665"></status>
</kw>
<status status="FAIL" endtime="20200828 13:06:53.041" starttime="20200828 13:04:56.664"></status>
</kw>
<msg timestamp="20200828 13:06:53.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 13:06:53.041" starttime="20200828 13:04:56.664"></status>
</kw>
<status status="FAIL" endtime="20200828 13:06:53.041" starttime="20200828 13:04:56.663"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:06:53.041" critical="yes" starttime="20200828 13:04:53.039">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s2-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:06:53.050" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:06:53.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:06:53.052" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:06:53.052" starttime="20200828 13:06:53.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:06:53.053" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:06:53.053" starttime="20200828 13:06:53.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:06:53.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:06:53.054" starttime="20200828 13:06:53.053"></status>
</kw>
<status status="PASS" endtime="20200828 13:06:53.054" starttime="20200828 13:06:53.046"></status>
</kw>
<msg timestamp="20200828 13:06:53.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:06:53.054" starttime="20200828 13:06:53.046"></status>
</kw>
<msg timestamp="20200828 13:06:53.054" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:06:53.054" starttime="20200828 13:06:53.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:06:53.055" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:06:53.055" starttime="20200828 13:06:53.055"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:06:53.060" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:06:53.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:06:53.076" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:06:53.076" starttime="20200828 13:06:53.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:06:53.077" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:06:53.077" starttime="20200828 13:06:53.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:06:53.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:06:53.078" starttime="20200828 13:06:53.077"></status>
</kw>
<status status="PASS" endtime="20200828 13:06:53.078" starttime="20200828 13:06:53.057"></status>
</kw>
<msg timestamp="20200828 13:06:53.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:06:53.079" starttime="20200828 13:06:53.056"></status>
</kw>
<status status="PASS" endtime="20200828 13:06:53.079" starttime="20200828 13:06:53.056"></status>
</kw>
<status status="PASS" endtime="20200828 13:06:53.079" starttime="20200828 13:06:53.055"></status>
</kw>
<status status="PASS" endtime="20200828 13:06:53.079" starttime="20200828 13:06:53.045"></status>
</kw>
<status status="PASS" endtime="20200828 13:06:53.079" starttime="20200828 13:06:53.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:06:53.084" level="INFO">Running command 'ozone sh bucket delete 12824-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:06:56.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:06:56.853" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:06:56.853" starttime="20200828 13:06:53.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:06:56.854" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:06:56.854" starttime="20200828 13:06:56.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:06:56.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:06:56.855" starttime="20200828 13:06:56.854"></status>
</kw>
<status status="PASS" endtime="20200828 13:06:56.855" starttime="20200828 13:06:53.081"></status>
</kw>
<msg timestamp="20200828 13:06:56.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:06:56.855" starttime="20200828 13:06:53.080"></status>
</kw>
<status status="PASS" endtime="20200828 13:06:56.855" starttime="20200828 13:06:53.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:06:56.861" level="INFO">Running command 'ozone sh bucket list 12824-target 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:00.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:00.628" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:07:00.628" starttime="20200828 13:06:56.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:00.629" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T13:04:19.491Z",
  "modificationTime" : "2020-08-28T13:04:19.491Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:59:23.645Z",
  "modificationTime" : "2020-08-28T12:59:23.645Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "no-such-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:59:01.500Z",
  "modificationTime" : "2020-08-28T12:59:01.500Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "unreadable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T13:04:12.500Z",
  "modificationTime" : "2020-08-28T13:04:12.500Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "bucket2"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T13:04:56.462Z",
  "modificationTime" : "2020-08-28T13:04:56.462Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "bucket1"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T13:04:49.200Z",
  "modificationTime" : "2020-08-28T13:04:49.200Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-target",
  "sourceBucket" : "loop3"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T13:04:41.875Z",
  "modificationTime" : "2020-08-28T13:04:41.875Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-target",
  "sourceBucket" : "loop1"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T13:04:45.480Z",
  "modificationTime" : "2020-08-28T13:04:45.480Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-target",
  "sourceBucket" : "loop2"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:58:54.248Z",
  "modificationTime" : "2020-08-28T12:58:54.248Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "readable-bucket"
}
{
  "metadata" : { },
  "volumeName" : "12824-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : "2020-08-28T12:58:57.794Z",
  "modificationTime" : "2020-08-28T12:58:57.794Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "12824-source",
  "sourceBucket" : "readable-bucket"
}</msg>
<status status="PASS" endtime="20200828 13:07:00.630" starttime="20200828 13:07:00.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:00.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:00.630" starttime="20200828 13:07:00.630"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:00.631" starttime="20200828 13:06:56.857"></status>
</kw>
<msg timestamp="20200828 13:07:00.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:00.631" starttime="20200828 13:06:56.856"></status>
</kw>
<msg timestamp="20200828 13:07:00.631" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:07:00.631" starttime="20200828 13:06:56.856"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20200828 13:07:00.632" starttime="20200828 13:07:00.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:00.636" level="INFO">Running command 'ozone sh key list 12824-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:04.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:04.360" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20200828 13:07:04.360" starttime="20200828 13:07:00.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:04.361" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20200828 13:07:04.362" starttime="20200828 13:07:04.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:04.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:04.362" starttime="20200828 13:07:04.362"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:04.362" starttime="20200828 13:07:00.633"></status>
</kw>
<msg timestamp="20200828 13:07:04.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:04.363" starttime="20200828 13:07:00.633"></status>
</kw>
<msg timestamp="20200828 13:07:04.363" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20200828 13:07:04.363" starttime="20200828 13:07:00.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200828 13:07:04.364" starttime="20200828 13:07:04.363"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:07:04.364" critical="yes" starttime="20200828 13:06:53.043"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20200828 13:07:04.368" starttime="20200828 12:55:28.756"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s3" name="Ozone-Shell-Single">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200828 13:07:04.397" level="INFO">${random} = 40462</msg>
<status status="PASS" endtime="20200828 13:07:04.397" starttime="20200828 13:07:04.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200828 13:07:04.398" level="INFO">${prefix} = 40462</msg>
<status status="PASS" endtime="20200828 13:07:04.398" starttime="20200828 13:07:04.398"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:04.398" starttime="20200828 13:07:04.396"></status>
</kw>
<test id="s1-s1-s3-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:04.405" level="INFO">Running command 'ozone sh volume info /40462-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:08.245" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:07:08.246" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:07:08.246" starttime="20200828 13:07:04.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:08.247" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 40462-rpcbasic is not found</msg>
<status status="PASS" endtime="20200828 13:07:08.247" starttime="20200828 13:07:08.246"></status>
</kw>
<msg timestamp="20200828 13:07:08.248" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:07:08.248" starttime="20200828 13:07:04.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200828 13:07:08.248" starttime="20200828 13:07:08.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:08.252" level="INFO">Running command 'ozone sh volume create /40462-rpcbasic --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:12.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:12.052" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:07:12.052" starttime="20200828 13:07:08.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:12.054" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:07:12.054" starttime="20200828 13:07:12.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:12.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:12.055" starttime="20200828 13:07:12.054"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:12.055" starttime="20200828 13:07:08.249"></status>
</kw>
<msg timestamp="20200828 13:07:12.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:12.055" starttime="20200828 13:07:08.249"></status>
</kw>
<msg timestamp="20200828 13:07:12.056" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:07:12.056" starttime="20200828 13:07:08.248"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200828 13:07:12.056" starttime="20200828 13:07:12.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:12.062" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="40462-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:15.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:15.890" level="INFO">${output} = {
  "metadata": {},
  "name": "40462-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:07:11.888Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" endtime="20200828 13:07:15.890" starttime="20200828 13:07:12.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:15.891" level="INFO">{
  "metadata": {},
  "name": "40462-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:07:11.888Z",
  "modificationTime": "2020-08-28T13:07:11.888Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200828 13:07:15.892" starttime="20200828 13:07:15.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:15.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:15.892" starttime="20200828 13:07:15.892"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:15.893" starttime="20200828 13:07:12.058"></status>
</kw>
<msg timestamp="20200828 13:07:15.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:15.893" starttime="20200828 13:07:12.057"></status>
</kw>
<msg timestamp="20200828 13:07:15.893" level="INFO">${result} = {
  "metadata": {},
  "name": "40462-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:07:11.888Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" endtime="20200828 13:07:15.893" starttime="20200828 13:07:12.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200828 13:07:15.894" starttime="20200828 13:07:15.893"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:15.899" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="40462-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:19.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:19.690" level="INFO">${output} = {
  "metadata": {},
  "name": "40462-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:07:11.888Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" endtime="20200828 13:07:19.690" starttime="20200828 13:07:15.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:19.692" level="INFO">{
  "metadata": {},
  "name": "40462-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:07:11.888Z",
  "modificationTime": "2020-08-28T13:07:11.888Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200828 13:07:19.692" starttime="20200828 13:07:19.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:19.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:19.693" starttime="20200828 13:07:19.692"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:19.693" starttime="20200828 13:07:15.895"></status>
</kw>
<msg timestamp="20200828 13:07:19.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:19.693" starttime="20200828 13:07:15.895"></status>
</kw>
<msg timestamp="20200828 13:07:19.694" level="INFO">${result} = {
  "metadata": {},
  "name": "40462-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:07:11.888Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" endtime="20200828 13:07:19.694" starttime="20200828 13:07:15.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200828 13:07:19.694" starttime="20200828 13:07:19.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:19.698" level="INFO">Running command 'ozone sh volume update /40462-rpcbasic --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:23.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:23.566" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:07:23.566" starttime="20200828 13:07:19.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:23.568" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "40462-rpcbasic",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-08-28T13:07:11.888Z",
  "modificationTime" : "2020-08-28T13:07:23.202Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200828 13:07:23.568" starttime="20200828 13:07:23.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:23.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:23.569" starttime="20200828 13:07:23.568"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:23.569" starttime="20200828 13:07:19.696"></status>
</kw>
<msg timestamp="20200828 13:07:23.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:23.570" starttime="20200828 13:07:19.695"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:23.570" starttime="20200828 13:07:19.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:23.575" level="INFO">Running command 'ozone sh volume info /40462-rpcbasic | jq -r '. | select(.name=="40462-rpcbasic") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:27.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:27.633" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200828 13:07:27.633" starttime="20200828 13:07:23.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:27.635" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200828 13:07:27.636" starttime="20200828 13:07:27.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:27.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:27.637" starttime="20200828 13:07:27.636"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:27.637" starttime="20200828 13:07:23.572"></status>
</kw>
<msg timestamp="20200828 13:07:27.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:27.637" starttime="20200828 13:07:23.572"></status>
</kw>
<msg timestamp="20200828 13:07:27.638" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200828 13:07:27.638" starttime="20200828 13:07:23.570"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200828 13:07:27.638" starttime="20200828 13:07:27.638"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:27.643" level="INFO">Running command 'ozone sh bucket create /40462-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:31.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:31.196" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:07:31.196" starttime="20200828 13:07:27.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:31.197" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:07:31.198" starttime="20200828 13:07:31.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:31.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:31.198" starttime="20200828 13:07:31.198"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:31.199" starttime="20200828 13:07:27.640"></status>
</kw>
<msg timestamp="20200828 13:07:31.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:31.199" starttime="20200828 13:07:27.639"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:31.199" starttime="20200828 13:07:27.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:31.205" level="INFO">Running command 'ozone sh bucket info /40462-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:34.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:34.954" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200828 13:07:34.954" starttime="20200828 13:07:31.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:34.955" level="INFO">DISK</msg>
<status status="PASS" endtime="20200828 13:07:34.955" starttime="20200828 13:07:34.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:34.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:34.956" starttime="20200828 13:07:34.955"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:34.956" starttime="20200828 13:07:31.201"></status>
</kw>
<msg timestamp="20200828 13:07:34.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:34.957" starttime="20200828 13:07:31.201"></status>
</kw>
<msg timestamp="20200828 13:07:34.957" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200828 13:07:34.957" starttime="20200828 13:07:31.200"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200828 13:07:34.958" starttime="20200828 13:07:34.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:34.962" level="INFO">Running command 'ozone sh bucket list /40462-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:07:38.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:07:38.564" level="INFO">${output} = 40462-rpcbasic</msg>
<status status="PASS" endtime="20200828 13:07:38.564" starttime="20200828 13:07:34.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:07:38.565" level="INFO">40462-rpcbasic</msg>
<status status="PASS" endtime="20200828 13:07:38.566" starttime="20200828 13:07:38.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:07:38.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:07:38.566" starttime="20200828 13:07:38.566"></status>
</kw>
<status status="PASS" endtime="20200828 13:07:38.567" starttime="20200828 13:07:34.959"></status>
</kw>
<msg timestamp="20200828 13:07:38.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:07:38.567" starttime="20200828 13:07:34.959"></status>
</kw>
<msg timestamp="20200828 13:07:38.567" level="INFO">${result} = 40462-rpcbasic</msg>
<status status="PASS" endtime="20200828 13:07:38.568" starttime="20200828 13:07:34.958"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200828 13:07:38.568" starttime="20200828 13:07:38.568"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:07:38.575" level="INFO">Running command 'ozone sh key put /40462-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:04.400" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200828 13:09:04.400" starttime="20200828 13:07:38.572"></status>
</kw>
<status status="FAIL" endtime="20200828 13:09:04.400" starttime="20200828 13:07:38.571"></status>
</kw>
<msg timestamp="20200828 13:09:04.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 13:09:04.401" starttime="20200828 13:07:38.570"></status>
</kw>
<status status="FAIL" endtime="20200828 13:09:04.401" starttime="20200828 13:07:38.570"></status>
</kw>
<status status="FAIL" endtime="20200828 13:09:04.401" starttime="20200828 13:07:38.569"></status>
</kw>
<status status="FAIL" endtime="20200828 13:09:04.401" starttime="20200828 13:07:38.568"></status>
</kw>
<status status="FAIL" endtime="20200828 13:09:04.402" starttime="20200828 13:07:04.399"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:09:04.402" critical="yes" starttime="20200828 13:07:04.399">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20200828 13:09:04.403" starttime="20200828 13:07:04.377"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s4" name="Ozone-Shell">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200828 13:09:04.422" level="INFO">${random} = 86305</msg>
<status status="PASS" endtime="20200828 13:09:04.422" starttime="20200828 13:09:04.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200828 13:09:04.423" level="INFO">${prefix} = 86305</msg>
<status status="PASS" endtime="20200828 13:09:04.423" starttime="20200828 13:09:04.423"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:04.424" starttime="20200828 13:09:04.418"></status>
</kw>
<test id="s1-s1-s4-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:04.431" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:04.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:04.434" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:09:04.434" starttime="20200828 13:09:04.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:04.436" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:09:04.436" starttime="20200828 13:09:04.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:04.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:04.437" starttime="20200828 13:09:04.436"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:04.437" starttime="20200828 13:09:04.427"></status>
</kw>
<msg timestamp="20200828 13:09:04.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:04.437" starttime="20200828 13:09:04.427"></status>
</kw>
<msg timestamp="20200828 13:09:04.438" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:09:04.438" starttime="20200828 13:09:04.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:09:04.439" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:09:04.440" starttime="20200828 13:09:04.438"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:04.445" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:04.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:04.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:09:04.474" starttime="20200828 13:09:04.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:04.475" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:09:04.475" starttime="20200828 13:09:04.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:04.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:04.476" starttime="20200828 13:09:04.475"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:04.477" starttime="20200828 13:09:04.442"></status>
</kw>
<msg timestamp="20200828 13:09:04.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:04.477" starttime="20200828 13:09:04.441"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:04.477" starttime="20200828 13:09:04.441"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:04.477" starttime="20200828 13:09:04.440"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:04.477" starttime="20200828 13:09:04.426"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:04.477" starttime="20200828 13:09:04.425"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:04.482" level="INFO">Running command 'ozone sh volume info o3://om:9862/86305-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:08.315" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:09:08.315" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:09:08.315" starttime="20200828 13:09:04.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:08.317" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 86305-rpcwoport is not found</msg>
<status status="PASS" endtime="20200828 13:09:08.317" starttime="20200828 13:09:08.316"></status>
</kw>
<msg timestamp="20200828 13:09:08.317" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:09:08.317" starttime="20200828 13:09:04.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200828 13:09:08.318" starttime="20200828 13:09:08.317"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:08.322" level="INFO">Running command 'ozone sh volume create o3://om:9862/86305-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:12.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:12.005" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:09:12.005" starttime="20200828 13:09:08.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:12.006" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:09:12.006" starttime="20200828 13:09:12.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:12.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:12.007" starttime="20200828 13:09:12.006"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:12.007" starttime="20200828 13:09:08.320"></status>
</kw>
<msg timestamp="20200828 13:09:12.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:12.008" starttime="20200828 13:09:08.319"></status>
</kw>
<msg timestamp="20200828 13:09:12.008" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:09:12.008" starttime="20200828 13:09:08.318"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200828 13:09:12.009" starttime="20200828 13:09:12.008"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:12.013" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="86305-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:15.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:15.860" level="INFO">${output} = {
  "metadata": {},
  "name": "86305-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:09:11.832Z",
  "modificationTime": "2020...</msg>
<status status="PASS" endtime="20200828 13:09:15.860" starttime="20200828 13:09:12.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:15.862" level="INFO">{
  "metadata": {},
  "name": "86305-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:09:11.832Z",
  "modificationTime": "2020-08-28T13:09:11.832Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200828 13:09:15.862" starttime="20200828 13:09:15.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:15.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:15.862" starttime="20200828 13:09:15.862"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:15.863" starttime="20200828 13:09:12.010"></status>
</kw>
<msg timestamp="20200828 13:09:15.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:15.863" starttime="20200828 13:09:12.010"></status>
</kw>
<msg timestamp="20200828 13:09:15.863" level="INFO">${result} = {
  "metadata": {},
  "name": "86305-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:09:11.832Z",
  "modificationTime": "2020...</msg>
<status status="PASS" endtime="20200828 13:09:15.863" starttime="20200828 13:09:12.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200828 13:09:15.864" starttime="20200828 13:09:15.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:15.868" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="86305-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:19.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:19.519" level="INFO">${output} = {
  "metadata": {},
  "name": "86305-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:09:11.832Z",
  "modificationTime": "2020...</msg>
<status status="PASS" endtime="20200828 13:09:19.519" starttime="20200828 13:09:15.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:19.520" level="INFO">{
  "metadata": {},
  "name": "86305-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:09:11.832Z",
  "modificationTime": "2020-08-28T13:09:11.832Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200828 13:09:19.520" starttime="20200828 13:09:19.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:19.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:19.521" starttime="20200828 13:09:19.520"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:19.521" starttime="20200828 13:09:15.865"></status>
</kw>
<msg timestamp="20200828 13:09:19.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:19.522" starttime="20200828 13:09:15.865"></status>
</kw>
<msg timestamp="20200828 13:09:19.522" level="INFO">${result} = {
  "metadata": {},
  "name": "86305-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:09:11.832Z",
  "modificationTime": "2020...</msg>
<status status="PASS" endtime="20200828 13:09:19.522" starttime="20200828 13:09:15.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200828 13:09:19.523" starttime="20200828 13:09:19.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:19.527" level="INFO">Running command 'ozone sh volume update o3://om:9862/86305-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:23.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:23.597" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:09:23.597" starttime="20200828 13:09:19.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:23.599" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "86305-rpcwoport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-08-28T13:09:11.832Z",
  "modificationTime" : "2020-08-28T13:09:23.076Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200828 13:09:23.599" starttime="20200828 13:09:23.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:23.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:23.600" starttime="20200828 13:09:23.599"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:23.600" starttime="20200828 13:09:19.524"></status>
</kw>
<msg timestamp="20200828 13:09:23.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:23.600" starttime="20200828 13:09:19.523"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:23.600" starttime="20200828 13:09:19.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:23.604" level="INFO">Running command 'ozone sh volume info o3://om:9862/86305-rpcwoport | jq -r '. | select(.name=="86305-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:27.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:27.312" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200828 13:09:27.312" starttime="20200828 13:09:23.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:27.314" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200828 13:09:27.314" starttime="20200828 13:09:27.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:27.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:27.314" starttime="20200828 13:09:27.314"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:27.315" starttime="20200828 13:09:23.602"></status>
</kw>
<msg timestamp="20200828 13:09:27.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:27.315" starttime="20200828 13:09:23.601"></status>
</kw>
<msg timestamp="20200828 13:09:27.315" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200828 13:09:27.315" starttime="20200828 13:09:23.601"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200828 13:09:27.316" starttime="20200828 13:09:27.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:27.320" level="INFO">Running command 'ozone sh bucket create o3://om:9862/86305-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:30.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:30.983" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:09:30.983" starttime="20200828 13:09:27.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:30.984" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:09:30.985" starttime="20200828 13:09:30.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:30.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:30.985" starttime="20200828 13:09:30.985"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:30.986" starttime="20200828 13:09:27.317"></status>
</kw>
<msg timestamp="20200828 13:09:30.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:30.986" starttime="20200828 13:09:27.317"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:30.986" starttime="20200828 13:09:27.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:30.992" level="INFO">Running command 'ozone sh bucket info o3://om:9862/86305-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:34.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:34.624" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200828 13:09:34.624" starttime="20200828 13:09:30.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:34.626" level="INFO">DISK</msg>
<status status="PASS" endtime="20200828 13:09:34.626" starttime="20200828 13:09:34.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:34.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:34.627" starttime="20200828 13:09:34.626"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:34.627" starttime="20200828 13:09:30.988"></status>
</kw>
<msg timestamp="20200828 13:09:34.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:34.627" starttime="20200828 13:09:30.987"></status>
</kw>
<msg timestamp="20200828 13:09:34.628" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200828 13:09:34.628" starttime="20200828 13:09:30.986"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200828 13:09:34.628" starttime="20200828 13:09:34.628"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:34.633" level="INFO">Running command 'ozone sh bucket list o3://om:9862/86305-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:09:38.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:09:38.379" level="INFO">${output} = 86305-rpcwoport</msg>
<status status="PASS" endtime="20200828 13:09:38.380" starttime="20200828 13:09:34.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:09:38.381" level="INFO">86305-rpcwoport</msg>
<status status="PASS" endtime="20200828 13:09:38.381" starttime="20200828 13:09:38.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:09:38.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:09:38.382" starttime="20200828 13:09:38.381"></status>
</kw>
<status status="PASS" endtime="20200828 13:09:38.382" starttime="20200828 13:09:34.630"></status>
</kw>
<msg timestamp="20200828 13:09:38.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:09:38.382" starttime="20200828 13:09:34.629"></status>
</kw>
<msg timestamp="20200828 13:09:38.382" level="INFO">${result} = 86305-rpcwoport</msg>
<status status="PASS" endtime="20200828 13:09:38.382" starttime="20200828 13:09:34.628"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200828 13:09:38.383" starttime="20200828 13:09:38.383"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:09:38.389" level="INFO">Running command 'ozone sh key put o3://om:9862/86305-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:04.425" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200828 13:11:04.425" starttime="20200828 13:09:38.386"></status>
</kw>
<status status="FAIL" endtime="20200828 13:11:04.426" starttime="20200828 13:09:38.385"></status>
</kw>
<msg timestamp="20200828 13:11:04.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 13:11:04.426" starttime="20200828 13:09:38.385"></status>
</kw>
<status status="FAIL" endtime="20200828 13:11:04.426" starttime="20200828 13:09:38.384"></status>
</kw>
<status status="FAIL" endtime="20200828 13:11:04.426" starttime="20200828 13:09:38.384"></status>
</kw>
<status status="FAIL" endtime="20200828 13:11:04.426" starttime="20200828 13:09:38.383"></status>
</kw>
<status status="FAIL" endtime="20200828 13:11:04.427" starttime="20200828 13:09:04.478"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:11:04.427" critical="yes" starttime="20200828 13:09:04.424">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s4-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:04.436" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:04.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:04.439" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:11:04.439" starttime="20200828 13:11:04.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:04.439" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:11:04.439" starttime="20200828 13:11:04.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:04.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:04.440" starttime="20200828 13:11:04.440"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:04.440" starttime="20200828 13:11:04.433"></status>
</kw>
<msg timestamp="20200828 13:11:04.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:04.441" starttime="20200828 13:11:04.433"></status>
</kw>
<msg timestamp="20200828 13:11:04.441" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:11:04.441" starttime="20200828 13:11:04.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:11:04.442" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:11:04.442" starttime="20200828 13:11:04.441"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:04.447" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:04.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:04.462" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:11:04.462" starttime="20200828 13:11:04.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:04.463" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:11:04.464" starttime="20200828 13:11:04.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:04.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:04.464" starttime="20200828 13:11:04.464"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:04.465" starttime="20200828 13:11:04.444"></status>
</kw>
<msg timestamp="20200828 13:11:04.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:04.465" starttime="20200828 13:11:04.444"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:04.465" starttime="20200828 13:11:04.442"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:04.465" starttime="20200828 13:11:04.442"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:04.465" starttime="20200828 13:11:04.432"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:04.466" starttime="20200828 13:11:04.431"></status>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:04.470" level="INFO">Running command 'ozone sh volume create o3://om:9862/86305-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:08.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:08.325" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:08.325" starttime="20200828 13:11:04.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:08.326" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:11:08.326" starttime="20200828 13:11:08.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:08.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:08.327" starttime="20200828 13:11:08.326"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:08.327" starttime="20200828 13:11:04.467"></status>
</kw>
<msg timestamp="20200828 13:11:08.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:08.327" starttime="20200828 13:11:04.467"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:08.328" starttime="20200828 13:11:04.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:08.332" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/86305-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:11.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:11.989" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:11.989" starttime="20200828 13:11:08.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:11.990" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200828 13:11:11.990" starttime="20200828 13:11:11.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:11.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:11.991" starttime="20200828 13:11:11.991"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:11.992" starttime="20200828 13:11:08.329"></status>
</kw>
<msg timestamp="20200828 13:11:11.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:11.992" starttime="20200828 13:11:08.329"></status>
</kw>
<msg timestamp="20200828 13:11:11.992" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:11.992" starttime="20200828 13:11:08.328"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200828 13:11:11.994" starttime="20200828 13:11:11.993"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:11.998" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/86305-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:15.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:15.554" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:15.554" starttime="20200828 13:11:11.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:15.555" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20200828 13:11:15.555" starttime="20200828 13:11:15.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:15.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:15.556" starttime="20200828 13:11:15.555"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:15.556" starttime="20200828 13:11:11.995"></status>
</kw>
<msg timestamp="20200828 13:11:15.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:15.556" starttime="20200828 13:11:11.994"></status>
</kw>
<msg timestamp="20200828 13:11:15.557" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:15.557" starttime="20200828 13:11:11.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:15.561" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/86305-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:19.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:19.481" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:19.481" starttime="20200828 13:11:15.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:19.483" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200828 13:11:19.483" starttime="20200828 13:11:19.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:19.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:19.483" starttime="20200828 13:11:19.483"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:19.484" starttime="20200828 13:11:15.558"></status>
</kw>
<msg timestamp="20200828 13:11:19.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:19.484" starttime="20200828 13:11:15.558"></status>
</kw>
<msg timestamp="20200828 13:11:19.484" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:19.485" starttime="20200828 13:11:15.557"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200828 13:11:19.486" starttime="20200828 13:11:19.485"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:19.490" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/86305-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:23.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:23.258" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:23.258" starttime="20200828 13:11:19.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:23.260" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20200828 13:11:23.260" starttime="20200828 13:11:23.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:23.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:23.261" starttime="20200828 13:11:23.260"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:23.261" starttime="20200828 13:11:19.487"></status>
</kw>
<msg timestamp="20200828 13:11:23.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:23.261" starttime="20200828 13:11:19.487"></status>
</kw>
<msg timestamp="20200828 13:11:23.262" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:23.262" starttime="20200828 13:11:19.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:23.267" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/86305-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:27.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:27.132" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:27.132" starttime="20200828 13:11:23.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:27.133" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20200828 13:11:27.134" starttime="20200828 13:11:27.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:27.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:27.134" starttime="20200828 13:11:27.134"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:27.135" starttime="20200828 13:11:23.263"></status>
</kw>
<msg timestamp="20200828 13:11:27.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:27.135" starttime="20200828 13:11:23.263"></status>
</kw>
<msg timestamp="20200828 13:11:27.135" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:27.135" starttime="20200828 13:11:23.262"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200828 13:11:27.137" starttime="20200828 13:11:27.136"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:27.142" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/86305-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:30.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:30.757" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:30.757" starttime="20200828 13:11:27.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:30.758" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200828 13:11:30.758" starttime="20200828 13:11:30.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:30.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:30.759" starttime="20200828 13:11:30.759"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:30.760" starttime="20200828 13:11:27.138"></status>
</kw>
<msg timestamp="20200828 13:11:30.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:30.760" starttime="20200828 13:11:27.138"></status>
</kw>
<msg timestamp="20200828 13:11:30.760" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:30.760" starttime="20200828 13:11:27.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:30.765" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/86305-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:34.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:34.549" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:34.549" starttime="20200828 13:11:30.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:34.550" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200828 13:11:34.551" starttime="20200828 13:11:34.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:34.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:34.551" starttime="20200828 13:11:34.551"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:34.552" starttime="20200828 13:11:30.761"></status>
</kw>
<msg timestamp="20200828 13:11:34.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:34.552" starttime="20200828 13:11:30.761"></status>
</kw>
<msg timestamp="20200828 13:11:34.552" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:34.553" starttime="20200828 13:11:30.760"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20200828 13:11:34.553" starttime="20200828 13:11:34.553"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200828 13:11:34.554" starttime="20200828 13:11:34.553"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:34.555" starttime="20200828 13:11:04.466"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:11:34.555" critical="yes" starttime="20200828 13:11:04.430"></status>
</test>
<test id="s1-s1-s4-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:34.564" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:34.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:34.566" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:11:34.567" starttime="20200828 13:11:34.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:34.567" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:11:34.568" starttime="20200828 13:11:34.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:34.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:34.569" starttime="20200828 13:11:34.568"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:34.569" starttime="20200828 13:11:34.559"></status>
</kw>
<msg timestamp="20200828 13:11:34.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:34.569" starttime="20200828 13:11:34.559"></status>
</kw>
<msg timestamp="20200828 13:11:34.569" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:11:34.569" starttime="20200828 13:11:34.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:11:34.570" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:11:34.570" starttime="20200828 13:11:34.570"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:34.576" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:34.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:34.591" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:11:34.591" starttime="20200828 13:11:34.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:34.592" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:11:34.593" starttime="20200828 13:11:34.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:34.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:34.593" starttime="20200828 13:11:34.593"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:34.594" starttime="20200828 13:11:34.572"></status>
</kw>
<msg timestamp="20200828 13:11:34.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:34.594" starttime="20200828 13:11:34.572"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:34.594" starttime="20200828 13:11:34.571"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:34.594" starttime="20200828 13:11:34.571"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:34.594" starttime="20200828 13:11:34.558"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:34.594" starttime="20200828 13:11:34.557"></status>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:34.600" level="INFO">Running command 'ozone sh bucket create o3://om:9862/86305-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:38.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:38.406" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:38.406" starttime="20200828 13:11:34.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:38.407" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:11:38.408" starttime="20200828 13:11:38.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:38.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:38.409" starttime="20200828 13:11:38.408"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:38.409" starttime="20200828 13:11:34.596"></status>
</kw>
<msg timestamp="20200828 13:11:38.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:38.410" starttime="20200828 13:11:34.596"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:38.410" starttime="20200828 13:11:34.595"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:38.430" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/86305-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:42.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:42.180" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:42.180" starttime="20200828 13:11:38.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:42.181" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200828 13:11:42.181" starttime="20200828 13:11:42.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:42.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:42.182" starttime="20200828 13:11:42.181"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:42.182" starttime="20200828 13:11:38.425"></status>
</kw>
<msg timestamp="20200828 13:11:42.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:42.183" starttime="20200828 13:11:38.411"></status>
</kw>
<msg timestamp="20200828 13:11:42.183" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:42.183" starttime="20200828 13:11:38.410"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200828 13:11:42.184" starttime="20200828 13:11:42.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:42.187" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/86305-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:45.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:45.930" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:45.930" starttime="20200828 13:11:42.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:45.931" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20200828 13:11:45.931" starttime="20200828 13:11:45.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:45.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:45.932" starttime="20200828 13:11:45.932"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:45.933" starttime="20200828 13:11:42.185"></status>
</kw>
<msg timestamp="20200828 13:11:45.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:45.933" starttime="20200828 13:11:42.185"></status>
</kw>
<msg timestamp="20200828 13:11:45.933" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:45.933" starttime="20200828 13:11:42.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:45.937" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/86305-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:49.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:49.823" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:49.824" starttime="20200828 13:11:45.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:49.825" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200828 13:11:49.825" starttime="20200828 13:11:49.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:49.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:49.826" starttime="20200828 13:11:49.825"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:49.826" starttime="20200828 13:11:45.935"></status>
</kw>
<msg timestamp="20200828 13:11:49.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:49.826" starttime="20200828 13:11:45.934"></status>
</kw>
<msg timestamp="20200828 13:11:49.827" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:49.827" starttime="20200828 13:11:45.933"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200828 13:11:49.828" starttime="20200828 13:11:49.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:49.833" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/86305-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:53.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:53.340" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:53.340" starttime="20200828 13:11:49.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:53.342" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20200828 13:11:53.342" starttime="20200828 13:11:53.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:53.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:53.343" starttime="20200828 13:11:53.342"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:53.343" starttime="20200828 13:11:49.830"></status>
</kw>
<msg timestamp="20200828 13:11:53.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:53.343" starttime="20200828 13:11:49.830"></status>
</kw>
<msg timestamp="20200828 13:11:53.344" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:53.344" starttime="20200828 13:11:49.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:53.348" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/86305-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:11:57.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:11:57.304" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:57.304" starttime="20200828 13:11:53.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:11:57.306" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200828 13:11:57.306" starttime="20200828 13:11:57.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:11:57.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:11:57.307" starttime="20200828 13:11:57.306"></status>
</kw>
<status status="PASS" endtime="20200828 13:11:57.307" starttime="20200828 13:11:53.345"></status>
</kw>
<msg timestamp="20200828 13:11:57.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:11:57.307" starttime="20200828 13:11:53.345"></status>
</kw>
<msg timestamp="20200828 13:11:57.308" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:11:57.308" starttime="20200828 13:11:53.344"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20200828 13:11:57.309" starttime="20200828 13:11:57.308"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:11:57.314" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/86305-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:12:00.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:12:00.845" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:12:00.845" starttime="20200828 13:11:57.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:12:00.846" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACLs set successfully.</msg>
<status status="PASS" endtime="20200828 13:12:00.846" starttime="20200828 13:12:00.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:12:00.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:12:00.847" starttime="20200828 13:12:00.847"></status>
</kw>
<status status="PASS" endtime="20200828 13:12:00.848" starttime="20200828 13:11:57.310"></status>
</kw>
<msg timestamp="20200828 13:12:00.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:12:00.848" starttime="20200828 13:11:57.310"></status>
</kw>
<msg timestamp="20200828 13:12:00.848" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:12:00.848" starttime="20200828 13:11:57.309"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:12:00.853" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/86305-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:12:04.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:12:04.221" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:12:04.221" starttime="20200828 13:12:00.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:12:04.222" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20200828 13:12:04.222" starttime="20200828 13:12:04.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:12:04.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:12:04.223" starttime="20200828 13:12:04.222"></status>
</kw>
<status status="PASS" endtime="20200828 13:12:04.223" starttime="20200828 13:12:00.850"></status>
</kw>
<msg timestamp="20200828 13:12:04.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:12:04.224" starttime="20200828 13:12:00.849"></status>
</kw>
<msg timestamp="20200828 13:12:04.224" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:12:04.224" starttime="20200828 13:12:00.848"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20200828 13:12:04.225" starttime="20200828 13:12:04.224"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20200828 13:12:04.225" starttime="20200828 13:12:04.225"></status>
</kw>
<status status="PASS" endtime="20200828 13:12:04.226" starttime="20200828 13:11:34.595"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 13:12:04.226" critical="yes" starttime="20200828 13:11:34.556"></status>
</test>
<test id="s1-s1-s4-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:12:04.233" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:12:04.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:12:04.235" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:12:04.235" starttime="20200828 13:12:04.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:12:04.236" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:12:04.237" starttime="20200828 13:12:04.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:12:04.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:12:04.237" starttime="20200828 13:12:04.237"></status>
</kw>
<status status="PASS" endtime="20200828 13:12:04.238" starttime="20200828 13:12:04.229"></status>
</kw>
<msg timestamp="20200828 13:12:04.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:12:04.238" starttime="20200828 13:12:04.229"></status>
</kw>
<msg timestamp="20200828 13:12:04.238" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:12:04.238" starttime="20200828 13:12:04.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:12:04.239" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:12:04.239" starttime="20200828 13:12:04.238"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:12:04.243" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:12:04.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:12:04.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:12:04.259" starttime="20200828 13:12:04.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:12:04.260" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:12:04.260" starttime="20200828 13:12:04.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:12:04.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:12:04.261" starttime="20200828 13:12:04.261"></status>
</kw>
<status status="PASS" endtime="20200828 13:12:04.262" starttime="20200828 13:12:04.241"></status>
</kw>
<msg timestamp="20200828 13:12:04.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:12:04.262" starttime="20200828 13:12:04.240"></status>
</kw>
<status status="PASS" endtime="20200828 13:12:04.262" starttime="20200828 13:12:04.240"></status>
</kw>
<status status="PASS" endtime="20200828 13:12:04.262" starttime="20200828 13:12:04.239"></status>
</kw>
<status status="PASS" endtime="20200828 13:12:04.262" starttime="20200828 13:12:04.228"></status>
</kw>
<status status="PASS" endtime="20200828 13:12:04.263" starttime="20200828 13:12:04.227"></status>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:12:04.268" level="INFO">Running command 'ozone sh key put o3://om:9862/86305-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:04.227" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200828 13:14:04.227" starttime="20200828 13:12:04.265"></status>
</kw>
<status status="FAIL" endtime="20200828 13:14:04.228" starttime="20200828 13:12:04.265"></status>
</kw>
<msg timestamp="20200828 13:14:04.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 13:14:04.228" starttime="20200828 13:12:04.264"></status>
</kw>
<status status="FAIL" endtime="20200828 13:14:04.228" starttime="20200828 13:12:04.263"></status>
</kw>
<status status="FAIL" endtime="20200828 13:14:04.229" starttime="20200828 13:12:04.263"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:14:04.229" critical="yes" starttime="20200828 13:12:04.227">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s4-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:04.238" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:04.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:04.241" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:14:04.241" starttime="20200828 13:14:04.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:04.242" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:14:04.242" starttime="20200828 13:14:04.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:04.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:04.242" starttime="20200828 13:14:04.242"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:04.243" starttime="20200828 13:14:04.234"></status>
</kw>
<msg timestamp="20200828 13:14:04.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:04.243" starttime="20200828 13:14:04.234"></status>
</kw>
<msg timestamp="20200828 13:14:04.243" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:14:04.243" starttime="20200828 13:14:04.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:14:04.244" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:14:04.244" starttime="20200828 13:14:04.243"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:04.248" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:04.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:04.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:14:04.265" starttime="20200828 13:14:04.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:04.267" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:14:04.267" starttime="20200828 13:14:04.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:04.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:04.268" starttime="20200828 13:14:04.267"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:04.268" starttime="20200828 13:14:04.246"></status>
</kw>
<msg timestamp="20200828 13:14:04.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:04.268" starttime="20200828 13:14:04.245"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:04.268" starttime="20200828 13:14:04.245"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:04.268" starttime="20200828 13:14:04.244"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:04.269" starttime="20200828 13:14:04.232"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:04.269" starttime="20200828 13:14:04.231"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:04.274" level="INFO">Running command 'ozone sh volume info o3:///86305-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:08.045" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:14:08.045" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:14:08.045" starttime="20200828 13:14:04.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:08.046" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 86305-rpcwport is not found</msg>
<status status="PASS" endtime="20200828 13:14:08.046" starttime="20200828 13:14:08.046"></status>
</kw>
<msg timestamp="20200828 13:14:08.047" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:14:08.047" starttime="20200828 13:14:04.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200828 13:14:08.047" starttime="20200828 13:14:08.047"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:08.053" level="INFO">Running command 'ozone sh volume create o3:///86305-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:11.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:11.527" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:14:11.527" starttime="20200828 13:14:08.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:11.528" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:14:11.528" starttime="20200828 13:14:11.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:11.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:11.529" starttime="20200828 13:14:11.529"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:11.529" starttime="20200828 13:14:08.049"></status>
</kw>
<msg timestamp="20200828 13:14:11.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:11.530" starttime="20200828 13:14:08.048"></status>
</kw>
<msg timestamp="20200828 13:14:11.530" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:14:11.530" starttime="20200828 13:14:08.047"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200828 13:14:11.531" starttime="20200828 13:14:11.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:11.537" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="86305-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:15.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:15.524" level="INFO">${output} = {
  "metadata": {},
  "name": "86305-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:14:11.349Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" endtime="20200828 13:14:15.524" starttime="20200828 13:14:11.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:15.525" level="INFO">{
  "metadata": {},
  "name": "86305-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:14:11.349Z",
  "modificationTime": "2020-08-28T13:14:11.349Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200828 13:14:15.525" starttime="20200828 13:14:15.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:15.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:15.526" starttime="20200828 13:14:15.525"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:15.527" starttime="20200828 13:14:11.532"></status>
</kw>
<msg timestamp="20200828 13:14:15.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:15.527" starttime="20200828 13:14:11.532"></status>
</kw>
<msg timestamp="20200828 13:14:15.528" level="INFO">${result} = {
  "metadata": {},
  "name": "86305-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:14:11.349Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" endtime="20200828 13:14:15.528" starttime="20200828 13:14:11.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200828 13:14:15.529" starttime="20200828 13:14:15.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:15.534" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="86305-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:19.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:19.340" level="INFO">${output} = {
  "metadata": {},
  "name": "86305-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:14:11.349Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" endtime="20200828 13:14:19.340" starttime="20200828 13:14:15.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:19.341" level="INFO">{
  "metadata": {},
  "name": "86305-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:14:11.349Z",
  "modificationTime": "2020-08-28T13:14:11.349Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200828 13:14:19.341" starttime="20200828 13:14:19.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:19.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:19.342" starttime="20200828 13:14:19.342"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:19.343" starttime="20200828 13:14:15.531"></status>
</kw>
<msg timestamp="20200828 13:14:19.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:19.343" starttime="20200828 13:14:15.530"></status>
</kw>
<msg timestamp="20200828 13:14:19.343" level="INFO">${result} = {
  "metadata": {},
  "name": "86305-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:14:11.349Z",
  "modificationTime": "2020-...</msg>
<status status="PASS" endtime="20200828 13:14:19.343" starttime="20200828 13:14:15.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200828 13:14:19.344" starttime="20200828 13:14:19.343"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:19.348" level="INFO">Running command 'ozone sh volume update o3:///86305-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:22.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:22.770" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:14:22.770" starttime="20200828 13:14:19.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:22.772" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "86305-rpcwport",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-08-28T13:14:11.349Z",
  "modificationTime" : "2020-08-28T13:14:22.473Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200828 13:14:22.772" starttime="20200828 13:14:22.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:22.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:22.773" starttime="20200828 13:14:22.772"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:22.773" starttime="20200828 13:14:19.345"></status>
</kw>
<msg timestamp="20200828 13:14:22.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:22.774" starttime="20200828 13:14:19.345"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:22.774" starttime="20200828 13:14:19.344"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:22.778" level="INFO">Running command 'ozone sh volume info o3:///86305-rpcwport | jq -r '. | select(.name=="86305-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:26.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:26.600" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200828 13:14:26.600" starttime="20200828 13:14:22.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:26.601" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200828 13:14:26.601" starttime="20200828 13:14:26.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:26.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:26.602" starttime="20200828 13:14:26.601"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:26.602" starttime="20200828 13:14:22.776"></status>
</kw>
<msg timestamp="20200828 13:14:26.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:26.602" starttime="20200828 13:14:22.775"></status>
</kw>
<msg timestamp="20200828 13:14:26.602" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200828 13:14:26.602" starttime="20200828 13:14:22.774"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200828 13:14:26.603" starttime="20200828 13:14:26.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:26.608" level="INFO">Running command 'ozone sh bucket create o3:///86305-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:30.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:30.125" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:14:30.125" starttime="20200828 13:14:26.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:30.126" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:14:30.126" starttime="20200828 13:14:30.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:30.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:30.127" starttime="20200828 13:14:30.126"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:30.127" starttime="20200828 13:14:26.604"></status>
</kw>
<msg timestamp="20200828 13:14:30.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:30.128" starttime="20200828 13:14:26.604"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:30.128" starttime="20200828 13:14:26.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:30.133" level="INFO">Running command 'ozone sh bucket info o3:///86305-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:34.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:34.044" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200828 13:14:34.044" starttime="20200828 13:14:30.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:34.045" level="INFO">DISK</msg>
<status status="PASS" endtime="20200828 13:14:34.045" starttime="20200828 13:14:34.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:34.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:34.046" starttime="20200828 13:14:34.045"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:34.046" starttime="20200828 13:14:30.130"></status>
</kw>
<msg timestamp="20200828 13:14:34.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:34.047" starttime="20200828 13:14:30.129"></status>
</kw>
<msg timestamp="20200828 13:14:34.047" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200828 13:14:34.047" starttime="20200828 13:14:30.128"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200828 13:14:34.048" starttime="20200828 13:14:34.047"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:34.053" level="INFO">Running command 'ozone sh bucket list o3:///86305-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:14:37.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:14:37.918" level="INFO">${output} = 86305-rpcwport</msg>
<status status="PASS" endtime="20200828 13:14:37.918" starttime="20200828 13:14:34.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:14:37.919" level="INFO">86305-rpcwport</msg>
<status status="PASS" endtime="20200828 13:14:37.919" starttime="20200828 13:14:37.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:14:37.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:14:37.920" starttime="20200828 13:14:37.920"></status>
</kw>
<status status="PASS" endtime="20200828 13:14:37.921" starttime="20200828 13:14:34.049"></status>
</kw>
<msg timestamp="20200828 13:14:37.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:14:37.921" starttime="20200828 13:14:34.049"></status>
</kw>
<msg timestamp="20200828 13:14:37.921" level="INFO">${result} = 86305-rpcwport</msg>
<status status="PASS" endtime="20200828 13:14:37.921" starttime="20200828 13:14:34.048"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200828 13:14:37.922" starttime="20200828 13:14:37.921"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:14:37.928" level="INFO">Running command 'ozone sh key put o3:///86305-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:04.231" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200828 13:16:04.231" starttime="20200828 13:14:37.925"></status>
</kw>
<status status="FAIL" endtime="20200828 13:16:04.232" starttime="20200828 13:14:37.924"></status>
</kw>
<msg timestamp="20200828 13:16:04.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 13:16:04.232" starttime="20200828 13:14:37.924"></status>
</kw>
<status status="FAIL" endtime="20200828 13:16:04.232" starttime="20200828 13:14:37.923"></status>
</kw>
<status status="FAIL" endtime="20200828 13:16:04.233" starttime="20200828 13:14:37.922"></status>
</kw>
<status status="FAIL" endtime="20200828 13:16:04.233" starttime="20200828 13:14:37.922"></status>
</kw>
<status status="FAIL" endtime="20200828 13:16:04.233" starttime="20200828 13:14:04.269"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:16:04.233" critical="yes" starttime="20200828 13:14:04.230">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s4-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:04.240" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:04.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:04.243" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 13:16:04.243" starttime="20200828 13:16:04.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:04.244" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 13:16:04.244" starttime="20200828 13:16:04.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:04.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:04.245" starttime="20200828 13:16:04.244"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:04.245" starttime="20200828 13:16:04.237"></status>
</kw>
<msg timestamp="20200828 13:16:04.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:04.245" starttime="20200828 13:16:04.237"></status>
</kw>
<msg timestamp="20200828 13:16:04.245" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 13:16:04.246" starttime="20200828 13:16:04.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 13:16:04.246" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 13:16:04.246" starttime="20200828 13:16:04.246"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:04.250" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:04.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:04.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 13:16:04.265" starttime="20200828 13:16:04.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:04.266" level="INFO"></msg>
<status status="PASS" endtime="20200828 13:16:04.266" starttime="20200828 13:16:04.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:04.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:04.267" starttime="20200828 13:16:04.266"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:04.267" starttime="20200828 13:16:04.248"></status>
</kw>
<msg timestamp="20200828 13:16:04.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:04.267" starttime="20200828 13:16:04.248"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:04.267" starttime="20200828 13:16:04.247"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:04.267" starttime="20200828 13:16:04.247"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:04.268" starttime="20200828 13:16:04.236"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:04.268" starttime="20200828 13:16:04.235"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:04.273" level="INFO">Running command 'ozone sh volume info /86305-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:07.901" level="INFO">${rc} = 255</msg>
<msg timestamp="20200828 13:16:07.901" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:16:07.901" starttime="20200828 13:16:04.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:07.902" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume 86305-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20200828 13:16:07.903" starttime="20200828 13:16:07.902"></status>
</kw>
<msg timestamp="20200828 13:16:07.903" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:16:07.903" starttime="20200828 13:16:04.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200828 13:16:07.904" starttime="20200828 13:16:07.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:07.908" level="INFO">Running command 'ozone sh volume create /86305-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:11.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:11.673" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:16:11.673" starttime="20200828 13:16:07.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:11.674" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:16:11.675" starttime="20200828 13:16:11.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:11.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:11.675" starttime="20200828 13:16:11.675"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:11.676" starttime="20200828 13:16:07.905"></status>
</kw>
<msg timestamp="20200828 13:16:11.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:11.676" starttime="20200828 13:16:07.905"></status>
</kw>
<msg timestamp="20200828 13:16:11.676" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:16:11.676" starttime="20200828 13:16:07.904"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200828 13:16:11.677" starttime="20200828 13:16:11.677"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:11.681" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="86305-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:15.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:15.668" level="INFO">${output} = {
  "metadata": {},
  "name": "86305-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:16:11.607Z",
  "modificationTime": "20...</msg>
<status status="PASS" endtime="20200828 13:16:15.668" starttime="20200828 13:16:11.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:15.670" level="INFO">{
  "metadata": {},
  "name": "86305-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:16:11.607Z",
  "modificationTime": "2020-08-28T13:16:11.607Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200828 13:16:15.670" starttime="20200828 13:16:15.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:15.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:15.670" starttime="20200828 13:16:15.670"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:15.671" starttime="20200828 13:16:11.678"></status>
</kw>
<msg timestamp="20200828 13:16:15.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:15.671" starttime="20200828 13:16:11.678"></status>
</kw>
<msg timestamp="20200828 13:16:15.671" level="INFO">${result} = {
  "metadata": {},
  "name": "86305-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:16:11.607Z",
  "modificationTime": "20...</msg>
<status status="PASS" endtime="20200828 13:16:15.671" starttime="20200828 13:16:11.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200828 13:16:15.672" starttime="20200828 13:16:15.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:15.677" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="86305-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:19.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:19.464" level="INFO">${output} = {
  "metadata": {},
  "name": "86305-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:16:11.607Z",
  "modificationTime": "20...</msg>
<status status="PASS" endtime="20200828 13:16:19.464" starttime="20200828 13:16:15.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:19.465" level="INFO">{
  "metadata": {},
  "name": "86305-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:16:11.607Z",
  "modificationTime": "2020-08-28T13:16:11.607Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200828 13:16:19.466" starttime="20200828 13:16:19.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:19.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:19.466" starttime="20200828 13:16:19.466"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:19.467" starttime="20200828 13:16:15.673"></status>
</kw>
<msg timestamp="20200828 13:16:19.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:19.467" starttime="20200828 13:16:15.673"></status>
</kw>
<msg timestamp="20200828 13:16:19.467" level="INFO">${result} = {
  "metadata": {},
  "name": "86305-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": "2020-08-28T13:16:11.607Z",
  "modificationTime": "20...</msg>
<status status="PASS" endtime="20200828 13:16:19.467" starttime="20200828 13:16:15.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200828 13:16:19.468" starttime="20200828 13:16:19.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:19.473" level="INFO">Running command 'ozone sh volume update /86305-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:23.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:23.282" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:16:23.282" starttime="20200828 13:16:19.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:23.283" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "86305-rpcwoscheme",
  "admin" : "testuser/scm@EXAMPLE.COM",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : "2020-08-28T13:16:11.607Z",
  "modificationTime" : "2020-08-28T13:16:22.869Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200828 13:16:23.283" starttime="20200828 13:16:23.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:23.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:23.284" starttime="20200828 13:16:23.283"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:23.284" starttime="20200828 13:16:19.469"></status>
</kw>
<msg timestamp="20200828 13:16:23.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:23.284" starttime="20200828 13:16:19.469"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:23.285" starttime="20200828 13:16:19.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:23.290" level="INFO">Running command 'ozone sh volume info /86305-rpcwoscheme | jq -r '. | select(.name=="86305-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:27.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:27.286" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200828 13:16:27.286" starttime="20200828 13:16:23.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:27.287" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200828 13:16:27.287" starttime="20200828 13:16:27.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:27.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:27.288" starttime="20200828 13:16:27.287"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:27.288" starttime="20200828 13:16:23.286"></status>
</kw>
<msg timestamp="20200828 13:16:27.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:27.289" starttime="20200828 13:16:23.286"></status>
</kw>
<msg timestamp="20200828 13:16:27.289" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200828 13:16:27.289" starttime="20200828 13:16:23.285"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200828 13:16:27.290" starttime="20200828 13:16:27.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:27.295" level="INFO">Running command 'ozone sh bucket create /86305-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:30.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:30.990" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20200828 13:16:30.990" starttime="20200828 13:16:27.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:30.991" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20200828 13:16:30.991" starttime="20200828 13:16:30.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:30.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:30.992" starttime="20200828 13:16:30.992"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:30.992" starttime="20200828 13:16:27.291"></status>
</kw>
<msg timestamp="20200828 13:16:30.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:30.993" starttime="20200828 13:16:27.291"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:30.993" starttime="20200828 13:16:27.290"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:30.999" level="INFO">Running command 'ozone sh bucket info /86305-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:34.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:34.898" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200828 13:16:34.898" starttime="20200828 13:16:30.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:34.899" level="INFO">DISK</msg>
<status status="PASS" endtime="20200828 13:16:34.899" starttime="20200828 13:16:34.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:34.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:34.900" starttime="20200828 13:16:34.899"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:34.900" starttime="20200828 13:16:30.995"></status>
</kw>
<msg timestamp="20200828 13:16:34.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:34.901" starttime="20200828 13:16:30.994"></status>
</kw>
<msg timestamp="20200828 13:16:34.901" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200828 13:16:34.901" starttime="20200828 13:16:30.993"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200828 13:16:34.902" starttime="20200828 13:16:34.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:34.907" level="INFO">Running command 'ozone sh bucket list /86305-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:16:38.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 13:16:38.731" level="INFO">${output} = 86305-rpcwoscheme</msg>
<status status="PASS" endtime="20200828 13:16:38.731" starttime="20200828 13:16:34.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 13:16:38.732" level="INFO">86305-rpcwoscheme</msg>
<status status="PASS" endtime="20200828 13:16:38.733" starttime="20200828 13:16:38.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 13:16:38.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 13:16:38.734" starttime="20200828 13:16:38.733"></status>
</kw>
<status status="PASS" endtime="20200828 13:16:38.734" starttime="20200828 13:16:34.903"></status>
</kw>
<msg timestamp="20200828 13:16:38.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 13:16:38.734" starttime="20200828 13:16:34.903"></status>
</kw>
<msg timestamp="20200828 13:16:38.734" level="INFO">${result} = 86305-rpcwoscheme</msg>
<status status="PASS" endtime="20200828 13:16:38.734" starttime="20200828 13:16:34.902"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200828 13:16:38.735" starttime="20200828 13:16:38.735"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 13:16:38.741" level="INFO">Running command 'ozone sh key put /86305-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 13:18:04.236" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20200828 13:18:04.237" starttime="20200828 13:16:38.738"></status>
</kw>
<status status="FAIL" endtime="20200828 13:18:04.239" starttime="20200828 13:16:38.738"></status>
</kw>
<msg timestamp="20200828 13:18:04.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 13:18:04.244" starttime="20200828 13:16:38.737"></status>
</kw>
<status status="FAIL" endtime="20200828 13:18:04.244" starttime="20200828 13:16:38.737"></status>
</kw>
<status status="FAIL" endtime="20200828 13:18:04.244" starttime="20200828 13:16:38.736"></status>
</kw>
<status status="FAIL" endtime="20200828 13:18:04.244" starttime="20200828 13:16:38.735"></status>
</kw>
<status status="FAIL" endtime="20200828 13:18:04.244" starttime="20200828 13:16:04.268"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20200828 13:18:04.245" critical="yes" starttime="20200828 13:16:04.234">Test timeout 2 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20200828 13:18:04.247" starttime="20200828 13:09:04.406"></status>
</suite>
<status status="FAIL" endtime="20200828 13:18:04.257" starttime="20200828 12:50:28.500"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:50:23.289" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:50:23.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:50:23.292" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200828 12:50:23.292" starttime="20200828 12:50:23.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:50:23.293" level="INFO">scm</msg>
<status status="PASS" endtime="20200828 12:50:23.293" starttime="20200828 12:50:23.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:50:23.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:50:23.294" starttime="20200828 12:50:23.293"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:23.294" starttime="20200828 12:50:23.283"></status>
</kw>
<msg timestamp="20200828 12:50:23.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:50:23.295" starttime="20200828 12:50:23.283"></status>
</kw>
<msg timestamp="20200828 12:50:23.295" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200828 12:50:23.295" starttime="20200828 12:50:23.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200828 12:50:23.296" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200828 12:50:23.296" starttime="20200828 12:50:23.295"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 12:50:23.300" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 12:50:23.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 12:50:23.317" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 12:50:23.317" starttime="20200828 12:50:23.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 12:50:23.318" level="INFO"></msg>
<status status="PASS" endtime="20200828 12:50:23.318" starttime="20200828 12:50:23.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 12:50:23.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 12:50:23.319" starttime="20200828 12:50:23.318"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:23.319" starttime="20200828 12:50:23.297"></status>
</kw>
<msg timestamp="20200828 12:50:23.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 12:50:23.319" starttime="20200828 12:50:23.297"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:23.320" starttime="20200828 12:50:23.296"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:23.320" starttime="20200828 12:50:23.296"></status>
</kw>
<status status="PASS" endtime="20200828 12:50:23.320" starttime="20200828 12:50:23.282"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200828 12:50:23.320" critical="yes" starttime="20200828 12:50:23.280"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200828 12:50:23.321" starttime="20200828 12:50:23.217"></status>
</suite>
<status status="FAIL" elapsedtime="1655861" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="11" pass="14">Critical Tests</stat>
<stat fail="11" pass="14">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="11" id="s1" name="ozonesecure" pass="14">ozonesecure</stat>
<stat fail="11" id="s1-s1" name="Basic" pass="13">ozonesecure.Basic</stat>
<stat fail="1" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="5" id="s1-s1-s2" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" id="s1-s1-s3" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="4" id="s1-s1-s4" name="Ozone-Shell" pass="2">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
