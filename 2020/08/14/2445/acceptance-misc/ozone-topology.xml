<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200814 14:54:15.122" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200814 14:51:13.735" starttime="20200814 14:51:13.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:51:13.741" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:51:13.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:51:13.956" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 14 Aug 2020 14:51:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 14 Aug 2020 14:02:42 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200814 14:51:13.956" starttime="20200814 14:51:13.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:51:13.957" level="INFO">HTTP/1.1 200 OK
Date: Fri, 14 Aug 2020 14:51:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 14 Aug 2020 14:02:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200814 14:51:13.957" starttime="20200814 14:51:13.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:51:13.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:51:13.959" starttime="20200814 14:51:13.958"></status>
</kw>
<status status="PASS" endtime="20200814 14:51:13.960" starttime="20200814 14:51:13.736"></status>
</kw>
<msg timestamp="20200814 14:51:13.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:51:13.960" starttime="20200814 14:51:13.736"></status>
</kw>
<msg timestamp="20200814 14:51:13.960" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 14 Aug 2020 14:51:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Fri, 14 Aug 2020 14:02:42 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200814 14:51:13.961" starttime="20200814 14:51:13.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200814 14:51:13.961" starttime="20200814 14:51:13.961"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 14:51:13.961" critical="yes" starttime="20200814 14:51:13.733"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200814 14:51:13.970" starttime="20200814 14:51:13.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:51:13.981" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:52:24.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:52:24.736" level="INFO">${output} = 2020-08-14 14:51:16,688 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 14:51:17,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 14:52:24.736" starttime="20200814 14:51:13.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:52:24.737" level="INFO">2020-08-14 14:51:16,688 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 14:51:17,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-08-14 14:51:17,057 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-08-14 14:51:19,103 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-08-14 14:51:19,104 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-08-14 14:51:19,104 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-08-14 14:51:19,104 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-08-14 14:51:19,104 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-08-14 14:51:19,104 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-08-14 14:51:19,105 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-08-14 14:51:19,107 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-08-14 14:51:19,112 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-08-14 14:51:19,124 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-08-14 14:51:19,167 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-62042, with hadoop as owner.
2020-08-14 14:51:19,417 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-11453, with hadoop as owner.
2020-08-14 14:51:19,426 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-07596, with hadoop as owner.
2020-08-14 14:51:19,444 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-16207, with hadoop as owner.
2020-08-14 14:51:19,457 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-17793, with hadoop as owner.
2020-08-14 14:51:19,479 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-62042/bucket-0-77281, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,585 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11453/bucket-0-67332, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,592 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07596/bucket-0-12643, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,599 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16207/bucket-0-68358, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,603 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17793/bucket-0-10862, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,607 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-62042/bucket-1-22999, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,613 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11453/bucket-1-93076, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,617 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07596/bucket-1-37399, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,622 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16207/bucket-1-40015, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,627 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17793/bucket-1-35517, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,632 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-62042/bucket-2-00330, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,637 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11453/bucket-2-57832, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,642 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07596/bucket-2-17155, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,648 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16207/bucket-2-05753, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,654 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17793/bucket-2-02705, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,658 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-62042/bucket-3-22518, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,662 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11453/bucket-3-13034, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,667 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07596/bucket-3-64374, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,671 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16207/bucket-3-20583, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,677 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17793/bucket-3-49147, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,686 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-62042/bucket-4-37952, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,700 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-11453/bucket-4-38921, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,713 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-07596/bucket-4-72644, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,717 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-16207/bucket-4-23849, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:19,722 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17793/bucket-4-14567, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 14:51:20,176 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-08-14 14:51:21,016 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-08-14 14:51:21,177 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-08-14 14:51:22,177 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-08-14 14:51:23,178 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-08-14 14:51:24,178 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-08-14 14:51:25,178 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-08-14 14:51:26,179 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-08-14 14:51:27,181 [Thread-7] INFO freon.ProgressBar: Progress: 4.80 % (6 out of 125)
2020-08-14 14:51:28,181 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-08-14 14:51:29,182 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-08-14 14:51:30,182 [Thread-7] INFO freon.ProgressBar: Progress: 9.60 % (12 out of 125)
2020-08-14 14:51:31,183 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-08-14 14:51:32,183 [Thread-7] INFO freon.ProgressBar: Progress: 10.40 % (13 out of 125)
2020-08-14 14:51:33,186 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-08-14 14:51:34,186 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-08-14 14:51:35,186 [Thread-7] INFO freon.ProgressBar: Progress: 15.20 % (19 out of 125)
2020-08-14 14:51:36,192 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-08-14 14:51:37,193 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-08-14 14:51:38,193 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2020-08-14 14:51:39,194 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-08-14 14:51:40,194 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-08-14 14:51:41,195 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-08-14 14:51:42,195 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-08-14 14:51:43,196 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-08-14 14:51:44,196 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-08-14 14:51:45,196 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-08-14 14:51:46,197 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-08-14 14:51:47,197 [Thread-7] INFO freon.ProgressBar: Progress: 26.40 % (33 out of 125)
2020-08-14 14:51:48,198 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-08-14 14:51:49,198 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-08-14 14:51:50,199 [Thread-7] INFO freon.ProgressBar: Progress: 37.60 % (47 out of 125)
2020-08-14 14:51:51,213 [Thread-7] INFO freon.ProgressBar: Progress: 40.00 % (50 out of 125)
2020-08-14 14:51:52,213 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-08-14 14:51:53,214 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-08-14 14:51:54,214 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-08-14 14:51:55,215 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-08-14 14:51:56,215 [Thread-7] INFO freon.ProgressBar: Progress: 46.40 % (58 out of 125)
2020-08-14 14:51:57,216 [Thread-7] INFO freon.ProgressBar: Progress: 48.80 % (61 out of 125)
2020-08-14 14:51:58,216 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-08-14 14:51:59,217 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-08-14 14:52:00,217 [Thread-7] INFO freon.ProgressBar: Progress: 56.00 % (70 out of 125)
2020-08-14 14:52:01,218 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-08-14 14:52:02,218 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-08-14 14:52:03,219 [Thread-7] INFO freon.ProgressBar: Progress: 60.80 % (76 out of 125)
2020-08-14 14:52:04,219 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-08-14 14:52:05,220 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-08-14 14:52:06,220 [Thread-7] INFO freon.ProgressBar: Progress: 68.00 % (85 out of 125)
2020-08-14 14:52:07,221 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-08-14 14:52:08,221 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-08-14 14:52:09,222 [Thread-7] INFO freon.ProgressBar: Progress: 71.20 % (89 out of 125)
2020-08-14 14:52:10,223 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-08-14 14:52:11,223 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-08-14 14:52:12,223 [Thread-7] INFO freon.ProgressBar: Progress: 82.40 % (103 out of 125)
2020-08-14 14:52:13,224 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-08-14 14:52:14,224 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-08-14 14:52:15,225 [Thread-7] INFO freon.ProgressBar: Progress: 91.20 % (114 out of 125)
2020-08-14 14:52:16,225 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-08-14 14:52:17,225 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-08-14 14:52:18,226 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-08-14 14:52:19,226 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-08-14 14:52:20,227 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-08-14 14:52:21,228 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-08-14 14:52:22,228 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-08-14 14:52:23,228 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-08-14 14:52:24,229 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,314
Average Time spent in bucket creation: 00:00:00,190
Average Time spent in key creation: 00:00:02,297
Average Time spent in key write: 00:00:00,875
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:07,174
***************************************************</msg>
<status status="PASS" endtime="20200814 14:52:24.737" starttime="20200814 14:52:24.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:52:24.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:52:24.738" starttime="20200814 14:52:24.737"></status>
</kw>
<status status="PASS" endtime="20200814 14:52:24.739" starttime="20200814 14:51:13.974"></status>
</kw>
<msg timestamp="20200814 14:52:24.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:52:24.739" starttime="20200814 14:51:13.973"></status>
</kw>
<msg timestamp="20200814 14:52:24.739" level="INFO">${result} = 2020-08-14 14:51:16,688 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 14:51:17,057 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 14:52:24.739" starttime="20200814 14:51:13.970"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200814 14:52:24.740" starttime="20200814 14:52:24.740"></status>
</kw>
<status status="PASS" endtime="20200814 14:52:24.741" starttime="20200814 14:52:24.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200814 14:52:24.741" starttime="20200814 14:52:24.741"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 14:52:24.741" critical="yes" starttime="20200814 14:51:13.963"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200814 14:52:24.743" starttime="20200814 14:51:13.667"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:52:29.388" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:52:31.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:52:31.889" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200814 14:52:31.890" starttime="20200814 14:52:29.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:52:31.891" level="INFO">State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20200814 14:52:31.891" starttime="20200814 14:52:31.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:52:31.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:52:31.892" starttime="20200814 14:52:31.891"></status>
</kw>
<status status="PASS" endtime="20200814 14:52:31.892" starttime="20200814 14:52:29.382"></status>
</kw>
<msg timestamp="20200814 14:52:31.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:52:31.893" starttime="20200814 14:52:29.382"></status>
</kw>
<msg timestamp="20200814 14:52:31.893" level="INFO">${output} = State = HEALTHY
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200814 14:52:31.893" starttime="20200814 14:52:29.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20200814 14:52:31.894" starttime="20200814 14:52:31.893"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 14:52:31.894" critical="yes" starttime="20200814 14:52:29.381"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:52:31.900" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:52:34.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:52:34.302" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200814 14:52:34.302" starttime="20200814 14:52:31.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:52:34.303" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20200814 14:52:34.303" starttime="20200814 14:52:34.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:52:34.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:52:34.304" starttime="20200814 14:52:34.303"></status>
</kw>
<status status="PASS" endtime="20200814 14:52:34.304" starttime="20200814 14:52:31.897"></status>
</kw>
<msg timestamp="20200814 14:52:34.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:52:34.305" starttime="20200814 14:52:31.896"></status>
</kw>
<msg timestamp="20200814 14:52:34.305" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200814 14:52:34.305" starttime="20200814 14:52:31.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20200814 14:52:34.306" starttime="20200814 14:52:34.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20200814 14:52:34.306" starttime="20200814 14:52:34.306"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 14:52:34.307" critical="yes" starttime="20200814 14:52:31.895"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200814 14:52:34.309" starttime="20200814 14:52:29.319"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1 --quota 100TB</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:52:38.814" level="INFO">Running command 'ozone sh volume create topvol1 --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:52:41.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:52:41.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:52:41.846" starttime="20200814 14:52:38.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:52:41.847" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:52:41.847" starttime="20200814 14:52:41.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:52:41.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:52:41.848" starttime="20200814 14:52:41.847"></status>
</kw>
<status status="PASS" endtime="20200814 14:52:41.848" starttime="20200814 14:52:38.809"></status>
</kw>
<msg timestamp="20200814 14:52:41.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:52:41.849" starttime="20200814 14:52:38.808"></status>
</kw>
<msg timestamp="20200814 14:52:41.849" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:52:41.849" starttime="20200814 14:52:38.808"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200814 14:52:41.850" starttime="20200814 14:52:41.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:52:41.854" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:52:44.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:52:44.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:52:44.864" starttime="20200814 14:52:41.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:52:44.865" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:52:44.866" starttime="20200814 14:52:44.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:52:44.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:52:44.866" starttime="20200814 14:52:44.866"></status>
</kw>
<status status="PASS" endtime="20200814 14:52:44.867" starttime="20200814 14:52:41.851"></status>
</kw>
<msg timestamp="20200814 14:52:44.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:52:44.867" starttime="20200814 14:52:41.851"></status>
</kw>
<msg timestamp="20200814 14:52:44.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:52:44.867" starttime="20200814 14:52:41.850"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200814 14:52:44.868" starttime="20200814 14:52:44.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:52:44.873" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:52:50.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:52:50.118" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:52:50.118" starttime="20200814 14:52:44.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:52:50.120" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:52:50.120" starttime="20200814 14:52:50.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:52:50.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:52:50.121" starttime="20200814 14:52:50.120"></status>
</kw>
<status status="PASS" endtime="20200814 14:52:50.121" starttime="20200814 14:52:44.869"></status>
</kw>
<msg timestamp="20200814 14:52:50.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:52:50.122" starttime="20200814 14:52:44.869"></status>
</kw>
<msg timestamp="20200814 14:52:50.122" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:52:50.122" starttime="20200814 14:52:44.868"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200814 14:52:50.123" starttime="20200814 14:52:50.122"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 14:52:50.123" critical="yes" starttime="20200814 14:52:38.807"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200814 14:52:50.124" starttime="20200814 14:52:38.745"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200814 14:54:02.984" level="INFO">${random} = 13440</msg>
<status status="PASS" endtime="20200814 14:54:02.984" starttime="20200814 14:54:02.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:54:02.990" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-13440 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:54:08.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:54:08.301" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:54:08.301" starttime="20200814 14:54:02.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:54:08.303" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:54:08.303" starttime="20200814 14:54:08.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:54:08.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:54:08.304" starttime="20200814 14:54:08.303"></status>
</kw>
<status status="PASS" endtime="20200814 14:54:08.304" starttime="20200814 14:54:02.986"></status>
</kw>
<msg timestamp="20200814 14:54:08.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:54:08.304" starttime="20200814 14:54:02.985"></status>
</kw>
<msg timestamp="20200814 14:54:08.304" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:54:08.305" starttime="20200814 14:54:02.984"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200814 14:54:08.305" starttime="20200814 14:54:08.305"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 14:54:08.305" critical="yes" starttime="20200814 14:54:02.982"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200814 14:54:08.307" starttime="20200814 14:54:02.920"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200814 14:52:56.809" level="INFO">${random} = 84306</msg>
<status status="PASS" endtime="20200814 14:52:56.809" starttime="20200814 14:52:56.809"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:52:56.815" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-84306 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:53:31.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:53:31.518" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:53:31.518" starttime="20200814 14:52:56.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:53:31.519" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:53:31.519" starttime="20200814 14:53:31.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:53:31.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:53:31.520" starttime="20200814 14:53:31.520"></status>
</kw>
<status status="PASS" endtime="20200814 14:53:31.521" starttime="20200814 14:52:56.811"></status>
</kw>
<msg timestamp="20200814 14:53:31.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:53:31.521" starttime="20200814 14:52:56.810"></status>
</kw>
<msg timestamp="20200814 14:53:31.521" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:53:31.521" starttime="20200814 14:52:56.809"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200814 14:53:31.522" starttime="20200814 14:53:31.522"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 14:53:31.522" critical="yes" starttime="20200814 14:52:56.807"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200814 14:53:31.524" starttime="20200814 14:52:56.746"></status>
</suite>
<status status="PASS" elapsedtime="127610" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
