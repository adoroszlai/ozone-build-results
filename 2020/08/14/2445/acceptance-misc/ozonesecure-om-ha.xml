<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200814 15:03:04.360" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 15:02:26.997" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --numOfVolumes=1 --numOfBuckets=1 --numOfKeys=1 --numOfThreads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 15:02:37.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 15:02:37.677" level="INFO">${output} = 2020-08-14 15:02:28,672 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:28,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 15:02:37.677" starttime="20200814 15:02:26.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 15:02:37.678" level="INFO">2020-08-14 15:02:28,672 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:28,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-08-14 15:02:28,868 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-08-14 15:02:31,614 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-08-14 15:02:31,615 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-08-14 15:02:31,615 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-08-14 15:02:31,615 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-08-14 15:02:31,616 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-08-14 15:02:31,616 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-08-14 15:02:31,616 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-08-14 15:02:31,618 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-08-14 15:02:31,629 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:31,687 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-10007, with testuser/scm@EXAMPLE.COM as owner.
2020-08-14 15:02:32,215 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-10007/bucket-0-82460, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 15:02:32,649 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:33,650 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:34,651 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:34,745 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-08-14 15:02:35,652 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,542
Average Time spent in bucket creation: 00:00:00,224
Average Time spent in key creation: 00:00:01,286
Average Time spent in key write: 00:00:01,387
Total bytes written: 10240
Total Execution time: 00:00:07,876
***************************************************</msg>
<status status="PASS" endtime="20200814 15:02:37.678" starttime="20200814 15:02:37.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 15:02:37.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 15:02:37.679" starttime="20200814 15:02:37.679"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:37.679" starttime="20200814 15:02:26.992"></status>
</kw>
<msg timestamp="20200814 15:02:37.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 15:02:37.680" starttime="20200814 15:02:26.992"></status>
</kw>
<msg timestamp="20200814 15:02:37.680" level="INFO">${result} = 2020-08-14 15:02:28,672 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:28,868 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 15:02:37.680" starttime="20200814 15:02:26.991"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20200814 15:02:37.681" starttime="20200814 15:02:37.681"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:37.681" starttime="20200814 15:02:37.680"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 15:02:37.682" critical="yes" starttime="20200814 15:02:26.990"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 15:02:37.688" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 15:02:45.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 15:02:45.388" level="INFO">${output} = 2020-08-14 15:02:39,374 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:39,541 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 15:02:45.388" starttime="20200814 15:02:37.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 15:02:45.390" level="INFO">2020-08-14 15:02:39,374 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:39,541 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-08-14 15:02:39,542 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-08-14 15:02:39,700 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qarmd0mxjb
2020-08-14 15:02:39,713 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-08-14 15:02:40,725 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:41,309 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-08-14 15:02:41,378 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-14 15:02:41,726 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:41,930 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-08-14 15:02:42,728 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:43,730 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:44,730 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-08-14 15:02:44,895 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=2952.191753, max=2952.191753, mean=2952.191753, stddev=0.0, median=2952.191753, p75=2952.191753, p95=2952.191753, p98=2952.191753, p99=2952.191753, p999=2952.191753, mean_rate=0.2889120032230838, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-08-14 15:02:44,900 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2020-08-14 15:02:44,901 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-08-14 15:02:44,901 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200814 15:02:45.391" starttime="20200814 15:02:45.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 15:02:45.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 15:02:45.391" starttime="20200814 15:02:45.391"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:45.391" starttime="20200814 15:02:37.684"></status>
</kw>
<msg timestamp="20200814 15:02:45.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 15:02:45.392" starttime="20200814 15:02:37.684"></status>
</kw>
<msg timestamp="20200814 15:02:45.392" level="INFO">${result} = 2020-08-14 15:02:39,374 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:39,541 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 15:02:45.392" starttime="20200814 15:02:37.683"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200814 15:02:45.393" starttime="20200814 15:02:45.393"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:45.393" starttime="20200814 15:02:45.392"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 15:02:45.394" critical="yes" starttime="20200814 15:02:37.683"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 15:02:45.400" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 15:02:50.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 15:02:50.391" level="INFO">${output} = 2020-08-14 15:02:47,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:47,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 15:02:50.391" starttime="20200814 15:02:45.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 15:02:50.392" level="INFO">2020-08-14 15:02:47,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:47,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-08-14 15:02:47,453 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-08-14 15:02:47,645 [main] INFO freon.BaseFreonGenerator: Executing test with prefix gknubshkdy
2020-08-14 15:02:47,675 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-08-14 15:02:48,677 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:49,678 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-08-14 15:02:50,371 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=184.9383, max=184.9383, mean=184.9383, stddev=0.0, median=184.9383, p75=184.9383, p95=184.9383, p98=184.9383, p99=184.9383, p999=184.9383, mean_rate=0.8779316841867167, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-08-14 15:02:50,375 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-08-14 15:02:50,377 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-08-14 15:02:50,378 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200814 15:02:50.393" starttime="20200814 15:02:50.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 15:02:50.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 15:02:50.393" starttime="20200814 15:02:50.393"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:50.394" starttime="20200814 15:02:45.397"></status>
</kw>
<msg timestamp="20200814 15:02:50.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 15:02:50.394" starttime="20200814 15:02:45.397"></status>
</kw>
<msg timestamp="20200814 15:02:50.394" level="INFO">${result} = 2020-08-14 15:02:47,212 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:47,452 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 15:02:50.394" starttime="20200814 15:02:45.396"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200814 15:02:50.396" starttime="20200814 15:02:50.395"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:50.396" starttime="20200814 15:02:50.395"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 15:02:50.396" critical="yes" starttime="20200814 15:02:45.395"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 15:02:50.401" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 15:02:55.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 15:02:55.282" level="INFO">${output} = 2020-08-14 15:02:52,126 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:52,355 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 15:02:55.282" starttime="20200814 15:02:50.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 15:02:55.283" level="INFO">2020-08-14 15:02:52,126 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:52,355 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-08-14 15:02:52,355 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-08-14 15:02:52,504 [main] INFO freon.BaseFreonGenerator: Executing test with prefix skcotnkl4z
2020-08-14 15:02:52,516 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-08-14 15:02:53,530 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-08-14 15:02:54,531 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-08-14 15:02:55,237 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=43.441426, max=43.441426, mean=43.441426, stddev=0.0, median=43.441426, p75=43.441426, p95=43.441426, p98=43.441426, p99=43.441426, p999=43.441426, mean_rate=0.8925055538411664, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-08-14 15:02:55,239 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-08-14 15:02:55,247 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-08-14 15:02:55,247 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20200814 15:02:55.283" starttime="20200814 15:02:55.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 15:02:55.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 15:02:55.284" starttime="20200814 15:02:55.284"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:55.285" starttime="20200814 15:02:50.399"></status>
</kw>
<msg timestamp="20200814 15:02:55.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 15:02:55.285" starttime="20200814 15:02:50.398"></status>
</kw>
<msg timestamp="20200814 15:02:55.285" level="INFO">${result} = 2020-08-14 15:02:52,126 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-14 15:02:52,355 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200814 15:02:55.285" starttime="20200814 15:02:50.398"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20200814 15:02:55.287" starttime="20200814 15:02:55.286"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:55.287" starttime="20200814 15:02:55.286"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200814 15:02:55.287" critical="yes" starttime="20200814 15:02:50.397"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200814 15:02:55.289" starttime="20200814 15:02:26.958"></status>
</suite>
<status status="PASS" endtime="20200814 15:02:55.294" starttime="20200814 15:02:26.924"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 15:02:21.513" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 15:02:21.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 15:02:21.517" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20200814 15:02:21.517" starttime="20200814 15:02:21.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 15:02:21.518" level="INFO">scm</msg>
<status status="PASS" endtime="20200814 15:02:21.518" starttime="20200814 15:02:21.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 15:02:21.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 15:02:21.519" starttime="20200814 15:02:21.518"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:21.519" starttime="20200814 15:02:21.508"></status>
</kw>
<msg timestamp="20200814 15:02:21.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 15:02:21.519" starttime="20200814 15:02:21.508"></status>
</kw>
<msg timestamp="20200814 15:02:21.520" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20200814 15:02:21.520" starttime="20200814 15:02:21.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20200814 15:02:21.520" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20200814 15:02:21.520" starttime="20200814 15:02:21.520"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 15:02:21.525" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 15:02:21.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 15:02:21.549" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 15:02:21.549" starttime="20200814 15:02:21.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 15:02:21.550" level="INFO"></msg>
<status status="PASS" endtime="20200814 15:02:21.550" starttime="20200814 15:02:21.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 15:02:21.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 15:02:21.551" starttime="20200814 15:02:21.550"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:21.551" starttime="20200814 15:02:21.522"></status>
</kw>
<msg timestamp="20200814 15:02:21.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 15:02:21.552" starttime="20200814 15:02:21.522"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:21.552" starttime="20200814 15:02:21.521"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:21.552" starttime="20200814 15:02:21.521"></status>
</kw>
<status status="PASS" endtime="20200814 15:02:21.552" starttime="20200814 15:02:21.506"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200814 15:02:21.552" critical="yes" starttime="20200814 15:02:21.505"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20200814 15:02:21.553" starttime="20200814 15:02:21.445"></status>
</suite>
<status status="PASS" elapsedtime="28478" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="5">Critical Tests</stat>
<stat fail="0" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="5">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
