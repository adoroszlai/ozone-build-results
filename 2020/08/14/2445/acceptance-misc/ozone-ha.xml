<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200814 14:15:52.809" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200814 14:14:27.805" level="INFO">${random} = 24557</msg>
<status status="PASS" endtime="20200814 14:14:27.805" starttime="20200814 14:14:27.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200814 14:14:27.806" level="INFO">${prefix} = 24557</msg>
<status status="PASS" endtime="20200814 14:14:27.806" starttime="20200814 14:14:27.806"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:27.806" starttime="20200814 14:14:27.805"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:27.813" level="INFO">Running command 'ozone sh volume info /24557-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:35.494" level="INFO">${rc} = 255</msg>
<msg timestamp="20200814 14:14:35.494" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24557-rpcbasic is not found</msg>
<status status="PASS" endtime="20200814 14:14:35.494" starttime="20200814 14:14:27.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:35.495" level="INFO">VOLUME_NOT_FOUND Volume 24557-rpcbasic is not found</msg>
<status status="PASS" endtime="20200814 14:14:35.495" starttime="20200814 14:14:35.494"></status>
</kw>
<msg timestamp="20200814 14:14:35.495" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24557-rpcbasic is not found</msg>
<status status="PASS" endtime="20200814 14:14:35.496" starttime="20200814 14:14:27.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200814 14:14:35.496" starttime="20200814 14:14:35.496"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:35.501" level="INFO">Running command 'ozone sh volume create /24557-rpcbasic --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:37.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:37.820" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:14:37.820" starttime="20200814 14:14:35.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:37.822" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:14:37.822" starttime="20200814 14:14:37.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:37.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:37.830" starttime="20200814 14:14:37.822"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:37.830" starttime="20200814 14:14:35.497"></status>
</kw>
<msg timestamp="20200814 14:14:37.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:37.831" starttime="20200814 14:14:35.497"></status>
</kw>
<msg timestamp="20200814 14:14:37.831" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200814 14:14:37.831" starttime="20200814 14:14:35.496"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200814 14:14:37.832" starttime="20200814 14:14:37.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:37.844" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="24557-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:40.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:40.258" level="INFO">${output} = {
  "metadata": {},
  "name": "24557-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-14T14:14:37.535Z",
  "modificationTime": "2020-08-14T14:14:37.535Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200814 14:14:40.258" starttime="20200814 14:14:37.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:40.260" level="INFO">{
  "metadata": {},
  "name": "24557-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-14T14:14:37.535Z",
  "modificationTime": "2020-08-14T14:14:37.535Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200814 14:14:40.260" starttime="20200814 14:14:40.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:40.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:40.261" starttime="20200814 14:14:40.260"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:40.261" starttime="20200814 14:14:37.833"></status>
</kw>
<msg timestamp="20200814 14:14:40.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:40.261" starttime="20200814 14:14:37.833"></status>
</kw>
<msg timestamp="20200814 14:14:40.261" level="INFO">${result} = {
  "metadata": {},
  "name": "24557-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-14T14:14:37.535Z",
  "modificationTime": "2020-08-14T14:14:37.535Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200814 14:14:40.261" starttime="20200814 14:14:37.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200814 14:14:40.262" starttime="20200814 14:14:40.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:40.267" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="24557-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:42.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:42.450" level="INFO">${output} = {
  "metadata": {},
  "name": "24557-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-14T14:14:37.535Z",
  "modificationTime": "2020-08-14T14:14:37.535Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200814 14:14:42.450" starttime="20200814 14:14:40.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:42.452" level="INFO">{
  "metadata": {},
  "name": "24557-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-14T14:14:37.535Z",
  "modificationTime": "2020-08-14T14:14:37.535Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200814 14:14:42.452" starttime="20200814 14:14:42.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:42.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:42.453" starttime="20200814 14:14:42.452"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:42.453" starttime="20200814 14:14:40.263"></status>
</kw>
<msg timestamp="20200814 14:14:42.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:42.453" starttime="20200814 14:14:40.263"></status>
</kw>
<msg timestamp="20200814 14:14:42.453" level="INFO">${result} = {
  "metadata": {},
  "name": "24557-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-14T14:14:37.535Z",
  "modificationTime": "2020-08-14T14:14:37.535Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200814 14:14:42.453" starttime="20200814 14:14:40.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200814 14:14:42.454" starttime="20200814 14:14:42.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:42.459" level="INFO">Running command 'ozone sh volume update /24557-rpcbasic --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:44.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:44.748" level="INFO">${output} = {
  "metadata" : { },
  "name" : "24557-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-08-14T14:14:37.535Z",
  "modificationTime" : "2020-08-14T14:14:44.437Z",
  "acls...</msg>
<status status="PASS" endtime="20200814 14:14:44.748" starttime="20200814 14:14:42.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:44.749" level="INFO">{
  "metadata" : { },
  "name" : "24557-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-08-14T14:14:37.535Z",
  "modificationTime" : "2020-08-14T14:14:44.437Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200814 14:14:44.749" starttime="20200814 14:14:44.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:44.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:44.750" starttime="20200814 14:14:44.749"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:44.750" starttime="20200814 14:14:42.455"></status>
</kw>
<msg timestamp="20200814 14:14:44.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:44.751" starttime="20200814 14:14:42.455"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:44.751" starttime="20200814 14:14:42.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:44.758" level="INFO">Running command 'ozone sh volume info /24557-rpcbasic | jq -r '. | select(.name=="24557-rpcbasic") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:46.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:46.925" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200814 14:14:46.925" starttime="20200814 14:14:44.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:46.927" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200814 14:14:46.927" starttime="20200814 14:14:46.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:46.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:46.928" starttime="20200814 14:14:46.927"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:46.928" starttime="20200814 14:14:44.753"></status>
</kw>
<msg timestamp="20200814 14:14:46.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:46.928" starttime="20200814 14:14:44.752"></status>
</kw>
<msg timestamp="20200814 14:14:46.929" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200814 14:14:46.929" starttime="20200814 14:14:44.751"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200814 14:14:46.929" starttime="20200814 14:14:46.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:46.934" level="INFO">Running command 'ozone sh bucket create /24557-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:48.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:48.995" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:14:48.995" starttime="20200814 14:14:46.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:48.997" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:14:48.997" starttime="20200814 14:14:48.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:48.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:48.998" starttime="20200814 14:14:48.997"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:48.998" starttime="20200814 14:14:46.931"></status>
</kw>
<msg timestamp="20200814 14:14:48.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:48.998" starttime="20200814 14:14:46.930"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:48.998" starttime="20200814 14:14:46.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:49.002" level="INFO">Running command 'ozone sh bucket info /24557-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:51.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:51.281" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200814 14:14:51.281" starttime="20200814 14:14:49.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:51.283" level="INFO">DISK</msg>
<status status="PASS" endtime="20200814 14:14:51.283" starttime="20200814 14:14:51.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:51.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:51.284" starttime="20200814 14:14:51.284"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:51.284" starttime="20200814 14:14:49.000"></status>
</kw>
<msg timestamp="20200814 14:14:51.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:51.285" starttime="20200814 14:14:49.000"></status>
</kw>
<msg timestamp="20200814 14:14:51.285" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200814 14:14:51.285" starttime="20200814 14:14:48.999"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200814 14:14:51.286" starttime="20200814 14:14:51.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:51.291" level="INFO">Running command 'ozone sh bucket list /24557-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:53.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:53.417" level="INFO">${output} = 24557-rpcbasic</msg>
<status status="PASS" endtime="20200814 14:14:53.417" starttime="20200814 14:14:51.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:53.419" level="INFO">24557-rpcbasic</msg>
<status status="PASS" endtime="20200814 14:14:53.419" starttime="20200814 14:14:53.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:53.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:53.420" starttime="20200814 14:14:53.419"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:53.420" starttime="20200814 14:14:51.287"></status>
</kw>
<msg timestamp="20200814 14:14:53.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:53.420" starttime="20200814 14:14:51.287"></status>
</kw>
<msg timestamp="20200814 14:14:53.421" level="INFO">${result} = 24557-rpcbasic</msg>
<status status="PASS" endtime="20200814 14:14:53.421" starttime="20200814 14:14:51.286"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200814 14:14:53.421" starttime="20200814 14:14:53.421"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:53.426" level="INFO">Running command 'ozone sh key put /24557-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:59.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:59.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:14:59.133" starttime="20200814 14:14:53.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:59.134" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:14:59.139" starttime="20200814 14:14:59.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:59.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:59.140" starttime="20200814 14:14:59.139"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:59.140" starttime="20200814 14:14:53.423"></status>
</kw>
<msg timestamp="20200814 14:14:59.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:59.140" starttime="20200814 14:14:53.423"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:59.141" starttime="20200814 14:14:53.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:59.146" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:14:59.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:14:59.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:14:59.147" starttime="20200814 14:14:59.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:14:59.148" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:14:59.148" starttime="20200814 14:14:59.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:14:59.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:14:59.149" starttime="20200814 14:14:59.148"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:59.149" starttime="20200814 14:14:59.142"></status>
</kw>
<msg timestamp="20200814 14:14:59.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:14:59.149" starttime="20200814 14:14:59.141"></status>
</kw>
<status status="PASS" endtime="20200814 14:14:59.149" starttime="20200814 14:14:59.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:14:59.154" level="INFO">Running command 'ozone sh key get /24557-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:03.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:03.146" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:03.146" starttime="20200814 14:14:59.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:03.147" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:03.148" starttime="20200814 14:15:03.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:03.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:03.148" starttime="20200814 14:15:03.148"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:03.149" starttime="20200814 14:14:59.150"></status>
</kw>
<msg timestamp="20200814 14:15:03.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:03.149" starttime="20200814 14:14:59.150"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:03.149" starttime="20200814 14:14:59.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:03.153" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:03.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:03.156" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:03.156" starttime="20200814 14:15:03.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:03.157" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:03.157" starttime="20200814 14:15:03.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:03.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:03.158" starttime="20200814 14:15:03.158"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:03.159" starttime="20200814 14:15:03.150"></status>
</kw>
<msg timestamp="20200814 14:15:03.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:03.159" starttime="20200814 14:15:03.150"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:03.159" starttime="20200814 14:15:03.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:03.165" level="INFO">Running command 'ozone sh key put -t RATIS /24557-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:07.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:07.502" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:07.502" starttime="20200814 14:15:03.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:07.503" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:07.504" starttime="20200814 14:15:07.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:07.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:07.504" starttime="20200814 14:15:07.504"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:07.504" starttime="20200814 14:15:03.160"></status>
</kw>
<msg timestamp="20200814 14:15:07.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:07.505" starttime="20200814 14:15:03.160"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:07.505" starttime="20200814 14:15:03.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:07.509" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:07.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:07.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:07.512" starttime="20200814 14:15:07.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:07.513" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:07.513" starttime="20200814 14:15:07.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:07.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:07.513" starttime="20200814 14:15:07.513"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:07.514" starttime="20200814 14:15:07.506"></status>
</kw>
<msg timestamp="20200814 14:15:07.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:07.514" starttime="20200814 14:15:07.506"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:07.514" starttime="20200814 14:15:07.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:07.519" level="INFO">Running command 'ozone sh key get /24557-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:11.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:11.218" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:11.218" starttime="20200814 14:15:07.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:11.220" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:11.220" starttime="20200814 14:15:11.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:11.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:11.221" starttime="20200814 14:15:11.220"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:11.221" starttime="20200814 14:15:07.516"></status>
</kw>
<msg timestamp="20200814 14:15:11.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:11.221" starttime="20200814 14:15:07.515"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:11.221" starttime="20200814 14:15:07.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:11.225" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:11.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:11.227" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:11.227" starttime="20200814 14:15:11.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:11.228" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:11.228" starttime="20200814 14:15:11.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:11.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:11.229" starttime="20200814 14:15:11.229"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:11.229" starttime="20200814 14:15:11.222"></status>
</kw>
<msg timestamp="20200814 14:15:11.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:11.229" starttime="20200814 14:15:11.222"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:11.230" starttime="20200814 14:15:11.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:11.234" level="INFO">Running command 'ozone sh key info /24557-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:13.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:13.431" level="INFO">${output} = {
  "volumeName": "24557-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-08-14T14:15:05.194Z",
  "modificationTime": "2020-08-14T14:15:07.017Z",
...</msg>
<status status="PASS" endtime="20200814 14:15:13.431" starttime="20200814 14:15:11.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:13.432" level="INFO">{
  "volumeName": "24557-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-08-14T14:15:05.194Z",
  "modificationTime": "2020-08-14T14:15:07.017Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104688157012262910,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200814 14:15:13.432" starttime="20200814 14:15:13.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:13.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:13.433" starttime="20200814 14:15:13.433"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:13.434" starttime="20200814 14:15:11.231"></status>
</kw>
<msg timestamp="20200814 14:15:13.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:13.434" starttime="20200814 14:15:11.231"></status>
</kw>
<msg timestamp="20200814 14:15:13.434" level="INFO">${result} = {
  "volumeName": "24557-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-08-14T14:15:05.194Z",
  "modificationTime": "2020-08-14T14:15:07.017Z",
...</msg>
<status status="PASS" endtime="20200814 14:15:13.434" starttime="20200814 14:15:11.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200814 14:15:13.435" starttime="20200814 14:15:13.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:13.441" level="INFO">Running command 'ozone sh key delete /24557-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:15.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:15.432" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:15.432" starttime="20200814 14:15:13.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:15.433" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:15.433" starttime="20200814 14:15:15.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:15.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:15.434" starttime="20200814 14:15:15.434"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:15.435" starttime="20200814 14:15:13.436"></status>
</kw>
<msg timestamp="20200814 14:15:15.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:15.435" starttime="20200814 14:15:13.436"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:15.435" starttime="20200814 14:15:13.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:15.440" level="INFO">Running command 'ozone sh key cp /24557-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:19.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:19.339" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:19.339" starttime="20200814 14:15:15.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:19.340" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:19.340" starttime="20200814 14:15:19.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:19.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:19.341" starttime="20200814 14:15:19.340"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:19.341" starttime="20200814 14:15:15.436"></status>
</kw>
<msg timestamp="20200814 14:15:19.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:19.341" starttime="20200814 14:15:15.436"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:19.342" starttime="20200814 14:15:15.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:19.345" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:19.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:19.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:19.348" starttime="20200814 14:15:19.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:19.349" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:19.349" starttime="20200814 14:15:19.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:19.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:19.350" starttime="20200814 14:15:19.349"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:19.350" starttime="20200814 14:15:19.343"></status>
</kw>
<msg timestamp="20200814 14:15:19.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:19.350" starttime="20200814 14:15:19.342"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:19.351" starttime="20200814 14:15:19.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:19.355" level="INFO">Running command 'ozone sh key get /24557-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:23.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:23.001" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:23.001" starttime="20200814 14:15:19.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:23.002" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:23.002" starttime="20200814 14:15:23.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:23.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:23.003" starttime="20200814 14:15:23.002"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:23.003" starttime="20200814 14:15:19.352"></status>
</kw>
<msg timestamp="20200814 14:15:23.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:23.003" starttime="20200814 14:15:19.351"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:23.004" starttime="20200814 14:15:19.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:23.007" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:23.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:23.009" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:23.009" starttime="20200814 14:15:23.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:23.010" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:23.010" starttime="20200814 14:15:23.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:23.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:23.011" starttime="20200814 14:15:23.011"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:23.011" starttime="20200814 14:15:23.004"></status>
</kw>
<msg timestamp="20200814 14:15:23.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:23.012" starttime="20200814 14:15:23.004"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:23.012" starttime="20200814 14:15:23.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:23.016" level="INFO">Running command 'ozone sh key delete /24557-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:25.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:25.127" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:25.127" starttime="20200814 14:15:23.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:25.128" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:25.128" starttime="20200814 14:15:25.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:25.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:25.129" starttime="20200814 14:15:25.128"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:25.130" starttime="20200814 14:15:23.013"></status>
</kw>
<msg timestamp="20200814 14:15:25.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:25.130" starttime="20200814 14:15:23.013"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:25.130" starttime="20200814 14:15:23.012"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:25.133" level="INFO">Running command 'ozone sh key get /24557-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:27.054" level="INFO">${rc} = 255</msg>
<msg timestamp="20200814 14:15:27.055" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200814 14:15:27.055" starttime="20200814 14:15:25.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:27.056" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200814 14:15:27.056" starttime="20200814 14:15:27.055"></status>
</kw>
<msg timestamp="20200814 14:15:27.056" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200814 14:15:27.056" starttime="20200814 14:15:25.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200814 14:15:27.057" starttime="20200814 14:15:27.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:27.062" level="INFO">Running command 'ozone sh key get --force /24557-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:30.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:30.734" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:30.734" starttime="20200814 14:15:27.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:30.735" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:30.735" starttime="20200814 14:15:30.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:30.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:30.736" starttime="20200814 14:15:30.735"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:30.737" starttime="20200814 14:15:27.059"></status>
</kw>
<msg timestamp="20200814 14:15:30.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:30.737" starttime="20200814 14:15:27.058"></status>
</kw>
<msg timestamp="20200814 14:15:30.737" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200814 14:15:30.737" starttime="20200814 14:15:27.057"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200814 14:15:30.738" starttime="20200814 14:15:30.737"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:30.742" level="INFO">Running command 'ozone sh key info /24557-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:32.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:32.943" level="INFO">${output} = {
  "volumeName": "24557-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-08-14T14:14:55.340Z",
  "modificationTime": "2020-08-14T14:14:58.583Z",
  "rep...</msg>
<status status="PASS" endtime="20200814 14:15:32.943" starttime="20200814 14:15:30.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:32.944" level="INFO">{
  "volumeName": "24557-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-08-14T14:14:55.340Z",
  "modificationTime": "2020-08-14T14:14:58.583Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104688156364046340,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200814 14:15:32.945" starttime="20200814 14:15:32.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:32.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:32.945" starttime="20200814 14:15:32.945"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:32.946" starttime="20200814 14:15:30.740"></status>
</kw>
<msg timestamp="20200814 14:15:32.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:32.946" starttime="20200814 14:15:30.739"></status>
</kw>
<msg timestamp="20200814 14:15:32.946" level="INFO">${result} = {
  "volumeName": "24557-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-08-14T14:14:55.340Z",
  "modificationTime": "2020-08-14T14:14:58.583Z",
  "rep...</msg>
<status status="PASS" endtime="20200814 14:15:32.946" starttime="20200814 14:15:30.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200814 14:15:32.947" starttime="20200814 14:15:32.946"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:32.957" level="INFO">Running command 'ozone sh key list /24557-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:35.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:35.243" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200814 14:15:35.243" starttime="20200814 14:15:32.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:35.244" level="INFO">key1</msg>
<status status="PASS" endtime="20200814 14:15:35.244" starttime="20200814 14:15:35.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:35.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:35.245" starttime="20200814 14:15:35.245"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:35.245" starttime="20200814 14:15:32.948"></status>
</kw>
<msg timestamp="20200814 14:15:35.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:35.246" starttime="20200814 14:15:32.948"></status>
</kw>
<msg timestamp="20200814 14:15:35.246" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200814 14:15:35.246" starttime="20200814 14:15:32.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200814 14:15:35.247" starttime="20200814 14:15:35.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:35.252" level="INFO">Running command 'ozone sh key rename /24557-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:37.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:37.104" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:37.104" starttime="20200814 14:15:35.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:37.105" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:37.105" starttime="20200814 14:15:37.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:37.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:37.106" starttime="20200814 14:15:37.105"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:37.106" starttime="20200814 14:15:35.248"></status>
</kw>
<msg timestamp="20200814 14:15:37.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:37.107" starttime="20200814 14:15:35.248"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:37.107" starttime="20200814 14:15:35.247"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:37.112" level="INFO">Running command 'ozone sh key list /24557-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:39.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:39.292" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200814 14:15:39.292" starttime="20200814 14:15:37.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:39.293" level="INFO">key2</msg>
<status status="PASS" endtime="20200814 14:15:39.293" starttime="20200814 14:15:39.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:39.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:39.294" starttime="20200814 14:15:39.294"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:39.295" starttime="20200814 14:15:37.108"></status>
</kw>
<msg timestamp="20200814 14:15:39.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:39.295" starttime="20200814 14:15:37.108"></status>
</kw>
<msg timestamp="20200814 14:15:39.295" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200814 14:15:39.295" starttime="20200814 14:15:37.107"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200814 14:15:39.296" starttime="20200814 14:15:39.295"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:39.300" level="INFO">Running command 'ozone sh key delete /24557-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:41.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:41.321" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:41.321" starttime="20200814 14:15:39.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:41.322" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:41.323" starttime="20200814 14:15:41.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:41.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:41.323" starttime="20200814 14:15:41.323"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:41.324" starttime="20200814 14:15:39.297"></status>
</kw>
<msg timestamp="20200814 14:15:41.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:41.324" starttime="20200814 14:15:39.297"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:41.324" starttime="20200814 14:15:39.296"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:41.324" starttime="20200814 14:14:53.422"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:41.324" starttime="20200814 14:14:53.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:41.328" level="INFO">Running command 'ozone sh bucket delete /24557-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:43.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:43.460" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200814 14:15:43.460" starttime="20200814 14:15:41.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:43.461" level="INFO"></msg>
<status status="PASS" endtime="20200814 14:15:43.461" starttime="20200814 14:15:43.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:43.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:43.462" starttime="20200814 14:15:43.462"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:43.463" starttime="20200814 14:15:41.326"></status>
</kw>
<msg timestamp="20200814 14:15:43.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:43.463" starttime="20200814 14:15:41.325"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:43.463" starttime="20200814 14:15:41.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200814 14:15:43.468" level="INFO">Running command 'ozone sh volume delete /24557-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200814 14:15:45.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20200814 14:15:45.618" level="INFO">${output} = Volume 24557-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200814 14:15:45.618" starttime="20200814 14:15:43.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200814 14:15:45.619" level="INFO">Volume 24557-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200814 14:15:45.619" starttime="20200814 14:15:45.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200814 14:15:45.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200814 14:15:45.620" starttime="20200814 14:15:45.619"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:45.620" starttime="20200814 14:15:43.464"></status>
</kw>
<msg timestamp="20200814 14:15:45.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200814 14:15:45.621" starttime="20200814 14:15:43.464"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:45.621" starttime="20200814 14:15:43.463"></status>
</kw>
<status status="PASS" endtime="20200814 14:15:45.621" starttime="20200814 14:14:27.807"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200814 14:15:45.621" critical="yes" starttime="20200814 14:14:27.807"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200814 14:15:45.622" starttime="20200814 14:14:27.670"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
