<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200825 13:37:02.926" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200825 13:34:33.048" starttime="20200825 13:34:33.048"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200825 13:34:33.053" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200825 13:34:33.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20200825 13:34:33.171" level="INFO">${output} = HTTP/1.1 200 OK
Date: Tue, 25 Aug 2020 13:34:33 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 25 Aug 2020 13:14:22 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200825 13:34:33.171" starttime="20200825 13:34:33.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200825 13:34:33.172" level="INFO">HTTP/1.1 200 OK
Date: Tue, 25 Aug 2020 13:34:33 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 25 Aug 2020 13:14:22 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200825 13:34:33.172" starttime="20200825 13:34:33.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200825 13:34:33.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200825 13:34:33.173" starttime="20200825 13:34:33.172"></status>
</kw>
<status status="PASS" endtime="20200825 13:34:33.173" starttime="20200825 13:34:33.049"></status>
</kw>
<msg timestamp="20200825 13:34:33.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200825 13:34:33.173" starttime="20200825 13:34:33.049"></status>
</kw>
<msg timestamp="20200825 13:34:33.173" level="INFO">${result} = HTTP/1.1 200 OK
Date: Tue, 25 Aug 2020 13:34:33 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Tue, 25 Aug 2020 13:14:22 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200825 13:34:33.173" starttime="20200825 13:34:33.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200825 13:34:33.174" starttime="20200825 13:34:33.173"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200825 13:34:33.174" critical="yes" starttime="20200825 13:34:33.047"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200825 13:34:33.175" starttime="20200825 13:34:33.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200825 13:34:33.179" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200825 13:35:32.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20200825 13:35:32.487" level="INFO">${output} = 2020-08-25 13:34:34,423 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-25 13:34:34,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200825 13:35:32.487" starttime="20200825 13:34:33.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200825 13:35:32.487" level="INFO">2020-08-25 13:34:34,423 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-25 13:34:34,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-08-25 13:34:34,628 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-08-25 13:34:36,244 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-08-25 13:34:36,245 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-08-25 13:34:36,245 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-08-25 13:34:36,245 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-08-25 13:34:36,245 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-08-25 13:34:36,245 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-08-25 13:34:36,245 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-08-25 13:34:36,251 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-08-25 13:34:36,253 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-08-25 13:34:36,258 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-08-25 13:34:36,289 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-94699, with hadoop as owner.
2020-08-25 13:34:36,464 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-31479, with hadoop as owner.
2020-08-25 13:34:36,474 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-68006, with hadoop as owner.
2020-08-25 13:34:36,489 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-06515, with hadoop as owner.
2020-08-25 13:34:36,496 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-60126, with hadoop as owner.
2020-08-25 13:34:36,508 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-94699/bucket-0-39731, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,568 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31479/bucket-0-04478, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,583 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-68006/bucket-0-26697, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,590 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06515/bucket-0-38209, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,595 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60126/bucket-0-26418, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,601 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-94699/bucket-1-61191, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,605 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31479/bucket-1-82765, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,609 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-68006/bucket-1-31645, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,617 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06515/bucket-1-47235, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,624 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60126/bucket-1-91246, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,628 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-94699/bucket-2-23077, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,634 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31479/bucket-2-70742, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,639 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-68006/bucket-2-68159, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,644 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06515/bucket-2-47527, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,652 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60126/bucket-2-59899, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,657 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-94699/bucket-3-05110, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,662 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31479/bucket-3-76597, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,675 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-68006/bucket-3-17473, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,678 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06515/bucket-3-57459, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,682 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60126/bucket-3-97812, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,686 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-94699/bucket-4-61377, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,692 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-31479/bucket-4-38758, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,694 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-68006/bucket-4-47520, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,701 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-06515/bucket-4-10489, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:36,705 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-60126/bucket-4-80934, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-25 13:34:37,260 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-08-25 13:34:37,408 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-08-25 13:34:38,261 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-08-25 13:34:39,264 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-08-25 13:34:40,264 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-08-25 13:34:41,264 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-08-25 13:34:42,273 [Thread-7] INFO freon.ProgressBar: Progress: 8.80 % (11 out of 125)
2020-08-25 13:34:43,273 [Thread-7] INFO freon.ProgressBar: Progress: 17.60 % (22 out of 125)
2020-08-25 13:34:44,276 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-08-25 13:34:45,277 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-08-25 13:34:46,278 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-08-25 13:34:47,279 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-08-25 13:34:48,280 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-08-25 13:34:49,281 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-08-25 13:34:50,290 [Thread-7] INFO freon.ProgressBar: Progress: 40.80 % (51 out of 125)
2020-08-25 13:34:51,291 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-08-25 13:34:52,291 [Thread-7] INFO freon.ProgressBar: Progress: 45.60 % (57 out of 125)
2020-08-25 13:34:53,293 [Thread-7] INFO freon.ProgressBar: Progress: 47.20 % (59 out of 125)
2020-08-25 13:34:54,293 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-08-25 13:34:55,294 [Thread-7] INFO freon.ProgressBar: Progress: 53.60 % (67 out of 125)
2020-08-25 13:34:56,294 [Thread-7] INFO freon.ProgressBar: Progress: 54.40 % (68 out of 125)
2020-08-25 13:34:57,294 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-08-25 13:34:58,295 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-08-25 13:34:59,295 [Thread-7] INFO freon.ProgressBar: Progress: 63.20 % (79 out of 125)
2020-08-25 13:35:00,296 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-08-25 13:35:01,296 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-08-25 13:35:02,297 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2020-08-25 13:35:03,297 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-08-25 13:35:04,298 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2020-08-25 13:35:05,298 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-08-25 13:35:06,299 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-08-25 13:35:07,299 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2020-08-25 13:35:08,300 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-08-25 13:35:09,300 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-08-25 13:35:10,301 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2020-08-25 13:35:11,302 [Thread-7] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-08-25 13:35:12,302 [Thread-7] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2020-08-25 13:35:13,306 [Thread-7] INFO freon.ProgressBar: Progress: 84.00 % (105 out of 125)
2020-08-25 13:35:14,307 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-08-25 13:35:15,307 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-08-25 13:35:16,308 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-08-25 13:35:17,308 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-08-25 13:35:18,309 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-08-25 13:35:19,310 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-08-25 13:35:20,311 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-08-25 13:35:21,311 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-08-25 13:35:22,312 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-08-25 13:35:23,314 [Thread-7] INFO freon.ProgressBar: Progress: 96.80 % (121 out of 125)
2020-08-25 13:35:24,315 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-08-25 13:35:25,316 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-08-25 13:35:26,316 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-08-25 13:35:27,317 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,219
Average Time spent in bucket creation: 00:00:00,130
Average Time spent in key creation: 00:00:01,749
Average Time spent in key write: 00:00:00,609
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:57,350
***************************************************</msg>
<status status="PASS" endtime="20200825 13:35:32.488" starttime="20200825 13:35:32.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200825 13:35:32.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200825 13:35:32.489" starttime="20200825 13:35:32.488"></status>
</kw>
<status status="PASS" endtime="20200825 13:35:32.489" starttime="20200825 13:34:33.176"></status>
</kw>
<msg timestamp="20200825 13:35:32.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200825 13:35:32.489" starttime="20200825 13:34:33.176"></status>
</kw>
<msg timestamp="20200825 13:35:32.489" level="INFO">${result} = 2020-08-25 13:34:34,423 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-25 13:34:34,626 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200825 13:35:32.489" starttime="20200825 13:34:33.176"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200825 13:35:32.490" starttime="20200825 13:35:32.490"></status>
</kw>
<status status="PASS" endtime="20200825 13:35:32.490" starttime="20200825 13:35:32.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200825 13:35:32.490" starttime="20200825 13:35:32.490"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200825 13:35:32.491" critical="yes" starttime="20200825 13:34:33.175"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200825 13:35:32.491" starttime="20200825 13:34:32.997"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200825 13:35:35.872" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20200825 13:35:37.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20200825 13:35:37.669" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200825 13:35:37.669" starttime="20200825 13:35:35.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200825 13:35:37.670" level="INFO">State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20200825 13:35:37.670" starttime="20200825 13:35:37.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200825 13:35:37.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200825 13:35:37.671" starttime="20200825 13:35:37.670"></status>
</kw>
<status status="PASS" endtime="20200825 13:35:37.671" starttime="20200825 13:35:35.868"></status>
</kw>
<msg timestamp="20200825 13:35:37.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200825 13:35:37.671" starttime="20200825 13:35:35.868"></status>
</kw>
<msg timestamp="20200825 13:35:37.671" level="INFO">${output} = State = HEALTHY
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200825 13:35:37.671" starttime="20200825 13:35:35.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20200825 13:35:37.672" starttime="20200825 13:35:37.671"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200825 13:35:37.672" critical="yes" starttime="20200825 13:35:35.867"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200825 13:35:37.675" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20200825 13:35:39.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20200825 13:35:39.465" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200825 13:35:39.465" starttime="20200825 13:35:37.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200825 13:35:39.466" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20200825 13:35:39.466" starttime="20200825 13:35:39.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200825 13:35:39.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200825 13:35:39.466" starttime="20200825 13:35:39.466"></status>
</kw>
<status status="PASS" endtime="20200825 13:35:39.467" starttime="20200825 13:35:37.673"></status>
</kw>
<msg timestamp="20200825 13:35:39.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200825 13:35:39.467" starttime="20200825 13:35:37.673"></status>
</kw>
<msg timestamp="20200825 13:35:39.467" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200825 13:35:39.467" starttime="20200825 13:35:37.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20200825 13:35:39.468" starttime="20200825 13:35:39.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20200825 13:35:39.468" starttime="20200825 13:35:39.468"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200825 13:35:39.468" critical="yes" starttime="20200825 13:35:37.672"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200825 13:35:39.469" starttime="20200825 13:35:35.831"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1 --quota 100TB</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200825 13:35:42.886" level="INFO">Running command 'ozone sh volume create topvol1 --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200825 13:35:44.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20200825 13:35:44.922" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:35:44.922" starttime="20200825 13:35:42.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200825 13:35:44.923" level="INFO"></msg>
<status status="PASS" endtime="20200825 13:35:44.923" starttime="20200825 13:35:44.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200825 13:35:44.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200825 13:35:44.924" starttime="20200825 13:35:44.923"></status>
</kw>
<status status="PASS" endtime="20200825 13:35:44.924" starttime="20200825 13:35:42.882"></status>
</kw>
<msg timestamp="20200825 13:35:44.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200825 13:35:44.924" starttime="20200825 13:35:42.882"></status>
</kw>
<msg timestamp="20200825 13:35:44.924" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:35:44.924" starttime="20200825 13:35:42.882"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200825 13:35:44.925" starttime="20200825 13:35:44.924"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200825 13:35:44.928" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200825 13:35:47.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20200825 13:35:47.138" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:35:47.138" starttime="20200825 13:35:44.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200825 13:35:47.139" level="INFO"></msg>
<status status="PASS" endtime="20200825 13:35:47.139" starttime="20200825 13:35:47.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200825 13:35:47.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200825 13:35:47.139" starttime="20200825 13:35:47.139"></status>
</kw>
<status status="PASS" endtime="20200825 13:35:47.139" starttime="20200825 13:35:44.925"></status>
</kw>
<msg timestamp="20200825 13:35:47.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200825 13:35:47.140" starttime="20200825 13:35:44.925"></status>
</kw>
<msg timestamp="20200825 13:35:47.140" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:35:47.140" starttime="20200825 13:35:44.925"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200825 13:35:47.140" starttime="20200825 13:35:47.140"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200825 13:35:47.144" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200825 13:35:50.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20200825 13:35:50.829" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:35:50.829" starttime="20200825 13:35:47.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200825 13:35:50.830" level="INFO"></msg>
<status status="PASS" endtime="20200825 13:35:50.830" starttime="20200825 13:35:50.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200825 13:35:50.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200825 13:35:50.830" starttime="20200825 13:35:50.830"></status>
</kw>
<status status="PASS" endtime="20200825 13:35:50.830" starttime="20200825 13:35:47.141"></status>
</kw>
<msg timestamp="20200825 13:35:50.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200825 13:35:50.831" starttime="20200825 13:35:47.141"></status>
</kw>
<msg timestamp="20200825 13:35:50.831" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:35:50.831" starttime="20200825 13:35:47.141"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200825 13:35:50.831" starttime="20200825 13:35:50.831"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200825 13:35:50.831" critical="yes" starttime="20200825 13:35:42.881"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200825 13:35:50.832" starttime="20200825 13:35:42.844"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200825 13:36:24.413" level="INFO">${random} = 37685</msg>
<status status="PASS" endtime="20200825 13:36:24.413" starttime="20200825 13:36:24.413"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200825 13:36:24.418" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-37685 2&gt;&amp;1'.</msg>
<msg timestamp="20200825 13:36:57.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20200825 13:36:57.849" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:36:57.849" starttime="20200825 13:36:24.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200825 13:36:57.850" level="INFO"></msg>
<status status="PASS" endtime="20200825 13:36:57.850" starttime="20200825 13:36:57.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200825 13:36:57.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200825 13:36:57.851" starttime="20200825 13:36:57.850"></status>
</kw>
<status status="PASS" endtime="20200825 13:36:57.851" starttime="20200825 13:36:24.414"></status>
</kw>
<msg timestamp="20200825 13:36:57.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200825 13:36:57.851" starttime="20200825 13:36:24.414"></status>
</kw>
<msg timestamp="20200825 13:36:57.851" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:36:57.851" starttime="20200825 13:36:24.414"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200825 13:36:57.852" starttime="20200825 13:36:57.851"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200825 13:36:57.852" critical="yes" starttime="20200825 13:36:24.412"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200825 13:36:57.852" starttime="20200825 13:36:24.376"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200825 13:35:55.894" level="INFO">${random} = 70051</msg>
<status status="PASS" endtime="20200825 13:35:55.894" starttime="20200825 13:35:55.893"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200825 13:35:55.898" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-70051 2&gt;&amp;1'.</msg>
<msg timestamp="20200825 13:35:59.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20200825 13:35:59.477" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:35:59.477" starttime="20200825 13:35:55.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200825 13:35:59.478" level="INFO"></msg>
<status status="PASS" endtime="20200825 13:35:59.478" starttime="20200825 13:35:59.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200825 13:35:59.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200825 13:35:59.479" starttime="20200825 13:35:59.478"></status>
</kw>
<status status="PASS" endtime="20200825 13:35:59.479" starttime="20200825 13:35:55.895"></status>
</kw>
<msg timestamp="20200825 13:35:59.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200825 13:35:59.480" starttime="20200825 13:35:55.895"></status>
</kw>
<msg timestamp="20200825 13:35:59.480" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200825 13:35:59.480" starttime="20200825 13:35:55.894"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200825 13:35:59.480" starttime="20200825 13:35:59.480"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200825 13:35:59.481" critical="yes" starttime="20200825 13:35:55.893"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200825 13:35:59.481" starttime="20200825 13:35:55.856"></status>
</suite>
<status status="PASS" elapsedtime="108221" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
