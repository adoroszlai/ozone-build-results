<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200828 00:34:51.789" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20200828 00:32:18.605" starttime="20200828 00:32:18.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:32:18.611" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:32:18.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:32:18.718" level="INFO">${output} = HTTP/1.1 200 OK
Date: Fri, 28 Aug 2020 00:32:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 27 Aug 2020 23:51:12 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200828 00:32:18.718" starttime="20200828 00:32:18.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:32:18.719" level="INFO">HTTP/1.1 200 OK
Date: Fri, 28 Aug 2020 00:32:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 27 Aug 2020 23:51:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20200828 00:32:18.720" starttime="20200828 00:32:18.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:32:18.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:32:18.720" starttime="20200828 00:32:18.720"></status>
</kw>
<status status="PASS" endtime="20200828 00:32:18.720" starttime="20200828 00:32:18.607"></status>
</kw>
<msg timestamp="20200828 00:32:18.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:32:18.721" starttime="20200828 00:32:18.607"></status>
</kw>
<msg timestamp="20200828 00:32:18.721" level="INFO">${result} = HTTP/1.1 200 OK
Date: Fri, 28 Aug 2020 00:32:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Thu, 27 Aug 2020 23:51:12 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20200828 00:32:18.721" starttime="20200828 00:32:18.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20200828 00:32:18.721" starttime="20200828 00:32:18.721"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200828 00:32:18.722" critical="yes" starttime="20200828 00:32:18.604"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20200828 00:32:18.725" starttime="20200828 00:32:18.725"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:32:18.728" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 --replicationType RATIS --factor THREE --validateWrites 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:33:09.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:33:09.047" level="INFO">${output} = 2020-08-28 00:32:20,520 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-28 00:32:20,685 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200828 00:33:09.047" starttime="20200828 00:32:18.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:33:09.048" level="INFO">2020-08-28 00:32:20,520 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-28 00:32:20,685 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-08-28 00:32:20,685 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-08-28 00:32:22,785 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-08-28 00:32:22,786 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-08-28 00:32:22,786 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-08-28 00:32:22,786 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-08-28 00:32:22,786 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-08-28 00:32:22,786 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-08-28 00:32:22,786 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-08-28 00:32:22,788 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-08-28 00:32:22,801 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-08-28 00:32:22,811 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-08-28 00:32:22,845 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-79290, with hadoop as owner.
2020-08-28 00:32:23,200 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-00065, with hadoop as owner.
2020-08-28 00:32:23,223 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-82441, with hadoop as owner.
2020-08-28 00:32:23,235 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-38321, with hadoop as owner.
2020-08-28 00:32:23,243 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-74534, with hadoop as owner.
2020-08-28 00:32:23,272 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79290/bucket-0-35155, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,337 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00065/bucket-0-56739, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,347 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82441/bucket-0-62632, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,358 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-38321/bucket-0-52782, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,364 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74534/bucket-0-05082, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,369 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79290/bucket-1-97597, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,374 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00065/bucket-1-50937, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,383 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82441/bucket-1-25636, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,390 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-38321/bucket-1-77104, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,399 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74534/bucket-1-96891, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,403 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79290/bucket-2-09429, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,408 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00065/bucket-2-60759, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,412 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82441/bucket-2-07481, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,418 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-38321/bucket-2-25607, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,422 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74534/bucket-2-89767, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,428 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79290/bucket-3-19424, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,434 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00065/bucket-3-34586, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,442 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82441/bucket-3-60428, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,454 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-38321/bucket-3-41484, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,467 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74534/bucket-3-61538, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,472 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-79290/bucket-4-62840, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,476 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-00065/bucket-4-92663, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,485 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-82441/bucket-4-82689, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,494 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-38321/bucket-4-71291, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,498 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-74534/bucket-4-99158, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-08-28 00:32:23,818 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-08-28 00:32:24,392 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-08-28 00:32:24,818 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-08-28 00:32:25,818 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-08-28 00:32:26,819 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-08-28 00:32:27,820 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-08-28 00:32:28,820 [Thread-7] INFO freon.ProgressBar: Progress: 4.00 % (5 out of 125)
2020-08-28 00:32:29,825 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-08-28 00:32:30,828 [Thread-7] INFO freon.ProgressBar: Progress: 13.60 % (17 out of 125)
2020-08-28 00:32:31,832 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2020-08-28 00:32:32,832 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-08-28 00:32:33,833 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-08-28 00:32:34,833 [Thread-7] INFO freon.ProgressBar: Progress: 28.80 % (36 out of 125)
2020-08-28 00:32:35,833 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-08-28 00:32:36,834 [Thread-7] INFO freon.ProgressBar: Progress: 29.60 % (37 out of 125)
2020-08-28 00:32:37,834 [Thread-7] INFO freon.ProgressBar: Progress: 33.60 % (42 out of 125)
2020-08-28 00:32:38,835 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-08-28 00:32:39,835 [Thread-7] INFO freon.ProgressBar: Progress: 34.40 % (43 out of 125)
2020-08-28 00:32:40,849 [Thread-7] INFO freon.ProgressBar: Progress: 38.40 % (48 out of 125)
2020-08-28 00:32:41,849 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-08-28 00:32:42,850 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-08-28 00:32:43,850 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2020-08-28 00:32:44,851 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-08-28 00:32:45,851 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-08-28 00:32:46,852 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-08-28 00:32:47,852 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-08-28 00:32:48,852 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-08-28 00:32:49,853 [Thread-7] INFO freon.ProgressBar: Progress: 60.00 % (75 out of 125)
2020-08-28 00:32:50,854 [Thread-7] INFO freon.ProgressBar: Progress: 67.20 % (84 out of 125)
2020-08-28 00:32:51,855 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2020-08-28 00:32:52,856 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-08-28 00:32:53,856 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-08-28 00:32:54,885 [Thread-7] INFO freon.ProgressBar: Progress: 86.40 % (108 out of 125)
2020-08-28 00:32:55,895 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-08-28 00:32:56,895 [Thread-7] INFO freon.ProgressBar: Progress: 88.80 % (111 out of 125)
2020-08-28 00:32:57,896 [Thread-7] INFO freon.ProgressBar: Progress: 92.80 % (116 out of 125)
2020-08-28 00:32:58,896 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-08-28 00:32:59,896 [Thread-7] INFO freon.ProgressBar: Progress: 93.60 % (117 out of 125)
2020-08-28 00:33:00,898 [Thread-7] INFO freon.ProgressBar: Progress: 98.40 % (123 out of 125)
2020-08-28 00:33:01,898 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-08-28 00:33:02,898 [Thread-7] INFO freon.ProgressBar: Progress: 99.20 % (124 out of 125)
2020-08-28 00:33:03,899 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,423
Average Time spent in bucket creation: 00:00:00,146
Average Time spent in key creation: 00:00:01,998
Average Time spent in key write: 00:00:00,756
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:47,804
***************************************************</msg>
<status status="PASS" endtime="20200828 00:33:09.048" starttime="20200828 00:33:09.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:33:09.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:33:09.049" starttime="20200828 00:33:09.049"></status>
</kw>
<status status="PASS" endtime="20200828 00:33:09.049" starttime="20200828 00:32:18.726"></status>
</kw>
<msg timestamp="20200828 00:33:09.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:33:09.050" starttime="20200828 00:32:18.726"></status>
</kw>
<msg timestamp="20200828 00:33:09.050" level="INFO">${result} = 2020-08-28 00:32:20,520 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-08-28 00:32:20,685 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20200828 00:33:09.050" starttime="20200828 00:32:18.725"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20200828 00:33:09.051" starttime="20200828 00:33:09.051"></status>
</kw>
<status status="PASS" endtime="20200828 00:33:09.051" starttime="20200828 00:33:09.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20200828 00:33:09.052" starttime="20200828 00:33:09.051"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200828 00:33:09.052" critical="yes" starttime="20200828 00:32:18.724"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200828 00:33:09.053" starttime="20200828 00:32:18.555"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:33:13.099" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:33:15.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:33:15.444" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200828 00:33:15.444" starttime="20200828 00:33:13.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:33:15.445" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack2</msg>
<status status="PASS" endtime="20200828 00:33:15.445" starttime="20200828 00:33:15.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:33:15.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:33:15.446" starttime="20200828 00:33:15.445"></status>
</kw>
<status status="PASS" endtime="20200828 00:33:15.446" starttime="20200828 00:33:13.095"></status>
</kw>
<msg timestamp="20200828 00:33:15.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:33:15.446" starttime="20200828 00:33:13.095"></status>
</kw>
<msg timestamp="20200828 00:33:15.447" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    /...</msg>
<status status="PASS" endtime="20200828 00:33:15.447" starttime="20200828 00:33:13.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20200828 00:33:15.447" starttime="20200828 00:33:15.447"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200828 00:33:15.447" critical="yes" starttime="20200828 00:33:13.094"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:33:15.453" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:33:18.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:33:18.173" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200828 00:33:18.173" starttime="20200828 00:33:15.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:33:18.174" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net)
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net)
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net)</msg>
<status status="PASS" endtime="20200828 00:33:18.174" starttime="20200828 00:33:18.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:33:18.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:33:18.175" starttime="20200828 00:33:18.174"></status>
</kw>
<status status="PASS" endtime="20200828 00:33:18.175" starttime="20200828 00:33:15.451"></status>
</kw>
<msg timestamp="20200828 00:33:18.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:33:18.175" starttime="20200828 00:33:15.450"></status>
</kw>
<msg timestamp="20200828 00:33:18.175" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net)
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net)
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topolog...</msg>
<status status="PASS" endtime="20200828 00:33:18.175" starttime="20200828 00:33:15.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20200828 00:33:18.176" starttime="20200828 00:33:18.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
</arguments>
<status status="PASS" endtime="20200828 00:33:18.176" starttime="20200828 00:33:18.176"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200828 00:33:18.177" critical="yes" starttime="20200828 00:33:15.449"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200828 00:33:18.178" starttime="20200828 00:33:13.044"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1 --quota 100TB</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:33:22.248" level="INFO">Running command 'ozone sh volume create topvol1 --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:33:25.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:33:25.135" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:33:25.135" starttime="20200828 00:33:22.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:33:25.136" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:33:25.136" starttime="20200828 00:33:25.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:33:25.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:33:25.137" starttime="20200828 00:33:25.136"></status>
</kw>
<status status="PASS" endtime="20200828 00:33:25.137" starttime="20200828 00:33:22.243"></status>
</kw>
<msg timestamp="20200828 00:33:25.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:33:25.137" starttime="20200828 00:33:22.242"></status>
</kw>
<msg timestamp="20200828 00:33:25.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:33:25.137" starttime="20200828 00:33:22.242"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200828 00:33:25.138" starttime="20200828 00:33:25.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:33:25.142" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:33:27.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:33:27.900" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:33:27.900" starttime="20200828 00:33:25.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:33:27.901" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:33:27.901" starttime="20200828 00:33:27.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:33:27.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:33:27.902" starttime="20200828 00:33:27.901"></status>
</kw>
<status status="PASS" endtime="20200828 00:33:27.902" starttime="20200828 00:33:25.139"></status>
</kw>
<msg timestamp="20200828 00:33:27.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:33:27.902" starttime="20200828 00:33:25.139"></status>
</kw>
<msg timestamp="20200828 00:33:27.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:33:27.902" starttime="20200828 00:33:25.138"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200828 00:33:27.903" starttime="20200828 00:33:27.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:33:27.906" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:33:32.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:33:32.472" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:33:32.472" starttime="20200828 00:33:27.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:33:32.473" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:33:32.473" starttime="20200828 00:33:32.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:33:32.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:33:32.474" starttime="20200828 00:33:32.474"></status>
</kw>
<status status="PASS" endtime="20200828 00:33:32.474" starttime="20200828 00:33:27.904"></status>
</kw>
<msg timestamp="20200828 00:33:32.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:33:32.475" starttime="20200828 00:33:27.904"></status>
</kw>
<msg timestamp="20200828 00:33:32.475" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:33:32.475" starttime="20200828 00:33:27.903"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200828 00:33:32.475" starttime="20200828 00:33:32.475"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200828 00:33:32.476" critical="yes" starttime="20200828 00:33:22.241"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200828 00:33:32.477" starttime="20200828 00:33:22.193"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200828 00:34:40.911" level="INFO">${random} = 15728</msg>
<status status="PASS" endtime="20200828 00:34:40.911" starttime="20200828 00:34:40.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:34:40.916" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-15728 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:34:45.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:34:45.871" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:34:45.872" starttime="20200828 00:34:40.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:34:45.873" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:34:45.873" starttime="20200828 00:34:45.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:34:45.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:34:45.874" starttime="20200828 00:34:45.873"></status>
</kw>
<status status="PASS" endtime="20200828 00:34:45.874" starttime="20200828 00:34:40.912"></status>
</kw>
<msg timestamp="20200828 00:34:45.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:34:45.874" starttime="20200828 00:34:40.911"></status>
</kw>
<msg timestamp="20200828 00:34:45.874" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:34:45.874" starttime="20200828 00:34:40.911"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200828 00:34:45.875" starttime="20200828 00:34:45.875"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200828 00:34:45.875" critical="yes" starttime="20200828 00:34:40.909"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200828 00:34:45.876" starttime="20200828 00:34:40.861"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200828 00:33:38.336" level="INFO">${random} = 53715</msg>
<status status="PASS" endtime="20200828 00:33:38.336" starttime="20200828 00:33:38.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:33:38.342" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-53715 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:34:12.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:34:12.625" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:34:12.625" starttime="20200828 00:33:38.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:34:12.626" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:34:12.626" starttime="20200828 00:34:12.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:34:12.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:34:12.627" starttime="20200828 00:34:12.626"></status>
</kw>
<status status="PASS" endtime="20200828 00:34:12.627" starttime="20200828 00:33:38.337"></status>
</kw>
<msg timestamp="20200828 00:34:12.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:34:12.627" starttime="20200828 00:33:38.337"></status>
</kw>
<msg timestamp="20200828 00:34:12.627" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:34:12.627" starttime="20200828 00:33:38.336"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200828 00:34:12.628" starttime="20200828 00:34:12.627"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20200828 00:34:12.628" critical="yes" starttime="20200828 00:33:38.334"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20200828 00:34:12.629" starttime="20200828 00:33:38.287"></status>
</suite>
<status status="PASS" elapsedtime="105273" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
