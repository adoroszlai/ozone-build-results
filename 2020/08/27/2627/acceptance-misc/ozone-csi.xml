<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200828 00:17:02.963" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:16:50.682" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:16:50.684" level="INFO">${rc} = 1</msg>
<msg timestamp="20200828 00:16:50.684" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:16:50.684" starttime="20200828 00:16:50.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:16:50.685" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:16:50.685" starttime="20200828 00:16:50.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:16:50.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200828 00:16:50.686" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200828 00:16:50.686" starttime="20200828 00:16:50.685"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:50.686" starttime="20200828 00:16:50.677"></status>
</kw>
<msg timestamp="20200828 00:16:50.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 00:16:50.687" starttime="20200828 00:16:50.677"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:50.687" starttime="20200828 00:16:50.677"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:50.687" starttime="20200828 00:16:50.676"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:16:51.693" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:16:51.694" level="INFO">${rc} = 1</msg>
<msg timestamp="20200828 00:16:51.694" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:16:51.694" starttime="20200828 00:16:51.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:16:51.695" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:16:51.695" starttime="20200828 00:16:51.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:16:51.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200828 00:16:51.696" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200828 00:16:51.696" starttime="20200828 00:16:51.695"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:51.696" starttime="20200828 00:16:51.689"></status>
</kw>
<msg timestamp="20200828 00:16:51.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 00:16:51.696" starttime="20200828 00:16:51.688"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:51.697" starttime="20200828 00:16:51.688"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:51.697" starttime="20200828 00:16:51.687"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:16:52.701" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:16:52.703" level="INFO">${rc} = 1</msg>
<msg timestamp="20200828 00:16:52.703" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:16:52.703" starttime="20200828 00:16:52.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:16:52.705" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:16:52.705" starttime="20200828 00:16:52.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:16:52.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200828 00:16:52.706" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200828 00:16:52.706" starttime="20200828 00:16:52.705"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:52.706" starttime="20200828 00:16:52.699"></status>
</kw>
<msg timestamp="20200828 00:16:52.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 00:16:52.706" starttime="20200828 00:16:52.698"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:52.706" starttime="20200828 00:16:52.698"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:52.706" starttime="20200828 00:16:52.697"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:16:53.712" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:16:53.713" level="INFO">${rc} = 1</msg>
<msg timestamp="20200828 00:16:53.713" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:16:53.713" starttime="20200828 00:16:53.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:16:53.714" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:16:53.715" starttime="20200828 00:16:53.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:16:53.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200828 00:16:53.716" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200828 00:16:53.716" starttime="20200828 00:16:53.715"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:53.716" starttime="20200828 00:16:53.708"></status>
</kw>
<msg timestamp="20200828 00:16:53.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 00:16:53.717" starttime="20200828 00:16:53.708"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:53.717" starttime="20200828 00:16:53.708"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:53.717" starttime="20200828 00:16:53.707"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:16:54.722" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:16:54.723" level="INFO">${rc} = 1</msg>
<msg timestamp="20200828 00:16:54.723" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:16:54.723" starttime="20200828 00:16:54.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:16:54.724" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:16:54.724" starttime="20200828 00:16:54.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:16:54.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200828 00:16:54.725" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200828 00:16:54.725" starttime="20200828 00:16:54.724"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:54.725" starttime="20200828 00:16:54.719"></status>
</kw>
<msg timestamp="20200828 00:16:54.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 00:16:54.726" starttime="20200828 00:16:54.719"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:54.726" starttime="20200828 00:16:54.718"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:54.726" starttime="20200828 00:16:54.717"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:16:55.736" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:16:55.738" level="INFO">${rc} = 1</msg>
<msg timestamp="20200828 00:16:55.738" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:16:55.738" starttime="20200828 00:16:55.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:16:55.739" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:16:55.739" starttime="20200828 00:16:55.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:16:55.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200828 00:16:55.740" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20200828 00:16:55.740" starttime="20200828 00:16:55.739"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:55.740" starttime="20200828 00:16:55.731"></status>
</kw>
<msg timestamp="20200828 00:16:55.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20200828 00:16:55.740" starttime="20200828 00:16:55.730"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:55.740" starttime="20200828 00:16:55.730"></status>
</kw>
<status status="FAIL" endtime="20200828 00:16:55.741" starttime="20200828 00:16:55.729"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:16:56.746" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:16:56.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:16:56.747" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200828 00:16:56.747" starttime="20200828 00:16:56.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:16:56.748" level="INFO"></msg>
<status status="PASS" endtime="20200828 00:16:56.748" starttime="20200828 00:16:56.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:16:56.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:16:56.749" starttime="20200828 00:16:56.749"></status>
</kw>
<status status="PASS" endtime="20200828 00:16:56.750" starttime="20200828 00:16:56.743"></status>
</kw>
<msg timestamp="20200828 00:16:56.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:16:56.750" starttime="20200828 00:16:56.743"></status>
</kw>
<status status="PASS" endtime="20200828 00:16:56.750" starttime="20200828 00:16:56.742"></status>
</kw>
<status status="PASS" endtime="20200828 00:16:56.750" starttime="20200828 00:16:56.741"></status>
</kw>
<status status="PASS" endtime="20200828 00:16:56.750" starttime="20200828 00:16:50.676"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20200828 00:16:56.751" critical="yes" starttime="20200828 00:16:50.675"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200828 00:16:56.755" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20200828 00:16:57.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20200828 00:16:57.093" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20200828 00:16:57.093" starttime="20200828 00:16:56.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200828 00:16:57.094" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20200828 00:16:57.094" starttime="20200828 00:16:57.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200828 00:16:57.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200828 00:16:57.094" starttime="20200828 00:16:57.094"></status>
</kw>
<status status="PASS" endtime="20200828 00:16:57.095" starttime="20200828 00:16:56.753"></status>
</kw>
<msg timestamp="20200828 00:16:57.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200828 00:16:57.095" starttime="20200828 00:16:56.753"></status>
</kw>
<msg timestamp="20200828 00:16:57.095" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20200828 00:16:57.095" starttime="20200828 00:16:56.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20200828 00:16:57.096" starttime="20200828 00:16:57.095"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20200828 00:16:57.096" critical="yes" starttime="20200828 00:16:56.751"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20200828 00:16:57.097" starttime="20200828 00:16:50.627"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
