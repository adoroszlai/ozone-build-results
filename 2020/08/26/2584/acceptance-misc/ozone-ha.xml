<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200826 22:30:37.012" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200826 22:29:24.304" level="INFO">${random} = 94958</msg>
<status status="PASS" endtime="20200826 22:29:24.304" starttime="20200826 22:29:24.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200826 22:29:24.305" level="INFO">${prefix} = 94958</msg>
<status status="PASS" endtime="20200826 22:29:24.306" starttime="20200826 22:29:24.304"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:24.306" starttime="20200826 22:29:24.300"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:24.318" level="INFO">Running command 'ozone sh volume info /94958-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:29.678" level="INFO">${rc} = 255</msg>
<msg timestamp="20200826 22:29:29.678" level="INFO">${output} = VOLUME_NOT_FOUND Volume 94958-rpcbasic is not found</msg>
<status status="PASS" endtime="20200826 22:29:29.678" starttime="20200826 22:29:24.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:29.679" level="INFO">VOLUME_NOT_FOUND Volume 94958-rpcbasic is not found</msg>
<status status="PASS" endtime="20200826 22:29:29.679" starttime="20200826 22:29:29.678"></status>
</kw>
<msg timestamp="20200826 22:29:29.679" level="INFO">${result} = VOLUME_NOT_FOUND Volume 94958-rpcbasic is not found</msg>
<status status="PASS" endtime="20200826 22:29:29.679" starttime="20200826 22:29:24.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200826 22:29:29.680" starttime="20200826 22:29:29.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:29.685" level="INFO">Running command 'ozone sh volume create /94958-rpcbasic --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:31.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:31.546" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:31.546" starttime="20200826 22:29:29.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:31.547" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:31.547" starttime="20200826 22:29:31.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:31.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:31.548" starttime="20200826 22:29:31.548"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:31.548" starttime="20200826 22:29:29.681"></status>
</kw>
<msg timestamp="20200826 22:29:31.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:31.548" starttime="20200826 22:29:29.681"></status>
</kw>
<msg timestamp="20200826 22:29:31.549" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200826 22:29:31.549" starttime="20200826 22:29:29.680"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200826 22:29:31.549" starttime="20200826 22:29:31.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:31.571" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="94958-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:33.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:33.515" level="INFO">${output} = {
  "metadata": {},
  "name": "94958-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-26T22:29:31.304Z",
  "modificationTime": "2020-08-26T22:29:31.304Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200826 22:29:33.515" starttime="20200826 22:29:31.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:33.516" level="INFO">{
  "metadata": {},
  "name": "94958-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-26T22:29:31.304Z",
  "modificationTime": "2020-08-26T22:29:31.304Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200826 22:29:33.516" starttime="20200826 22:29:33.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:33.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:33.517" starttime="20200826 22:29:33.516"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:33.517" starttime="20200826 22:29:31.567"></status>
</kw>
<msg timestamp="20200826 22:29:33.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:33.517" starttime="20200826 22:29:31.563"></status>
</kw>
<msg timestamp="20200826 22:29:33.517" level="INFO">${result} = {
  "metadata": {},
  "name": "94958-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-26T22:29:31.304Z",
  "modificationTime": "2020-08-26T22:29:31.304Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200826 22:29:33.518" starttime="20200826 22:29:31.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200826 22:29:33.518" starttime="20200826 22:29:33.518"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:33.521" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="94958-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:35.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:35.369" level="INFO">${output} = {
  "metadata": {},
  "name": "94958-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-26T22:29:31.304Z",
  "modificationTime": "2020-08-26T22:29:31.304Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200826 22:29:35.369" starttime="20200826 22:29:33.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:35.372" level="INFO">{
  "metadata": {},
  "name": "94958-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-26T22:29:31.304Z",
  "modificationTime": "2020-08-26T22:29:31.304Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200826 22:29:35.372" starttime="20200826 22:29:35.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:35.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:35.373" starttime="20200826 22:29:35.372"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:35.373" starttime="20200826 22:29:33.519"></status>
</kw>
<msg timestamp="20200826 22:29:35.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:35.373" starttime="20200826 22:29:33.519"></status>
</kw>
<msg timestamp="20200826 22:29:35.374" level="INFO">${result} = {
  "metadata": {},
  "name": "94958-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-26T22:29:31.304Z",
  "modificationTime": "2020-08-26T22:29:31.304Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200826 22:29:35.374" starttime="20200826 22:29:33.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200826 22:29:35.374" starttime="20200826 22:29:35.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:35.378" level="INFO">Running command 'ozone sh volume update /94958-rpcbasic --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:37.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:37.430" level="INFO">${output} = {
  "metadata" : { },
  "name" : "94958-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-08-26T22:29:31.304Z",
  "modificationTime" : "2020-08-26T22:29:37.026Z",
  "acls...</msg>
<status status="PASS" endtime="20200826 22:29:37.430" starttime="20200826 22:29:35.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:37.431" level="INFO">{
  "metadata" : { },
  "name" : "94958-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-08-26T22:29:31.304Z",
  "modificationTime" : "2020-08-26T22:29:37.026Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200826 22:29:37.431" starttime="20200826 22:29:37.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:37.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:37.431" starttime="20200826 22:29:37.431"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:37.432" starttime="20200826 22:29:35.375"></status>
</kw>
<msg timestamp="20200826 22:29:37.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:37.432" starttime="20200826 22:29:35.375"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:37.432" starttime="20200826 22:29:35.374"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:37.436" level="INFO">Running command 'ozone sh volume info /94958-rpcbasic | jq -r '. | select(.name=="94958-rpcbasic") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:39.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:39.263" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200826 22:29:39.264" starttime="20200826 22:29:37.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:39.264" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200826 22:29:39.265" starttime="20200826 22:29:39.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:39.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:39.265" starttime="20200826 22:29:39.265"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:39.265" starttime="20200826 22:29:37.434"></status>
</kw>
<msg timestamp="20200826 22:29:39.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:39.266" starttime="20200826 22:29:37.433"></status>
</kw>
<msg timestamp="20200826 22:29:39.266" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200826 22:29:39.266" starttime="20200826 22:29:37.433"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200826 22:29:39.266" starttime="20200826 22:29:39.266"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:39.271" level="INFO">Running command 'ozone sh bucket create /94958-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:40.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:40.986" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:40.987" starttime="20200826 22:29:39.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:40.988" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:40.988" starttime="20200826 22:29:40.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:40.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:40.988" starttime="20200826 22:29:40.988"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:40.988" starttime="20200826 22:29:39.268"></status>
</kw>
<msg timestamp="20200826 22:29:40.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:40.989" starttime="20200826 22:29:39.267"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:40.989" starttime="20200826 22:29:39.266"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:40.993" level="INFO">Running command 'ozone sh bucket info /94958-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:42.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:42.661" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200826 22:29:42.661" starttime="20200826 22:29:40.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:42.662" level="INFO">DISK</msg>
<status status="PASS" endtime="20200826 22:29:42.663" starttime="20200826 22:29:42.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:42.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:42.663" starttime="20200826 22:29:42.663"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:42.663" starttime="20200826 22:29:40.990"></status>
</kw>
<msg timestamp="20200826 22:29:42.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:42.664" starttime="20200826 22:29:40.990"></status>
</kw>
<msg timestamp="20200826 22:29:42.664" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200826 22:29:42.664" starttime="20200826 22:29:40.989"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200826 22:29:42.664" starttime="20200826 22:29:42.664"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:42.669" level="INFO">Running command 'ozone sh bucket list /94958-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:44.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:44.519" level="INFO">${output} = 94958-rpcbasic</msg>
<status status="PASS" endtime="20200826 22:29:44.519" starttime="20200826 22:29:42.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:44.520" level="INFO">94958-rpcbasic</msg>
<status status="PASS" endtime="20200826 22:29:44.520" starttime="20200826 22:29:44.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:44.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:44.521" starttime="20200826 22:29:44.520"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:44.521" starttime="20200826 22:29:42.666"></status>
</kw>
<msg timestamp="20200826 22:29:44.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:44.521" starttime="20200826 22:29:42.665"></status>
</kw>
<msg timestamp="20200826 22:29:44.521" level="INFO">${result} = 94958-rpcbasic</msg>
<status status="PASS" endtime="20200826 22:29:44.521" starttime="20200826 22:29:42.664"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200826 22:29:44.522" starttime="20200826 22:29:44.521"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:44.527" level="INFO">Running command 'ozone sh key put /94958-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:48.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:48.878" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:48.878" starttime="20200826 22:29:44.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:48.879" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:48.879" starttime="20200826 22:29:48.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:48.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:48.879" starttime="20200826 22:29:48.879"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:48.880" starttime="20200826 22:29:44.524"></status>
</kw>
<msg timestamp="20200826 22:29:48.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:48.880" starttime="20200826 22:29:44.523"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:48.880" starttime="20200826 22:29:44.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:48.883" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:48.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:48.885" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:48.885" starttime="20200826 22:29:48.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:48.886" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:48.886" starttime="20200826 22:29:48.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:48.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:48.887" starttime="20200826 22:29:48.886"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:48.887" starttime="20200826 22:29:48.881"></status>
</kw>
<msg timestamp="20200826 22:29:48.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:48.887" starttime="20200826 22:29:48.881"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:48.887" starttime="20200826 22:29:48.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:48.890" level="INFO">Running command 'ozone sh key get /94958-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:52.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:52.102" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:52.103" starttime="20200826 22:29:48.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:52.103" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:52.104" starttime="20200826 22:29:52.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:52.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:52.105" starttime="20200826 22:29:52.104"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:52.105" starttime="20200826 22:29:48.888"></status>
</kw>
<msg timestamp="20200826 22:29:52.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:52.105" starttime="20200826 22:29:48.888"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:52.106" starttime="20200826 22:29:48.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:52.110" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:52.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:52.112" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:52.112" starttime="20200826 22:29:52.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:52.113" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:52.113" starttime="20200826 22:29:52.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:52.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:52.114" starttime="20200826 22:29:52.113"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:52.114" starttime="20200826 22:29:52.107"></status>
</kw>
<msg timestamp="20200826 22:29:52.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:52.114" starttime="20200826 22:29:52.106"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:52.114" starttime="20200826 22:29:52.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:52.117" level="INFO">Running command 'ozone sh key put -t RATIS /94958-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:55.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:55.836" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:55.836" starttime="20200826 22:29:52.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:55.837" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:55.837" starttime="20200826 22:29:55.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:55.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:55.838" starttime="20200826 22:29:55.837"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:55.838" starttime="20200826 22:29:52.115"></status>
</kw>
<msg timestamp="20200826 22:29:55.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:55.838" starttime="20200826 22:29:52.115"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:55.839" starttime="20200826 22:29:52.114"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:55.842" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:55.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:55.845" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:55.845" starttime="20200826 22:29:55.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:55.846" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:55.846" starttime="20200826 22:29:55.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:55.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:55.846" starttime="20200826 22:29:55.846"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:55.847" starttime="20200826 22:29:55.840"></status>
</kw>
<msg timestamp="20200826 22:29:55.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:55.847" starttime="20200826 22:29:55.839"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:55.847" starttime="20200826 22:29:55.839"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:55.851" level="INFO">Running command 'ozone sh key get /94958-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:59.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:59.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:59.271" starttime="20200826 22:29:55.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:59.272" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:59.272" starttime="20200826 22:29:59.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:59.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:59.272" starttime="20200826 22:29:59.272"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:59.273" starttime="20200826 22:29:55.848"></status>
</kw>
<msg timestamp="20200826 22:29:59.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:59.273" starttime="20200826 22:29:55.848"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:59.273" starttime="20200826 22:29:55.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:59.277" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:29:59.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:29:59.279" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:29:59.279" starttime="20200826 22:29:59.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:29:59.280" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:29:59.280" starttime="20200826 22:29:59.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:29:59.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:29:59.280" starttime="20200826 22:29:59.280"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:59.281" starttime="20200826 22:29:59.274"></status>
</kw>
<msg timestamp="20200826 22:29:59.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:29:59.281" starttime="20200826 22:29:59.274"></status>
</kw>
<status status="PASS" endtime="20200826 22:29:59.281" starttime="20200826 22:29:59.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:29:59.285" level="INFO">Running command 'ozone sh key info /94958-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:01.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:01.321" level="INFO">${output} = {
  "volumeName": "94958-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-08-26T22:29:53.777Z",
  "modificationTime": "2020-08-26T22:29:55.457Z",
...</msg>
<status status="PASS" endtime="20200826 22:30:01.321" starttime="20200826 22:29:59.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:01.322" level="INFO">{
  "volumeName": "94958-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-08-26T22:29:53.777Z",
  "modificationTime": "2020-08-26T22:29:55.457Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104758050408038400,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200826 22:30:01.322" starttime="20200826 22:30:01.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:01.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:01.323" starttime="20200826 22:30:01.323"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:01.324" starttime="20200826 22:29:59.282"></status>
</kw>
<msg timestamp="20200826 22:30:01.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:01.324" starttime="20200826 22:29:59.282"></status>
</kw>
<msg timestamp="20200826 22:30:01.324" level="INFO">${result} = {
  "volumeName": "94958-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-08-26T22:29:53.777Z",
  "modificationTime": "2020-08-26T22:29:55.457Z",
...</msg>
<status status="PASS" endtime="20200826 22:30:01.324" starttime="20200826 22:29:59.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200826 22:30:01.325" starttime="20200826 22:30:01.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:01.329" level="INFO">Running command 'ozone sh key delete /94958-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:03.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:03.042" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:03.042" starttime="20200826 22:30:01.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:03.043" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:03.043" starttime="20200826 22:30:03.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:03.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:03.044" starttime="20200826 22:30:03.043"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:03.044" starttime="20200826 22:30:01.326"></status>
</kw>
<msg timestamp="20200826 22:30:03.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:03.045" starttime="20200826 22:30:01.326"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:03.045" starttime="20200826 22:30:01.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:03.049" level="INFO">Running command 'ozone sh key cp /94958-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:06.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:06.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:06.558" starttime="20200826 22:30:03.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:06.559" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:06.559" starttime="20200826 22:30:06.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:06.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:06.560" starttime="20200826 22:30:06.559"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:06.560" starttime="20200826 22:30:03.046"></status>
</kw>
<msg timestamp="20200826 22:30:06.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:06.560" starttime="20200826 22:30:03.046"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:06.560" starttime="20200826 22:30:03.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:06.566" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:06.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:06.568" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:06.568" starttime="20200826 22:30:06.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:06.569" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:06.569" starttime="20200826 22:30:06.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:06.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:06.570" starttime="20200826 22:30:06.569"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:06.570" starttime="20200826 22:30:06.561"></status>
</kw>
<msg timestamp="20200826 22:30:06.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:06.570" starttime="20200826 22:30:06.561"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:06.571" starttime="20200826 22:30:06.560"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:06.575" level="INFO">Running command 'ozone sh key get /94958-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:09.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:09.864" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:09.864" starttime="20200826 22:30:06.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:09.865" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:09.865" starttime="20200826 22:30:09.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:09.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:09.866" starttime="20200826 22:30:09.865"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:09.866" starttime="20200826 22:30:06.572"></status>
</kw>
<msg timestamp="20200826 22:30:09.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:09.866" starttime="20200826 22:30:06.571"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:09.866" starttime="20200826 22:30:06.571"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:09.869" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:09.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:09.872" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:09.872" starttime="20200826 22:30:09.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:09.873" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:09.873" starttime="20200826 22:30:09.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:09.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:09.873" starttime="20200826 22:30:09.873"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:09.873" starttime="20200826 22:30:09.867"></status>
</kw>
<msg timestamp="20200826 22:30:09.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:09.874" starttime="20200826 22:30:09.867"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:09.874" starttime="20200826 22:30:09.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:09.878" level="INFO">Running command 'ozone sh key delete /94958-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:11.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:11.687" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:11.687" starttime="20200826 22:30:09.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:11.688" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:11.688" starttime="20200826 22:30:11.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:11.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:11.689" starttime="20200826 22:30:11.688"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:11.689" starttime="20200826 22:30:09.875"></status>
</kw>
<msg timestamp="20200826 22:30:11.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:11.690" starttime="20200826 22:30:09.874"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:11.690" starttime="20200826 22:30:09.874"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:11.693" level="INFO">Running command 'ozone sh key get /94958-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:13.347" level="INFO">${rc} = 255</msg>
<msg timestamp="20200826 22:30:13.347" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200826 22:30:13.347" starttime="20200826 22:30:11.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:13.348" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200826 22:30:13.349" starttime="20200826 22:30:13.348"></status>
</kw>
<msg timestamp="20200826 22:30:13.349" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200826 22:30:13.349" starttime="20200826 22:30:11.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200826 22:30:13.350" starttime="20200826 22:30:13.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:13.354" level="INFO">Running command 'ozone sh key get --force /94958-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:16.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:16.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:16.854" starttime="20200826 22:30:13.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:16.855" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:16.855" starttime="20200826 22:30:16.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:16.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:16.856" starttime="20200826 22:30:16.855"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:16.856" starttime="20200826 22:30:13.351"></status>
</kw>
<msg timestamp="20200826 22:30:16.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:16.856" starttime="20200826 22:30:13.351"></status>
</kw>
<msg timestamp="20200826 22:30:16.857" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200826 22:30:16.857" starttime="20200826 22:30:13.351"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200826 22:30:16.857" starttime="20200826 22:30:16.857"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:16.861" level="INFO">Running command 'ozone sh key info /94958-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:19.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:19.090" level="INFO">${output} = {
  "volumeName": "94958-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-08-26T22:29:46.276Z",
  "modificationTime": "2020-08-26T22:29:48.391Z",
  "rep...</msg>
<status status="PASS" endtime="20200826 22:30:19.090" starttime="20200826 22:30:16.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:19.091" level="INFO">{
  "volumeName": "94958-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-08-26T22:29:46.276Z",
  "modificationTime": "2020-08-26T22:29:48.391Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104758049915076600,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200826 22:30:19.091" starttime="20200826 22:30:19.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:19.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:19.092" starttime="20200826 22:30:19.091"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:19.092" starttime="20200826 22:30:16.859"></status>
</kw>
<msg timestamp="20200826 22:30:19.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:19.093" starttime="20200826 22:30:16.858"></status>
</kw>
<msg timestamp="20200826 22:30:19.093" level="INFO">${result} = {
  "volumeName": "94958-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-08-26T22:29:46.276Z",
  "modificationTime": "2020-08-26T22:29:48.391Z",
  "rep...</msg>
<status status="PASS" endtime="20200826 22:30:19.093" starttime="20200826 22:30:16.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200826 22:30:19.094" starttime="20200826 22:30:19.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:19.097" level="INFO">Running command 'ozone sh key list /94958-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:21.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:21.131" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200826 22:30:21.131" starttime="20200826 22:30:19.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:21.133" level="INFO">key1</msg>
<status status="PASS" endtime="20200826 22:30:21.133" starttime="20200826 22:30:21.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:21.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:21.134" starttime="20200826 22:30:21.133"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:21.134" starttime="20200826 22:30:19.095"></status>
</kw>
<msg timestamp="20200826 22:30:21.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:21.134" starttime="20200826 22:30:19.095"></status>
</kw>
<msg timestamp="20200826 22:30:21.134" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200826 22:30:21.134" starttime="20200826 22:30:19.094"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200826 22:30:21.135" starttime="20200826 22:30:21.135"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:21.140" level="INFO">Running command 'ozone sh key rename /94958-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:23.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:23.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:23.037" starttime="20200826 22:30:21.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:23.038" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:23.038" starttime="20200826 22:30:23.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:23.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:23.039" starttime="20200826 22:30:23.038"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:23.039" starttime="20200826 22:30:21.136"></status>
</kw>
<msg timestamp="20200826 22:30:23.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:23.040" starttime="20200826 22:30:21.136"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:23.040" starttime="20200826 22:30:21.135"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:23.044" level="INFO">Running command 'ozone sh key list /94958-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:25.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:25.085" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200826 22:30:25.085" starttime="20200826 22:30:23.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:25.086" level="INFO">key2</msg>
<status status="PASS" endtime="20200826 22:30:25.086" starttime="20200826 22:30:25.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:25.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:25.087" starttime="20200826 22:30:25.086"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:25.087" starttime="20200826 22:30:23.041"></status>
</kw>
<msg timestamp="20200826 22:30:25.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:25.087" starttime="20200826 22:30:23.041"></status>
</kw>
<msg timestamp="20200826 22:30:25.087" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200826 22:30:25.088" starttime="20200826 22:30:23.040"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200826 22:30:25.088" starttime="20200826 22:30:25.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:25.093" level="INFO">Running command 'ozone sh key delete /94958-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:27.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:27.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:27.111" starttime="20200826 22:30:25.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:27.112" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:27.112" starttime="20200826 22:30:27.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:27.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:27.113" starttime="20200826 22:30:27.112"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:27.113" starttime="20200826 22:30:25.089"></status>
</kw>
<msg timestamp="20200826 22:30:27.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:27.113" starttime="20200826 22:30:25.089"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:27.113" starttime="20200826 22:30:25.088"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:27.113" starttime="20200826 22:29:44.522"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:27.114" starttime="20200826 22:29:44.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:27.118" level="INFO">Running command 'ozone sh bucket delete /94958-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:28.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:28.870" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200826 22:30:28.870" starttime="20200826 22:30:27.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:28.871" level="INFO"></msg>
<status status="PASS" endtime="20200826 22:30:28.871" starttime="20200826 22:30:28.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:28.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:28.872" starttime="20200826 22:30:28.871"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:28.872" starttime="20200826 22:30:27.115"></status>
</kw>
<msg timestamp="20200826 22:30:28.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:28.872" starttime="20200826 22:30:27.114"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:28.872" starttime="20200826 22:30:27.114"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200826 22:30:28.877" level="INFO">Running command 'ozone sh volume delete /94958-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200826 22:30:30.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20200826 22:30:30.522" level="INFO">${output} = Volume 94958-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200826 22:30:30.522" starttime="20200826 22:30:28.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200826 22:30:30.523" level="INFO">Volume 94958-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200826 22:30:30.523" starttime="20200826 22:30:30.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200826 22:30:30.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200826 22:30:30.524" starttime="20200826 22:30:30.523"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:30.524" starttime="20200826 22:30:28.874"></status>
</kw>
<msg timestamp="20200826 22:30:30.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200826 22:30:30.524" starttime="20200826 22:30:28.873"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:30.524" starttime="20200826 22:30:28.873"></status>
</kw>
<status status="PASS" endtime="20200826 22:30:30.524" starttime="20200826 22:29:24.308"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200826 22:30:30.525" critical="yes" starttime="20200826 22:29:24.306"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200826 22:30:30.526" starttime="20200826 22:29:24.161"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
