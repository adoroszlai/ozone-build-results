<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20200831 08:53:17.681" generator="Rebot 3.2.1 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1" name="ozone-ha">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20200831 08:51:33.324" level="INFO">${random} = 53785</msg>
<status status="PASS" endtime="20200831 08:51:33.324" starttime="20200831 08:51:33.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20200831 08:51:33.328" level="INFO">${prefix} = 53785</msg>
<status status="PASS" endtime="20200831 08:51:33.328" starttime="20200831 08:51:33.324"></status>
</kw>
<status status="PASS" endtime="20200831 08:51:33.328" starttime="20200831 08:51:33.316"></status>
</kw>
<test id="s1-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:51:33.356" level="INFO">Running command 'ozone sh volume info /53785-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:51:42.122" level="INFO">${rc} = 255</msg>
<msg timestamp="20200831 08:51:42.122" level="INFO">${output} = VOLUME_NOT_FOUND Volume 53785-rpcbasic is not found</msg>
<status status="PASS" endtime="20200831 08:51:42.122" starttime="20200831 08:51:33.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:51:42.124" level="INFO">VOLUME_NOT_FOUND Volume 53785-rpcbasic is not found</msg>
<status status="PASS" endtime="20200831 08:51:42.124" starttime="20200831 08:51:42.123"></status>
</kw>
<msg timestamp="20200831 08:51:42.124" level="INFO">${result} = VOLUME_NOT_FOUND Volume 53785-rpcbasic is not found</msg>
<status status="PASS" endtime="20200831 08:51:42.124" starttime="20200831 08:51:33.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20200831 08:51:42.125" starttime="20200831 08:51:42.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:51:42.142" level="INFO">Running command 'ozone sh volume create /53785-rpcbasic --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:51:45.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:51:45.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:51:45.947" starttime="20200831 08:51:42.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:51:45.952" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:51:45.952" starttime="20200831 08:51:45.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:51:45.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:51:45.957" starttime="20200831 08:51:45.953"></status>
</kw>
<status status="PASS" endtime="20200831 08:51:45.960" starttime="20200831 08:51:42.138"></status>
</kw>
<msg timestamp="20200831 08:51:45.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:51:45.960" starttime="20200831 08:51:42.128"></status>
</kw>
<msg timestamp="20200831 08:51:45.960" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200831 08:51:45.961" starttime="20200831 08:51:42.125"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20200831 08:51:45.962" starttime="20200831 08:51:45.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:51:45.981" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="53785-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:51:49.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:51:49.246" level="INFO">${output} = {
  "metadata": {},
  "name": "53785-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-31T08:51:45.630Z",
  "modificationTime": "2020-08-31T08:51:45.630Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200831 08:51:49.246" starttime="20200831 08:51:45.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:51:49.248" level="INFO">{
  "metadata": {},
  "name": "53785-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-31T08:51:45.630Z",
  "modificationTime": "2020-08-31T08:51:45.630Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200831 08:51:49.248" starttime="20200831 08:51:49.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:51:49.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:51:49.249" starttime="20200831 08:51:49.248"></status>
</kw>
<status status="PASS" endtime="20200831 08:51:49.250" starttime="20200831 08:51:45.963"></status>
</kw>
<msg timestamp="20200831 08:51:49.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:51:49.250" starttime="20200831 08:51:45.963"></status>
</kw>
<msg timestamp="20200831 08:51:49.250" level="INFO">${result} = {
  "metadata": {},
  "name": "53785-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-31T08:51:45.630Z",
  "modificationTime": "2020-08-31T08:51:45.630Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200831 08:51:49.250" starttime="20200831 08:51:45.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200831 08:51:49.251" starttime="20200831 08:51:49.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:51:49.260" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="53785-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:51:51.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:51:51.908" level="INFO">${output} = {
  "metadata": {},
  "name": "53785-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-31T08:51:45.630Z",
  "modificationTime": "2020-08-31T08:51:45.630Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200831 08:51:51.908" starttime="20200831 08:51:49.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:51:51.909" level="INFO">{
  "metadata": {},
  "name": "53785-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-31T08:51:45.630Z",
  "modificationTime": "2020-08-31T08:51:45.630Z",
  "acls": [
    {
      "type": "USER",
      "name": "hadoop",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "users",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20200831 08:51:51.909" starttime="20200831 08:51:51.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:51:51.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:51:51.910" starttime="20200831 08:51:51.910"></status>
</kw>
<status status="PASS" endtime="20200831 08:51:51.910" starttime="20200831 08:51:49.252"></status>
</kw>
<msg timestamp="20200831 08:51:51.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:51:51.911" starttime="20200831 08:51:49.252"></status>
</kw>
<msg timestamp="20200831 08:51:51.911" level="INFO">${result} = {
  "metadata": {},
  "name": "53785-rpcbasic",
  "admin": "hadoop",
  "owner": "hadoop",
  "creationTime": "2020-08-31T08:51:45.630Z",
  "modificationTime": "2020-08-31T08:51:45.630Z",
  "acls": [
  ...</msg>
<status status="PASS" endtime="20200831 08:51:51.911" starttime="20200831 08:51:49.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200831 08:51:51.911" starttime="20200831 08:51:51.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:51:51.918" level="INFO">Running command 'ozone sh volume update /53785-rpcbasic --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:51:54.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:51:54.631" level="INFO">${output} = {
  "metadata" : { },
  "name" : "53785-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-08-31T08:51:45.630Z",
  "modificationTime" : "2020-08-31T08:51:54.314Z",
  "acls...</msg>
<status status="PASS" endtime="20200831 08:51:54.631" starttime="20200831 08:51:51.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:51:54.632" level="INFO">{
  "metadata" : { },
  "name" : "53785-rpcbasic",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "creationTime" : "2020-08-31T08:51:45.630Z",
  "modificationTime" : "2020-08-31T08:51:54.314Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "users",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20200831 08:51:54.632" starttime="20200831 08:51:54.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:51:54.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:51:54.633" starttime="20200831 08:51:54.632"></status>
</kw>
<status status="PASS" endtime="20200831 08:51:54.633" starttime="20200831 08:51:51.912"></status>
</kw>
<msg timestamp="20200831 08:51:54.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:51:54.633" starttime="20200831 08:51:51.912"></status>
</kw>
<status status="PASS" endtime="20200831 08:51:54.633" starttime="20200831 08:51:51.912"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:51:54.638" level="INFO">Running command 'ozone sh volume info /53785-rpcbasic | jq -r '. | select(.name=="53785-rpcbasic") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:51:57.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:51:57.154" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20200831 08:51:57.154" starttime="20200831 08:51:54.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:51:57.157" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20200831 08:51:57.157" starttime="20200831 08:51:57.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:51:57.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:51:57.157" starttime="20200831 08:51:57.157"></status>
</kw>
<status status="PASS" endtime="20200831 08:51:57.158" starttime="20200831 08:51:54.635"></status>
</kw>
<msg timestamp="20200831 08:51:57.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:51:57.158" starttime="20200831 08:51:54.634"></status>
</kw>
<msg timestamp="20200831 08:51:57.158" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20200831 08:51:57.158" starttime="20200831 08:51:54.634"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20200831 08:51:57.159" starttime="20200831 08:51:57.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:51:57.164" level="INFO">Running command 'ozone sh bucket create /53785-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:51:59.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:51:59.774" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:51:59.774" starttime="20200831 08:51:57.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:51:59.775" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:51:59.775" starttime="20200831 08:51:59.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:51:59.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:51:59.777" starttime="20200831 08:51:59.776"></status>
</kw>
<status status="PASS" endtime="20200831 08:51:59.778" starttime="20200831 08:51:57.160"></status>
</kw>
<msg timestamp="20200831 08:51:59.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:51:59.778" starttime="20200831 08:51:57.160"></status>
</kw>
<status status="PASS" endtime="20200831 08:51:59.778" starttime="20200831 08:51:57.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:51:59.788" level="INFO">Running command 'ozone sh bucket info /53785-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:02.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:02.493" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20200831 08:52:02.493" starttime="20200831 08:51:59.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:02.494" level="INFO">DISK</msg>
<status status="PASS" endtime="20200831 08:52:02.494" starttime="20200831 08:52:02.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:02.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:02.495" starttime="20200831 08:52:02.495"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:02.496" starttime="20200831 08:51:59.781"></status>
</kw>
<msg timestamp="20200831 08:52:02.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:02.496" starttime="20200831 08:51:59.780"></status>
</kw>
<msg timestamp="20200831 08:52:02.496" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20200831 08:52:02.496" starttime="20200831 08:51:59.779"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20200831 08:52:02.497" starttime="20200831 08:52:02.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:02.504" level="INFO">Running command 'ozone sh bucket list /53785-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:05.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:05.344" level="INFO">${output} = 53785-rpcbasic</msg>
<status status="PASS" endtime="20200831 08:52:05.344" starttime="20200831 08:52:02.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:05.345" level="INFO">53785-rpcbasic</msg>
<status status="PASS" endtime="20200831 08:52:05.345" starttime="20200831 08:52:05.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:05.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:05.346" starttime="20200831 08:52:05.345"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:05.346" starttime="20200831 08:52:02.499"></status>
</kw>
<msg timestamp="20200831 08:52:05.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:05.346" starttime="20200831 08:52:02.499"></status>
</kw>
<msg timestamp="20200831 08:52:05.347" level="INFO">${result} = 53785-rpcbasic</msg>
<status status="PASS" endtime="20200831 08:52:05.347" starttime="20200831 08:52:02.497"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20200831 08:52:05.348" starttime="20200831 08:52:05.347"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:05.355" level="INFO">Running command 'ozone sh key put /53785-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:12.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:12.065" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:12.065" starttime="20200831 08:52:05.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:12.069" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:12.069" starttime="20200831 08:52:12.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:12.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:12.070" starttime="20200831 08:52:12.070"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:12.071" starttime="20200831 08:52:05.350"></status>
</kw>
<msg timestamp="20200831 08:52:12.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:12.071" starttime="20200831 08:52:05.350"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:12.071" starttime="20200831 08:52:05.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:12.075" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:12.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:12.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:12.079" starttime="20200831 08:52:12.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:12.080" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:12.080" starttime="20200831 08:52:12.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:12.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:12.081" starttime="20200831 08:52:12.081"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:12.082" starttime="20200831 08:52:12.072"></status>
</kw>
<msg timestamp="20200831 08:52:12.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:12.082" starttime="20200831 08:52:12.072"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:12.083" starttime="20200831 08:52:12.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:12.087" level="INFO">Running command 'ozone sh key get /53785-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:16.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:16.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:16.598" starttime="20200831 08:52:12.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:16.599" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:16.599" starttime="20200831 08:52:16.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:16.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:16.600" starttime="20200831 08:52:16.599"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:16.600" starttime="20200831 08:52:12.084"></status>
</kw>
<msg timestamp="20200831 08:52:16.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:16.600" starttime="20200831 08:52:12.084"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:16.601" starttime="20200831 08:52:12.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:16.605" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:16.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:16.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:16.610" starttime="20200831 08:52:16.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:16.611" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:16.611" starttime="20200831 08:52:16.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:16.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:16.612" starttime="20200831 08:52:16.611"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:16.612" starttime="20200831 08:52:16.601"></status>
</kw>
<msg timestamp="20200831 08:52:16.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:16.612" starttime="20200831 08:52:16.601"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:16.612" starttime="20200831 08:52:16.601"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:16.618" level="INFO">Running command 'ozone sh key put -t RATIS /53785-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:21.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:21.064" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:21.064" starttime="20200831 08:52:16.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:21.065" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:21.066" starttime="20200831 08:52:21.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:21.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:21.066" starttime="20200831 08:52:21.066"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:21.067" starttime="20200831 08:52:16.613"></status>
</kw>
<msg timestamp="20200831 08:52:21.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:21.067" starttime="20200831 08:52:16.613"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:21.067" starttime="20200831 08:52:16.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:21.071" level="INFO">Running command 'rm -f /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:21.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:21.076" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:21.076" starttime="20200831 08:52:21.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:21.079" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:21.079" starttime="20200831 08:52:21.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:21.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:21.080" starttime="20200831 08:52:21.079"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:21.081" starttime="20200831 08:52:21.068"></status>
</kw>
<msg timestamp="20200831 08:52:21.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:21.081" starttime="20200831 08:52:21.068"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:21.081" starttime="20200831 08:52:21.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:21.086" level="INFO">Running command 'ozone sh key get /53785-rpcbasic/bb1/key1_RATIS /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:25.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:25.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:25.512" starttime="20200831 08:52:21.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:25.513" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:25.513" starttime="20200831 08:52:25.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:25.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:25.514" starttime="20200831 08:52:25.514"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:25.514" starttime="20200831 08:52:21.083"></status>
</kw>
<msg timestamp="20200831 08:52:25.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:25.515" starttime="20200831 08:52:21.082"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:25.515" starttime="20200831 08:52:21.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:25.520" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:25.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:25.522" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:25.522" starttime="20200831 08:52:25.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:25.523" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:25.523" starttime="20200831 08:52:25.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:25.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:25.524" starttime="20200831 08:52:25.523"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:25.524" starttime="20200831 08:52:25.516"></status>
</kw>
<msg timestamp="20200831 08:52:25.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:25.524" starttime="20200831 08:52:25.515"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:25.525" starttime="20200831 08:52:25.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:25.530" level="INFO">Running command 'ozone sh key info /53785-rpcbasic/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:28.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:28.060" level="INFO">${output} = {
  "volumeName": "53785-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-08-31T08:52:18.861Z",
  "modificationTime": "2020-08-31T08:52:20.679Z",
...</msg>
<status status="PASS" endtime="20200831 08:52:28.060" starttime="20200831 08:52:25.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:28.062" level="INFO">{
  "volumeName": "53785-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-08-31T08:52:18.861Z",
  "modificationTime": "2020-08-31T08:52:20.679Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 2,
      "localID": 104783147097128960,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200831 08:52:28.062" starttime="20200831 08:52:28.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:28.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:28.063" starttime="20200831 08:52:28.062"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:28.063" starttime="20200831 08:52:25.526"></status>
</kw>
<msg timestamp="20200831 08:52:28.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:28.063" starttime="20200831 08:52:25.526"></status>
</kw>
<msg timestamp="20200831 08:52:28.063" level="INFO">${result} = {
  "volumeName": "53785-rpcbasic",
  "bucketName": "bb1",
  "name": "key1_RATIS",
  "dataSize": 17540,
  "creationTime": "2020-08-31T08:52:18.861Z",
  "modificationTime": "2020-08-31T08:52:20.679Z",
...</msg>
<status status="PASS" endtime="20200831 08:52:28.063" starttime="20200831 08:52:25.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>RATIS</arg>
</arguments>
<status status="PASS" endtime="20200831 08:52:28.064" starttime="20200831 08:52:28.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:28.071" level="INFO">Running command 'ozone sh key delete /53785-rpcbasic/bb1/key1_RATIS 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:30.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:30.607" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:30.608" starttime="20200831 08:52:28.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:30.609" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:30.609" starttime="20200831 08:52:30.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:30.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:30.610" starttime="20200831 08:52:30.609"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:30.610" starttime="20200831 08:52:28.066"></status>
</kw>
<msg timestamp="20200831 08:52:30.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:30.610" starttime="20200831 08:52:28.065"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:30.610" starttime="20200831 08:52:28.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:30.615" level="INFO">Running command 'ozone sh key cp /53785-rpcbasic/bb1 key1 key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:35.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:35.595" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:35.595" starttime="20200831 08:52:30.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:35.596" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:35.596" starttime="20200831 08:52:35.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:35.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:35.597" starttime="20200831 08:52:35.596"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:35.597" starttime="20200831 08:52:30.611"></status>
</kw>
<msg timestamp="20200831 08:52:35.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:35.598" starttime="20200831 08:52:30.611"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:35.598" starttime="20200831 08:52:30.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:35.602" level="INFO">Running command 'rm -f /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:35.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:35.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:35.605" starttime="20200831 08:52:35.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:35.606" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:35.607" starttime="20200831 08:52:35.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:35.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:35.607" starttime="20200831 08:52:35.607"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:35.607" starttime="20200831 08:52:35.599"></status>
</kw>
<msg timestamp="20200831 08:52:35.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:35.608" starttime="20200831 08:52:35.599"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:35.608" starttime="20200831 08:52:35.598"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:35.613" level="INFO">Running command 'ozone sh key get /53785-rpcbasic/bb1/key1-copy /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:39.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:39.908" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:39.908" starttime="20200831 08:52:35.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:39.909" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:39.910" starttime="20200831 08:52:39.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:39.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:39.910" starttime="20200831 08:52:39.910"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:39.911" starttime="20200831 08:52:35.609"></status>
</kw>
<msg timestamp="20200831 08:52:39.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:39.911" starttime="20200831 08:52:35.609"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:39.911" starttime="20200831 08:52:35.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:39.917" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:39.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:39.919" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:39.919" starttime="20200831 08:52:39.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:39.920" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:39.920" starttime="20200831 08:52:39.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:39.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:39.921" starttime="20200831 08:52:39.920"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:39.921" starttime="20200831 08:52:39.912"></status>
</kw>
<msg timestamp="20200831 08:52:39.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:39.921" starttime="20200831 08:52:39.912"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:39.922" starttime="20200831 08:52:39.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:39.927" level="INFO">Running command 'ozone sh key delete /53785-rpcbasic/bb1/key1-copy 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:42.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:42.711" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:42.711" starttime="20200831 08:52:39.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:42.713" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:42.713" starttime="20200831 08:52:42.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:42.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:42.713" starttime="20200831 08:52:42.713"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:42.714" starttime="20200831 08:52:39.923"></status>
</kw>
<msg timestamp="20200831 08:52:42.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:42.714" starttime="20200831 08:52:39.922"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:42.714" starttime="20200831 08:52:39.922"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:42.726" level="INFO">Running command 'ozone sh key get /53785-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:45.311" level="INFO">${rc} = 255</msg>
<msg timestamp="20200831 08:52:45.312" level="INFO">${output} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200831 08:52:45.312" starttime="20200831 08:52:42.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:45.314" level="INFO">/tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200831 08:52:45.314" starttime="20200831 08:52:45.312"></status>
</kw>
<msg timestamp="20200831 08:52:45.315" level="INFO">${result} = /tmp/NOTICE.txt.1 exists. Download would overwrite an existing file. Aborting.</msg>
<status status="PASS" endtime="20200831 08:52:45.315" starttime="20200831 08:52:42.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200831 08:52:45.316" starttime="20200831 08:52:45.315"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:45.322" level="INFO">Running command 'ozone sh key get --force /53785-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:49.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:49.781" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:49.781" starttime="20200831 08:52:45.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:49.783" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:49.783" starttime="20200831 08:52:49.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:49.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:49.784" starttime="20200831 08:52:49.783"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:49.784" starttime="20200831 08:52:45.318"></status>
</kw>
<msg timestamp="20200831 08:52:49.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:49.785" starttime="20200831 08:52:45.317"></status>
</kw>
<msg timestamp="20200831 08:52:49.785" level="INFO">${result} = </msg>
<status status="PASS" endtime="20200831 08:52:49.785" starttime="20200831 08:52:45.316"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
</arguments>
<status status="PASS" endtime="20200831 08:52:49.786" starttime="20200831 08:52:49.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:49.792" level="INFO">Running command 'ozone sh key info /53785-rpcbasic/bb1/key1 | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:52.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:52.986" level="INFO">${output} = {
  "volumeName": "53785-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-08-31T08:52:07.821Z",
  "modificationTime": "2020-08-31T08:52:11.335Z",
  "rep...</msg>
<status status="PASS" endtime="20200831 08:52:52.986" starttime="20200831 08:52:49.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:52.987" level="INFO">{
  "volumeName": "53785-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-08-31T08:52:07.821Z",
  "modificationTime": "2020-08-31T08:52:11.335Z",
  "replicationType": "RATIS",
  "replicationFactor": 3,
  "ozoneKeyLocations": [
    {
      "containerID": 1,
      "localID": 104783146370924540,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20200831 08:52:52.987" starttime="20200831 08:52:52.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:52.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:52.989" starttime="20200831 08:52:52.988"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:52.989" starttime="20200831 08:52:49.788"></status>
</kw>
<msg timestamp="20200831 08:52:52.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:52.990" starttime="20200831 08:52:49.787"></status>
</kw>
<msg timestamp="20200831 08:52:52.990" level="INFO">${result} = {
  "volumeName": "53785-rpcbasic",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": "2020-08-31T08:52:07.821Z",
  "modificationTime": "2020-08-31T08:52:11.335Z",
  "rep...</msg>
<status status="PASS" endtime="20200831 08:52:52.991" starttime="20200831 08:52:49.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20200831 08:52:52.991" starttime="20200831 08:52:52.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:52.998" level="INFO">Running command 'ozone sh key list /53785-rpcbasic/bb1 | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:55.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:55.783" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20200831 08:52:55.783" starttime="20200831 08:52:52.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:55.784" level="INFO">key1</msg>
<status status="PASS" endtime="20200831 08:52:55.784" starttime="20200831 08:52:55.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:55.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:55.785" starttime="20200831 08:52:55.784"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:55.785" starttime="20200831 08:52:52.994"></status>
</kw>
<msg timestamp="20200831 08:52:55.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:55.785" starttime="20200831 08:52:52.993"></status>
</kw>
<msg timestamp="20200831 08:52:55.786" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20200831 08:52:55.786" starttime="20200831 08:52:52.992"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20200831 08:52:55.787" starttime="20200831 08:52:55.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:55.792" level="INFO">Running command 'ozone sh key rename /53785-rpcbasic/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:52:58.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:52:58.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:52:58.444" starttime="20200831 08:52:55.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:52:58.445" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:52:58.445" starttime="20200831 08:52:58.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:52:58.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:52:58.446" starttime="20200831 08:52:58.445"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:58.446" starttime="20200831 08:52:55.788"></status>
</kw>
<msg timestamp="20200831 08:52:58.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:52:58.447" starttime="20200831 08:52:55.788"></status>
</kw>
<status status="PASS" endtime="20200831 08:52:58.447" starttime="20200831 08:52:55.787"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:52:58.453" level="INFO">Running command 'ozone sh key list /53785-rpcbasic/bb1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:53:01.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:53:01.396" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20200831 08:53:01.396" starttime="20200831 08:52:58.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:53:01.397" level="INFO">key2</msg>
<status status="PASS" endtime="20200831 08:53:01.397" starttime="20200831 08:53:01.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:53:01.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:53:01.399" starttime="20200831 08:53:01.398"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:01.399" starttime="20200831 08:52:58.448"></status>
</kw>
<msg timestamp="20200831 08:53:01.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:53:01.399" starttime="20200831 08:52:58.448"></status>
</kw>
<msg timestamp="20200831 08:53:01.399" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20200831 08:53:01.399" starttime="20200831 08:52:58.447"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20200831 08:53:01.400" starttime="20200831 08:53:01.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:53:01.404" level="INFO">Running command 'ozone sh key delete /53785-rpcbasic/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:53:04.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:53:04.125" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:53:04.126" starttime="20200831 08:53:01.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:53:04.127" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:53:04.127" starttime="20200831 08:53:04.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:53:04.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:53:04.129" starttime="20200831 08:53:04.128"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:04.129" starttime="20200831 08:53:01.401"></status>
</kw>
<msg timestamp="20200831 08:53:04.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:53:04.130" starttime="20200831 08:53:01.401"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:04.130" starttime="20200831 08:53:01.400"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:04.130" starttime="20200831 08:52:05.348"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:04.131" starttime="20200831 08:52:05.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:53:04.137" level="INFO">Running command 'ozone sh bucket delete /53785-rpcbasic/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:53:06.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:53:06.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20200831 08:53:06.835" starttime="20200831 08:53:04.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:53:06.836" level="INFO"></msg>
<status status="PASS" endtime="20200831 08:53:06.836" starttime="20200831 08:53:06.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:53:06.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:53:06.837" starttime="20200831 08:53:06.836"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:06.837" starttime="20200831 08:53:04.132"></status>
</kw>
<msg timestamp="20200831 08:53:06.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:53:06.837" starttime="20200831 08:53:04.131"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:06.837" starttime="20200831 08:53:04.131"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20200831 08:53:06.843" level="INFO">Running command 'ozone sh volume delete /53785-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20200831 08:53:09.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20200831 08:53:09.306" level="INFO">${output} = Volume 53785-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200831 08:53:09.306" starttime="20200831 08:53:06.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20200831 08:53:09.308" level="INFO">Volume 53785-rpcbasic is deleted</msg>
<status status="PASS" endtime="20200831 08:53:09.308" starttime="20200831 08:53:09.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20200831 08:53:09.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20200831 08:53:09.309" starttime="20200831 08:53:09.308"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:09.310" starttime="20200831 08:53:06.839"></status>
</kw>
<msg timestamp="20200831 08:53:09.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20200831 08:53:09.310" starttime="20200831 08:53:06.838"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:09.310" starttime="20200831 08:53:06.838"></status>
</kw>
<status status="PASS" endtime="20200831 08:53:09.311" starttime="20200831 08:51:33.332"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20200831 08:53:09.313" critical="yes" starttime="20200831 08:51:33.328"></status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="PASS" endtime="20200831 08:53:09.317" starttime="20200831 08:51:33.097"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-ha" pass="1">ozone-ha</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
