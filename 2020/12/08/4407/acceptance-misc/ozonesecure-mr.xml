<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201208 15:17:11.895" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:05.721" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:09.750" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 15:13:09.750" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:09.750" starttime="20201208 15:13:05.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:09.751" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 15:13:09.751" starttime="20201208 15:13:09.751"></status>
</kw>
<msg timestamp="20201208 15:13:09.752" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:09.752" starttime="20201208 15:13:05.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:09.758" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:13.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:13.340" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:13.340" starttime="20201208 15:13:09.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:13.341" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:13:13.341" starttime="20201208 15:13:13.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:13.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:13.342" starttime="20201208 15:13:13.341"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:13.342" starttime="20201208 15:13:09.754"></status>
</kw>
<msg timestamp="20201208 15:13:13.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:13.342" starttime="20201208 15:13:09.754"></status>
</kw>
<msg timestamp="20201208 15:13:13.343" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:13.343" starttime="20201208 15:13:09.753"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201208 15:13:13.343" starttime="20201208 15:13:13.343"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:13.343" starttime="20201208 15:13:09.753"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:13.343" starttime="20201208 15:13:09.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:13.348" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:16.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:16.791" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:16.791" starttime="20201208 15:13:13.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:16.792" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:13:16.792" starttime="20201208 15:13:16.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:16.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:16.793" starttime="20201208 15:13:16.792"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:16.793" starttime="20201208 15:13:13.346"></status>
</kw>
<msg timestamp="20201208 15:13:16.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:16.793" starttime="20201208 15:13:13.345"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:16.794" starttime="20201208 15:13:13.344"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:16.794" starttime="20201208 15:13:13.344"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:16.794" starttime="20201208 15:13:13.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201208 15:13:16.794" starttime="20201208 15:13:16.794"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:16.798" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:20.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:20.565" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:20.565" starttime="20201208 15:13:16.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:20.566" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:13:16.604Z",
  "modificationTime" : "2020-12-08T15:13:16.604Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201208 15:13:20.566" starttime="20201208 15:13:20.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:20.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:20.567" starttime="20201208 15:13:20.566"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:20.567" starttime="20201208 15:13:16.795"></status>
</kw>
<msg timestamp="20201208 15:13:20.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:20.567" starttime="20201208 15:13:16.795"></status>
</kw>
<msg timestamp="20201208 15:13:20.568" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:20.568" starttime="20201208 15:13:16.794"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201208 15:13:20.568" starttime="20201208 15:13:20.568"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 15:13:20.572" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 15:13:20.572" starttime="20201208 15:13:20.572"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:13:20.573" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 15:13:20.573" starttime="20201208 15:13:20.572"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:20.573" starttime="20201208 15:13:20.571"></status>
</kw>
<msg timestamp="20201208 15:13:20.573" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 15:13:20.573" starttime="20201208 15:13:20.571"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:20.573" starttime="20201208 15:13:20.570"></status>
</kw>
<msg timestamp="20201208 15:13:20.574" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201208 15:13:20.574" starttime="20201208 15:13:20.569"></status>
</kw>
<msg timestamp="20201208 15:13:20.574" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201208 15:13:20.574" starttime="20201208 15:13:20.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:20.577" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:24.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:24.209" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:24.209" starttime="20201208 15:13:20.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:24.210" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:13:24.210" starttime="20201208 15:13:24.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:24.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:24.211" starttime="20201208 15:13:24.210"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:24.211" starttime="20201208 15:13:20.575"></status>
</kw>
<msg timestamp="20201208 15:13:24.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:24.211" starttime="20201208 15:13:20.575"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:24.212" starttime="20201208 15:13:20.574"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:24.215" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:31.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:31.859" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:31.859" starttime="20201208 15:13:24.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:31.860" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:13:31.860" starttime="20201208 15:13:31.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:31.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:31.861" starttime="20201208 15:13:31.861"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:31.861" starttime="20201208 15:13:24.213"></status>
</kw>
<msg timestamp="20201208 15:13:31.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:31.862" starttime="20201208 15:13:24.212"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:31.862" starttime="20201208 15:13:24.212"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:31.866" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:37.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:37.190" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:37.190" starttime="20201208 15:13:31.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:37.191" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:13:37.191" starttime="20201208 15:13:37.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:37.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:37.192" starttime="20201208 15:13:37.191"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:37.192" starttime="20201208 15:13:31.863"></status>
</kw>
<msg timestamp="20201208 15:13:37.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:37.192" starttime="20201208 15:13:31.863"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:37.193" starttime="20201208 15:13:31.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:37.197" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:42.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:42.718" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:42.718" starttime="20201208 15:13:37.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:42.719" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:13:42.719" starttime="20201208 15:13:42.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:42.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:42.720" starttime="20201208 15:13:42.719"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:42.720" starttime="20201208 15:13:37.194"></status>
</kw>
<msg timestamp="20201208 15:13:42.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:42.720" starttime="20201208 15:13:37.193"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:42.721" starttime="20201208 15:13:37.193"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:13:42.721" critical="yes" starttime="20201208 15:13:05.714"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 15:13:42.726" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 15:13:42.726" starttime="20201208 15:13:42.725"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:13:42.726" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 15:13:42.726" starttime="20201208 15:13:42.726"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:42.727" starttime="20201208 15:13:42.725"></status>
</kw>
<msg timestamp="20201208 15:13:42.727" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 15:13:42.727" starttime="20201208 15:13:42.724"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:42.727" starttime="20201208 15:13:42.724"></status>
</kw>
<msg timestamp="20201208 15:13:42.727" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 15:13:42.727" starttime="20201208 15:13:42.723"></status>
</kw>
<msg timestamp="20201208 15:13:42.727" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 15:13:42.727" starttime="20201208 15:13:42.722"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:42.731" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:46.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:46.157" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:46.157" starttime="20201208 15:13:42.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:46.158" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:13:46.158" starttime="20201208 15:13:46.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:46.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:46.159" starttime="20201208 15:13:46.159"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:46.159" starttime="20201208 15:13:42.728"></status>
</kw>
<msg timestamp="20201208 15:13:46.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:46.160" starttime="20201208 15:13:42.728"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:46.160" starttime="20201208 15:13:42.728"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:46.163" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:49.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:49.501" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:13:49.501" starttime="20201208 15:13:46.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:49.502" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:13:49.502" starttime="20201208 15:13:49.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:49.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:49.503" starttime="20201208 15:13:49.502"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:49.503" starttime="20201208 15:13:46.161"></status>
</kw>
<msg timestamp="20201208 15:13:49.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:49.503" starttime="20201208 15:13:46.161"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:49.503" starttime="20201208 15:13:46.160"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:13:49.504" critical="yes" starttime="20201208 15:13:42.721"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201208 15:13:49.505" starttime="20201208 15:13:05.661"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 15:15:43.980" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 15:15:43.980" starttime="20201208 15:15:43.980"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:15:43.981" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 15:15:43.981" starttime="20201208 15:15:43.981"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:43.981" starttime="20201208 15:15:43.979"></status>
</kw>
<msg timestamp="20201208 15:15:43.981" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 15:15:43.981" starttime="20201208 15:15:43.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:15:43.982" starttime="20201208 15:15:43.982"></status>
</kw>
<msg timestamp="20201208 15:15:43.982" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 15:15:43.983" starttime="20201208 15:15:43.982"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:43.983" starttime="20201208 15:15:43.978"></status>
</kw>
<msg timestamp="20201208 15:15:43.983" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 15:15:43.983" starttime="20201208 15:15:43.978"></status>
</kw>
<msg timestamp="20201208 15:15:43.983" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 15:15:43.983" starttime="20201208 15:15:43.976"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 15:15:43.984" level="INFO">${random} = 59406</msg>
<status status="PASS" endtime="20201208 15:15:43.984" starttime="20201208 15:15:43.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:15:43.989" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-59406 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:15:47.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:15:47.600" level="INFO">${output} = 2020-12-08 15:15:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:15:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201208 15:15:47.600" starttime="20201208 15:15:43.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:15:47.601" level="INFO">2020-12-08 15:15:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:15:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:15:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 15:15:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 15:15:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-02FD1FC618F3-&gt;b615e376-6500-406d-bd65-cbd3f04a3944
2020-12-08 15:15:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201208 15:15:47.601" starttime="20201208 15:15:47.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:15:47.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:15:47.602" starttime="20201208 15:15:47.601"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:47.602" starttime="20201208 15:15:43.985"></status>
</kw>
<msg timestamp="20201208 15:15:47.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:15:47.602" starttime="20201208 15:15:43.984"></status>
</kw>
<msg timestamp="20201208 15:15:47.603" level="INFO">${result} = 2020-12-08 15:15:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:15:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201208 15:15:47.603" starttime="20201208 15:15:43.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:15:47.610" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:15:49.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:15:49.721" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 15:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 15:14 ofs://om/volume1/bucket1/ozone-38893
-rw-...</msg>
<status status="PASS" endtime="20201208 15:15:49.721" starttime="20201208 15:15:47.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:15:49.722" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 15:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 15:14 ofs://om/volume1/bucket1/ozone-38893
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 15:15 ofs://om/volume1/bucket1/ozone-59406
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 15:13 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 15:15 ofs://om/volume1/bucket1/wordcount-49.txt</msg>
<status status="PASS" endtime="20201208 15:15:49.722" starttime="20201208 15:15:49.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:15:49.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:15:49.723" starttime="20201208 15:15:49.722"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:49.723" starttime="20201208 15:15:47.605"></status>
</kw>
<msg timestamp="20201208 15:15:49.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:15:49.723" starttime="20201208 15:15:47.605"></status>
</kw>
<msg timestamp="20201208 15:15:49.724" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 15:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 15:14 ofs://om/volume1/bucket1/ozone-38893
-rw-...</msg>
<status status="PASS" endtime="20201208 15:15:49.724" starttime="20201208 15:15:47.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:15:49.724" starttime="20201208 15:15:49.724"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 15:15:49.724" critical="yes" starttime="20201208 15:15:43.975"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201208 15:15:49.725" starttime="20201208 15:15:43.921"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 15:14:12.040" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 15:14:12.040" starttime="20201208 15:14:12.039"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:14:12.040" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 15:14:12.041" starttime="20201208 15:14:12.040"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:12.041" starttime="20201208 15:14:12.039"></status>
</kw>
<msg timestamp="20201208 15:14:12.041" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 15:14:12.041" starttime="20201208 15:14:12.038"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:12.041" starttime="20201208 15:14:12.038"></status>
</kw>
<msg timestamp="20201208 15:14:12.041" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 15:14:12.041" starttime="20201208 15:14:12.037"></status>
</kw>
<msg timestamp="20201208 15:14:12.041" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 15:14:12.041" starttime="20201208 15:14:12.036"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 15:14:12.042" level="INFO">${random} = 38893</msg>
<status status="PASS" endtime="20201208 15:14:12.042" starttime="20201208 15:14:12.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:14:12.048" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-38893 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:14:16.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:14:16.113" level="INFO">${output} = 2020-12-08 15:14:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:14:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201208 15:14:16.113" starttime="20201208 15:14:12.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:14:16.114" level="INFO">2020-12-08 15:14:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:14:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:14:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 15:14:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 15:14:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4447F7509AB6-&gt;b615e376-6500-406d-bd65-cbd3f04a3944
2020-12-08 15:14:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201208 15:14:16.114" starttime="20201208 15:14:16.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:14:16.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:14:16.115" starttime="20201208 15:14:16.114"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:16.115" starttime="20201208 15:14:12.043"></status>
</kw>
<msg timestamp="20201208 15:14:16.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:14:16.116" starttime="20201208 15:14:12.043"></status>
</kw>
<msg timestamp="20201208 15:14:16.116" level="INFO">${result} = 2020-12-08 15:14:14 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:14:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201208 15:14:16.116" starttime="20201208 15:14:12.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:14:16.122" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:14:18.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:14:18.202" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 15:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 15:14 o3fs://bucket1.volume1.om/ozone-38893
dr...</msg>
<status status="PASS" endtime="20201208 15:14:18.202" starttime="20201208 15:14:16.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:14:18.203" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 15:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 15:14 o3fs://bucket1.volume1.om/ozone-38893
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 15:13 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 15:14:18.203" starttime="20201208 15:14:18.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:14:18.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:14:18.204" starttime="20201208 15:14:18.204"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:18.205" starttime="20201208 15:14:16.118"></status>
</kw>
<msg timestamp="20201208 15:14:18.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:14:18.205" starttime="20201208 15:14:16.117"></status>
</kw>
<msg timestamp="20201208 15:14:18.205" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 15:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 15:14 o3fs://bucket1.volume1.om/ozone-38893
dr...</msg>
<status status="PASS" endtime="20201208 15:14:18.205" starttime="20201208 15:14:16.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:14:18.206" starttime="20201208 15:14:18.205"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 15:14:18.206" critical="yes" starttime="20201208 15:14:12.035"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201208 15:14:18.207" starttime="20201208 15:14:11.985"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:14:06.947" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:14:06.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:14:06.950" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201208 15:14:06.950" starttime="20201208 15:14:06.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:14:06.951" level="INFO">rm</msg>
<status status="PASS" endtime="20201208 15:14:06.951" starttime="20201208 15:14:06.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:14:06.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:14:06.952" starttime="20201208 15:14:06.951"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:06.952" starttime="20201208 15:14:06.943"></status>
</kw>
<msg timestamp="20201208 15:14:06.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:14:06.952" starttime="20201208 15:14:06.943"></status>
</kw>
<msg timestamp="20201208 15:14:06.953" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201208 15:14:06.953" starttime="20201208 15:14:06.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:14:06.954" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:14:06.954" starttime="20201208 15:14:06.953"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:14:06.958" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:14:06.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:14:06.977" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:14:06.977" starttime="20201208 15:14:06.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:14:06.978" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:14:06.978" starttime="20201208 15:14:06.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:14:06.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:14:06.978" starttime="20201208 15:14:06.978"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:06.979" starttime="20201208 15:14:06.955"></status>
</kw>
<msg timestamp="20201208 15:14:06.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:14:06.979" starttime="20201208 15:14:06.955"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:06.979" starttime="20201208 15:14:06.955"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:06.979" starttime="20201208 15:14:06.954"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:06.979" starttime="20201208 15:14:06.942"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:14:06.979" critical="yes" starttime="20201208 15:14:06.941"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201208 15:14:06.980" starttime="20201208 15:14:06.895"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:00.482" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:00.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:00.485" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201208 15:13:00.485" starttime="20201208 15:13:00.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:00.486" level="INFO">om</msg>
<status status="PASS" endtime="20201208 15:13:00.486" starttime="20201208 15:13:00.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:00.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:00.487" starttime="20201208 15:13:00.486"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:00.487" starttime="20201208 15:13:00.478"></status>
</kw>
<msg timestamp="20201208 15:13:00.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:00.487" starttime="20201208 15:13:00.478"></status>
</kw>
<msg timestamp="20201208 15:13:00.488" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201208 15:13:00.488" starttime="20201208 15:13:00.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:13:00.488" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:13:00.488" starttime="20201208 15:13:00.488"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:13:00.492" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:13:00.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:13:00.505" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:13:00.505" starttime="20201208 15:13:00.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:13:00.506" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:13:00.506" starttime="20201208 15:13:00.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:13:00.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:13:00.507" starttime="20201208 15:13:00.507"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:00.507" starttime="20201208 15:13:00.490"></status>
</kw>
<msg timestamp="20201208 15:13:00.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:13:00.507" starttime="20201208 15:13:00.489"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:00.508" starttime="20201208 15:13:00.489"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:00.508" starttime="20201208 15:13:00.488"></status>
</kw>
<status status="PASS" endtime="20201208 15:13:00.508" starttime="20201208 15:13:00.477"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:13:00.508" critical="yes" starttime="20201208 15:13:00.476"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201208 15:13:00.509" starttime="20201208 15:13:00.428"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:15:55.098" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:15:55.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:15:55.104" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:15:55.104" starttime="20201208 15:15:55.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:15:55.105" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:15:55.105" starttime="20201208 15:15:55.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:15:55.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:15:55.106" starttime="20201208 15:15:55.105"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:55.106" starttime="20201208 15:15:55.092"></status>
</kw>
<msg timestamp="20201208 15:15:55.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:15:55.106" starttime="20201208 15:15:55.092"></status>
</kw>
<msg timestamp="20201208 15:15:55.106" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:15:55.106" starttime="20201208 15:15:55.091"></status>
</kw>
<msg timestamp="20201208 15:15:55.107" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:15:55.107" starttime="20201208 15:15:55.091"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 15:15:55.111" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 15:15:55.111" starttime="20201208 15:15:55.111"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:15:55.112" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 15:15:55.112" starttime="20201208 15:15:55.111"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:55.112" starttime="20201208 15:15:55.109"></status>
</kw>
<msg timestamp="20201208 15:15:55.112" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 15:15:55.112" starttime="20201208 15:15:55.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:15:55.113" starttime="20201208 15:15:55.113"></status>
</kw>
<msg timestamp="20201208 15:15:55.113" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 15:15:55.113" starttime="20201208 15:15:55.112"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:55.114" starttime="20201208 15:15:55.108"></status>
</kw>
<msg timestamp="20201208 15:15:55.114" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 15:15:55.114" starttime="20201208 15:15:55.108"></status>
</kw>
<msg timestamp="20201208 15:15:55.114" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 15:15:55.114" starttime="20201208 15:15:55.107"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:15:55.118" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:16:32.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:16:32.145" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 15:15:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:15:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201208 15:16:32.145" starttime="20201208 15:15:55.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:16:32.146" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-08 15:15:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:15:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:15:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 15:15:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 15:15:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1A4BF0840F18-&gt;b615e376-6500-406d-bd65-cbd3f04a3944
2020-12-08 15:15:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-08 15:15:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-08 15:15:58 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-08 15:15:59 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440559006, maxDate=1608045359006, sequenceNumber=3, masterKeyId=2))
2020-12-08 15:15:59 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c2 d6 b1 97 e4 2e 38 c2 de e3 b7 e6 2e 40 03 48 01 5a 0d 32 31 39 35 31 37 34 31 38 37 32 30 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-08 15:15:59 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440559006, maxDate=1608045359006, sequenceNumber=3, masterKeyId=2)
2020-12-08 15:15:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 15:15:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 15:15:59 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 15:16:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607440332713_0003
2020-12-08 15:16:02 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c2 d6 b1 97 e4 2e 38 c2 de e3 b7 e6 2e 40 03 48 01 5a 0d 32 31 39 35 31 37 34 31 38 37 32 30 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440559006, maxDate=1608045359006, sequenceNumber=3, masterKeyId=2)]
2020-12-08 15:16:02 INFO  Configuration:2795 - resource-types.xml not found
2020-12-08 15:16:02 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-08 15:16:02 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-08 15:16:03 INFO  YarnClientImpl:329 - Submitted application application_1607440332713_0003
2020-12-08 15:16:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607440332713_0003/
2020-12-08 15:16:03 INFO  Job:1619 - Running job: job_1607440332713_0003
2020-12-08 15:16:11 INFO  Job:1640 - Job job_1607440332713_0003 running in uber mode : false
2020-12-08 15:16:11 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 15:16:21 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 15:16:23 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 15:16:27 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 15:16:31 INFO  Job:1658 - Job job_1607440332713_0003 completed successfully
2020-12-08 15:16:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065765
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46620
		Total time spent by all reduces in occupied slots (ms)=7502
		Total time spent by all map tasks (ms)=23310
		Total time spent by all reduce tasks (ms)=3751
		Total vcore-milliseconds taken by all map tasks=23310
		Total vcore-milliseconds taken by all reduce tasks=3751
		Total megabyte-milliseconds taken by all map tasks=47738880
		Total megabyte-milliseconds taken by all reduce tasks=7682048
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1012
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1448624128
		Virtual memory (bytes) snapshot=14041128960
		Total committed heap usage (bytes)=1269825536
		Peak Map Physical memory (bytes)=399507456
		Peak Map Virtual memory (bytes)=3514630144
		Peak Reduce Physical memory (bytes)=279900160
		Peak Reduce Virtual memory (bytes)=3509407744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.096 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201208 15:16:32.147" starttime="20201208 15:16:32.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:16:32.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:16:32.147" starttime="20201208 15:16:32.147"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.147" starttime="20201208 15:15:55.115"></status>
</kw>
<msg timestamp="20201208 15:16:32.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:16:32.148" starttime="20201208 15:15:55.115"></status>
</kw>
<msg timestamp="20201208 15:16:32.148" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 15:15:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:15:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201208 15:16:32.148" starttime="20201208 15:15:55.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 15:16:32.149" starttime="20201208 15:16:32.148"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 15:16:32.149" critical="yes" starttime="20201208 15:15:55.090"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:16:32.154" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:16:32.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:16:32.161" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:16:32.161" starttime="20201208 15:16:32.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:16:32.162" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:16:32.162" starttime="20201208 15:16:32.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:16:32.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:16:32.162" starttime="20201208 15:16:32.162"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.163" starttime="20201208 15:16:32.152"></status>
</kw>
<msg timestamp="20201208 15:16:32.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:16:32.163" starttime="20201208 15:16:32.151"></status>
</kw>
<msg timestamp="20201208 15:16:32.163" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:16:32.163" starttime="20201208 15:16:32.151"></status>
</kw>
<msg timestamp="20201208 15:16:32.163" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:16:32.163" starttime="20201208 15:16:32.151"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 15:16:32.164" level="INFO">${random} = 21</msg>
<status status="PASS" endtime="20201208 15:16:32.164" starttime="20201208 15:16:32.164"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 15:16:32.168" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 15:16:32.168" starttime="20201208 15:16:32.168"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:16:32.169" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 15:16:32.169" starttime="20201208 15:16:32.168"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.169" starttime="20201208 15:16:32.167"></status>
</kw>
<msg timestamp="20201208 15:16:32.169" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 15:16:32.169" starttime="20201208 15:16:32.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:16:32.170" starttime="20201208 15:16:32.169"></status>
</kw>
<msg timestamp="20201208 15:16:32.170" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 15:16:32.170" starttime="20201208 15:16:32.169"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.170" starttime="20201208 15:16:32.166"></status>
</kw>
<msg timestamp="20201208 15:16:32.170" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 15:16:32.170" starttime="20201208 15:16:32.165"></status>
</kw>
<msg timestamp="20201208 15:16:32.171" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 15:16:32.171" starttime="20201208 15:16:32.164"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 15:16:32.174" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 15:16:32.174" starttime="20201208 15:16:32.173"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:16:32.175" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 15:16:32.175" starttime="20201208 15:16:32.174"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.175" starttime="20201208 15:16:32.173"></status>
</kw>
<msg timestamp="20201208 15:16:32.175" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 15:16:32.175" starttime="20201208 15:16:32.173"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 15:16:32.176" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201208 15:16:32.176" starttime="20201208 15:16:32.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:16:32.177" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201208 15:16:32.177" starttime="20201208 15:16:32.177"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.177" starttime="20201208 15:16:32.175"></status>
</kw>
<msg timestamp="20201208 15:16:32.177" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201208 15:16:32.177" starttime="20201208 15:16:32.175"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.178" starttime="20201208 15:16:32.172"></status>
</kw>
<msg timestamp="20201208 15:16:32.178" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201208 15:16:32.178" starttime="20201208 15:16:32.171"></status>
</kw>
<msg timestamp="20201208 15:16:32.178" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201208 15:16:32.178" starttime="20201208 15:16:32.171"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 15:16:32.181" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 15:16:32.181" starttime="20201208 15:16:32.181"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:16:32.182" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 15:16:32.182" starttime="20201208 15:16:32.181"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.182" starttime="20201208 15:16:32.180"></status>
</kw>
<msg timestamp="20201208 15:16:32.182" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 15:16:32.182" starttime="20201208 15:16:32.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 15:16:32.184" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201208 15:16:32.184" starttime="20201208 15:16:32.183"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:16:32.184" level="INFO">${result} = /wordcount-21.txt</msg>
<status status="PASS" endtime="20201208 15:16:32.184" starttime="20201208 15:16:32.184"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.184" starttime="20201208 15:16:32.183"></status>
</kw>
<msg timestamp="20201208 15:16:32.185" level="INFO">${path_with_leading} = /wordcount-21.txt</msg>
<status status="PASS" endtime="20201208 15:16:32.185" starttime="20201208 15:16:32.182"></status>
</kw>
<status status="PASS" endtime="20201208 15:16:32.185" starttime="20201208 15:16:32.179"></status>
</kw>
<msg timestamp="20201208 15:16:32.185" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-21.txt</msg>
<status status="PASS" endtime="20201208 15:16:32.185" starttime="20201208 15:16:32.179"></status>
</kw>
<msg timestamp="20201208 15:16:32.185" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-21.txt</msg>
<status status="PASS" endtime="20201208 15:16:32.185" starttime="20201208 15:16:32.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:16:32.190" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-21.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:17:03.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:17:03.604" level="INFO">${output} = 2020-12-08 15:16:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-08 15:16:34 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
202...</msg>
<status status="PASS" endtime="20201208 15:17:03.604" starttime="20201208 15:16:32.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:17:03.605" level="INFO">2020-12-08 15:16:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-08 15:16:34 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-08 15:16:34 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440594553, maxDate=1608045394553, sequenceNumber=4, masterKeyId=2))
2020-12-08 15:16:34 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 85 ec b3 97 e4 2e 38 85 f4 e5 b7 e6 2e 40 04 48 01 5a 0d 32 31 39 35 31 37 34 31 38 37 32 30 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-08 15:16:34 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440594553, maxDate=1608045394553, sequenceNumber=4, masterKeyId=2)
2020-12-08 15:16:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 15:16:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:16:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:16:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 15:16:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 15:16:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2900109F3D54-&gt;b615e376-6500-406d-bd65-cbd3f04a3944
2020-12-08 15:16:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 15:16:36 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 15:16:36 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 15:16:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607440332713_0004
2020-12-08 15:16:36 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 85 ec b3 97 e4 2e 38 85 f4 e5 b7 e6 2e 40 04 48 01 5a 0d 32 31 39 35 31 37 34 31 38 37 32 30 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440594553, maxDate=1608045394553, sequenceNumber=4, masterKeyId=2)]
2020-12-08 15:16:37 INFO  Configuration:2795 - resource-types.xml not found
2020-12-08 15:16:37 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-08 15:16:37 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-08 15:16:37 INFO  YarnClientImpl:329 - Submitted application application_1607440332713_0004
2020-12-08 15:16:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607440332713_0004/
2020-12-08 15:16:37 INFO  Job:1619 - Running job: job_1607440332713_0004
2020-12-08 15:16:45 INFO  Job:1640 - Job job_1607440332713_0004 running in uber mode : false
2020-12-08 15:16:45 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 15:16:56 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 15:16:58 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 15:17:03 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 15:17:03 INFO  Job:1658 - Job job_1607440332713_0004 completed successfully
2020-12-08 15:17:03 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128407
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46886
		Total time spent by all reduces in occupied slots (ms)=8274
		Total time spent by all map tasks (ms)=23443
		Total time spent by all reduce tasks (ms)=4137
		Total vcore-milliseconds taken by all map tasks=23443
		Total vcore-milliseconds taken by all reduce tasks=4137
		Total megabyte-milliseconds taken by all map tasks=48011264
		Total megabyte-milliseconds taken by all reduce tasks=8472576
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1069
		CPU time spent (ms)=8020
		Physical memory (bytes) snapshot=1436303360
		Virtual memory (bytes) snapshot=14042234880
		Total committed heap usage (bytes)=1243611136
		Peak Map Physical memory (bytes)=398929920
		Peak Map Virtual memory (bytes)=3512590336
		Peak Reduce Physical memory (bytes)=276004864
		Peak Reduce Virtual memory (bytes)=3510595584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201208 15:17:03.605" starttime="20201208 15:17:03.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:17:03.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:17:03.606" starttime="20201208 15:17:03.606"></status>
</kw>
<status status="PASS" endtime="20201208 15:17:03.607" starttime="20201208 15:16:32.186"></status>
</kw>
<msg timestamp="20201208 15:17:03.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:17:03.607" starttime="20201208 15:16:32.186"></status>
</kw>
<msg timestamp="20201208 15:17:03.608" level="INFO">${output} = 2020-12-08 15:16:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-08 15:16:34 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
202...</msg>
<status status="PASS" endtime="20201208 15:17:03.608" starttime="20201208 15:16:32.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201208 15:17:03.608" starttime="20201208 15:17:03.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 15:17:03.609" starttime="20201208 15:17:03.608"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 15:17:03.609" critical="yes" starttime="20201208 15:16:32.150"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201208 15:17:03.611" starttime="20201208 15:15:55.037"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:14:23.398" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:14:23.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:14:23.406" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:14:23.406" starttime="20201208 15:14:23.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:14:23.407" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:14:23.407" starttime="20201208 15:14:23.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:14:23.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:14:23.407" starttime="20201208 15:14:23.407"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:23.408" starttime="20201208 15:14:23.393"></status>
</kw>
<msg timestamp="20201208 15:14:23.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:14:23.408" starttime="20201208 15:14:23.393"></status>
</kw>
<msg timestamp="20201208 15:14:23.408" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:14:23.408" starttime="20201208 15:14:23.393"></status>
</kw>
<msg timestamp="20201208 15:14:23.408" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:14:23.409" starttime="20201208 15:14:23.392"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 15:14:23.413" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 15:14:23.413" starttime="20201208 15:14:23.413"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:14:23.414" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 15:14:23.414" starttime="20201208 15:14:23.414"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:23.414" starttime="20201208 15:14:23.411"></status>
</kw>
<msg timestamp="20201208 15:14:23.414" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 15:14:23.415" starttime="20201208 15:14:23.411"></status>
</kw>
<status status="PASS" endtime="20201208 15:14:23.415" starttime="20201208 15:14:23.410"></status>
</kw>
<msg timestamp="20201208 15:14:23.415" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 15:14:23.415" starttime="20201208 15:14:23.410"></status>
</kw>
<msg timestamp="20201208 15:14:23.415" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 15:14:23.415" starttime="20201208 15:14:23.409"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:14:23.419" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:15:03.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:15:03.096" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 15:14:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:14:25 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201208 15:15:03.097" starttime="20201208 15:14:23.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:15:03.098" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-08 15:14:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:14:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:14:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 15:14:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 15:14:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D718CB9E0073-&gt;b615e376-6500-406d-bd65-cbd3f04a3944
2020-12-08 15:14:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-08 15:14:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-08 15:14:29 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-08 15:14:30 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440470184, maxDate=1608045270184, sequenceNumber=1, masterKeyId=2))
2020-12-08 15:14:30 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fd 9e ac 97 e4 2e 38 fd a6 de b7 e6 2e 40 01 48 01 5a 0d 32 31 39 35 31 37 34 31 38 37 32 30 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-08 15:14:30 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440470184, maxDate=1608045270184, sequenceNumber=1, masterKeyId=2)
2020-12-08 15:14:30 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 15:14:30 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 15:14:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607440332713_0001
2020-12-08 15:14:31 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fd 9e ac 97 e4 2e 38 fd a6 de b7 e6 2e 40 01 48 01 5a 0d 32 31 39 35 31 37 34 31 38 37 32 30 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440470184, maxDate=1608045270184, sequenceNumber=1, masterKeyId=2)]
2020-12-08 15:14:31 INFO  Configuration:2795 - resource-types.xml not found
2020-12-08 15:14:31 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-08 15:14:31 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-08 15:14:32 INFO  YarnClientImpl:329 - Submitted application application_1607440332713_0001
2020-12-08 15:14:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607440332713_0001/
2020-12-08 15:14:33 INFO  Job:1619 - Running job: job_1607440332713_0001
2020-12-08 15:14:44 INFO  Job:1640 - Job job_1607440332713_0001 running in uber mode : false
2020-12-08 15:14:44 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 15:14:54 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 15:14:56 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 15:15:01 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 15:15:02 INFO  Job:1658 - Job job_1607440332713_0001 completed successfully
2020-12-08 15:15:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065977
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45470
		Total time spent by all reduces in occupied slots (ms)=7744
		Total time spent by all map tasks (ms)=22735
		Total time spent by all reduce tasks (ms)=3872
		Total vcore-milliseconds taken by all map tasks=22735
		Total vcore-milliseconds taken by all reduce tasks=3872
		Total megabyte-milliseconds taken by all map tasks=46561280
		Total megabyte-milliseconds taken by all reduce tasks=7929856
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1532
		CPU time spent (ms)=7550
		Physical memory (bytes) snapshot=1631387648
		Virtual memory (bytes) snapshot=14042648576
		Total committed heap usage (bytes)=1482686464
		Peak Map Physical memory (bytes)=547946496
		Peak Map Virtual memory (bytes)=3509460992
		Peak Reduce Physical memory (bytes)=321536000
		Peak Reduce Virtual memory (bytes)=3528048640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.038 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201208 15:15:03.098" starttime="20201208 15:15:03.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:15:03.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:15:03.099" starttime="20201208 15:15:03.098"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:03.099" starttime="20201208 15:14:23.416"></status>
</kw>
<msg timestamp="20201208 15:15:03.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:15:03.099" starttime="20201208 15:14:23.416"></status>
</kw>
<msg timestamp="20201208 15:15:03.100" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 15:14:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:14:25 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201208 15:15:03.100" starttime="20201208 15:14:23.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 15:15:03.101" starttime="20201208 15:15:03.100"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 15:15:03.101" critical="yes" starttime="20201208 15:14:23.392"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:15:03.106" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:15:03.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:15:03.113" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:15:03.113" starttime="20201208 15:15:03.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:15:03.114" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:15:03.114" starttime="20201208 15:15:03.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:15:03.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:15:03.115" starttime="20201208 15:15:03.114"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:03.115" starttime="20201208 15:15:03.103"></status>
</kw>
<msg timestamp="20201208 15:15:03.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:15:03.115" starttime="20201208 15:15:03.103"></status>
</kw>
<msg timestamp="20201208 15:15:03.116" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:15:03.116" starttime="20201208 15:15:03.103"></status>
</kw>
<msg timestamp="20201208 15:15:03.116" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 15:15:03.116" starttime="20201208 15:15:03.102"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 15:15:03.116" level="INFO">${random} = 49</msg>
<status status="PASS" endtime="20201208 15:15:03.117" starttime="20201208 15:15:03.116"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 15:15:03.120" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 15:15:03.120" starttime="20201208 15:15:03.120"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:15:03.121" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 15:15:03.121" starttime="20201208 15:15:03.121"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:03.121" starttime="20201208 15:15:03.119"></status>
</kw>
<msg timestamp="20201208 15:15:03.121" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 15:15:03.121" starttime="20201208 15:15:03.119"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:03.122" starttime="20201208 15:15:03.118"></status>
</kw>
<msg timestamp="20201208 15:15:03.122" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 15:15:03.122" starttime="20201208 15:15:03.117"></status>
</kw>
<msg timestamp="20201208 15:15:03.122" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 15:15:03.122" starttime="20201208 15:15:03.117"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 15:15:03.125" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 15:15:03.125" starttime="20201208 15:15:03.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:15:03.126" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 15:15:03.126" starttime="20201208 15:15:03.125"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:03.126" starttime="20201208 15:15:03.125"></status>
</kw>
<msg timestamp="20201208 15:15:03.126" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 15:15:03.126" starttime="20201208 15:15:03.124"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:03.127" starttime="20201208 15:15:03.123"></status>
</kw>
<msg timestamp="20201208 15:15:03.127" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201208 15:15:03.127" starttime="20201208 15:15:03.123"></status>
</kw>
<msg timestamp="20201208 15:15:03.127" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201208 15:15:03.127" starttime="20201208 15:15:03.122"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 15:15:03.130" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 15:15:03.130" starttime="20201208 15:15:03.130"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:15:03.131" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 15:15:03.131" starttime="20201208 15:15:03.130"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:03.131" starttime="20201208 15:15:03.129"></status>
</kw>
<msg timestamp="20201208 15:15:03.131" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 15:15:03.131" starttime="20201208 15:15:03.129"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:03.131" starttime="20201208 15:15:03.128"></status>
</kw>
<msg timestamp="20201208 15:15:03.132" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-49.txt</msg>
<status status="PASS" endtime="20201208 15:15:03.132" starttime="20201208 15:15:03.128"></status>
</kw>
<msg timestamp="20201208 15:15:03.132" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-49.txt</msg>
<status status="PASS" endtime="20201208 15:15:03.132" starttime="20201208 15:15:03.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:15:03.136" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-49.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:15:38.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:15:38.070" level="INFO">${output} = 2020-12-08 15:15:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-08 15:15:05 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
202...</msg>
<status status="PASS" endtime="20201208 15:15:38.070" starttime="20201208 15:15:03.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:15:38.071" level="INFO">2020-12-08 15:15:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-08 15:15:05 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-08 15:15:05 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440505555, maxDate=1608045305555, sequenceNumber=2, masterKeyId=2))
2020-12-08 15:15:05 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f4 b4 ae 97 e4 2e 38 f4 bc e0 b7 e6 2e 40 02 48 01 5a 0d 32 31 39 35 31 37 34 31 38 37 32 30 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-08 15:15:05 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440505555, maxDate=1608045305555, sequenceNumber=2, masterKeyId=2)
2020-12-08 15:15:05 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 15:15:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 15:15:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:15:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 15:15:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 15:15:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A0955A33CE1A-&gt;b615e376-6500-406d-bd65-cbd3f04a3944
2020-12-08 15:15:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 15:15:07 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 15:15:07 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 15:15:07 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607440332713_0002
2020-12-08 15:15:07 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f4 b4 ae 97 e4 2e 38 f4 bc e0 b7 e6 2e 40 02 48 01 5a 0d 32 31 39 35 31 37 34 31 38 37 32 30 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607440505555, maxDate=1608045305555, sequenceNumber=2, masterKeyId=2)]
2020-12-08 15:15:07 INFO  Configuration:2795 - resource-types.xml not found
2020-12-08 15:15:07 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-08 15:15:08 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-08 15:15:08 INFO  YarnClientImpl:329 - Submitted application application_1607440332713_0002
2020-12-08 15:15:09 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607440332713_0002/
2020-12-08 15:15:09 INFO  Job:1619 - Running job: job_1607440332713_0002
2020-12-08 15:15:17 INFO  Job:1640 - Job job_1607440332713_0002 running in uber mode : false
2020-12-08 15:15:17 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 15:15:28 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 15:15:29 INFO  Job:1647 -  map 67% reduce 0%
2020-12-08 15:15:30 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 15:15:34 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 15:15:37 INFO  Job:1658 - Job job_1607440332713_0002 completed successfully
2020-12-08 15:15:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128491
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48290
		Total time spent by all reduces in occupied slots (ms)=7738
		Total time spent by all map tasks (ms)=24145
		Total time spent by all reduce tasks (ms)=3869
		Total vcore-milliseconds taken by all map tasks=24145
		Total vcore-milliseconds taken by all reduce tasks=3869
		Total megabyte-milliseconds taken by all map tasks=49448960
		Total megabyte-milliseconds taken by all reduce tasks=7923712
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1600
		CPU time spent (ms)=8260
		Physical memory (bytes) snapshot=1620574208
		Virtual memory (bytes) snapshot=14059085824
		Total committed heap usage (bytes)=1420296192
		Peak Map Physical memory (bytes)=546963456
		Peak Map Virtual memory (bytes)=3512786944
		Peak Reduce Physical memory (bytes)=301666304
		Peak Reduce Virtual memory (bytes)=3528409088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201208 15:15:38.071" starttime="20201208 15:15:38.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:15:38.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:15:38.072" starttime="20201208 15:15:38.072"></status>
</kw>
<status status="PASS" endtime="20201208 15:15:38.072" starttime="20201208 15:15:03.133"></status>
</kw>
<msg timestamp="20201208 15:15:38.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:15:38.073" starttime="20201208 15:15:03.133"></status>
</kw>
<msg timestamp="20201208 15:15:38.073" level="INFO">${output} = 2020-12-08 15:15:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-08 15:15:05 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
202...</msg>
<status status="PASS" endtime="20201208 15:15:38.073" starttime="20201208 15:15:03.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201208 15:15:38.074" starttime="20201208 15:15:38.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 15:15:38.074" starttime="20201208 15:15:38.074"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 15:15:38.074" critical="yes" starttime="20201208 15:15:03.101"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201208 15:15:38.076" starttime="20201208 15:14:23.338"></status>
</suite>
<status status="PASS" elapsedtime="199348" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
