<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201208 15:23:30.982" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:19:33.298" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:19:43.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:19:43.822" level="INFO">${output} = 2020-12-08 15:19:35,045 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:35,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201208 15:19:43.822" starttime="20201208 15:19:33.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:19:43.823" level="INFO">2020-12-08 15:19:35,045 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:35,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:19:35,188 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-08 15:19:38,238 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-12-08 15:19:38,239 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-12-08 15:19:38,239 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-12-08 15:19:38,239 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-12-08 15:19:38,239 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-12-08 15:19:38,239 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-12-08 15:19:38,239 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-12-08 15:19:38,242 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-12-08 15:19:38,255 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:38,301 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-53333, with testuser/scm@EXAMPLE.COM as owner.
2020-12-08 15:19:38,826 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-53333/bucket-0-24468, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-08 15:19:39,257 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:40,257 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:41,248 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-08 15:19:41,258 [Thread-8] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:42,274 [Thread-8] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,490
Average Time spent in bucket creation: 00:00:00,213
Average Time spent in key creation: 00:00:01,113
Average Time spent in key write: 00:00:01,553
Total bytes written: 10240
Total Execution time: 00:00:08,107
***************************************************</msg>
<status status="PASS" endtime="20201208 15:19:43.823" starttime="20201208 15:19:43.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:19:43.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:19:43.824" starttime="20201208 15:19:43.823"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:43.824" starttime="20201208 15:19:33.294"></status>
</kw>
<msg timestamp="20201208 15:19:43.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:19:43.824" starttime="20201208 15:19:33.294"></status>
</kw>
<msg timestamp="20201208 15:19:43.825" level="INFO">${result} = 2020-12-08 15:19:35,045 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:35,188 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201208 15:19:43.825" starttime="20201208 15:19:33.293"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201208 15:19:43.825" starttime="20201208 15:19:43.825"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:43.826" starttime="20201208 15:19:43.825"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 15:19:43.826" critical="yes" starttime="20201208 15:19:33.292"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:19:43.832" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:19:52.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:19:52.358" level="INFO">${output} = 2020-12-08 15:19:45,447 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:45,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201208 15:19:52.358" starttime="20201208 15:19:43.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:19:52.361" level="INFO">2020-12-08 15:19:45,447 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:45,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:19:45,666 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-08 15:19:45,825 [main] INFO freon.BaseFreonGenerator: Executing test with prefix h7myih01nq
2020-12-08 15:19:45,848 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-08 15:19:46,859 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:47,579 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-12-08 15:19:47,663 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-08 15:19:47,859 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:48,520 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-08 15:19:48,822 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 15:19:48,822 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-33B10EC9123C-&gt;6ce911a8-c08e-4350-a82e-9f6717908ce9
2020-12-08 15:19:48,823 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 15:19:48,859 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:49,860 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:50,860 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:51,861 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-08 15:19:51,995 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3523.139889, max=3523.139889, mean=3523.139889, stddev=0.0, median=3523.139889, p75=3523.139889, p95=3523.139889, p98=3523.139889, p99=3523.139889, p999=3523.139889, mean_rate=0.2360956155984114, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-08 15:19:51,996 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-12-08 15:19:52,022 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-08 15:19:52,022 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201208 15:19:52.361" starttime="20201208 15:19:52.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:19:52.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:19:52.361" starttime="20201208 15:19:52.361"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:52.362" starttime="20201208 15:19:43.828"></status>
</kw>
<msg timestamp="20201208 15:19:52.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:19:52.362" starttime="20201208 15:19:43.828"></status>
</kw>
<msg timestamp="20201208 15:19:52.362" level="INFO">${result} = 2020-12-08 15:19:45,447 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:45,666 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201208 15:19:52.362" starttime="20201208 15:19:43.827"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201208 15:19:52.363" starttime="20201208 15:19:52.363"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:52.363" starttime="20201208 15:19:52.362"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 15:19:52.364" critical="yes" starttime="20201208 15:19:43.827"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:19:52.370" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:19:57.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:19:57.151" level="INFO">${output} = 2020-12-08 15:19:54,137 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:54,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201208 15:19:57.151" starttime="20201208 15:19:52.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:19:57.152" level="INFO">2020-12-08 15:19:54,137 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:54,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:19:54,357 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-08 15:19:54,525 [main] INFO freon.BaseFreonGenerator: Executing test with prefix qjiikolrio
2020-12-08 15:19:54,544 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-08 15:19:55,547 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:19:56,548 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-08 15:19:57,110 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=273.704874, max=273.704874, mean=273.704874, stddev=0.0, median=273.704874, p75=273.704874, p95=273.704874, p98=273.704874, p99=273.704874, p999=273.704874, mean_rate=0.8803087084889349, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-08 15:19:57,114 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-08 15:19:57,116 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-08 15:19:57,116 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201208 15:19:57.153" starttime="20201208 15:19:57.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:19:57.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:19:57.153" starttime="20201208 15:19:57.153"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:57.153" starttime="20201208 15:19:52.366"></status>
</kw>
<msg timestamp="20201208 15:19:57.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:19:57.154" starttime="20201208 15:19:52.366"></status>
</kw>
<msg timestamp="20201208 15:19:57.154" level="INFO">${result} = 2020-12-08 15:19:54,137 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:54,357 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201208 15:19:57.154" starttime="20201208 15:19:52.365"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201208 15:19:57.155" starttime="20201208 15:19:57.155"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:57.155" starttime="20201208 15:19:57.154"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 15:19:57.155" critical="yes" starttime="20201208 15:19:52.364"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:19:57.162" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:01.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:01.692" level="INFO">${output} = 2020-12-08 15:19:58,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:59,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201208 15:20:01.692" starttime="20201208 15:19:57.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:01.693" level="INFO">2020-12-08 15:19:58,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:59,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-08 15:19:59,012 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-08 15:19:59,174 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 41erew3hqm
2020-12-08 15:19:59,188 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-08 15:20:00,197 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-08 15:20:01,197 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-08 15:20:01,575 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=112.561747, max=112.561747, mean=112.561747, stddev=0.0, median=112.561747, p75=112.561747, p95=112.561747, p98=112.561747, p99=112.561747, p999=112.561747, mean_rate=0.8741216907200553, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-08 15:20:01,576 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-12-08 15:20:01,579 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-08 15:20:01,579 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201208 15:20:01.693" starttime="20201208 15:20:01.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:01.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:01.694" starttime="20201208 15:20:01.693"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:01.694" starttime="20201208 15:19:57.158"></status>
</kw>
<msg timestamp="20201208 15:20:01.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:01.694" starttime="20201208 15:19:57.158"></status>
</kw>
<msg timestamp="20201208 15:20:01.695" level="INFO">${result} = 2020-12-08 15:19:58,818 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-08 15:19:59,012 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201208 15:20:01.695" starttime="20201208 15:19:57.157"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201208 15:20:01.696" starttime="20201208 15:20:01.695"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:01.696" starttime="20201208 15:20:01.695"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 15:20:01.696" critical="yes" starttime="20201208 15:19:57.156"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201208 15:20:01.697" starttime="20201208 15:19:33.268"></status>
</suite>
<status status="PASS" endtime="20201208 15:20:01.700" starttime="20201208 15:19:33.242"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:19:25.245" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:19:25.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:19:25.250" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:19:25.250" starttime="20201208 15:19:25.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:19:25.251" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:19:25.251" starttime="20201208 15:19:25.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:19:25.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:19:25.252" starttime="20201208 15:19:25.251"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:25.252" starttime="20201208 15:19:25.233"></status>
</kw>
<msg timestamp="20201208 15:19:25.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:19:25.252" starttime="20201208 15:19:25.233"></status>
</kw>
<msg timestamp="20201208 15:19:25.252" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:19:25.252" starttime="20201208 15:19:25.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:19:25.253" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:19:25.253" starttime="20201208 15:19:25.253"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:19:25.267" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:19:25.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:19:25.283" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:19:25.283" starttime="20201208 15:19:25.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:19:25.284" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:19:25.284" starttime="20201208 15:19:25.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:19:25.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:19:25.285" starttime="20201208 15:19:25.284"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:25.285" starttime="20201208 15:19:25.255"></status>
</kw>
<msg timestamp="20201208 15:19:25.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:19:25.285" starttime="20201208 15:19:25.254"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:25.286" starttime="20201208 15:19:25.254"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:25.286" starttime="20201208 15:19:25.253"></status>
</kw>
<status status="PASS" endtime="20201208 15:19:25.286" starttime="20201208 15:19:25.232"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:19:25.286" critical="yes" starttime="20201208 15:19:25.231"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201208 15:19:25.287" starttime="20201208 15:19:25.119"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 15:20:07.236" level="INFO">${random} = 76161</msg>
<status status="PASS" endtime="20201208 15:20:07.237" starttime="20201208 15:20:07.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201208 15:20:07.238" level="INFO">${source} = 76161-source</msg>
<status status="PASS" endtime="20201208 15:20:07.238" starttime="20201208 15:20:07.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201208 15:20:07.239" level="INFO">${target} = 76161-target</msg>
<status status="PASS" endtime="20201208 15:20:07.239" starttime="20201208 15:20:07.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:07.244" level="INFO">Running command 'ozone sh volume create 76161-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:10.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:10.520" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:10.520" starttime="20201208 15:20:07.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:10.521" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:20:10.521" starttime="20201208 15:20:10.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:10.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:10.522" starttime="20201208 15:20:10.521"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:10.522" starttime="20201208 15:20:07.240"></status>
</kw>
<msg timestamp="20201208 15:20:10.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:10.522" starttime="20201208 15:20:07.240"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:10.523" starttime="20201208 15:20:07.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:10.526" level="INFO">Running command 'ozone sh volume create 76161-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:14.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:14.060" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:14.060" starttime="20201208 15:20:10.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:14.061" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:20:14.061" starttime="20201208 15:20:14.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:14.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:14.062" starttime="20201208 15:20:14.061"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:14.062" starttime="20201208 15:20:10.524"></status>
</kw>
<msg timestamp="20201208 15:20:14.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:14.062" starttime="20201208 15:20:10.523"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:14.063" starttime="20201208 15:20:10.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:14.068" level="INFO">Running command 'ozone sh bucket create 76161-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:18.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:18.878" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:18.878" starttime="20201208 15:20:14.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:18.879" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:20:18.879" starttime="20201208 15:20:18.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:18.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:18.880" starttime="20201208 15:20:18.879"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:18.880" starttime="20201208 15:20:14.064"></status>
</kw>
<msg timestamp="20201208 15:20:18.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:18.880" starttime="20201208 15:20:14.064"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:18.880" starttime="20201208 15:20:14.064"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:18.885" level="INFO">Running command 'ozone sh key put 76161-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:24.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:24.439" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:24.439" starttime="20201208 15:20:18.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:24.440" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:20:24.440" starttime="20201208 15:20:24.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:24.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:24.441" starttime="20201208 15:20:24.440"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:24.441" starttime="20201208 15:20:18.881"></status>
</kw>
<msg timestamp="20201208 15:20:24.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:24.441" starttime="20201208 15:20:18.881"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:24.442" starttime="20201208 15:20:18.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:24.447" level="INFO">Running command 'ozone sh bucket create 76161-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:28.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:28.102" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:28.102" starttime="20201208 15:20:24.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:28.103" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:20:28.103" starttime="20201208 15:20:28.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:28.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:28.103" starttime="20201208 15:20:28.103"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:28.104" starttime="20201208 15:20:24.443"></status>
</kw>
<msg timestamp="20201208 15:20:28.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:28.104" starttime="20201208 15:20:24.443"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:28.104" starttime="20201208 15:20:24.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:28.109" level="INFO">Running command 'ozone sh bucket link 76161-source/readable-bucket 76161-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:31.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:31.431" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:31.431" starttime="20201208 15:20:28.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:31.432" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:20:31.432" starttime="20201208 15:20:31.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:31.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:31.433" starttime="20201208 15:20:31.432"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:31.433" starttime="20201208 15:20:28.105"></status>
</kw>
<msg timestamp="20201208 15:20:31.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:31.434" starttime="20201208 15:20:28.105"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:31.434" starttime="20201208 15:20:28.104"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:31.438" level="INFO">Running command 'ozone sh bucket link 76161-source/readable-bucket 76161-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:34.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:34.772" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:34.772" starttime="20201208 15:20:31.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:34.773" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:20:34.773" starttime="20201208 15:20:34.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:34.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:34.774" starttime="20201208 15:20:34.773"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:34.774" starttime="20201208 15:20:31.435"></status>
</kw>
<msg timestamp="20201208 15:20:34.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:34.774" starttime="20201208 15:20:31.434"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:34.774" starttime="20201208 15:20:31.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:34.778" level="INFO">Running command 'ozone sh bucket link 76161-source/unreadable-bucket 76161-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:38.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:38.268" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:38.268" starttime="20201208 15:20:34.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:38.269" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:20:38.269" starttime="20201208 15:20:38.269"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:38.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:38.270" starttime="20201208 15:20:38.270"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:38.270" starttime="20201208 15:20:34.775"></status>
</kw>
<msg timestamp="20201208 15:20:38.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:38.271" starttime="20201208 15:20:34.775"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:38.271" starttime="20201208 15:20:34.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:38.274" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 76161-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:41.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:41.867" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:41.867" starttime="20201208 15:20:38.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:41.868" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201208 15:20:41.868" starttime="20201208 15:20:41.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:41.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:41.869" starttime="20201208 15:20:41.868"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:41.869" starttime="20201208 15:20:38.272"></status>
</kw>
<msg timestamp="20201208 15:20:41.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:41.869" starttime="20201208 15:20:38.271"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:41.869" starttime="20201208 15:20:38.271"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:41.873" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 76161-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:45.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:45.253" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:45.253" starttime="20201208 15:20:41.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:45.254" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201208 15:20:45.254" starttime="20201208 15:20:45.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:45.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:45.255" starttime="20201208 15:20:45.255"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:45.255" starttime="20201208 15:20:41.870"></status>
</kw>
<msg timestamp="20201208 15:20:45.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:45.256" starttime="20201208 15:20:41.870"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:45.256" starttime="20201208 15:20:41.870"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:45.259" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 76161-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:48.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:48.735" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:48.735" starttime="20201208 15:20:45.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:48.736" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201208 15:20:48.736" starttime="20201208 15:20:48.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:48.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:48.736" starttime="20201208 15:20:48.736"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:48.737" starttime="20201208 15:20:45.257"></status>
</kw>
<msg timestamp="20201208 15:20:48.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:48.737" starttime="20201208 15:20:45.256"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:48.737" starttime="20201208 15:20:45.256"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:48.741" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 76161-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:52.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:52.247" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:52.247" starttime="20201208 15:20:48.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:52.248" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201208 15:20:52.248" starttime="20201208 15:20:52.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:52.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:52.248" starttime="20201208 15:20:52.248"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:52.249" starttime="20201208 15:20:48.738"></status>
</kw>
<msg timestamp="20201208 15:20:52.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:52.249" starttime="20201208 15:20:48.738"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:52.249" starttime="20201208 15:20:48.737"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:52.253" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 76161-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:55.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:55.528" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:55.528" starttime="20201208 15:20:52.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:55.529" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201208 15:20:55.529" starttime="20201208 15:20:55.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:55.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:55.530" starttime="20201208 15:20:55.529"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.530" starttime="20201208 15:20:52.250"></status>
</kw>
<msg timestamp="20201208 15:20:55.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:55.530" starttime="20201208 15:20:52.250"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.531" starttime="20201208 15:20:52.249"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.531" starttime="20201208 15:20:14.063"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.531" starttime="20201208 15:20:14.063"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.531" starttime="20201208 15:20:07.236"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:55.538" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:55.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:55.540" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:20:55.540" starttime="20201208 15:20:55.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:55.541" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:20:55.541" starttime="20201208 15:20:55.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:55.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:55.541" starttime="20201208 15:20:55.541"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.542" starttime="20201208 15:20:55.534"></status>
</kw>
<msg timestamp="20201208 15:20:55.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:55.542" starttime="20201208 15:20:55.534"></status>
</kw>
<msg timestamp="20201208 15:20:55.542" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:20:55.542" starttime="20201208 15:20:55.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:20:55.544" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:20:55.544" starttime="20201208 15:20:55.543"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:55.548" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:55.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:55.566" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:20:55.566" starttime="20201208 15:20:55.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:55.567" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:20:55.567" starttime="20201208 15:20:55.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:55.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:55.568" starttime="20201208 15:20:55.567"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.568" starttime="20201208 15:20:55.545"></status>
</kw>
<msg timestamp="20201208 15:20:55.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:55.568" starttime="20201208 15:20:55.545"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.568" starttime="20201208 15:20:55.544"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.568" starttime="20201208 15:20:55.544"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.569" starttime="20201208 15:20:55.533"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:55.569" starttime="20201208 15:20:55.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:55.572" level="INFO">Running command 'ozone sh bucket link 76161-source/no-such-bucket 76161-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:20:59.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:20:59.008" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:20:59.008" starttime="20201208 15:20:55.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:20:59.009" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:20:59.010" starttime="20201208 15:20:59.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:20:59.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:20:59.010" starttime="20201208 15:20:59.010"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:59.011" starttime="20201208 15:20:55.570"></status>
</kw>
<msg timestamp="20201208 15:20:59.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:20:59.011" starttime="20201208 15:20:55.570"></status>
</kw>
<status status="PASS" endtime="20201208 15:20:59.011" starttime="20201208 15:20:55.569"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:20:59.014" level="INFO">Running command 'ozone sh key list 76161-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:02.499" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 15:21:02.499" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:02.499" starttime="20201208 15:20:59.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:02.500" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201208 15:21:02.501" starttime="20201208 15:21:02.500"></status>
</kw>
<msg timestamp="20201208 15:21:02.501" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:02.501" starttime="20201208 15:20:59.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:02.501" starttime="20201208 15:21:02.501"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:21:02.502" critical="yes" starttime="20201208 15:20:55.531"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:02.509" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:02.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:02.510" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:21:02.511" starttime="20201208 15:21:02.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:02.511" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:21:02.512" starttime="20201208 15:21:02.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:02.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:02.512" starttime="20201208 15:21:02.512"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:02.512" starttime="20201208 15:21:02.505"></status>
</kw>
<msg timestamp="20201208 15:21:02.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:02.513" starttime="20201208 15:21:02.505"></status>
</kw>
<msg timestamp="20201208 15:21:02.513" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:21:02.513" starttime="20201208 15:21:02.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:21:02.514" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:21:02.514" starttime="20201208 15:21:02.513"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:02.518" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:02.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:02.534" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:21:02.534" starttime="20201208 15:21:02.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:02.535" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:21:02.535" starttime="20201208 15:21:02.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:02.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:02.536" starttime="20201208 15:21:02.536"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:02.536" starttime="20201208 15:21:02.515"></status>
</kw>
<msg timestamp="20201208 15:21:02.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:02.537" starttime="20201208 15:21:02.515"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:02.537" starttime="20201208 15:21:02.514"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:02.537" starttime="20201208 15:21:02.514"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:02.537" starttime="20201208 15:21:02.504"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:02.537" starttime="20201208 15:21:02.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:02.542" level="INFO">Running command 'ozone sh bucket link 76161-source/bucket1 76161-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:05.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:05.768" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:05.768" starttime="20201208 15:21:02.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:05.771" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:21:05.771" starttime="20201208 15:21:05.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:05.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:05.773" starttime="20201208 15:21:05.772"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:05.774" starttime="20201208 15:21:02.538"></status>
</kw>
<msg timestamp="20201208 15:21:05.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:05.774" starttime="20201208 15:21:02.538"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:05.775" starttime="20201208 15:21:02.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:05.784" level="INFO">Running command 'ozone sh bucket create 76161-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:09.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:09.502" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:09.502" starttime="20201208 15:21:05.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:09.503" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:21:09.503" starttime="20201208 15:21:09.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:09.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:09.504" starttime="20201208 15:21:09.503"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:09.504" starttime="20201208 15:21:05.779"></status>
</kw>
<msg timestamp="20201208 15:21:09.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:09.504" starttime="20201208 15:21:05.777"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:09.505" starttime="20201208 15:21:05.775"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:09.509" level="INFO">Running command 'ozone sh key put 76161-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:14.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:14.878" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:14.878" starttime="20201208 15:21:09.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:14.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:21:14.880" starttime="20201208 15:21:14.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:14.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:14.880" starttime="20201208 15:21:14.880"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:14.881" starttime="20201208 15:21:09.506"></status>
</kw>
<msg timestamp="20201208 15:21:14.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:14.881" starttime="20201208 15:21:09.505"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:14.881" starttime="20201208 15:21:09.505"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201208 15:21:14.883" level="INFO">${postfix} = 06567</msg>
<status status="PASS" endtime="20201208 15:21:14.883" starttime="20201208 15:21:14.883"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201208 15:21:14.884" level="INFO">${tmpfile} = /tmp/tempkey-06567</msg>
<status status="PASS" endtime="20201208 15:21:14.884" starttime="20201208 15:21:14.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:14.887" level="INFO">Running command 'ozone sh key get -f 76161-target/link1/key1 /tmp/tempkey-06567 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:20.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:20.336" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:20.336" starttime="20201208 15:21:14.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:20.338" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:21:20.338" starttime="20201208 15:21:20.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:20.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:20.339" starttime="20201208 15:21:20.338"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.339" starttime="20201208 15:21:14.885"></status>
</kw>
<msg timestamp="20201208 15:21:20.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:20.339" starttime="20201208 15:21:14.884"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.339" starttime="20201208 15:21:14.884"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201208 15:21:20.342" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-06567 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:20.345" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201208 15:21:20.345" starttime="20201208 15:21:20.339"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:20.349" level="INFO">Running command 'rm -f /tmp/tempkey-06567 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:20.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:20.352" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:21:20.352" starttime="20201208 15:21:20.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:20.354" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:21:20.354" starttime="20201208 15:21:20.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:20.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:20.355" starttime="20201208 15:21:20.354"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.355" starttime="20201208 15:21:20.346"></status>
</kw>
<msg timestamp="20201208 15:21:20.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:20.355" starttime="20201208 15:21:20.346"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.355" starttime="20201208 15:21:20.345"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:21:20.356" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201208 15:21:20.356" starttime="20201208 15:21:20.355"></status>
</kw>
<msg timestamp="20201208 15:21:20.356" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201208 15:21:20.356" starttime="20201208 15:21:14.882"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:20.357" starttime="20201208 15:21:20.356"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.357" starttime="20201208 15:21:14.881"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:21:20.357" critical="yes" starttime="20201208 15:21:02.502"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:20.363" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:20.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:20.366" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:21:20.366" starttime="20201208 15:21:20.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:20.367" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:21:20.367" starttime="20201208 15:21:20.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:20.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:20.368" starttime="20201208 15:21:20.367"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.368" starttime="20201208 15:21:20.361"></status>
</kw>
<msg timestamp="20201208 15:21:20.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:20.368" starttime="20201208 15:21:20.360"></status>
</kw>
<msg timestamp="20201208 15:21:20.368" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:21:20.368" starttime="20201208 15:21:20.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:21:20.369" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:21:20.370" starttime="20201208 15:21:20.369"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:20.373" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:20.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:20.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:21:20.385" starttime="20201208 15:21:20.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:20.385" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:21:20.386" starttime="20201208 15:21:20.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:20.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:20.386" starttime="20201208 15:21:20.386"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.387" starttime="20201208 15:21:20.371"></status>
</kw>
<msg timestamp="20201208 15:21:20.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:20.387" starttime="20201208 15:21:20.371"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.387" starttime="20201208 15:21:20.370"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.387" starttime="20201208 15:21:20.370"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.387" starttime="20201208 15:21:20.360"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:20.387" starttime="20201208 15:21:20.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:20.392" level="INFO">Running command 'ozone sh key put 76161-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:25.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:25.863" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:25.864" starttime="20201208 15:21:20.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:25.865" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:21:25.865" starttime="20201208 15:21:25.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:25.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:25.866" starttime="20201208 15:21:25.866"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:25.866" starttime="20201208 15:21:20.388"></status>
</kw>
<msg timestamp="20201208 15:21:25.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:25.867" starttime="20201208 15:21:20.388"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:25.867" starttime="20201208 15:21:20.387"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201208 15:21:25.869" level="INFO">${postfix} = 20554</msg>
<status status="PASS" endtime="20201208 15:21:25.869" starttime="20201208 15:21:25.868"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201208 15:21:25.869" level="INFO">${tmpfile} = /tmp/tempkey-20554</msg>
<status status="PASS" endtime="20201208 15:21:25.869" starttime="20201208 15:21:25.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:25.873" level="INFO">Running command 'ozone sh key get -f 76161-source/bucket1/key2 /tmp/tempkey-20554 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:31.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:31.016" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:31.016" starttime="20201208 15:21:25.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:31.017" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:21:31.017" starttime="20201208 15:21:31.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:31.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:31.017" starttime="20201208 15:21:31.017"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.018" starttime="20201208 15:21:25.871"></status>
</kw>
<msg timestamp="20201208 15:21:31.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:31.018" starttime="20201208 15:21:25.870"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.018" starttime="20201208 15:21:25.870"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201208 15:21:31.022" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-20554 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:31.023" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201208 15:21:31.023" starttime="20201208 15:21:31.019"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:31.028" level="INFO">Running command 'rm -f /tmp/tempkey-20554 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:31.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:31.031" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:21:31.031" starttime="20201208 15:21:31.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:31.032" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:21:31.032" starttime="20201208 15:21:31.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:31.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:31.032" starttime="20201208 15:21:31.032"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.033" starttime="20201208 15:21:31.025"></status>
</kw>
<msg timestamp="20201208 15:21:31.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:31.033" starttime="20201208 15:21:31.024"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.033" starttime="20201208 15:21:31.024"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:21:31.033" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201208 15:21:31.034" starttime="20201208 15:21:31.033"></status>
</kw>
<msg timestamp="20201208 15:21:31.034" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201208 15:21:31.034" starttime="20201208 15:21:25.868"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:31.034" starttime="20201208 15:21:31.034"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.035" starttime="20201208 15:21:25.867"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:21:31.035" critical="yes" starttime="20201208 15:21:20.358"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:31.042" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:31.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:31.044" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:21:31.044" starttime="20201208 15:21:31.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:31.045" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:21:31.045" starttime="20201208 15:21:31.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:31.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:31.046" starttime="20201208 15:21:31.045"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.046" starttime="20201208 15:21:31.039"></status>
</kw>
<msg timestamp="20201208 15:21:31.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:31.046" starttime="20201208 15:21:31.039"></status>
</kw>
<msg timestamp="20201208 15:21:31.046" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:21:31.046" starttime="20201208 15:21:31.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:21:31.047" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:21:31.047" starttime="20201208 15:21:31.047"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:31.052" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:31.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:31.062" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:21:31.062" starttime="20201208 15:21:31.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:31.063" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:21:31.064" starttime="20201208 15:21:31.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:31.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:31.064" starttime="20201208 15:21:31.064"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.064" starttime="20201208 15:21:31.049"></status>
</kw>
<msg timestamp="20201208 15:21:31.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:31.065" starttime="20201208 15:21:31.048"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.065" starttime="20201208 15:21:31.048"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.065" starttime="20201208 15:21:31.047"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.065" starttime="20201208 15:21:31.037"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:31.065" starttime="20201208 15:21:31.037"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:31.070" level="INFO">Running command 'ozone sh key list 76161-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:34.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:34.751" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201208 15:21:34.751" starttime="20201208 15:21:31.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:34.752" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201208 15:21:34.752" starttime="20201208 15:21:34.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:34.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:34.753" starttime="20201208 15:21:34.752"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:34.753" starttime="20201208 15:21:31.066"></status>
</kw>
<msg timestamp="20201208 15:21:34.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:34.753" starttime="20201208 15:21:31.066"></status>
</kw>
<msg timestamp="20201208 15:21:34.753" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201208 15:21:34.754" starttime="20201208 15:21:31.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:34.759" level="INFO">Running command 'ozone sh key list 76161-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:38.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:38.575" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201208 15:21:38.575" starttime="20201208 15:21:34.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:38.577" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201208 15:21:38.577" starttime="20201208 15:21:38.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:38.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:38.577" starttime="20201208 15:21:38.577"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:38.578" starttime="20201208 15:21:34.755"></status>
</kw>
<msg timestamp="20201208 15:21:38.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:38.578" starttime="20201208 15:21:34.754"></status>
</kw>
<msg timestamp="20201208 15:21:38.578" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201208 15:21:38.578" starttime="20201208 15:21:34.754"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:38.579" starttime="20201208 15:21:38.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:38.579" starttime="20201208 15:21:38.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:38.580" starttime="20201208 15:21:38.580"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:21:38.580" critical="yes" starttime="20201208 15:21:31.036"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:38.586" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:38.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:38.589" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:21:38.589" starttime="20201208 15:21:38.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:38.590" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:21:38.590" starttime="20201208 15:21:38.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:38.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:38.591" starttime="20201208 15:21:38.590"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:38.591" starttime="20201208 15:21:38.583"></status>
</kw>
<msg timestamp="20201208 15:21:38.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:38.591" starttime="20201208 15:21:38.583"></status>
</kw>
<msg timestamp="20201208 15:21:38.591" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:21:38.591" starttime="20201208 15:21:38.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:21:38.592" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:21:38.592" starttime="20201208 15:21:38.592"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:38.597" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:38.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:38.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:21:38.608" starttime="20201208 15:21:38.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:38.609" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:21:38.609" starttime="20201208 15:21:38.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:38.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:38.609" starttime="20201208 15:21:38.609"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:38.610" starttime="20201208 15:21:38.594"></status>
</kw>
<msg timestamp="20201208 15:21:38.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:38.610" starttime="20201208 15:21:38.593"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:38.610" starttime="20201208 15:21:38.593"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:38.610" starttime="20201208 15:21:38.592"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:38.610" starttime="20201208 15:21:38.582"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:38.610" starttime="20201208 15:21:38.581"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:38.615" level="INFO">Running command 'ozone sh key delete 76161-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:42.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:42.011" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:42.011" starttime="20201208 15:21:38.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:42.012" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:21:42.012" starttime="20201208 15:21:42.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:42.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:42.013" starttime="20201208 15:21:42.012"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:42.013" starttime="20201208 15:21:38.611"></status>
</kw>
<msg timestamp="20201208 15:21:42.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:42.013" starttime="20201208 15:21:38.611"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:42.013" starttime="20201208 15:21:38.611"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:42.018" level="INFO">Running command 'ozone sh key list 76161-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:45.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:45.738" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201208 15:21:45.738" starttime="20201208 15:21:42.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:45.739" level="INFO">key1</msg>
<status status="PASS" endtime="20201208 15:21:45.740" starttime="20201208 15:21:45.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:45.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:45.741" starttime="20201208 15:21:45.740"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:45.741" starttime="20201208 15:21:42.015"></status>
</kw>
<msg timestamp="20201208 15:21:45.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:45.741" starttime="20201208 15:21:42.015"></status>
</kw>
<msg timestamp="20201208 15:21:45.741" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201208 15:21:45.741" starttime="20201208 15:21:42.014"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:45.742" starttime="20201208 15:21:45.741"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:21:45.742" critical="yes" starttime="20201208 15:21:38.581"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:45.749" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:45.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:45.750" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:21:45.750" starttime="20201208 15:21:45.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:45.751" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:21:45.751" starttime="20201208 15:21:45.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:45.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:45.752" starttime="20201208 15:21:45.752"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:45.752" starttime="20201208 15:21:45.745"></status>
</kw>
<msg timestamp="20201208 15:21:45.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:45.755" starttime="20201208 15:21:45.745"></status>
</kw>
<msg timestamp="20201208 15:21:45.756" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:21:45.756" starttime="20201208 15:21:45.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:21:45.756" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:21:45.756" starttime="20201208 15:21:45.756"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:45.761" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:45.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:45.779" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:21:45.780" starttime="20201208 15:21:45.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:45.781" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:21:45.781" starttime="20201208 15:21:45.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:45.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:45.781" starttime="20201208 15:21:45.781"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:45.782" starttime="20201208 15:21:45.758"></status>
</kw>
<msg timestamp="20201208 15:21:45.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:45.782" starttime="20201208 15:21:45.757"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:45.782" starttime="20201208 15:21:45.757"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:45.782" starttime="20201208 15:21:45.756"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:45.782" starttime="20201208 15:21:45.744"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:45.782" starttime="20201208 15:21:45.744"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:45.787" level="INFO">Running command 'ozone sh bucket list 76161-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:49.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:49.231" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:49.231" starttime="20201208 15:21:45.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:49.232" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:20:58.920Z",
  "modificationTime" : "2020-12-08T15:20:58.920Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:20:38.189Z",
  "modificationTime" : "2020-12-08T15:20:55.410Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:21:05.682Z",
  "modificationTime" : "2020-12-08T15:21:05.682Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:20:31.354Z",
  "modificationTime" : "2020-12-08T15:20:52.130Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:20:34.692Z",
  "modificationTime" : "2020-12-08T15:20:34.692Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201208 15:21:49.232" starttime="20201208 15:21:49.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:49.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:49.233" starttime="20201208 15:21:49.232"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:49.233" starttime="20201208 15:21:45.783"></status>
</kw>
<msg timestamp="20201208 15:21:49.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:49.233" starttime="20201208 15:21:45.783"></status>
</kw>
<msg timestamp="20201208 15:21:49.233" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:49.233" starttime="20201208 15:21:45.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:49.234" starttime="20201208 15:21:49.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:49.234" starttime="20201208 15:21:49.234"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:21:49.235" critical="yes" starttime="20201208 15:21:45.743"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:49.241" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:49.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:49.244" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:21:49.244" starttime="20201208 15:21:49.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:49.245" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:21:49.245" starttime="20201208 15:21:49.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:49.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:49.245" starttime="20201208 15:21:49.245"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:49.246" starttime="20201208 15:21:49.238"></status>
</kw>
<msg timestamp="20201208 15:21:49.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:49.246" starttime="20201208 15:21:49.238"></status>
</kw>
<msg timestamp="20201208 15:21:49.246" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:21:49.246" starttime="20201208 15:21:49.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:21:49.247" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:21:49.247" starttime="20201208 15:21:49.246"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:49.252" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:49.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:49.263" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:21:49.263" starttime="20201208 15:21:49.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:49.264" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:21:49.264" starttime="20201208 15:21:49.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:49.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:49.264" starttime="20201208 15:21:49.264"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:49.265" starttime="20201208 15:21:49.248"></status>
</kw>
<msg timestamp="20201208 15:21:49.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:49.265" starttime="20201208 15:21:49.248"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:49.265" starttime="20201208 15:21:49.248"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:49.265" starttime="20201208 15:21:49.247"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:49.265" starttime="20201208 15:21:49.237"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:49.265" starttime="20201208 15:21:49.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:49.270" level="INFO">Running command 'ozone sh bucket info 76161-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:52.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:52.931" level="INFO">${output} = 76161-source bucket1</msg>
<status status="PASS" endtime="20201208 15:21:52.931" starttime="20201208 15:21:49.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:52.932" level="INFO">76161-source bucket1</msg>
<status status="PASS" endtime="20201208 15:21:52.932" starttime="20201208 15:21:52.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:52.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:52.933" starttime="20201208 15:21:52.932"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:52.933" starttime="20201208 15:21:49.266"></status>
</kw>
<msg timestamp="20201208 15:21:52.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:52.933" starttime="20201208 15:21:49.266"></status>
</kw>
<msg timestamp="20201208 15:21:52.934" level="INFO">${result} = 76161-source bucket1</msg>
<status status="PASS" endtime="20201208 15:21:52.934" starttime="20201208 15:21:49.265"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:52.934" starttime="20201208 15:21:52.934"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:21:52.935" critical="yes" starttime="20201208 15:21:49.235"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:52.941" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:52.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:52.944" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:21:52.944" starttime="20201208 15:21:52.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:52.945" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:21:52.945" starttime="20201208 15:21:52.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:52.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:52.945" starttime="20201208 15:21:52.945"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:52.946" starttime="20201208 15:21:52.938"></status>
</kw>
<msg timestamp="20201208 15:21:52.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:52.946" starttime="20201208 15:21:52.938"></status>
</kw>
<msg timestamp="20201208 15:21:52.946" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:21:52.946" starttime="20201208 15:21:52.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:21:52.947" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:21:52.947" starttime="20201208 15:21:52.947"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:52.951" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:52.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:52.968" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:21:52.968" starttime="20201208 15:21:52.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:52.970" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:21:52.970" starttime="20201208 15:21:52.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:52.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:52.971" starttime="20201208 15:21:52.970"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:52.971" starttime="20201208 15:21:52.948"></status>
</kw>
<msg timestamp="20201208 15:21:52.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:52.971" starttime="20201208 15:21:52.948"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:52.971" starttime="20201208 15:21:52.948"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:52.971" starttime="20201208 15:21:52.947"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:52.972" starttime="20201208 15:21:52.937"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:52.972" starttime="20201208 15:21:52.937"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:52.976" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 76161-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:56.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:56.265" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:21:56.265" starttime="20201208 15:21:52.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:56.267" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201208 15:21:56.267" starttime="20201208 15:21:56.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:56.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:56.267" starttime="20201208 15:21:56.267"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:56.268" starttime="20201208 15:21:52.973"></status>
</kw>
<msg timestamp="20201208 15:21:56.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:56.268" starttime="20201208 15:21:52.972"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:56.268" starttime="20201208 15:21:52.972"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:56.273" level="INFO">Running command 'ozone sh bucket getacl 76161-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:21:59.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:21:59.945" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201208 15:21:59.945" starttime="20201208 15:21:56.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:21:59.946" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201208 15:21:59.946" starttime="20201208 15:21:59.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:21:59.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:21:59.947" starttime="20201208 15:21:59.946"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:59.947" starttime="20201208 15:21:56.270"></status>
</kw>
<msg timestamp="20201208 15:21:59.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:21:59.947" starttime="20201208 15:21:56.270"></status>
</kw>
<msg timestamp="20201208 15:21:59.948" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201208 15:21:59.948" starttime="20201208 15:21:56.269"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:21:59.948" starttime="20201208 15:21:59.948"></status>
</kw>
<status status="PASS" endtime="20201208 15:21:59.948" starttime="20201208 15:21:56.268"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:21:59.953" level="INFO">Running command 'ozone sh bucket getacl 76161-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:03.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:03.590" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:03.590" starttime="20201208 15:21:59.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:03.591" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:03.591" starttime="20201208 15:22:03.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:03.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:03.592" starttime="20201208 15:22:03.591"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:03.592" starttime="20201208 15:21:59.950"></status>
</kw>
<msg timestamp="20201208 15:22:03.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:03.592" starttime="20201208 15:21:59.950"></status>
</kw>
<msg timestamp="20201208 15:22:03.593" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201208 15:22:03.593" starttime="20201208 15:21:59.949"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:03.593" starttime="20201208 15:22:03.593"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:03.593" starttime="20201208 15:21:59.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:03.598" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 76161-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:07.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:07.257" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:07.257" starttime="20201208 15:22:03.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:07.258" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201208 15:22:07.259" starttime="20201208 15:22:07.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:07.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:07.259" starttime="20201208 15:22:07.259"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:07.260" starttime="20201208 15:22:03.595"></status>
</kw>
<msg timestamp="20201208 15:22:07.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:07.260" starttime="20201208 15:22:03.594"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:07.260" starttime="20201208 15:22:03.594"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:07.266" level="INFO">Running command 'ozone sh bucket getacl 76161-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:10.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:10.478" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:10.478" starttime="20201208 15:22:07.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:10.479" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:10.479" starttime="20201208 15:22:10.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:10.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:10.480" starttime="20201208 15:22:10.479"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:10.480" starttime="20201208 15:22:07.262"></status>
</kw>
<msg timestamp="20201208 15:22:10.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:10.480" starttime="20201208 15:22:07.262"></status>
</kw>
<msg timestamp="20201208 15:22:10.481" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201208 15:22:10.481" starttime="20201208 15:22:07.261"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:10.481" starttime="20201208 15:22:10.481"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:10.481" starttime="20201208 15:22:07.260"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:10.487" level="INFO">Running command 'ozone sh bucket getacl 76161-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:14.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:14.038" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201208 15:22:14.038" starttime="20201208 15:22:10.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:14.039" level="INFO">READ</msg>
<status status="PASS" endtime="20201208 15:22:14.039" starttime="20201208 15:22:14.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:14.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:14.040" starttime="20201208 15:22:14.039"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:14.040" starttime="20201208 15:22:10.483"></status>
</kw>
<msg timestamp="20201208 15:22:14.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:14.040" starttime="20201208 15:22:10.483"></status>
</kw>
<msg timestamp="20201208 15:22:14.040" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201208 15:22:14.040" starttime="20201208 15:22:10.482"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:14.041" starttime="20201208 15:22:14.041"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:14.041" starttime="20201208 15:22:10.481"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:22:14.041" critical="yes" starttime="20201208 15:21:52.936"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:14.047" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:14.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:14.050" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:22:14.050" starttime="20201208 15:22:14.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:14.051" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:22:14.051" starttime="20201208 15:22:14.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:14.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:14.052" starttime="20201208 15:22:14.051"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:14.052" starttime="20201208 15:22:14.045"></status>
</kw>
<msg timestamp="20201208 15:22:14.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:14.053" starttime="20201208 15:22:14.044"></status>
</kw>
<msg timestamp="20201208 15:22:14.053" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:22:14.053" starttime="20201208 15:22:14.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:22:14.054" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:22:14.054" starttime="20201208 15:22:14.053"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:14.058" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:14.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:14.068" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:14.068" starttime="20201208 15:22:14.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:14.069" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:14.069" starttime="20201208 15:22:14.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:14.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:14.070" starttime="20201208 15:22:14.070"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:14.070" starttime="20201208 15:22:14.055"></status>
</kw>
<msg timestamp="20201208 15:22:14.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:14.071" starttime="20201208 15:22:14.055"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:14.071" starttime="20201208 15:22:14.054"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:14.071" starttime="20201208 15:22:14.054"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:14.071" starttime="20201208 15:22:14.043"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:14.071" starttime="20201208 15:22:14.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:14.076" level="INFO">Running command 'ozone sh bucket link 76161-source/bucket2 76161-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:17.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:17.560" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:17.560" starttime="20201208 15:22:14.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:17.561" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:22:17.561" starttime="20201208 15:22:17.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:17.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:17.562" starttime="20201208 15:22:17.561"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:17.562" starttime="20201208 15:22:14.072"></status>
</kw>
<msg timestamp="20201208 15:22:17.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:17.563" starttime="20201208 15:22:14.072"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:17.563" starttime="20201208 15:22:14.071"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:17.566" level="INFO">Running command 'ozone sh bucket create 76161-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:21.090" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 15:22:21.090" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:21.090" starttime="20201208 15:22:17.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:21.091" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201208 15:22:21.092" starttime="20201208 15:22:21.091"></status>
</kw>
<msg timestamp="20201208 15:22:21.092" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:21.092" starttime="20201208 15:22:17.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:21.093" starttime="20201208 15:22:21.092"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:21.098" level="INFO">Running command 'ozone sh bucket create 76161-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:24.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:24.440" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:24.440" starttime="20201208 15:22:21.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:24.441" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:22:24.442" starttime="20201208 15:22:24.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:24.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:24.442" starttime="20201208 15:22:24.442"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:24.443" starttime="20201208 15:22:21.094"></status>
</kw>
<msg timestamp="20201208 15:22:24.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:24.443" starttime="20201208 15:22:21.093"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:24.443" starttime="20201208 15:22:21.093"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:24.447" level="INFO">Running command 'ozone sh bucket link 76161-source/bucket1 76161-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:29.131" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 15:22:29.131" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:29.131" starttime="20201208 15:22:24.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.132" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201208 15:22:29.132" starttime="20201208 15:22:29.131"></status>
</kw>
<msg timestamp="20201208 15:22:29.132" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:29.132" starttime="20201208 15:22:24.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:29.133" starttime="20201208 15:22:29.133"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:22:29.133" critical="yes" starttime="20201208 15:22:14.042"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:29.139" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:29.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:29.142" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:22:29.142" starttime="20201208 15:22:29.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.143" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:22:29.143" starttime="20201208 15:22:29.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:29.144" starttime="20201208 15:22:29.143"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.144" starttime="20201208 15:22:29.137"></status>
</kw>
<msg timestamp="20201208 15:22:29.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:29.144" starttime="20201208 15:22:29.137"></status>
</kw>
<msg timestamp="20201208 15:22:29.145" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:22:29.145" starttime="20201208 15:22:29.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:22:29.145" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:22:29.145" starttime="20201208 15:22:29.145"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:29.149" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:29.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:29.161" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:29.161" starttime="20201208 15:22:29.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.162" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:29.162" starttime="20201208 15:22:29.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:29.163" starttime="20201208 15:22:29.163"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.163" starttime="20201208 15:22:29.147"></status>
</kw>
<msg timestamp="20201208 15:22:29.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:29.164" starttime="20201208 15:22:29.146"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.164" starttime="20201208 15:22:29.146"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.164" starttime="20201208 15:22:29.145"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.164" starttime="20201208 15:22:29.136"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.164" starttime="20201208 15:22:29.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:29.170" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:29.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:29.173" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:29.173" starttime="20201208 15:22:29.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.174" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:29.174" starttime="20201208 15:22:29.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:29.175" starttime="20201208 15:22:29.175"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.175" starttime="20201208 15:22:29.166"></status>
</kw>
<msg timestamp="20201208 15:22:29.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:29.175" starttime="20201208 15:22:29.166"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.176" starttime="20201208 15:22:29.166"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:29.181" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:29.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:29.183" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:22:29.183" starttime="20201208 15:22:29.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.184" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:22:29.184" starttime="20201208 15:22:29.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:29.184" starttime="20201208 15:22:29.184"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.185" starttime="20201208 15:22:29.177"></status>
</kw>
<msg timestamp="20201208 15:22:29.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:29.185" starttime="20201208 15:22:29.177"></status>
</kw>
<msg timestamp="20201208 15:22:29.185" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:22:29.185" starttime="20201208 15:22:29.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:22:29.186" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:22:29.186" starttime="20201208 15:22:29.185"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:29.190" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:29.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:29.200" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:29.200" starttime="20201208 15:22:29.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.201" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:29.201" starttime="20201208 15:22:29.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:29.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:29.202" starttime="20201208 15:22:29.201"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.202" starttime="20201208 15:22:29.187"></status>
</kw>
<msg timestamp="20201208 15:22:29.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:29.203" starttime="20201208 15:22:29.187"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.203" starttime="20201208 15:22:29.186"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.203" starttime="20201208 15:22:29.186"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.203" starttime="20201208 15:22:29.176"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:29.203" starttime="20201208 15:22:29.176"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:29.206" level="INFO">Running command 'ozone sh key list 76161-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:33.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:33.084" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:33.085" starttime="20201208 15:22:29.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.086" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "76161-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-12-08T15:20:22.413Z",
  "modificationTime" : "2020-12-08T15:20:24.022Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201208 15:22:33.086" starttime="20201208 15:22:33.085"></status>
</kw>
<msg timestamp="20201208 15:22:33.086" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:33.086" starttime="20201208 15:22:29.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:33.087" starttime="20201208 15:22:33.086"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.087" starttime="20201208 15:22:29.165"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.087" starttime="20201208 15:22:29.164"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:22:33.087" critical="yes" starttime="20201208 15:22:29.134"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:33.094" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:33.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:33.096" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:22:33.096" starttime="20201208 15:22:33.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.097" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:22:33.097" starttime="20201208 15:22:33.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:33.097" starttime="20201208 15:22:33.097"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.098" starttime="20201208 15:22:33.091"></status>
</kw>
<msg timestamp="20201208 15:22:33.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:33.098" starttime="20201208 15:22:33.090"></status>
</kw>
<msg timestamp="20201208 15:22:33.098" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:22:33.098" starttime="20201208 15:22:33.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:22:33.099" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:22:33.099" starttime="20201208 15:22:33.099"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:33.104" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:33.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:33.113" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:33.114" starttime="20201208 15:22:33.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.115" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:33.115" starttime="20201208 15:22:33.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:33.115" starttime="20201208 15:22:33.115"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.116" starttime="20201208 15:22:33.100"></status>
</kw>
<msg timestamp="20201208 15:22:33.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:33.116" starttime="20201208 15:22:33.100"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.116" starttime="20201208 15:22:33.100"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.116" starttime="20201208 15:22:33.099"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.116" starttime="20201208 15:22:33.089"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.116" starttime="20201208 15:22:33.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:33.121" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:33.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:33.125" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:33.125" starttime="20201208 15:22:33.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.126" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:33.126" starttime="20201208 15:22:33.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:33.127" starttime="20201208 15:22:33.126"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.127" starttime="20201208 15:22:33.118"></status>
</kw>
<msg timestamp="20201208 15:22:33.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:33.127" starttime="20201208 15:22:33.118"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.127" starttime="20201208 15:22:33.117"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:33.132" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:33.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:33.134" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:22:33.134" starttime="20201208 15:22:33.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.135" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:22:33.135" starttime="20201208 15:22:33.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:33.136" starttime="20201208 15:22:33.135"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.136" starttime="20201208 15:22:33.129"></status>
</kw>
<msg timestamp="20201208 15:22:33.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:33.136" starttime="20201208 15:22:33.129"></status>
</kw>
<msg timestamp="20201208 15:22:33.136" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:22:33.136" starttime="20201208 15:22:33.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:22:33.137" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:22:33.137" starttime="20201208 15:22:33.137"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:33.142" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:33.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:33.159" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:33.159" starttime="20201208 15:22:33.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.160" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:33.160" starttime="20201208 15:22:33.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:33.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:33.161" starttime="20201208 15:22:33.161"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.161" starttime="20201208 15:22:33.139"></status>
</kw>
<msg timestamp="20201208 15:22:33.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:33.162" starttime="20201208 15:22:33.138"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.162" starttime="20201208 15:22:33.138"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.162" starttime="20201208 15:22:33.137"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.162" starttime="20201208 15:22:33.128"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:33.162" starttime="20201208 15:22:33.127"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:33.166" level="INFO">Running command 'ozone sh key list 76161-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:36.397" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 15:22:36.397" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:36.397" starttime="20201208 15:22:33.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.398" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201208 15:22:36.398" starttime="20201208 15:22:36.398"></status>
</kw>
<msg timestamp="20201208 15:22:36.399" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:36.399" starttime="20201208 15:22:33.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:36.399" starttime="20201208 15:22:36.399"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.400" starttime="20201208 15:22:33.117"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.400" starttime="20201208 15:22:33.117"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:22:36.400" critical="yes" starttime="20201208 15:22:33.088"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:36.408" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:36.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:36.409" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:22:36.409" starttime="20201208 15:22:36.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.410" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:22:36.410" starttime="20201208 15:22:36.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:36.411" starttime="20201208 15:22:36.410"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.411" starttime="20201208 15:22:36.404"></status>
</kw>
<msg timestamp="20201208 15:22:36.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:36.411" starttime="20201208 15:22:36.403"></status>
</kw>
<msg timestamp="20201208 15:22:36.411" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:22:36.411" starttime="20201208 15:22:36.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:22:36.412" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:22:36.412" starttime="20201208 15:22:36.412"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:36.417" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:36.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:36.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:36.428" starttime="20201208 15:22:36.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.429" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:36.429" starttime="20201208 15:22:36.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:36.430" starttime="20201208 15:22:36.429"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.430" starttime="20201208 15:22:36.414"></status>
</kw>
<msg timestamp="20201208 15:22:36.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:36.432" starttime="20201208 15:22:36.413"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.436" starttime="20201208 15:22:36.413"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.436" starttime="20201208 15:22:36.412"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.436" starttime="20201208 15:22:36.402"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.436" starttime="20201208 15:22:36.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:36.447" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:36.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:36.450" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:36.450" starttime="20201208 15:22:36.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.451" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:36.451" starttime="20201208 15:22:36.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:36.452" starttime="20201208 15:22:36.451"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.452" starttime="20201208 15:22:36.438"></status>
</kw>
<msg timestamp="20201208 15:22:36.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:36.453" starttime="20201208 15:22:36.438"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.453" starttime="20201208 15:22:36.437"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:36.457" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:36.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:36.460" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:22:36.460" starttime="20201208 15:22:36.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.460" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:22:36.461" starttime="20201208 15:22:36.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:36.461" starttime="20201208 15:22:36.461"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.461" starttime="20201208 15:22:36.454"></status>
</kw>
<msg timestamp="20201208 15:22:36.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:36.462" starttime="20201208 15:22:36.454"></status>
</kw>
<msg timestamp="20201208 15:22:36.462" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:22:36.462" starttime="20201208 15:22:36.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:22:36.463" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:22:36.463" starttime="20201208 15:22:36.462"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:36.471" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:36.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:36.483" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:36.483" starttime="20201208 15:22:36.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.484" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:36.484" starttime="20201208 15:22:36.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:36.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:36.485" starttime="20201208 15:22:36.484"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.485" starttime="20201208 15:22:36.465"></status>
</kw>
<msg timestamp="20201208 15:22:36.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:36.485" starttime="20201208 15:22:36.465"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.485" starttime="20201208 15:22:36.463"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.485" starttime="20201208 15:22:36.463"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.486" starttime="20201208 15:22:36.453"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:36.486" starttime="20201208 15:22:36.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:36.490" level="INFO">Running command 'ozone sh bucket info 76161-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:40.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:40.063" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:40.063" starttime="20201208 15:22:36.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:40.064" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:20:38.189Z",
  "modificationTime" : "2020-12-08T15:20:55.410Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201208 15:22:40.064" starttime="20201208 15:22:40.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:40.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:40.065" starttime="20201208 15:22:40.064"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:40.065" starttime="20201208 15:22:36.487"></status>
</kw>
<msg timestamp="20201208 15:22:40.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:40.065" starttime="20201208 15:22:36.486"></status>
</kw>
<msg timestamp="20201208 15:22:40.066" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:40.066" starttime="20201208 15:22:36.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:40.066" starttime="20201208 15:22:40.066"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:40.067" starttime="20201208 15:22:40.066"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:40.070" level="INFO">Running command 'ozone sh key list 76161-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:43.293" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 15:22:43.293" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:43.293" starttime="20201208 15:22:40.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:43.294" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201208 15:22:43.294" starttime="20201208 15:22:43.293"></status>
</kw>
<msg timestamp="20201208 15:22:43.295" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:43.295" starttime="20201208 15:22:40.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:43.295" starttime="20201208 15:22:43.295"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:43.295" starttime="20201208 15:22:36.437"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:43.295" starttime="20201208 15:22:36.436"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:22:43.296" critical="yes" starttime="20201208 15:22:36.401"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:43.302" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:43.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:43.305" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:22:43.305" starttime="20201208 15:22:43.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:43.306" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:22:43.306" starttime="20201208 15:22:43.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:43.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:43.306" starttime="20201208 15:22:43.306"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:43.307" starttime="20201208 15:22:43.299"></status>
</kw>
<msg timestamp="20201208 15:22:43.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:43.307" starttime="20201208 15:22:43.299"></status>
</kw>
<msg timestamp="20201208 15:22:43.307" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:22:43.307" starttime="20201208 15:22:43.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:22:43.308" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:22:43.308" starttime="20201208 15:22:43.307"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:43.313" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:43.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:43.323" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:43.323" starttime="20201208 15:22:43.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:43.324" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:43.324" starttime="20201208 15:22:43.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:43.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:43.325" starttime="20201208 15:22:43.325"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:43.325" starttime="20201208 15:22:43.309"></status>
</kw>
<msg timestamp="20201208 15:22:43.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:43.326" starttime="20201208 15:22:43.309"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:43.326" starttime="20201208 15:22:43.308"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:43.326" starttime="20201208 15:22:43.308"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:43.326" starttime="20201208 15:22:43.298"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:43.326" starttime="20201208 15:22:43.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:43.330" level="INFO">Running command 'ozone sh bucket link 76161-target/loop1 76161-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:46.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:46.811" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:46.811" starttime="20201208 15:22:43.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:46.812" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:22:46.812" starttime="20201208 15:22:46.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:46.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:46.813" starttime="20201208 15:22:46.813"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:46.814" starttime="20201208 15:22:43.327"></status>
</kw>
<msg timestamp="20201208 15:22:46.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:46.814" starttime="20201208 15:22:43.327"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:46.814" starttime="20201208 15:22:43.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:46.819" level="INFO">Running command 'ozone sh bucket link 76161-target/loop2 76161-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:50.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:50.529" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:50.529" starttime="20201208 15:22:46.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:50.530" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:22:50.530" starttime="20201208 15:22:50.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:50.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:50.531" starttime="20201208 15:22:50.531"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:50.531" starttime="20201208 15:22:46.815"></status>
</kw>
<msg timestamp="20201208 15:22:50.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:50.532" starttime="20201208 15:22:46.815"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:50.532" starttime="20201208 15:22:46.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:50.536" level="INFO">Running command 'ozone sh bucket link 76161-target/loop3 76161-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:53.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:53.831" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:53.831" starttime="20201208 15:22:50.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:53.832" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:22:53.832" starttime="20201208 15:22:53.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:53.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:53.833" starttime="20201208 15:22:53.833"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:53.833" starttime="20201208 15:22:50.533"></status>
</kw>
<msg timestamp="20201208 15:22:53.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:53.834" starttime="20201208 15:22:50.533"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:53.834" starttime="20201208 15:22:50.532"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:53.837" level="INFO">Running command 'ozone sh key list 76161-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:57.143" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 15:22:57.144" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:57.144" starttime="20201208 15:22:53.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:57.145" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201208 15:22:57.145" starttime="20201208 15:22:57.144"></status>
</kw>
<msg timestamp="20201208 15:22:57.145" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:22:57.145" starttime="20201208 15:22:53.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201208 15:22:57.146" starttime="20201208 15:22:57.146"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:22:57.146" critical="yes" starttime="20201208 15:22:43.296"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:57.152" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:57.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:57.155" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:22:57.155" starttime="20201208 15:22:57.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:57.156" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:22:57.156" starttime="20201208 15:22:57.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:57.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:57.157" starttime="20201208 15:22:57.156"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:57.157" starttime="20201208 15:22:57.149"></status>
</kw>
<msg timestamp="20201208 15:22:57.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:57.157" starttime="20201208 15:22:57.149"></status>
</kw>
<msg timestamp="20201208 15:22:57.157" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:22:57.157" starttime="20201208 15:22:57.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:22:57.158" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:22:57.158" starttime="20201208 15:22:57.157"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:57.162" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:22:57.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:22:57.179" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:22:57.180" starttime="20201208 15:22:57.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:22:57.180" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:22:57.181" starttime="20201208 15:22:57.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:22:57.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:22:57.181" starttime="20201208 15:22:57.181"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:57.182" starttime="20201208 15:22:57.159"></status>
</kw>
<msg timestamp="20201208 15:22:57.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:22:57.182" starttime="20201208 15:22:57.159"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:57.182" starttime="20201208 15:22:57.159"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:57.182" starttime="20201208 15:22:57.158"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:57.182" starttime="20201208 15:22:57.148"></status>
</kw>
<status status="PASS" endtime="20201208 15:22:57.182" starttime="20201208 15:22:57.148"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:22:57.186" level="INFO">Running command 'ozone sh bucket link 76161-source/bucket1 76161-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:00.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:23:00.663" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:23:00.663" starttime="20201208 15:22:57.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:23:00.664" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:23:00.665" starttime="20201208 15:23:00.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:23:00.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:23:00.665" starttime="20201208 15:23:00.665"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:00.666" starttime="20201208 15:22:57.183"></status>
</kw>
<msg timestamp="20201208 15:23:00.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:23:00.666" starttime="20201208 15:22:57.183"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:00.666" starttime="20201208 15:22:57.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:23:00.671" level="INFO">Running command 'ozone sh key put 76161-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:05.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:23:05.905" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:23:05.905" starttime="20201208 15:23:00.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:23:05.906" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:23:05.906" starttime="20201208 15:23:05.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:23:05.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:23:05.907" starttime="20201208 15:23:05.906"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:05.907" starttime="20201208 15:23:00.667"></status>
</kw>
<msg timestamp="20201208 15:23:05.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:23:05.907" starttime="20201208 15:23:00.667"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:05.908" starttime="20201208 15:23:00.666"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201208 15:23:05.910" level="INFO">${postfix} = 15992</msg>
<status status="PASS" endtime="20201208 15:23:05.910" starttime="20201208 15:23:05.909"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201208 15:23:05.910" level="INFO">${tmpfile} = /tmp/tempkey-15992</msg>
<status status="PASS" endtime="20201208 15:23:05.910" starttime="20201208 15:23:05.910"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:23:05.914" level="INFO">Running command 'ozone sh key get -f 76161-target/link1/key3 /tmp/tempkey-15992 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:10.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:23:10.866" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:23:10.866" starttime="20201208 15:23:05.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:23:10.867" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:23:10.867" starttime="20201208 15:23:10.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:23:10.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:23:10.868" starttime="20201208 15:23:10.867"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.868" starttime="20201208 15:23:05.911"></status>
</kw>
<msg timestamp="20201208 15:23:10.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:23:10.869" starttime="20201208 15:23:05.911"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.869" starttime="20201208 15:23:05.910"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201208 15:23:10.872" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-15992 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:10.874" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201208 15:23:10.874" starttime="20201208 15:23:10.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:23:10.878" level="INFO">Running command 'rm -f /tmp/tempkey-15992 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:10.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:23:10.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:23:10.881" starttime="20201208 15:23:10.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:23:10.882" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:23:10.882" starttime="20201208 15:23:10.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:23:10.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:23:10.883" starttime="20201208 15:23:10.882"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.883" starttime="20201208 15:23:10.875"></status>
</kw>
<msg timestamp="20201208 15:23:10.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:23:10.883" starttime="20201208 15:23:10.875"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.884" starttime="20201208 15:23:10.874"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 15:23:10.884" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201208 15:23:10.884" starttime="20201208 15:23:10.884"></status>
</kw>
<msg timestamp="20201208 15:23:10.885" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201208 15:23:10.885" starttime="20201208 15:23:05.908"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201208 15:23:10.885" starttime="20201208 15:23:10.885"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.885" starttime="20201208 15:23:05.908"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:23:10.886" critical="yes" starttime="20201208 15:22:57.147"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:23:10.892" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:10.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:23:10.894" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201208 15:23:10.894" starttime="20201208 15:23:10.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:23:10.895" level="INFO">scm</msg>
<status status="PASS" endtime="20201208 15:23:10.895" starttime="20201208 15:23:10.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:23:10.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:23:10.896" starttime="20201208 15:23:10.895"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.896" starttime="20201208 15:23:10.889"></status>
</kw>
<msg timestamp="20201208 15:23:10.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:23:10.896" starttime="20201208 15:23:10.889"></status>
</kw>
<msg timestamp="20201208 15:23:10.896" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201208 15:23:10.896" starttime="20201208 15:23:10.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201208 15:23:10.897" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201208 15:23:10.897" starttime="20201208 15:23:10.897"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:23:10.902" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:10.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:23:10.923" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 15:23:10.923" starttime="20201208 15:23:10.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:23:10.924" level="INFO"></msg>
<status status="PASS" endtime="20201208 15:23:10.924" starttime="20201208 15:23:10.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:23:10.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:23:10.925" starttime="20201208 15:23:10.924"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.925" starttime="20201208 15:23:10.898"></status>
</kw>
<msg timestamp="20201208 15:23:10.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:23:10.925" starttime="20201208 15:23:10.898"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.925" starttime="20201208 15:23:10.898"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.925" starttime="20201208 15:23:10.897"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.925" starttime="20201208 15:23:10.888"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:10.925" starttime="20201208 15:23:10.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:23:10.930" level="INFO">Running command 'ozone sh bucket delete 76161-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:13.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:23:13.948" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:23:13.948" starttime="20201208 15:23:10.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:23:13.949" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201208 15:23:13.949" starttime="20201208 15:23:13.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:23:13.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:23:13.950" starttime="20201208 15:23:13.949"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:13.950" starttime="20201208 15:23:10.927"></status>
</kw>
<msg timestamp="20201208 15:23:13.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:23:13.950" starttime="20201208 15:23:10.926"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:13.951" starttime="20201208 15:23:10.926"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:23:13.955" level="INFO">Running command 'ozone sh bucket list 76161-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:17.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:23:17.356" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:23:17.356" starttime="20201208 15:23:13.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:23:17.357" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:22:24.275Z",
  "modificationTime" : "2020-12-08T15:22:24.275Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:20:58.920Z",
  "modificationTime" : "2020-12-08T15:20:58.920Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:20:38.189Z",
  "modificationTime" : "2020-12-08T15:20:55.410Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:22:17.467Z",
  "modificationTime" : "2020-12-08T15:22:17.467Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:23:00.511Z",
  "modificationTime" : "2020-12-08T15:23:00.511Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:22:53.729Z",
  "modificationTime" : "2020-12-08T15:22:53.729Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:22:46.614Z",
  "modificationTime" : "2020-12-08T15:22:46.614Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:22:50.371Z",
  "modificationTime" : "2020-12-08T15:22:50.371Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:20:31.354Z",
  "modificationTime" : "2020-12-08T15:20:52.130Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "76161-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T15:20:34.692Z",
  "modificationTime" : "2020-12-08T15:20:34.692Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "76161-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201208 15:23:17.357" starttime="20201208 15:23:17.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:23:17.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:23:17.358" starttime="20201208 15:23:17.358"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:17.358" starttime="20201208 15:23:13.952"></status>
</kw>
<msg timestamp="20201208 15:23:17.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:23:17.359" starttime="20201208 15:23:13.951"></status>
</kw>
<msg timestamp="20201208 15:23:17.359" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201208 15:23:17.359" starttime="20201208 15:23:13.951"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201208 15:23:17.360" starttime="20201208 15:23:17.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 15:23:17.364" level="INFO">Running command 'ozone sh key list 76161-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 15:23:21.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 15:23:21.369" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201208 15:23:21.369" starttime="20201208 15:23:17.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 15:23:21.370" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201208 15:23:21.370" starttime="20201208 15:23:21.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 15:23:21.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 15:23:21.371" starttime="20201208 15:23:21.370"></status>
</kw>
<status status="PASS" endtime="20201208 15:23:21.371" starttime="20201208 15:23:17.361"></status>
</kw>
<msg timestamp="20201208 15:23:21.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 15:23:21.371" starttime="20201208 15:23:17.360"></status>
</kw>
<msg timestamp="20201208 15:23:21.371" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201208 15:23:21.371" starttime="20201208 15:23:17.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201208 15:23:21.372" starttime="20201208 15:23:21.371"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 15:23:21.372" critical="yes" starttime="20201208 15:23:10.887"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201208 15:23:21.375" starttime="20201208 15:20:07.180"></status>
</suite>
<status status="PASS" elapsedtime="222821" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
