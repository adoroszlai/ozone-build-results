<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201208 14:56:31.043" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:30.575" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:32.776" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 14:43:32.776" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 14:43:32.776" starttime="20201208 14:43:30.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:32.777" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 14:43:32.777" starttime="20201208 14:43:32.777"></status>
</kw>
<msg timestamp="20201208 14:43:32.778" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 14:43:32.778" starttime="20201208 14:43:30.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:32.783" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:35.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:43:35.031" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:43:35.031" starttime="20201208 14:43:32.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:35.032" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:43:35.033" starttime="20201208 14:43:35.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:43:35.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:43:35.033" starttime="20201208 14:43:35.033"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:35.034" starttime="20201208 14:43:32.780"></status>
</kw>
<msg timestamp="20201208 14:43:35.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:43:35.034" starttime="20201208 14:43:32.779"></status>
</kw>
<msg timestamp="20201208 14:43:35.034" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201208 14:43:35.034" starttime="20201208 14:43:32.779"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201208 14:43:35.035" starttime="20201208 14:43:35.034"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:35.035" starttime="20201208 14:43:32.778"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:35.035" starttime="20201208 14:43:32.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:35.039" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:37.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:43:37.109" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:43:37.109" starttime="20201208 14:43:35.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:37.111" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:43:37.111" starttime="20201208 14:43:37.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:43:37.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:43:37.111" starttime="20201208 14:43:37.111"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:37.112" starttime="20201208 14:43:35.036"></status>
</kw>
<msg timestamp="20201208 14:43:37.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:43:37.112" starttime="20201208 14:43:35.036"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:37.112" starttime="20201208 14:43:35.036"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:37.112" starttime="20201208 14:43:35.035"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:37.112" starttime="20201208 14:43:35.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201208 14:43:37.113" starttime="20201208 14:43:37.112"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:37.116" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:39.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:43:39.377" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T14:43:36.985Z",
  "modificat...</msg>
<status status="PASS" endtime="20201208 14:43:39.377" starttime="20201208 14:43:37.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:39.378" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T14:43:36.985Z",
  "modificationTime" : "2020-12-08T14:43:36.985Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201208 14:43:39.378" starttime="20201208 14:43:39.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:43:39.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:43:39.379" starttime="20201208 14:43:39.378"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:39.379" starttime="20201208 14:43:37.114"></status>
</kw>
<msg timestamp="20201208 14:43:39.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:43:39.379" starttime="20201208 14:43:37.113"></status>
</kw>
<msg timestamp="20201208 14:43:39.379" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T14:43:36.985Z",
  "modificat...</msg>
<status status="PASS" endtime="20201208 14:43:39.379" starttime="20201208 14:43:37.113"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201208 14:43:39.380" starttime="20201208 14:43:39.380"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:43:39.384" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:43:39.384" starttime="20201208 14:43:39.383"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:43:39.384" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:43:39.384" starttime="20201208 14:43:39.384"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:39.384" starttime="20201208 14:43:39.383"></status>
</kw>
<msg timestamp="20201208 14:43:39.384" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:43:39.384" starttime="20201208 14:43:39.382"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:39.385" starttime="20201208 14:43:39.382"></status>
</kw>
<msg timestamp="20201208 14:43:39.385" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201208 14:43:39.385" starttime="20201208 14:43:39.381"></status>
</kw>
<msg timestamp="20201208 14:43:39.385" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201208 14:43:39.385" starttime="20201208 14:43:39.380"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:39.388" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:41.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:43:41.572" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:43:41.572" starttime="20201208 14:43:39.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:41.573" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:43:41.573" starttime="20201208 14:43:41.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:43:41.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:43:41.574" starttime="20201208 14:43:41.573"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:41.574" starttime="20201208 14:43:39.386"></status>
</kw>
<msg timestamp="20201208 14:43:41.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:43:41.574" starttime="20201208 14:43:39.386"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:41.575" starttime="20201208 14:43:39.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:41.579" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:46.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:43:46.680" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:43:46.680" starttime="20201208 14:43:41.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:46.681" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:43:46.681" starttime="20201208 14:43:46.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:43:46.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:43:46.682" starttime="20201208 14:43:46.681"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:46.682" starttime="20201208 14:43:41.576"></status>
</kw>
<msg timestamp="20201208 14:43:46.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:43:46.682" starttime="20201208 14:43:41.576"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:46.682" starttime="20201208 14:43:41.575"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:46.686" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:50.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:43:50.396" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:43:50.396" starttime="20201208 14:43:46.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:50.397" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:43:50.397" starttime="20201208 14:43:50.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:43:50.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:43:50.397" starttime="20201208 14:43:50.397"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:50.398" starttime="20201208 14:43:46.683"></status>
</kw>
<msg timestamp="20201208 14:43:50.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:43:50.398" starttime="20201208 14:43:46.683"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:50.398" starttime="20201208 14:43:46.683"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:50.402" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:54.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:43:54.152" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:43:54.153" starttime="20201208 14:43:50.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:54.154" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:43:54.154" starttime="20201208 14:43:54.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:43:54.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:43:54.154" starttime="20201208 14:43:54.154"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:54.155" starttime="20201208 14:43:50.399"></status>
</kw>
<msg timestamp="20201208 14:43:54.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:43:54.155" starttime="20201208 14:43:50.399"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:54.155" starttime="20201208 14:43:50.398"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 14:43:54.155" critical="yes" starttime="20201208 14:43:30.570"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:43:54.160" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:43:54.161" starttime="20201208 14:43:54.160"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:43:54.161" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:43:54.161" starttime="20201208 14:43:54.161"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:54.161" starttime="20201208 14:43:54.159"></status>
</kw>
<msg timestamp="20201208 14:43:54.161" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:43:54.162" starttime="20201208 14:43:54.159"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:54.162" starttime="20201208 14:43:54.158"></status>
</kw>
<msg timestamp="20201208 14:43:54.162" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 14:43:54.162" starttime="20201208 14:43:54.158"></status>
</kw>
<msg timestamp="20201208 14:43:54.162" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 14:43:54.162" starttime="20201208 14:43:54.157"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:54.166" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:56.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:43:56.364" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:43:56.364" starttime="20201208 14:43:54.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:56.365" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:43:56.365" starttime="20201208 14:43:56.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:43:56.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:43:56.366" starttime="20201208 14:43:56.365"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:56.366" starttime="20201208 14:43:54.163"></status>
</kw>
<msg timestamp="20201208 14:43:56.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:43:56.366" starttime="20201208 14:43:54.163"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:56.367" starttime="20201208 14:43:54.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:43:56.371" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:43:58.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:43:58.604" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:43:58.604" starttime="20201208 14:43:56.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:43:58.606" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:43:58.606" starttime="20201208 14:43:58.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:43:58.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:43:58.607" starttime="20201208 14:43:58.606"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:58.607" starttime="20201208 14:43:56.368"></status>
</kw>
<msg timestamp="20201208 14:43:58.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:43:58.607" starttime="20201208 14:43:56.367"></status>
</kw>
<status status="PASS" endtime="20201208 14:43:58.607" starttime="20201208 14:43:56.367"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 14:43:58.607" critical="yes" starttime="20201208 14:43:54.156"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201208 14:43:58.609" starttime="20201208 14:43:30.517"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:45:34.248" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:45:34.248" starttime="20201208 14:45:34.248"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:45:34.249" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:45:34.249" starttime="20201208 14:45:34.248"></status>
</kw>
<status status="PASS" endtime="20201208 14:45:34.249" starttime="20201208 14:45:34.247"></status>
</kw>
<msg timestamp="20201208 14:45:34.249" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:45:34.249" starttime="20201208 14:45:34.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:45:34.250" starttime="20201208 14:45:34.250"></status>
</kw>
<msg timestamp="20201208 14:45:34.250" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 14:45:34.250" starttime="20201208 14:45:34.249"></status>
</kw>
<status status="PASS" endtime="20201208 14:45:34.251" starttime="20201208 14:45:34.246"></status>
</kw>
<msg timestamp="20201208 14:45:34.251" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:45:34.251" starttime="20201208 14:45:34.246"></status>
</kw>
<msg timestamp="20201208 14:45:34.251" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:45:34.251" starttime="20201208 14:45:34.245"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:45:34.251" level="INFO">${random} = 52261</msg>
<status status="PASS" endtime="20201208 14:45:34.251" starttime="20201208 14:45:34.251"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:45:34.256" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-52261 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:45:37.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:45:37.499" level="INFO">${output} = 2020-12-08 14:45:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:45:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 ...</msg>
<status status="PASS" endtime="20201208 14:45:37.499" starttime="20201208 14:45:34.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:45:37.500" level="INFO">2020-12-08 14:45:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:45:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 14:45:36 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-08 14:45:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:45:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F1028BCCE1B3-&gt;799bb04e-2f6f-449d-b811-f70353765f2a
2020-12-08 14:45:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201208 14:45:37.501" starttime="20201208 14:45:37.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:45:37.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:45:37.502" starttime="20201208 14:45:37.501"></status>
</kw>
<status status="PASS" endtime="20201208 14:45:37.502" starttime="20201208 14:45:34.252"></status>
</kw>
<msg timestamp="20201208 14:45:37.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:45:37.502" starttime="20201208 14:45:34.252"></status>
</kw>
<msg timestamp="20201208 14:45:37.503" level="INFO">${result} = 2020-12-08 14:45:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:45:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 ...</msg>
<status status="PASS" endtime="20201208 14:45:37.503" starttime="20201208 14:45:34.252"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:45:37.508" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:45:39.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:45:39.151" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-08 14:44 ofs://om/volume1/bucket1/ozone-18653
-rw-...</msg>
<status status="PASS" endtime="20201208 14:45:39.151" starttime="20201208 14:45:37.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:45:39.153" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-08 14:44 ofs://om/volume1/bucket1/ozone-18653
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-08 14:45 ofs://om/volume1/bucket1/ozone-52261
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:43 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:45 ofs://om/volume1/bucket1/wordcount-91.txt</msg>
<status status="PASS" endtime="20201208 14:45:39.153" starttime="20201208 14:45:39.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:45:39.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:45:39.153" starttime="20201208 14:45:39.153"></status>
</kw>
<status status="PASS" endtime="20201208 14:45:39.154" starttime="20201208 14:45:37.505"></status>
</kw>
<msg timestamp="20201208 14:45:39.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:45:39.154" starttime="20201208 14:45:37.505"></status>
</kw>
<msg timestamp="20201208 14:45:39.154" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:43 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-08 14:44 ofs://om/volume1/bucket1/ozone-18653
-rw-...</msg>
<status status="PASS" endtime="20201208 14:45:39.154" starttime="20201208 14:45:37.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:45:39.155" starttime="20201208 14:45:39.154"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 14:45:39.155" critical="yes" starttime="20201208 14:45:34.244"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201208 14:45:39.156" starttime="20201208 14:45:34.195"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:44:03.570" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:44:03.570" starttime="20201208 14:44:03.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:44:03.571" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:44:03.571" starttime="20201208 14:44:03.570"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:03.571" starttime="20201208 14:44:03.569"></status>
</kw>
<msg timestamp="20201208 14:44:03.571" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:44:03.571" starttime="20201208 14:44:03.569"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:03.572" starttime="20201208 14:44:03.568"></status>
</kw>
<msg timestamp="20201208 14:44:03.572" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:44:03.572" starttime="20201208 14:44:03.568"></status>
</kw>
<msg timestamp="20201208 14:44:03.572" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:44:03.572" starttime="20201208 14:44:03.567"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:44:03.572" level="INFO">${random} = 18653</msg>
<status status="PASS" endtime="20201208 14:44:03.572" starttime="20201208 14:44:03.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:44:03.577" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-18653 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:44:06.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:44:06.993" level="INFO">${output} = 2020-12-08 14:44:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:44:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 ...</msg>
<status status="PASS" endtime="20201208 14:44:06.993" starttime="20201208 14:44:03.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:44:06.994" level="INFO">2020-12-08 14:44:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:44:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 14:44:05 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-08 14:44:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:44:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-83E860E00771-&gt;799bb04e-2f6f-449d-b811-f70353765f2a
2020-12-08 14:44:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201208 14:44:06.994" starttime="20201208 14:44:06.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:44:06.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:44:06.995" starttime="20201208 14:44:06.994"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:06.995" starttime="20201208 14:44:03.573"></status>
</kw>
<msg timestamp="20201208 14:44:06.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:44:06.995" starttime="20201208 14:44:03.573"></status>
</kw>
<msg timestamp="20201208 14:44:06.995" level="INFO">${result} = 2020-12-08 14:44:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:44:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 ...</msg>
<status status="PASS" endtime="20201208 14:44:06.995" starttime="20201208 14:44:03.573"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:44:07.000" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:44:08.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:44:08.712" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-08 14:44 o3fs://bucket1.volume1.om/ozone-18653
dr...</msg>
<status status="PASS" endtime="20201208 14:44:08.712" starttime="20201208 14:44:06.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:44:08.713" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-08 14:44 o3fs://bucket1.volume1.om/ozone-18653
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:43 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 14:44:08.713" starttime="20201208 14:44:08.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:44:08.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:44:08.714" starttime="20201208 14:44:08.713"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:08.714" starttime="20201208 14:44:06.997"></status>
</kw>
<msg timestamp="20201208 14:44:08.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:44:08.714" starttime="20201208 14:44:06.996"></status>
</kw>
<msg timestamp="20201208 14:44:08.715" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:43 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-08 14:44 o3fs://bucket1.volume1.om/ozone-18653
dr...</msg>
<status status="PASS" endtime="20201208 14:44:08.715" starttime="20201208 14:44:06.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:44:08.715" starttime="20201208 14:44:08.715"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 14:44:08.716" critical="yes" starttime="20201208 14:44:03.566"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201208 14:44:08.717" starttime="20201208 14:44:03.513"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:45:43.878" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:45:43.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:45:43.882" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:45:43.882" starttime="20201208 14:45:43.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:45:43.883" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:45:43.883" starttime="20201208 14:45:43.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:45:43.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:45:43.884" starttime="20201208 14:45:43.883"></status>
</kw>
<status status="PASS" endtime="20201208 14:45:43.884" starttime="20201208 14:45:43.872"></status>
</kw>
<msg timestamp="20201208 14:45:43.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:45:43.884" starttime="20201208 14:45:43.872"></status>
</kw>
<msg timestamp="20201208 14:45:43.884" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:45:43.884" starttime="20201208 14:45:43.871"></status>
</kw>
<msg timestamp="20201208 14:45:43.885" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:45:43.885" starttime="20201208 14:45:43.871"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:45:43.889" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:45:43.889" starttime="20201208 14:45:43.889"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:45:43.890" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:45:43.890" starttime="20201208 14:45:43.889"></status>
</kw>
<status status="PASS" endtime="20201208 14:45:43.890" starttime="20201208 14:45:43.887"></status>
</kw>
<msg timestamp="20201208 14:45:43.890" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:45:43.890" starttime="20201208 14:45:43.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:45:43.891" starttime="20201208 14:45:43.890"></status>
</kw>
<msg timestamp="20201208 14:45:43.891" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 14:45:43.891" starttime="20201208 14:45:43.890"></status>
</kw>
<status status="PASS" endtime="20201208 14:45:43.891" starttime="20201208 14:45:43.886"></status>
</kw>
<msg timestamp="20201208 14:45:43.891" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:45:43.891" starttime="20201208 14:45:43.885"></status>
</kw>
<msg timestamp="20201208 14:45:43.892" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:45:43.892" starttime="20201208 14:45:43.885"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:45:43.897" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:46:16.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:46:16.899" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:45:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:45:45 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201208 14:46:16.899" starttime="20201208 14:45:43.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:46:16.900" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:45:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:45:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 14:45:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-08 14:45:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:45:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-21C885679543-&gt;799bb04e-2f6f-449d-b811-f70353765f2a
2020-12-08 14:45:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-08 14:45:47 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-08 14:45:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 14:45:47 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-08 14:45:47 INFO  JobSubmitter:198 - number of splits:3
2020-12-08 14:45:47 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607438575574_0003
2020-12-08 14:45:47 INFO  YarnClientImpl:273 - Submitted application application_1607438575574_0003
2020-12-08 14:45:47 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607438575574_0003/
2020-12-08 14:45:47 INFO  Job:1339 - Running job: job_1607438575574_0003
2020-12-08 14:45:55 INFO  Job:1360 - Job job_1607438575574_0003 running in uber mode : false
2020-12-08 14:45:55 INFO  Job:1367 -  map 0% reduce 0%
2020-12-08 14:46:02 INFO  Job:1367 -  map 33% reduce 0%
2020-12-08 14:46:07 INFO  Job:1367 -  map 67% reduce 0%
2020-12-08 14:46:11 INFO  Job:1367 -  map 100% reduce 0%
2020-12-08 14:46:16 INFO  Job:1367 -  map 100% reduce 100%
2020-12-08 14:46:16 INFO  Job:1378 - Job job_1607438575574_0003 completed successfully
2020-12-08 14:46:16 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610673
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=750
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38156
		Total time spent by all reduces in occupied slots (ms)=13460
		Total time spent by all map tasks (ms)=9539
		Total time spent by all reduce tasks (ms)=3365
		Total vcore-milliseconds taken by all map tasks=9539
		Total vcore-milliseconds taken by all reduce tasks=3365
		Total megabyte-milliseconds taken by all map tasks=39071744
		Total megabyte-milliseconds taken by all reduce tasks=13783040
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=396
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=599
		CPU time spent (ms)=6240
		Physical memory (bytes) snapshot=1127133184
		Virtual memory (bytes) snapshot=15768285184
		Total committed heap usage (bytes)=1056964608
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.329 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201208 14:46:16.901" starttime="20201208 14:46:16.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:46:16.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:46:16.901" starttime="20201208 14:46:16.901"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.901" starttime="20201208 14:45:43.893"></status>
</kw>
<msg timestamp="20201208 14:46:16.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:46:16.902" starttime="20201208 14:45:43.892"></status>
</kw>
<msg timestamp="20201208 14:46:16.902" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:45:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:45:45 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201208 14:46:16.902" starttime="20201208 14:45:43.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:46:16.903" starttime="20201208 14:46:16.902"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:46:16.903" critical="yes" starttime="20201208 14:45:43.870"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:46:16.909" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:46:16.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:46:16.914" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:46:16.914" starttime="20201208 14:46:16.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:46:16.915" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:46:16.915" starttime="20201208 14:46:16.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:46:16.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:46:16.916" starttime="20201208 14:46:16.916"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.916" starttime="20201208 14:46:16.906"></status>
</kw>
<msg timestamp="20201208 14:46:16.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:46:16.917" starttime="20201208 14:46:16.906"></status>
</kw>
<msg timestamp="20201208 14:46:16.917" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:46:16.917" starttime="20201208 14:46:16.905"></status>
</kw>
<msg timestamp="20201208 14:46:16.917" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:46:16.917" starttime="20201208 14:46:16.905"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:46:16.918" level="INFO">${random} = 15</msg>
<status status="PASS" endtime="20201208 14:46:16.918" starttime="20201208 14:46:16.917"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:46:16.922" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:46:16.922" starttime="20201208 14:46:16.921"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:46:16.922" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:46:16.922" starttime="20201208 14:46:16.922"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.922" starttime="20201208 14:46:16.921"></status>
</kw>
<msg timestamp="20201208 14:46:16.923" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:46:16.923" starttime="20201208 14:46:16.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:46:16.923" starttime="20201208 14:46:16.923"></status>
</kw>
<msg timestamp="20201208 14:46:16.924" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 14:46:16.924" starttime="20201208 14:46:16.923"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.924" starttime="20201208 14:46:16.919"></status>
</kw>
<msg timestamp="20201208 14:46:16.924" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:46:16.924" starttime="20201208 14:46:16.919"></status>
</kw>
<msg timestamp="20201208 14:46:16.924" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:46:16.924" starttime="20201208 14:46:16.918"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:46:16.927" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:46:16.928" starttime="20201208 14:46:16.927"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:46:16.928" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:46:16.928" starttime="20201208 14:46:16.928"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.928" starttime="20201208 14:46:16.927"></status>
</kw>
<msg timestamp="20201208 14:46:16.928" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:46:16.928" starttime="20201208 14:46:16.926"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:46:16.930" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201208 14:46:16.930" starttime="20201208 14:46:16.930"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:46:16.931" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201208 14:46:16.931" starttime="20201208 14:46:16.930"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.931" starttime="20201208 14:46:16.929"></status>
</kw>
<msg timestamp="20201208 14:46:16.931" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201208 14:46:16.931" starttime="20201208 14:46:16.929"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.931" starttime="20201208 14:46:16.926"></status>
</kw>
<msg timestamp="20201208 14:46:16.931" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201208 14:46:16.931" starttime="20201208 14:46:16.925"></status>
</kw>
<msg timestamp="20201208 14:46:16.932" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201208 14:46:16.932" starttime="20201208 14:46:16.924"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:46:16.935" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:46:16.935" starttime="20201208 14:46:16.934"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:46:16.935" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:46:16.935" starttime="20201208 14:46:16.935"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.936" starttime="20201208 14:46:16.934"></status>
</kw>
<msg timestamp="20201208 14:46:16.936" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:46:16.936" starttime="20201208 14:46:16.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:46:16.937" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201208 14:46:16.937" starttime="20201208 14:46:16.937"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:46:16.938" level="INFO">${result} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201208 14:46:16.938" starttime="20201208 14:46:16.937"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.938" starttime="20201208 14:46:16.936"></status>
</kw>
<msg timestamp="20201208 14:46:16.938" level="INFO">${path_with_leading} = /wordcount-15.txt</msg>
<status status="PASS" endtime="20201208 14:46:16.938" starttime="20201208 14:46:16.936"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:16.938" starttime="20201208 14:46:16.933"></status>
</kw>
<msg timestamp="20201208 14:46:16.939" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201208 14:46:16.939" starttime="20201208 14:46:16.932"></status>
</kw>
<msg timestamp="20201208 14:46:16.939" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-15.txt</msg>
<status status="PASS" endtime="20201208 14:46:16.939" starttime="20201208 14:46:16.932"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:46:16.944" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-15.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:46:53.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:46:53.319" level="INFO">${output} = 2020-12-08 14:46:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-08 14:46:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201208 14:46:53.319" starttime="20201208 14:46:16.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:46:53.321" level="INFO">2020-12-08 14:46:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-08 14:46:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 14:46:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:46:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 14:46:19 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-08 14:46:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:46:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-09B88E6F1F20-&gt;799bb04e-2f6f-449d-b811-f70353765f2a
2020-12-08 14:46:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 14:46:20 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-08 14:46:20 INFO  JobSubmitter:198 - number of splits:3
2020-12-08 14:46:20 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607438575574_0004
2020-12-08 14:46:20 INFO  YarnClientImpl:273 - Submitted application application_1607438575574_0004
2020-12-08 14:46:20 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607438575574_0004/
2020-12-08 14:46:20 INFO  Job:1339 - Running job: job_1607438575574_0004
2020-12-08 14:46:29 INFO  Job:1360 - Job job_1607438575574_0004 running in uber mode : false
2020-12-08 14:46:29 INFO  Job:1367 -  map 0% reduce 0%
2020-12-08 14:46:35 INFO  Job:1367 -  map 33% reduce 0%
2020-12-08 14:46:40 INFO  Job:1367 -  map 67% reduce 0%
2020-12-08 14:46:45 INFO  Job:1367 -  map 100% reduce 0%
2020-12-08 14:46:49 INFO  Job:1367 -  map 100% reduce 100%
2020-12-08 14:46:52 INFO  Job:1378 - Job job_1607438575574_0004 completed successfully
2020-12-08 14:46:52 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673451
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38160
		Total time spent by all reduces in occupied slots (ms)=14100
		Total time spent by all map tasks (ms)=9540
		Total time spent by all reduce tasks (ms)=3525
		Total vcore-milliseconds taken by all map tasks=9540
		Total vcore-milliseconds taken by all reduce tasks=3525
		Total megabyte-milliseconds taken by all map tasks=39075840
		Total megabyte-milliseconds taken by all reduce tasks=14438400
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=612
		CPU time spent (ms)=6830
		Physical memory (bytes) snapshot=1128853504
		Virtual memory (bytes) snapshot=15770832896
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201208 14:46:53.321" starttime="20201208 14:46:53.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:46:53.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:46:53.322" starttime="20201208 14:46:53.321"></status>
</kw>
<status status="PASS" endtime="20201208 14:46:53.322" starttime="20201208 14:46:16.940"></status>
</kw>
<msg timestamp="20201208 14:46:53.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:46:53.322" starttime="20201208 14:46:16.940"></status>
</kw>
<msg timestamp="20201208 14:46:53.323" level="INFO">${output} = 2020-12-08 14:46:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-08 14:46:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201208 14:46:53.323" starttime="20201208 14:46:16.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201208 14:46:53.323" starttime="20201208 14:46:53.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:46:53.324" starttime="20201208 14:46:53.323"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:46:53.324" critical="yes" starttime="20201208 14:46:16.904"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201208 14:46:53.325" starttime="20201208 14:45:43.818"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:44:13.369" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:44:13.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:44:13.377" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:44:13.378" starttime="20201208 14:44:13.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:44:13.379" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:44:13.379" starttime="20201208 14:44:13.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:44:13.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:44:13.379" starttime="20201208 14:44:13.379"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:13.380" starttime="20201208 14:44:13.354"></status>
</kw>
<msg timestamp="20201208 14:44:13.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:44:13.380" starttime="20201208 14:44:13.354"></status>
</kw>
<msg timestamp="20201208 14:44:13.380" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:44:13.380" starttime="20201208 14:44:13.354"></status>
</kw>
<msg timestamp="20201208 14:44:13.380" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:44:13.380" starttime="20201208 14:44:13.353"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:44:13.385" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:44:13.385" starttime="20201208 14:44:13.384"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:44:13.386" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:44:13.386" starttime="20201208 14:44:13.385"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:13.386" starttime="20201208 14:44:13.383"></status>
</kw>
<msg timestamp="20201208 14:44:13.386" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:44:13.386" starttime="20201208 14:44:13.383"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:13.386" starttime="20201208 14:44:13.382"></status>
</kw>
<msg timestamp="20201208 14:44:13.386" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:44:13.386" starttime="20201208 14:44:13.381"></status>
</kw>
<msg timestamp="20201208 14:44:13.387" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:44:13.387" starttime="20201208 14:44:13.381"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:44:13.390" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:44:54.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:44:54.756" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:44:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:44:15 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201208 14:44:54.756" starttime="20201208 14:44:13.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:44:54.757" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:44:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:44:15 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 14:44:15 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-08 14:44:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:44:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3434CEC329E1-&gt;799bb04e-2f6f-449d-b811-f70353765f2a
2020-12-08 14:44:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-08 14:44:16 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-08 14:44:19 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-08 14:44:19 INFO  JobSubmitter:198 - number of splits:3
2020-12-08 14:44:20 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607438575574_0001
2020-12-08 14:44:20 INFO  YarnClientImpl:273 - Submitted application application_1607438575574_0001
2020-12-08 14:44:20 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607438575574_0001/
2020-12-08 14:44:20 INFO  Job:1339 - Running job: job_1607438575574_0001
2020-12-08 14:44:29 INFO  Job:1360 - Job job_1607438575574_0001 running in uber mode : false
2020-12-08 14:44:29 INFO  Job:1367 -  map 0% reduce 0%
2020-12-08 14:44:35 INFO  Job:1367 -  map 33% reduce 0%
2020-12-08 14:44:41 INFO  Job:1367 -  map 67% reduce 0%
2020-12-08 14:44:46 INFO  Job:1367 -  map 100% reduce 0%
2020-12-08 14:44:51 INFO  Job:1367 -  map 100% reduce 100%
2020-12-08 14:44:54 INFO  Job:1378 - Job job_1607438575574_0001 completed successfully
2020-12-08 14:44:54 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610909
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39208
		Total time spent by all reduces in occupied slots (ms)=15580
		Total time spent by all map tasks (ms)=9802
		Total time spent by all reduce tasks (ms)=3895
		Total vcore-milliseconds taken by all map tasks=9802
		Total vcore-milliseconds taken by all reduce tasks=3895
		Total megabyte-milliseconds taken by all map tasks=40148992
		Total megabyte-milliseconds taken by all reduce tasks=15953920
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=668
		CPU time spent (ms)=6620
		Physical memory (bytes) snapshot=1133940736
		Virtual memory (bytes) snapshot=15772602368
		Total committed heap usage (bytes)=1049100288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.693 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201208 14:44:54.758" starttime="20201208 14:44:54.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:44:54.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:44:54.758" starttime="20201208 14:44:54.758"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:54.759" starttime="20201208 14:44:13.388"></status>
</kw>
<msg timestamp="20201208 14:44:54.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:44:54.759" starttime="20201208 14:44:13.387"></status>
</kw>
<msg timestamp="20201208 14:44:54.759" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:44:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:44:15 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201208 14:44:54.759" starttime="20201208 14:44:13.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:44:54.760" starttime="20201208 14:44:54.760"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:44:54.760" critical="yes" starttime="20201208 14:44:13.352"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:44:54.766" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:44:54.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:44:54.772" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:44:54.772" starttime="20201208 14:44:54.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:44:54.773" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:44:54.773" starttime="20201208 14:44:54.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:44:54.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:44:54.774" starttime="20201208 14:44:54.773"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:54.774" starttime="20201208 14:44:54.763"></status>
</kw>
<msg timestamp="20201208 14:44:54.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:44:54.774" starttime="20201208 14:44:54.763"></status>
</kw>
<msg timestamp="20201208 14:44:54.775" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:44:54.775" starttime="20201208 14:44:54.762"></status>
</kw>
<msg timestamp="20201208 14:44:54.775" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201208 14:44:54.775" starttime="20201208 14:44:54.762"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:44:54.776" level="INFO">${random} = 91</msg>
<status status="PASS" endtime="20201208 14:44:54.776" starttime="20201208 14:44:54.775"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:44:54.779" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:44:54.779" starttime="20201208 14:44:54.779"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:44:54.780" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:44:54.780" starttime="20201208 14:44:54.780"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:54.780" starttime="20201208 14:44:54.778"></status>
</kw>
<msg timestamp="20201208 14:44:54.780" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:44:54.780" starttime="20201208 14:44:54.778"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:54.781" starttime="20201208 14:44:54.777"></status>
</kw>
<msg timestamp="20201208 14:44:54.781" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:44:54.781" starttime="20201208 14:44:54.777"></status>
</kw>
<msg timestamp="20201208 14:44:54.781" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:44:54.781" starttime="20201208 14:44:54.776"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:44:54.784" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:44:54.784" starttime="20201208 14:44:54.784"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:44:54.785" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:44:54.785" starttime="20201208 14:44:54.785"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:54.785" starttime="20201208 14:44:54.784"></status>
</kw>
<msg timestamp="20201208 14:44:54.785" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:44:54.785" starttime="20201208 14:44:54.783"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:54.786" starttime="20201208 14:44:54.782"></status>
</kw>
<msg timestamp="20201208 14:44:54.786" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201208 14:44:54.786" starttime="20201208 14:44:54.782"></status>
</kw>
<msg timestamp="20201208 14:44:54.786" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201208 14:44:54.786" starttime="20201208 14:44:54.781"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:44:54.789" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:44:54.789" starttime="20201208 14:44:54.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:44:54.790" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:44:54.790" starttime="20201208 14:44:54.789"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:54.790" starttime="20201208 14:44:54.788"></status>
</kw>
<msg timestamp="20201208 14:44:54.790" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:44:54.790" starttime="20201208 14:44:54.788"></status>
</kw>
<status status="PASS" endtime="20201208 14:44:54.790" starttime="20201208 14:44:54.787"></status>
</kw>
<msg timestamp="20201208 14:44:54.790" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-91.txt</msg>
<status status="PASS" endtime="20201208 14:44:54.790" starttime="20201208 14:44:54.787"></status>
</kw>
<msg timestamp="20201208 14:44:54.791" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-91.txt</msg>
<status status="PASS" endtime="20201208 14:44:54.791" starttime="20201208 14:44:54.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:44:54.794" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-91.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:45:29.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:45:29.542" level="INFO">${output} = 2020-12-08 14:44:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-08 14:44:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201208 14:45:29.542" starttime="20201208 14:44:54.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:45:29.543" level="INFO">2020-12-08 14:44:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-08 14:44:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 14:44:57 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:44:57 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-08 14:44:57 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-08 14:44:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:44:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B589D7E28C14-&gt;799bb04e-2f6f-449d-b811-f70353765f2a
2020-12-08 14:44:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 14:44:58 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-08 14:44:58 INFO  JobSubmitter:198 - number of splits:3
2020-12-08 14:44:58 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607438575574_0002
2020-12-08 14:44:58 INFO  YarnClientImpl:273 - Submitted application application_1607438575574_0002
2020-12-08 14:44:58 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607438575574_0002/
2020-12-08 14:44:58 INFO  Job:1339 - Running job: job_1607438575574_0002
2020-12-08 14:45:06 INFO  Job:1360 - Job job_1607438575574_0002 running in uber mode : false
2020-12-08 14:45:06 INFO  Job:1367 -  map 0% reduce 0%
2020-12-08 14:45:13 INFO  Job:1367 -  map 33% reduce 0%
2020-12-08 14:45:18 INFO  Job:1367 -  map 67% reduce 0%
2020-12-08 14:45:23 INFO  Job:1367 -  map 100% reduce 0%
2020-12-08 14:45:28 INFO  Job:1367 -  map 100% reduce 100%
2020-12-08 14:45:29 INFO  Job:1378 - Job job_1607438575574_0002 completed successfully
2020-12-08 14:45:29 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673535
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39976
		Total time spent by all reduces in occupied slots (ms)=15324
		Total time spent by all map tasks (ms)=9994
		Total time spent by all reduce tasks (ms)=3831
		Total vcore-milliseconds taken by all map tasks=9994
		Total vcore-milliseconds taken by all reduce tasks=3831
		Total megabyte-milliseconds taken by all map tasks=40935424
		Total megabyte-milliseconds taken by all reduce tasks=15691776
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=7070
		Physical memory (bytes) snapshot=1170927616
		Virtual memory (bytes) snapshot=15791190016
		Total committed heap usage (bytes)=1043333120
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201208 14:45:29.544" starttime="20201208 14:45:29.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:45:29.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:45:29.544" starttime="20201208 14:45:29.544"></status>
</kw>
<status status="PASS" endtime="20201208 14:45:29.545" starttime="20201208 14:44:54.792"></status>
</kw>
<msg timestamp="20201208 14:45:29.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:45:29.545" starttime="20201208 14:44:54.791"></status>
</kw>
<msg timestamp="20201208 14:45:29.545" level="INFO">${output} = 2020-12-08 14:44:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-08 14:44:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201208 14:45:29.545" starttime="20201208 14:44:54.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201208 14:45:29.546" starttime="20201208 14:45:29.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:45:29.546" starttime="20201208 14:45:29.546"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:45:29.546" critical="yes" starttime="20201208 14:44:54.761"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201208 14:45:29.548" starttime="20201208 14:44:13.301"></status>
</suite>
<status status="PASS" elapsedtime="184011" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:00.202" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:02.474" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 14:48:02.474" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 14:48:02.475" starttime="20201208 14:48:00.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:02.476" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 14:48:02.476" starttime="20201208 14:48:02.475"></status>
</kw>
<msg timestamp="20201208 14:48:02.476" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 14:48:02.476" starttime="20201208 14:48:00.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:02.482" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:04.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:04.580" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:48:04.580" starttime="20201208 14:48:02.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:04.581" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:48:04.581" starttime="20201208 14:48:04.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:04.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:04.582" starttime="20201208 14:48:04.581"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:04.582" starttime="20201208 14:48:02.478"></status>
</kw>
<msg timestamp="20201208 14:48:04.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:04.583" starttime="20201208 14:48:02.478"></status>
</kw>
<msg timestamp="20201208 14:48:04.583" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201208 14:48:04.583" starttime="20201208 14:48:02.477"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201208 14:48:04.583" starttime="20201208 14:48:04.583"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:04.584" starttime="20201208 14:48:02.477"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:04.584" starttime="20201208 14:48:02.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:04.590" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:06.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:06.884" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:48:06.884" starttime="20201208 14:48:04.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:06.885" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:48:06.886" starttime="20201208 14:48:06.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:06.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:06.886" starttime="20201208 14:48:06.886"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:06.887" starttime="20201208 14:48:04.585"></status>
</kw>
<msg timestamp="20201208 14:48:06.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:06.887" starttime="20201208 14:48:04.585"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:06.887" starttime="20201208 14:48:04.585"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:06.887" starttime="20201208 14:48:04.584"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:06.887" starttime="20201208 14:48:04.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201208 14:48:06.888" starttime="20201208 14:48:06.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:06.894" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:09.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:09.113" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T14:48:06.744Z",
  "modificat...</msg>
<status status="PASS" endtime="20201208 14:48:09.113" starttime="20201208 14:48:06.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:09.115" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T14:48:06.744Z",
  "modificationTime" : "2020-12-08T14:48:06.744Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201208 14:48:09.115" starttime="20201208 14:48:09.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:09.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:09.115" starttime="20201208 14:48:09.115"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:09.116" starttime="20201208 14:48:06.889"></status>
</kw>
<msg timestamp="20201208 14:48:09.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:09.116" starttime="20201208 14:48:06.888"></status>
</kw>
<msg timestamp="20201208 14:48:09.116" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T14:48:06.744Z",
  "modificat...</msg>
<status status="PASS" endtime="20201208 14:48:09.116" starttime="20201208 14:48:06.888"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201208 14:48:09.117" starttime="20201208 14:48:09.116"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:48:09.121" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:48:09.121" starttime="20201208 14:48:09.120"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:48:09.121" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:48:09.121" starttime="20201208 14:48:09.121"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:09.121" starttime="20201208 14:48:09.120"></status>
</kw>
<msg timestamp="20201208 14:48:09.121" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:48:09.121" starttime="20201208 14:48:09.119"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:09.122" starttime="20201208 14:48:09.118"></status>
</kw>
<msg timestamp="20201208 14:48:09.122" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201208 14:48:09.122" starttime="20201208 14:48:09.118"></status>
</kw>
<msg timestamp="20201208 14:48:09.122" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201208 14:48:09.122" starttime="20201208 14:48:09.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:09.125" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:11.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:11.203" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:48:11.203" starttime="20201208 14:48:09.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:11.204" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:48:11.205" starttime="20201208 14:48:11.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:11.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:11.205" starttime="20201208 14:48:11.205"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:11.205" starttime="20201208 14:48:09.123"></status>
</kw>
<msg timestamp="20201208 14:48:11.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:11.206" starttime="20201208 14:48:09.123"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:11.206" starttime="20201208 14:48:09.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:11.210" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:16.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:16.255" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:48:16.255" starttime="20201208 14:48:11.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:16.256" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:48:16.257" starttime="20201208 14:48:16.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:16.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:16.258" starttime="20201208 14:48:16.257"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:16.259" starttime="20201208 14:48:11.207"></status>
</kw>
<msg timestamp="20201208 14:48:16.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:16.259" starttime="20201208 14:48:11.207"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:16.259" starttime="20201208 14:48:11.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:16.264" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:20.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:20.197" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:48:20.197" starttime="20201208 14:48:16.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:20.198" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:48:20.198" starttime="20201208 14:48:20.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:20.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:20.199" starttime="20201208 14:48:20.199"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:20.199" starttime="20201208 14:48:16.261"></status>
</kw>
<msg timestamp="20201208 14:48:20.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:20.200" starttime="20201208 14:48:16.260"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:20.200" starttime="20201208 14:48:16.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:20.205" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:24.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:24.158" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:48:24.158" starttime="20201208 14:48:20.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:24.159" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:48:24.159" starttime="20201208 14:48:24.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:24.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:24.160" starttime="20201208 14:48:24.159"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:24.160" starttime="20201208 14:48:20.201"></status>
</kw>
<msg timestamp="20201208 14:48:24.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:24.160" starttime="20201208 14:48:20.201"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:24.160" starttime="20201208 14:48:20.200"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 14:48:24.161" critical="yes" starttime="20201208 14:48:00.197"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:48:24.166" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:48:24.166" starttime="20201208 14:48:24.165"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:48:24.167" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:48:24.167" starttime="20201208 14:48:24.166"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:24.167" starttime="20201208 14:48:24.165"></status>
</kw>
<msg timestamp="20201208 14:48:24.167" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:48:24.167" starttime="20201208 14:48:24.164"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:24.167" starttime="20201208 14:48:24.164"></status>
</kw>
<msg timestamp="20201208 14:48:24.167" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 14:48:24.168" starttime="20201208 14:48:24.163"></status>
</kw>
<msg timestamp="20201208 14:48:24.168" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 14:48:24.168" starttime="20201208 14:48:24.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:24.173" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:26.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:26.268" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:48:26.268" starttime="20201208 14:48:24.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:26.269" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:48:26.269" starttime="20201208 14:48:26.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:26.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:26.270" starttime="20201208 14:48:26.269"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:26.270" starttime="20201208 14:48:24.169"></status>
</kw>
<msg timestamp="20201208 14:48:26.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:26.270" starttime="20201208 14:48:24.169"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:26.271" starttime="20201208 14:48:24.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:26.275" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:28.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:28.388" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:48:28.388" starttime="20201208 14:48:26.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:28.389" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:48:28.389" starttime="20201208 14:48:28.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:28.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:28.390" starttime="20201208 14:48:28.389"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:28.390" starttime="20201208 14:48:26.272"></status>
</kw>
<msg timestamp="20201208 14:48:28.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:28.390" starttime="20201208 14:48:26.271"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:28.391" starttime="20201208 14:48:26.271"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 14:48:28.391" critical="yes" starttime="20201208 14:48:24.161"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201208 14:48:28.393" starttime="20201208 14:48:00.143"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:50:08.946" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:50:08.946" starttime="20201208 14:50:08.945"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:50:08.946" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:50:08.946" starttime="20201208 14:50:08.946"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:08.946" starttime="20201208 14:50:08.945"></status>
</kw>
<msg timestamp="20201208 14:50:08.947" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:50:08.947" starttime="20201208 14:50:08.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:50:08.948" starttime="20201208 14:50:08.947"></status>
</kw>
<msg timestamp="20201208 14:50:08.948" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 14:50:08.948" starttime="20201208 14:50:08.947"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:08.948" starttime="20201208 14:50:08.943"></status>
</kw>
<msg timestamp="20201208 14:50:08.948" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:50:08.948" starttime="20201208 14:50:08.943"></status>
</kw>
<msg timestamp="20201208 14:50:08.948" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:50:08.948" starttime="20201208 14:50:08.942"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:50:08.949" level="INFO">${random} = 01629</msg>
<status status="PASS" endtime="20201208 14:50:08.949" starttime="20201208 14:50:08.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:50:08.954" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-01629 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:50:12.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:50:12.504" level="INFO">${output} = 2020-12-08 14:50:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:50:12.504" starttime="20201208 14:50:08.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:50:12.506" level="INFO">2020-12-08 14:50:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:10 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-08 14:50:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:50:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:50:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:50:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:50:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-76FEF062D599-&gt;c8101140-5ddd-4020-8449-feb06a41e292
2020-12-08 14:50:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 14:50:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201208 14:50:12.506" starttime="20201208 14:50:12.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:50:12.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:50:12.507" starttime="20201208 14:50:12.506"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:12.508" starttime="20201208 14:50:08.950"></status>
</kw>
<msg timestamp="20201208 14:50:12.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:50:12.508" starttime="20201208 14:50:08.949"></status>
</kw>
<msg timestamp="20201208 14:50:12.509" level="INFO">${result} = 2020-12-08 14:50:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:10 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:50:12.509" starttime="20201208 14:50:08.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:50:12.516" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:50:14.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:50:14.304" level="INFO">${output} = 2020-12-08 14:50:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:14 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:50:14.304" starttime="20201208 14:50:12.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:50:14.305" level="INFO">2020-12-08 14:50:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:14 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:48 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-08 14:50 ofs://om/volume1/bucket1/ozone-01629
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-08 14:48 ofs://om/volume1/bucket1/ozone-41627
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:48 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:49 ofs://om/volume1/bucket1/wordcount-38.txt
2020-12-08 14:50:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201208 14:50:14.305" starttime="20201208 14:50:14.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:50:14.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:50:14.306" starttime="20201208 14:50:14.305"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:14.306" starttime="20201208 14:50:12.512"></status>
</kw>
<msg timestamp="20201208 14:50:14.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:50:14.306" starttime="20201208 14:50:12.512"></status>
</kw>
<msg timestamp="20201208 14:50:14.306" level="INFO">${result} = 2020-12-08 14:50:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:14 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:50:14.306" starttime="20201208 14:50:12.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:50:14.307" starttime="20201208 14:50:14.306"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 14:50:14.307" critical="yes" starttime="20201208 14:50:08.941"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201208 14:50:14.308" starttime="20201208 14:50:08.889"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:48:33.064" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:48:33.064" starttime="20201208 14:48:33.064"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:48:33.065" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:48:33.065" starttime="20201208 14:48:33.065"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:33.065" starttime="20201208 14:48:33.063"></status>
</kw>
<msg timestamp="20201208 14:48:33.065" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:48:33.065" starttime="20201208 14:48:33.063"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:33.066" starttime="20201208 14:48:33.062"></status>
</kw>
<msg timestamp="20201208 14:48:33.066" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:48:33.066" starttime="20201208 14:48:33.062"></status>
</kw>
<msg timestamp="20201208 14:48:33.066" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:48:33.066" starttime="20201208 14:48:33.061"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:48:33.067" level="INFO">${random} = 41627</msg>
<status status="PASS" endtime="20201208 14:48:33.067" starttime="20201208 14:48:33.066"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:33.072" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-41627 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:36.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:36.516" level="INFO">${output} = 2020-12-08 14:48:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:48:36.516" starttime="20201208 14:48:33.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:36.517" level="INFO">2020-12-08 14:48:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:35 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-08 14:48:35 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:48:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:48:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:48:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:48:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9873B6E086CD-&gt;c8101140-5ddd-4020-8449-feb06a41e292
2020-12-08 14:48:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 14:48:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201208 14:48:36.517" starttime="20201208 14:48:36.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:36.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:36.518" starttime="20201208 14:48:36.518"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:36.519" starttime="20201208 14:48:33.067"></status>
</kw>
<msg timestamp="20201208 14:48:36.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:36.519" starttime="20201208 14:48:33.067"></status>
</kw>
<msg timestamp="20201208 14:48:36.519" level="INFO">${result} = 2020-12-08 14:48:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:34 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:48:36.519" starttime="20201208 14:48:33.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:36.524" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:38.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:38.148" level="INFO">${output} = 2020-12-08 14:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:48:38.148" starttime="20201208 14:48:36.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:38.149" level="INFO">2020-12-08 14:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:38 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:48 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-08 14:48 o3fs://bucket1.volume1.om/ozone-41627
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:48 o3fs://bucket1.volume1.om/user
2020-12-08 14:48:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201208 14:48:38.150" starttime="20201208 14:48:38.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:38.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:38.150" starttime="20201208 14:48:38.150"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:38.151" starttime="20201208 14:48:36.521"></status>
</kw>
<msg timestamp="20201208 14:48:38.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:38.151" starttime="20201208 14:48:36.520"></status>
</kw>
<msg timestamp="20201208 14:48:38.151" level="INFO">${result} = 2020-12-08 14:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:48:38.151" starttime="20201208 14:48:36.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:48:38.152" starttime="20201208 14:48:38.151"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 14:48:38.152" critical="yes" starttime="20201208 14:48:33.060"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201208 14:48:38.153" starttime="20201208 14:48:33.009"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:50:19.012" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:50:19.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:50:19.018" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:50:19.018" starttime="20201208 14:50:19.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:50:19.019" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:50:19.019" starttime="20201208 14:50:19.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:50:19.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:50:19.020" starttime="20201208 14:50:19.019"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:19.020" starttime="20201208 14:50:19.007"></status>
</kw>
<msg timestamp="20201208 14:50:19.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:50:19.020" starttime="20201208 14:50:19.007"></status>
</kw>
<msg timestamp="20201208 14:50:19.020" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:50:19.021" starttime="20201208 14:50:19.006"></status>
</kw>
<msg timestamp="20201208 14:50:19.021" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:50:19.021" starttime="20201208 14:50:19.006"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:50:19.025" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:50:19.025" starttime="20201208 14:50:19.025"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:50:19.026" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:50:19.026" starttime="20201208 14:50:19.026"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:19.026" starttime="20201208 14:50:19.023"></status>
</kw>
<msg timestamp="20201208 14:50:19.026" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:50:19.026" starttime="20201208 14:50:19.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:50:19.027" starttime="20201208 14:50:19.027"></status>
</kw>
<msg timestamp="20201208 14:50:19.027" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 14:50:19.027" starttime="20201208 14:50:19.027"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:19.028" starttime="20201208 14:50:19.022"></status>
</kw>
<msg timestamp="20201208 14:50:19.028" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:50:19.028" starttime="20201208 14:50:19.022"></status>
</kw>
<msg timestamp="20201208 14:50:19.028" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:50:19.028" starttime="20201208 14:50:19.021"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:50:19.033" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:50:56.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:50:56.872" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:50:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50...</msg>
<status status="PASS" endtime="20201208 14:50:56.872" starttime="20201208 14:50:19.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:50:56.873" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:50:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-08 14:50:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:50:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:50:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:50:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:50:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C60F4A5453F7-&gt;c8101140-5ddd-4020-8449-feb06a41e292
2020-12-08 14:50:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-08 14:50:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-12-08 14:50:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 14:50:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 14:50:25 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 14:50:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607438857162_0003
2020-12-08 14:50:25 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-08 14:50:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:25 INFO  Configuration:2752 - resource-types.xml not found
2020-12-08 14:50:25 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-08 14:50:25 INFO  YarnClientImpl:324 - Submitted application application_1607438857162_0003
2020-12-08 14:50:25 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607438857162_0003/
2020-12-08 14:50:25 INFO  Job:1619 - Running job: job_1607438857162_0003
2020-12-08 14:50:32 INFO  Job:1640 - Job job_1607438857162_0003 running in uber mode : false
2020-12-08 14:50:32 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 14:50:40 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 14:50:46 INFO  Job:1647 -  map 67% reduce 0%
2020-12-08 14:50:51 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 14:50:55 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 14:50:56 INFO  Job:1658 - Job job_1607438857162_0003 completed successfully
2020-12-08 14:50:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016137
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39872
		Total time spent by all reduces in occupied slots (ms)=14380
		Total time spent by all map tasks (ms)=9968
		Total time spent by all reduce tasks (ms)=3595
		Total vcore-milliseconds taken by all map tasks=9968
		Total vcore-milliseconds taken by all reduce tasks=3595
		Total megabyte-milliseconds taken by all map tasks=40828928
		Total megabyte-milliseconds taken by all reduce tasks=14725120
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=629
		CPU time spent (ms)=6260
		Physical memory (bytes) snapshot=1193848832
		Virtual memory (bytes) snapshot=15776505856
		Total committed heap usage (bytes)=1061158912
		Peak Map Physical memory (bytes)=307367936
		Peak Map Virtual memory (bytes)=3942047744
		Peak Reduce Physical memory (bytes)=277774336
		Peak Reduce Virtual memory (bytes)=3951292416
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.21 seconds
2020-12-08 14:50:56 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-08 14:50:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201208 14:50:56.873" starttime="20201208 14:50:56.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:50:56.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:50:56.874" starttime="20201208 14:50:56.874"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.874" starttime="20201208 14:50:19.029"></status>
</kw>
<msg timestamp="20201208 14:50:56.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:50:56.875" starttime="20201208 14:50:19.029"></status>
</kw>
<msg timestamp="20201208 14:50:56.875" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:50:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50...</msg>
<status status="PASS" endtime="20201208 14:50:56.875" starttime="20201208 14:50:19.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:50:56.876" starttime="20201208 14:50:56.875"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:50:56.876" critical="yes" starttime="20201208 14:50:19.005"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:50:56.881" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:50:56.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:50:56.886" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:50:56.886" starttime="20201208 14:50:56.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:50:56.887" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:50:56.887" starttime="20201208 14:50:56.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:50:56.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:50:56.888" starttime="20201208 14:50:56.888"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.888" starttime="20201208 14:50:56.879"></status>
</kw>
<msg timestamp="20201208 14:50:56.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:50:56.889" starttime="20201208 14:50:56.878"></status>
</kw>
<msg timestamp="20201208 14:50:56.889" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:50:56.889" starttime="20201208 14:50:56.878"></status>
</kw>
<msg timestamp="20201208 14:50:56.889" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:50:56.889" starttime="20201208 14:50:56.878"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:50:56.890" level="INFO">${random} = 40</msg>
<status status="PASS" endtime="20201208 14:50:56.890" starttime="20201208 14:50:56.889"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:50:56.894" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:50:56.894" starttime="20201208 14:50:56.893"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:50:56.894" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:50:56.894" starttime="20201208 14:50:56.894"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.894" starttime="20201208 14:50:56.893"></status>
</kw>
<msg timestamp="20201208 14:50:56.894" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:50:56.895" starttime="20201208 14:50:56.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:50:56.896" starttime="20201208 14:50:56.895"></status>
</kw>
<msg timestamp="20201208 14:50:56.896" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 14:50:56.896" starttime="20201208 14:50:56.895"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.896" starttime="20201208 14:50:56.891"></status>
</kw>
<msg timestamp="20201208 14:50:56.896" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:50:56.896" starttime="20201208 14:50:56.891"></status>
</kw>
<msg timestamp="20201208 14:50:56.896" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:50:56.896" starttime="20201208 14:50:56.890"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:50:56.900" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:50:56.900" starttime="20201208 14:50:56.899"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:50:56.900" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:50:56.900" starttime="20201208 14:50:56.900"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.900" starttime="20201208 14:50:56.899"></status>
</kw>
<msg timestamp="20201208 14:50:56.901" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:50:56.901" starttime="20201208 14:50:56.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:50:56.902" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201208 14:50:56.902" starttime="20201208 14:50:56.902"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:50:56.903" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201208 14:50:56.903" starttime="20201208 14:50:56.902"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.903" starttime="20201208 14:50:56.901"></status>
</kw>
<msg timestamp="20201208 14:50:56.903" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201208 14:50:56.903" starttime="20201208 14:50:56.901"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.903" starttime="20201208 14:50:56.898"></status>
</kw>
<msg timestamp="20201208 14:50:56.903" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201208 14:50:56.903" starttime="20201208 14:50:56.897"></status>
</kw>
<msg timestamp="20201208 14:50:56.904" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201208 14:50:56.904" starttime="20201208 14:50:56.896"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:50:56.907" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:50:56.907" starttime="20201208 14:50:56.906"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:50:56.907" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:50:56.907" starttime="20201208 14:50:56.907"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.908" starttime="20201208 14:50:56.906"></status>
</kw>
<msg timestamp="20201208 14:50:56.908" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:50:56.908" starttime="20201208 14:50:56.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:50:56.909" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201208 14:50:56.909" starttime="20201208 14:50:56.909"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:50:56.910" level="INFO">${result} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201208 14:50:56.910" starttime="20201208 14:50:56.909"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.910" starttime="20201208 14:50:56.908"></status>
</kw>
<msg timestamp="20201208 14:50:56.910" level="INFO">${path_with_leading} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201208 14:50:56.910" starttime="20201208 14:50:56.908"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:56.910" starttime="20201208 14:50:56.905"></status>
</kw>
<msg timestamp="20201208 14:50:56.910" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201208 14:50:56.910" starttime="20201208 14:50:56.904"></status>
</kw>
<msg timestamp="20201208 14:50:56.911" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201208 14:50:56.911" starttime="20201208 14:50:56.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:50:56.916" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-40.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:51:32.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:51:32.357" level="INFO">${output} = 2020-12-08 14:50:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:51:32.357" starttime="20201208 14:50:56.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:51:32.358" level="INFO">2020-12-08 14:50:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-12-08 14:50:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 14:50:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:59 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-08 14:50:59 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:50:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:50:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:50:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:50:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-190E691CF7C2-&gt;c8101140-5ddd-4020-8449-feb06a41e292
2020-12-08 14:50:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 14:51:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 14:51:03 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 14:51:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607438857162_0004
2020-12-08 14:51:03 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-08 14:51:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:51:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:51:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:51:03 INFO  Configuration:2752 - resource-types.xml not found
2020-12-08 14:51:03 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-08 14:51:03 INFO  YarnClientImpl:324 - Submitted application application_1607438857162_0004
2020-12-08 14:51:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607438857162_0004/
2020-12-08 14:51:03 INFO  Job:1619 - Running job: job_1607438857162_0004
2020-12-08 14:51:10 INFO  Job:1640 - Job job_1607438857162_0004 running in uber mode : false
2020-12-08 14:51:10 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 14:51:16 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 14:51:21 INFO  Job:1647 -  map 67% reduce 0%
2020-12-08 14:51:26 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 14:51:30 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 14:51:31 INFO  Job:1658 - Job job_1607438857162_0004 completed successfully
2020-12-08 14:51:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:51:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078787
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38796
		Total time spent by all reduces in occupied slots (ms)=14236
		Total time spent by all map tasks (ms)=9699
		Total time spent by all reduce tasks (ms)=3559
		Total vcore-milliseconds taken by all map tasks=9699
		Total vcore-milliseconds taken by all reduce tasks=3559
		Total megabyte-milliseconds taken by all map tasks=39727104
		Total megabyte-milliseconds taken by all reduce tasks=14577664
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=571
		CPU time spent (ms)=6670
		Physical memory (bytes) snapshot=1181827072
		Virtual memory (bytes) snapshot=15766351872
		Total committed heap usage (bytes)=1065353216
		Peak Map Physical memory (bytes)=311181312
		Peak Map Virtual memory (bytes)=3945140224
		Peak Reduce Physical memory (bytes)=279154688
		Peak Reduce Virtual memory (bytes)=3953070080
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-08 14:51:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201208 14:51:32.358" starttime="20201208 14:51:32.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:51:32.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:51:32.359" starttime="20201208 14:51:32.358"></status>
</kw>
<status status="PASS" endtime="20201208 14:51:32.359" starttime="20201208 14:50:56.912"></status>
</kw>
<msg timestamp="20201208 14:51:32.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:51:32.359" starttime="20201208 14:50:56.911"></status>
</kw>
<msg timestamp="20201208 14:51:32.360" level="INFO">${output} = 2020-12-08 14:50:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:58 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:51:32.360" starttime="20201208 14:50:56.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201208 14:51:32.360" starttime="20201208 14:51:32.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:51:32.361" starttime="20201208 14:51:32.360"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:51:32.361" critical="yes" starttime="20201208 14:50:56.877"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201208 14:51:32.362" starttime="20201208 14:50:18.953"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:42.853" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:48:42.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:48:42.858" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:48:42.858" starttime="20201208 14:48:42.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:48:42.859" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:48:42.859" starttime="20201208 14:48:42.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:48:42.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:48:42.860" starttime="20201208 14:48:42.859"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:42.860" starttime="20201208 14:48:42.848"></status>
</kw>
<msg timestamp="20201208 14:48:42.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:48:42.860" starttime="20201208 14:48:42.847"></status>
</kw>
<msg timestamp="20201208 14:48:42.860" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:48:42.860" starttime="20201208 14:48:42.847"></status>
</kw>
<msg timestamp="20201208 14:48:42.861" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:48:42.861" starttime="20201208 14:48:42.847"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:48:42.865" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:48:42.865" starttime="20201208 14:48:42.865"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:48:42.866" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:48:42.866" starttime="20201208 14:48:42.865"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:42.866" starttime="20201208 14:48:42.863"></status>
</kw>
<msg timestamp="20201208 14:48:42.866" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:48:42.866" starttime="20201208 14:48:42.863"></status>
</kw>
<status status="PASS" endtime="20201208 14:48:42.866" starttime="20201208 14:48:42.862"></status>
</kw>
<msg timestamp="20201208 14:48:42.866" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:48:42.866" starttime="20201208 14:48:42.861"></status>
</kw>
<msg timestamp="20201208 14:48:42.867" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:48:42.867" starttime="20201208 14:48:42.861"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:48:42.872" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:49:28.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:49:28.736" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:48:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48...</msg>
<status status="PASS" endtime="20201208 14:49:28.736" starttime="20201208 14:48:42.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:49:28.737" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:48:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-08 14:48:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:48:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:48:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:48:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:48:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-75E872D9E840-&gt;c8101140-5ddd-4020-8449-feb06a41e292
2020-12-08 14:48:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-08 14:48:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-12-08 14:48:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 14:48:49 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 14:48:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607438857162_0001
2020-12-08 14:48:51 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-08 14:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:52 INFO  Configuration:2752 - resource-types.xml not found
2020-12-08 14:48:52 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-08 14:48:52 INFO  YarnClientImpl:324 - Submitted application application_1607438857162_0001
2020-12-08 14:48:52 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607438857162_0001/
2020-12-08 14:48:52 INFO  Job:1619 - Running job: job_1607438857162_0001
2020-12-08 14:49:02 INFO  Job:1640 - Job job_1607438857162_0001 running in uber mode : false
2020-12-08 14:49:02 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 14:49:09 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 14:49:14 INFO  Job:1647 -  map 67% reduce 0%
2020-12-08 14:49:19 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 14:49:27 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 14:49:28 INFO  Job:1658 - Job job_1607438857162_0001 completed successfully
2020-12-08 14:49:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40176
		Total time spent by all reduces in occupied slots (ms)=24112
		Total time spent by all map tasks (ms)=10044
		Total time spent by all reduce tasks (ms)=6028
		Total vcore-milliseconds taken by all map tasks=10044
		Total vcore-milliseconds taken by all reduce tasks=6028
		Total megabyte-milliseconds taken by all map tasks=41140224
		Total megabyte-milliseconds taken by all reduce tasks=24690688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=655
		CPU time spent (ms)=6520
		Physical memory (bytes) snapshot=1236471808
		Virtual memory (bytes) snapshot=15778902016
		Total committed heap usage (bytes)=1013448704
		Peak Map Physical memory (bytes)=321884160
		Peak Map Virtual memory (bytes)=3946565632
		Peak Reduce Physical memory (bytes)=300716032
		Peak Reduce Virtual memory (bytes)=3972931584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.604 seconds
2020-12-08 14:49:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:28 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-08 14:49:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201208 14:49:28.737" starttime="20201208 14:49:28.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:49:28.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:49:28.738" starttime="20201208 14:49:28.738"></status>
</kw>
<status status="PASS" endtime="20201208 14:49:28.738" starttime="20201208 14:48:42.868"></status>
</kw>
<msg timestamp="20201208 14:49:28.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:49:28.739" starttime="20201208 14:48:42.868"></status>
</kw>
<msg timestamp="20201208 14:49:28.739" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:48:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:48...</msg>
<status status="PASS" endtime="20201208 14:49:28.739" starttime="20201208 14:48:42.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:49:28.740" starttime="20201208 14:49:28.739"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:49:28.740" critical="yes" starttime="20201208 14:48:42.846"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:49:28.745" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:49:28.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:49:28.750" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:49:28.750" starttime="20201208 14:49:28.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:49:28.751" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:49:28.751" starttime="20201208 14:49:28.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:49:28.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:49:28.752" starttime="20201208 14:49:28.751"></status>
</kw>
<status status="PASS" endtime="20201208 14:49:28.752" starttime="20201208 14:49:28.742"></status>
</kw>
<msg timestamp="20201208 14:49:28.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:49:28.752" starttime="20201208 14:49:28.742"></status>
</kw>
<msg timestamp="20201208 14:49:28.753" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:49:28.753" starttime="20201208 14:49:28.741"></status>
</kw>
<msg timestamp="20201208 14:49:28.753" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201208 14:49:28.753" starttime="20201208 14:49:28.741"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:49:28.753" level="INFO">${random} = 38</msg>
<status status="PASS" endtime="20201208 14:49:28.754" starttime="20201208 14:49:28.753"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:49:28.757" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:49:28.758" starttime="20201208 14:49:28.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:49:28.758" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:49:28.758" starttime="20201208 14:49:28.758"></status>
</kw>
<status status="PASS" endtime="20201208 14:49:28.758" starttime="20201208 14:49:28.757"></status>
</kw>
<msg timestamp="20201208 14:49:28.758" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:49:28.758" starttime="20201208 14:49:28.756"></status>
</kw>
<status status="PASS" endtime="20201208 14:49:28.759" starttime="20201208 14:49:28.755"></status>
</kw>
<msg timestamp="20201208 14:49:28.759" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:49:28.759" starttime="20201208 14:49:28.755"></status>
</kw>
<msg timestamp="20201208 14:49:28.759" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:49:28.759" starttime="20201208 14:49:28.754"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:49:28.762" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:49:28.762" starttime="20201208 14:49:28.762"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:49:28.763" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:49:28.763" starttime="20201208 14:49:28.763"></status>
</kw>
<status status="PASS" endtime="20201208 14:49:28.763" starttime="20201208 14:49:28.761"></status>
</kw>
<msg timestamp="20201208 14:49:28.763" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:49:28.763" starttime="20201208 14:49:28.761"></status>
</kw>
<status status="PASS" endtime="20201208 14:49:28.764" starttime="20201208 14:49:28.760"></status>
</kw>
<msg timestamp="20201208 14:49:28.764" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201208 14:49:28.764" starttime="20201208 14:49:28.760"></status>
</kw>
<msg timestamp="20201208 14:49:28.764" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201208 14:49:28.764" starttime="20201208 14:49:28.759"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:49:28.767" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:49:28.767" starttime="20201208 14:49:28.767"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:49:28.768" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:49:28.768" starttime="20201208 14:49:28.767"></status>
</kw>
<status status="PASS" endtime="20201208 14:49:28.768" starttime="20201208 14:49:28.766"></status>
</kw>
<msg timestamp="20201208 14:49:28.768" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:49:28.768" starttime="20201208 14:49:28.766"></status>
</kw>
<status status="PASS" endtime="20201208 14:49:28.768" starttime="20201208 14:49:28.765"></status>
</kw>
<msg timestamp="20201208 14:49:28.768" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-38.txt</msg>
<status status="PASS" endtime="20201208 14:49:28.768" starttime="20201208 14:49:28.765"></status>
</kw>
<msg timestamp="20201208 14:49:28.769" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-38.txt</msg>
<status status="PASS" endtime="20201208 14:49:28.769" starttime="20201208 14:49:28.764"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:49:28.774" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-38.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:50:04.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:50:04.123" level="INFO">${output} = 2020-12-08 14:49:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:50:04.123" starttime="20201208 14:49:28.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:50:04.125" level="INFO">2020-12-08 14:49:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-12-08 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:30 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-08 14:49:31 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-08 14:49:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:49:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:49:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:49:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-740C9AB7AF5C-&gt;c8101140-5ddd-4020-8449-feb06a41e292
2020-12-08 14:49:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 14:49:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 14:49:32 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 14:49:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607438857162_0002
2020-12-08 14:49:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-08 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:32 INFO  Configuration:2752 - resource-types.xml not found
2020-12-08 14:49:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-08 14:49:33 INFO  YarnClientImpl:324 - Submitted application application_1607438857162_0002
2020-12-08 14:49:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607438857162_0002/
2020-12-08 14:49:33 INFO  Job:1619 - Running job: job_1607438857162_0002
2020-12-08 14:49:41 INFO  Job:1640 - Job job_1607438857162_0002 running in uber mode : false
2020-12-08 14:49:41 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 14:49:47 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 14:49:53 INFO  Job:1647 -  map 67% reduce 0%
2020-12-08 14:49:58 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 14:50:02 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 14:50:03 INFO  Job:1658 - Job job_1607438857162_0002 completed successfully
2020-12-08 14:50:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:50:03 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078871
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41044
		Total time spent by all reduces in occupied slots (ms)=14760
		Total time spent by all map tasks (ms)=10261
		Total time spent by all reduce tasks (ms)=3690
		Total vcore-milliseconds taken by all map tasks=10261
		Total vcore-milliseconds taken by all reduce tasks=3690
		Total megabyte-milliseconds taken by all map tasks=42029056
		Total megabyte-milliseconds taken by all reduce tasks=15114240
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=594
		CPU time spent (ms)=6980
		Physical memory (bytes) snapshot=1240203264
		Virtual memory (bytes) snapshot=15802761216
		Total committed heap usage (bytes)=1064304640
		Peak Map Physical memory (bytes)=317386752
		Peak Map Virtual memory (bytes)=3948875776
		Peak Reduce Physical memory (bytes)=295116800
		Peak Reduce Virtual memory (bytes)=3963793408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-08 14:50:03 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201208 14:50:04.125" starttime="20201208 14:50:04.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:50:04.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:50:04.126" starttime="20201208 14:50:04.125"></status>
</kw>
<status status="PASS" endtime="20201208 14:50:04.126" starttime="20201208 14:49:28.770"></status>
</kw>
<msg timestamp="20201208 14:50:04.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:50:04.126" starttime="20201208 14:49:28.769"></status>
</kw>
<msg timestamp="20201208 14:50:04.127" level="INFO">${output} = 2020-12-08 14:49:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-08 14:49:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201208 14:50:04.127" starttime="20201208 14:49:28.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201208 14:50:04.128" starttime="20201208 14:50:04.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:50:04.128" starttime="20201208 14:50:04.128"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:50:04.128" critical="yes" starttime="20201208 14:49:28.740"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201208 14:50:04.130" starttime="20201208 14:48:42.797"></status>
</suite>
<status status="PASS" elapsedtime="193555" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:52:39.849" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:52:44.904" level="INFO">${rc} = 255</msg>
<msg timestamp="20201208 14:52:44.904" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 14:52:44.904" starttime="20201208 14:52:39.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:52:44.905" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 14:52:44.905" starttime="20201208 14:52:44.905"></status>
</kw>
<msg timestamp="20201208 14:52:44.906" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201208 14:52:44.906" starttime="20201208 14:52:39.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:52:44.913" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:52:48.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:52:48.169" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:52:48.169" starttime="20201208 14:52:44.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:52:48.170" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:52:48.170" starttime="20201208 14:52:48.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:52:48.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:52:48.171" starttime="20201208 14:52:48.170"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:48.171" starttime="20201208 14:52:44.908"></status>
</kw>
<msg timestamp="20201208 14:52:48.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:52:48.171" starttime="20201208 14:52:44.908"></status>
</kw>
<msg timestamp="20201208 14:52:48.172" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201208 14:52:48.172" starttime="20201208 14:52:44.907"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201208 14:52:48.172" starttime="20201208 14:52:48.172"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:48.172" starttime="20201208 14:52:44.907"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:48.172" starttime="20201208 14:52:44.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:52:48.177" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:52:51.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:52:51.078" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:52:51.078" starttime="20201208 14:52:48.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:52:51.079" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:52:51.079" starttime="20201208 14:52:51.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:52:51.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:52:51.080" starttime="20201208 14:52:51.080"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:51.080" starttime="20201208 14:52:48.174"></status>
</kw>
<msg timestamp="20201208 14:52:51.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:52:51.081" starttime="20201208 14:52:48.174"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:51.081" starttime="20201208 14:52:48.173"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:51.081" starttime="20201208 14:52:48.173"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:51.081" starttime="20201208 14:52:48.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201208 14:52:51.081" starttime="20201208 14:52:51.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:52:51.085" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:52:54.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:52:54.667" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T14:52:50.975Z",
  "modificat...</msg>
<status status="PASS" endtime="20201208 14:52:54.667" starttime="20201208 14:52:51.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:52:54.668" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T14:52:50.975Z",
  "modificationTime" : "2020-12-08T14:52:50.975Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201208 14:52:54.668" starttime="20201208 14:52:54.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:52:54.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:52:54.669" starttime="20201208 14:52:54.668"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:54.669" starttime="20201208 14:52:51.083"></status>
</kw>
<msg timestamp="20201208 14:52:54.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:52:54.669" starttime="20201208 14:52:51.082"></status>
</kw>
<msg timestamp="20201208 14:52:54.670" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-08T14:52:50.975Z",
  "modificat...</msg>
<status status="PASS" endtime="20201208 14:52:54.670" starttime="20201208 14:52:51.082"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201208 14:52:54.670" starttime="20201208 14:52:54.670"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:52:54.674" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:52:54.674" starttime="20201208 14:52:54.674"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:52:54.675" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:52:54.675" starttime="20201208 14:52:54.674"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:54.675" starttime="20201208 14:52:54.673"></status>
</kw>
<msg timestamp="20201208 14:52:54.675" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:52:54.675" starttime="20201208 14:52:54.673"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:54.675" starttime="20201208 14:52:54.672"></status>
</kw>
<msg timestamp="20201208 14:52:54.675" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201208 14:52:54.675" starttime="20201208 14:52:54.671"></status>
</kw>
<msg timestamp="20201208 14:52:54.676" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201208 14:52:54.676" starttime="20201208 14:52:54.670"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:52:54.679" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:52:57.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:52:57.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:52:57.868" starttime="20201208 14:52:54.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:52:57.869" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:52:57.869" starttime="20201208 14:52:57.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:52:57.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:52:57.870" starttime="20201208 14:52:57.869"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:57.870" starttime="20201208 14:52:54.676"></status>
</kw>
<msg timestamp="20201208 14:52:57.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:52:57.871" starttime="20201208 14:52:54.676"></status>
</kw>
<status status="PASS" endtime="20201208 14:52:57.871" starttime="20201208 14:52:54.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:52:57.876" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:53:05.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:53:05.041" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:53:05.041" starttime="20201208 14:52:57.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:53:05.043" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:53:05.043" starttime="20201208 14:53:05.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:53:05.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:53:05.043" starttime="20201208 14:53:05.043"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:05.044" starttime="20201208 14:52:57.872"></status>
</kw>
<msg timestamp="20201208 14:53:05.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:53:05.044" starttime="20201208 14:52:57.872"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:05.044" starttime="20201208 14:52:57.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:53:05.048" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:53:10.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:53:10.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:53:10.079" starttime="20201208 14:53:05.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:53:10.081" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:53:10.081" starttime="20201208 14:53:10.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:53:10.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:53:10.081" starttime="20201208 14:53:10.081"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:10.081" starttime="20201208 14:53:05.045"></status>
</kw>
<msg timestamp="20201208 14:53:10.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:53:10.082" starttime="20201208 14:53:05.045"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:10.082" starttime="20201208 14:53:05.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:53:10.086" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:53:15.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:53:15.061" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:53:15.061" starttime="20201208 14:53:10.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:53:15.062" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:53:15.062" starttime="20201208 14:53:15.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:53:15.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:53:15.063" starttime="20201208 14:53:15.062"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:15.063" starttime="20201208 14:53:10.083"></status>
</kw>
<msg timestamp="20201208 14:53:15.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:53:15.063" starttime="20201208 14:53:10.083"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:15.063" starttime="20201208 14:53:10.082"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 14:53:15.063" critical="yes" starttime="20201208 14:52:39.843"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:53:15.069" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:53:15.069" starttime="20201208 14:53:15.068"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:53:15.069" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:53:15.069" starttime="20201208 14:53:15.069"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:15.070" starttime="20201208 14:53:15.067"></status>
</kw>
<msg timestamp="20201208 14:53:15.070" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:53:15.070" starttime="20201208 14:53:15.067"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:15.070" starttime="20201208 14:53:15.066"></status>
</kw>
<msg timestamp="20201208 14:53:15.070" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 14:53:15.070" starttime="20201208 14:53:15.066"></status>
</kw>
<msg timestamp="20201208 14:53:15.070" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 14:53:15.070" starttime="20201208 14:53:15.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:53:15.075" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:53:17.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:53:17.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:53:17.992" starttime="20201208 14:53:15.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:53:17.993" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:53:17.994" starttime="20201208 14:53:17.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:53:17.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:53:17.994" starttime="20201208 14:53:17.994"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:17.995" starttime="20201208 14:53:15.071"></status>
</kw>
<msg timestamp="20201208 14:53:17.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:53:17.995" starttime="20201208 14:53:15.071"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:17.995" starttime="20201208 14:53:15.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:53:17.999" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:53:20.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:53:20.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201208 14:53:20.932" starttime="20201208 14:53:17.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:53:20.933" level="INFO"></msg>
<status status="PASS" endtime="20201208 14:53:20.933" starttime="20201208 14:53:20.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:53:20.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:53:20.934" starttime="20201208 14:53:20.933"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:20.934" starttime="20201208 14:53:17.996"></status>
</kw>
<msg timestamp="20201208 14:53:20.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:53:20.934" starttime="20201208 14:53:17.996"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:20.935" starttime="20201208 14:53:17.995"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201208 14:53:20.935" critical="yes" starttime="20201208 14:53:15.064"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201208 14:53:20.936" starttime="20201208 14:52:39.784"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:55:01.029" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:55:01.029" starttime="20201208 14:55:01.029"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:55:01.030" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:55:01.030" starttime="20201208 14:55:01.029"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:01.030" starttime="20201208 14:55:01.028"></status>
</kw>
<msg timestamp="20201208 14:55:01.030" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:55:01.030" starttime="20201208 14:55:01.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:55:01.031" starttime="20201208 14:55:01.031"></status>
</kw>
<msg timestamp="20201208 14:55:01.031" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 14:55:01.031" starttime="20201208 14:55:01.030"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:01.031" starttime="20201208 14:55:01.027"></status>
</kw>
<msg timestamp="20201208 14:55:01.031" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:55:01.031" starttime="20201208 14:55:01.026"></status>
</kw>
<msg timestamp="20201208 14:55:01.032" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:55:01.032" starttime="20201208 14:55:01.025"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:55:01.032" level="INFO">${random} = 57772</msg>
<status status="PASS" endtime="20201208 14:55:01.032" starttime="20201208 14:55:01.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:55:01.038" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-57772 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:55:04.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:55:04.390" level="INFO">${output} = 2020-12-08 14:55:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:55:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201208 14:55:04.390" starttime="20201208 14:55:01.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:55:04.391" level="INFO">2020-12-08 14:55:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:55:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:55:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:55:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:55:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D9C01D62DDDC-&gt;0a9cb7a1-83e8-4baa-9cf7-fab2c1eddd0d
2020-12-08 14:55:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201208 14:55:04.392" starttime="20201208 14:55:04.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:55:04.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:55:04.392" starttime="20201208 14:55:04.392"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:04.392" starttime="20201208 14:55:01.033"></status>
</kw>
<msg timestamp="20201208 14:55:04.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:55:04.393" starttime="20201208 14:55:01.033"></status>
</kw>
<msg timestamp="20201208 14:55:04.393" level="INFO">${result} = 2020-12-08 14:55:02 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:55:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201208 14:55:04.393" starttime="20201208 14:55:01.032"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:55:04.399" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:55:06.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:55:06.164" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:52 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 14:55 ofs://om/volume1/bucket1/ozone-57772
-rw-...</msg>
<status status="PASS" endtime="20201208 14:55:06.164" starttime="20201208 14:55:04.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:55:06.165" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:52 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 14:55 ofs://om/volume1/bucket1/ozone-57772
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 14:53 ofs://om/volume1/bucket1/ozone-89450
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:53 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:54 ofs://om/volume1/bucket1/wordcount-22.txt</msg>
<status status="PASS" endtime="20201208 14:55:06.165" starttime="20201208 14:55:06.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:55:06.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:55:06.166" starttime="20201208 14:55:06.165"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:06.166" starttime="20201208 14:55:04.395"></status>
</kw>
<msg timestamp="20201208 14:55:06.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:55:06.166" starttime="20201208 14:55:04.395"></status>
</kw>
<msg timestamp="20201208 14:55:06.166" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:52 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 14:55 ofs://om/volume1/bucket1/ozone-57772
-rw-...</msg>
<status status="PASS" endtime="20201208 14:55:06.166" starttime="20201208 14:55:04.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:55:06.167" starttime="20201208 14:55:06.166"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 14:55:06.167" critical="yes" starttime="20201208 14:55:01.024"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201208 14:55:06.168" starttime="20201208 14:55:00.973"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:53:25.644" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:53:25.644" starttime="20201208 14:53:25.644"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:53:25.645" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:53:25.645" starttime="20201208 14:53:25.644"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:25.645" starttime="20201208 14:53:25.643"></status>
</kw>
<msg timestamp="20201208 14:53:25.645" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:53:25.645" starttime="20201208 14:53:25.643"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:25.646" starttime="20201208 14:53:25.642"></status>
</kw>
<msg timestamp="20201208 14:53:25.646" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:53:25.646" starttime="20201208 14:53:25.642"></status>
</kw>
<msg timestamp="20201208 14:53:25.646" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:53:25.646" starttime="20201208 14:53:25.641"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:53:25.646" level="INFO">${random} = 89450</msg>
<status status="PASS" endtime="20201208 14:53:25.647" starttime="20201208 14:53:25.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:53:25.652" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-89450 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:53:29.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:53:29.125" level="INFO">${output} = 2020-12-08 14:53:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:53:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201208 14:53:29.125" starttime="20201208 14:53:25.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:53:29.126" level="INFO">2020-12-08 14:53:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:53:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:53:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:53:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:53:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-66438D3B94E6-&gt;0a9cb7a1-83e8-4baa-9cf7-fab2c1eddd0d
2020-12-08 14:53:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201208 14:53:29.126" starttime="20201208 14:53:29.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:53:29.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:53:29.127" starttime="20201208 14:53:29.126"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:29.127" starttime="20201208 14:53:25.647"></status>
</kw>
<msg timestamp="20201208 14:53:29.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:53:29.127" starttime="20201208 14:53:25.647"></status>
</kw>
<msg timestamp="20201208 14:53:29.127" level="INFO">${result} = 2020-12-08 14:53:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:53:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201208 14:53:29.127" starttime="20201208 14:53:25.647"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:53:29.134" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:53:30.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:53:30.982" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:52 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 14:53 o3fs://bucket1.volume1.om/ozone-89450
dr...</msg>
<status status="PASS" endtime="20201208 14:53:30.982" starttime="20201208 14:53:29.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:53:30.983" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:52 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 14:53 o3fs://bucket1.volume1.om/ozone-89450
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:53 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201208 14:53:30.983" starttime="20201208 14:53:30.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:53:30.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:53:30.984" starttime="20201208 14:53:30.983"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:30.984" starttime="20201208 14:53:29.129"></status>
</kw>
<msg timestamp="20201208 14:53:30.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:53:30.984" starttime="20201208 14:53:29.128"></status>
</kw>
<msg timestamp="20201208 14:53:30.984" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-08 14:52 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-08 14:53 o3fs://bucket1.volume1.om/ozone-89450
dr...</msg>
<status status="PASS" endtime="20201208 14:53:30.984" starttime="20201208 14:53:29.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:53:30.985" starttime="20201208 14:53:30.985"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201208 14:53:30.985" critical="yes" starttime="20201208 14:53:25.640"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201208 14:53:30.986" starttime="20201208 14:53:25.589"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:55:10.804" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:55:10.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:55:10.810" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:55:10.810" starttime="20201208 14:55:10.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:55:10.811" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:55:10.811" starttime="20201208 14:55:10.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:55:10.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:55:10.811" starttime="20201208 14:55:10.811"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:10.812" starttime="20201208 14:55:10.800"></status>
</kw>
<msg timestamp="20201208 14:55:10.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:55:10.812" starttime="20201208 14:55:10.800"></status>
</kw>
<msg timestamp="20201208 14:55:10.812" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:55:10.812" starttime="20201208 14:55:10.800"></status>
</kw>
<msg timestamp="20201208 14:55:10.812" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:55:10.812" starttime="20201208 14:55:10.799"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:55:10.817" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:55:10.817" starttime="20201208 14:55:10.816"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:55:10.817" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:55:10.817" starttime="20201208 14:55:10.817"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:10.818" starttime="20201208 14:55:10.815"></status>
</kw>
<msg timestamp="20201208 14:55:10.818" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:55:10.818" starttime="20201208 14:55:10.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:55:10.819" starttime="20201208 14:55:10.818"></status>
</kw>
<msg timestamp="20201208 14:55:10.819" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 14:55:10.819" starttime="20201208 14:55:10.818"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:10.819" starttime="20201208 14:55:10.814"></status>
</kw>
<msg timestamp="20201208 14:55:10.819" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:55:10.819" starttime="20201208 14:55:10.813"></status>
</kw>
<msg timestamp="20201208 14:55:10.819" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:55:10.819" starttime="20201208 14:55:10.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:55:10.824" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:55:46.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:55:46.312" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:55:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:55:12 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201208 14:55:46.313" starttime="20201208 14:55:10.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:55:46.314" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:55:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:55:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:55:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:55:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:55:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0DBF5BA1D28E-&gt;0a9cb7a1-83e8-4baa-9cf7-fab2c1eddd0d
2020-12-08 14:55:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-08 14:55:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-08 14:55:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 14:55:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 14:55:14 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 14:55:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607439137616_0003
2020-12-08 14:55:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-08 14:55:15 INFO  Configuration:2795 - resource-types.xml not found
2020-12-08 14:55:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-08 14:55:15 INFO  YarnClientImpl:329 - Submitted application application_1607439137616_0003
2020-12-08 14:55:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607439137616_0003/
2020-12-08 14:55:15 INFO  Job:1619 - Running job: job_1607439137616_0003
2020-12-08 14:55:23 INFO  Job:1640 - Job job_1607439137616_0003 running in uber mode : false
2020-12-08 14:55:23 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 14:55:29 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 14:55:35 INFO  Job:1647 -  map 67% reduce 0%
2020-12-08 14:55:40 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 14:55:44 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 14:55:45 INFO  Job:1658 - Job job_1607439137616_0003 completed successfully
2020-12-08 14:55:45 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056241
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39548
		Total time spent by all reduces in occupied slots (ms)=15408
		Total time spent by all map tasks (ms)=9887
		Total time spent by all reduce tasks (ms)=3852
		Total vcore-milliseconds taken by all map tasks=9887
		Total vcore-milliseconds taken by all reduce tasks=3852
		Total megabyte-milliseconds taken by all map tasks=40497152
		Total megabyte-milliseconds taken by all reduce tasks=15777792
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=622
		CPU time spent (ms)=6930
		Physical memory (bytes) snapshot=1515692032
		Virtual memory (bytes) snapshot=15786655744
		Total committed heap usage (bytes)=1807220736
		Peak Map Physical memory (bytes)=378126336
		Peak Map Virtual memory (bytes)=3947290624
		Peak Reduce Physical memory (bytes)=393932800
		Peak Reduce Virtual memory (bytes)=3969548288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.774 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201208 14:55:46.314" starttime="20201208 14:55:46.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:55:46.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:55:46.315" starttime="20201208 14:55:46.314"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.315" starttime="20201208 14:55:10.820"></status>
</kw>
<msg timestamp="20201208 14:55:46.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:55:46.315" starttime="20201208 14:55:10.820"></status>
</kw>
<msg timestamp="20201208 14:55:46.315" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:55:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:55:12 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201208 14:55:46.315" starttime="20201208 14:55:10.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:55:46.316" starttime="20201208 14:55:46.316"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:55:46.316" critical="yes" starttime="20201208 14:55:10.798"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:55:46.321" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:55:46.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:55:46.326" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:55:46.326" starttime="20201208 14:55:46.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:55:46.327" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:55:46.327" starttime="20201208 14:55:46.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:55:46.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:55:46.328" starttime="20201208 14:55:46.328"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.328" starttime="20201208 14:55:46.319"></status>
</kw>
<msg timestamp="20201208 14:55:46.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:55:46.329" starttime="20201208 14:55:46.319"></status>
</kw>
<msg timestamp="20201208 14:55:46.329" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:55:46.329" starttime="20201208 14:55:46.318"></status>
</kw>
<msg timestamp="20201208 14:55:46.329" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:55:46.329" starttime="20201208 14:55:46.318"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:55:46.330" level="INFO">${random} = 41</msg>
<status status="PASS" endtime="20201208 14:55:46.330" starttime="20201208 14:55:46.329"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:55:46.335" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:55:46.335" starttime="20201208 14:55:46.334"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:55:46.335" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:55:46.335" starttime="20201208 14:55:46.335"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.336" starttime="20201208 14:55:46.334"></status>
</kw>
<msg timestamp="20201208 14:55:46.336" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:55:46.336" starttime="20201208 14:55:46.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201208 14:55:46.337" starttime="20201208 14:55:46.336"></status>
</kw>
<msg timestamp="20201208 14:55:46.337" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201208 14:55:46.337" starttime="20201208 14:55:46.336"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.337" starttime="20201208 14:55:46.332"></status>
</kw>
<msg timestamp="20201208 14:55:46.337" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:55:46.337" starttime="20201208 14:55:46.332"></status>
</kw>
<msg timestamp="20201208 14:55:46.337" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201208 14:55:46.338" starttime="20201208 14:55:46.330"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:55:46.341" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:55:46.341" starttime="20201208 14:55:46.340"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:55:46.342" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:55:46.342" starttime="20201208 14:55:46.341"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.342" starttime="20201208 14:55:46.340"></status>
</kw>
<msg timestamp="20201208 14:55:46.342" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:55:46.342" starttime="20201208 14:55:46.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:55:46.344" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201208 14:55:46.344" starttime="20201208 14:55:46.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:55:46.344" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201208 14:55:46.344" starttime="20201208 14:55:46.344"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.344" starttime="20201208 14:55:46.343"></status>
</kw>
<msg timestamp="20201208 14:55:46.345" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201208 14:55:46.345" starttime="20201208 14:55:46.342"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.345" starttime="20201208 14:55:46.339"></status>
</kw>
<msg timestamp="20201208 14:55:46.345" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201208 14:55:46.345" starttime="20201208 14:55:46.338"></status>
</kw>
<msg timestamp="20201208 14:55:46.345" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201208 14:55:46.345" starttime="20201208 14:55:46.338"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201208 14:55:46.348" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201208 14:55:46.349" starttime="20201208 14:55:46.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:55:46.349" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201208 14:55:46.349" starttime="20201208 14:55:46.349"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.349" starttime="20201208 14:55:46.348"></status>
</kw>
<msg timestamp="20201208 14:55:46.349" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201208 14:55:46.349" starttime="20201208 14:55:46.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:55:46.351" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201208 14:55:46.351" starttime="20201208 14:55:46.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:55:46.351" level="INFO">${result} = /wordcount-41.txt</msg>
<status status="PASS" endtime="20201208 14:55:46.352" starttime="20201208 14:55:46.351"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.352" starttime="20201208 14:55:46.350"></status>
</kw>
<msg timestamp="20201208 14:55:46.352" level="INFO">${path_with_leading} = /wordcount-41.txt</msg>
<status status="PASS" endtime="20201208 14:55:46.352" starttime="20201208 14:55:46.350"></status>
</kw>
<status status="PASS" endtime="20201208 14:55:46.352" starttime="20201208 14:55:46.347"></status>
</kw>
<msg timestamp="20201208 14:55:46.352" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-41.txt</msg>
<status status="PASS" endtime="20201208 14:55:46.352" starttime="20201208 14:55:46.346"></status>
</kw>
<msg timestamp="20201208 14:55:46.353" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-41.txt</msg>
<status status="PASS" endtime="20201208 14:55:46.353" starttime="20201208 14:55:46.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:55:46.356" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-41.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:56:23.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:56:23.818" level="INFO">${output} = 2020-12-08 14:55:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-08 14:55:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201208 14:56:23.818" starttime="20201208 14:55:46.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:56:23.819" level="INFO">2020-12-08 14:55:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-08 14:55:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 14:55:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:55:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:55:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:55:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:55:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F22BE402C0C2-&gt;0a9cb7a1-83e8-4baa-9cf7-fab2c1eddd0d
2020-12-08 14:55:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 14:55:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 14:55:52 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 14:55:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607439137616_0004
2020-12-08 14:55:52 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-08 14:55:52 INFO  Configuration:2795 - resource-types.xml not found
2020-12-08 14:55:52 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-08 14:55:52 INFO  YarnClientImpl:329 - Submitted application application_1607439137616_0004
2020-12-08 14:55:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607439137616_0004/
2020-12-08 14:55:53 INFO  Job:1619 - Running job: job_1607439137616_0004
2020-12-08 14:56:00 INFO  Job:1640 - Job job_1607439137616_0004 running in uber mode : false
2020-12-08 14:56:00 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 14:56:07 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 14:56:13 INFO  Job:1647 -  map 67% reduce 0%
2020-12-08 14:56:18 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 14:56:22 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 14:56:23 INFO  Job:1658 - Job job_1607439137616_0004 completed successfully
2020-12-08 14:56:23 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118903
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39560
		Total time spent by all reduces in occupied slots (ms)=14592
		Total time spent by all map tasks (ms)=9890
		Total time spent by all reduce tasks (ms)=3648
		Total vcore-milliseconds taken by all map tasks=9890
		Total vcore-milliseconds taken by all reduce tasks=3648
		Total megabyte-milliseconds taken by all map tasks=40509440
		Total megabyte-milliseconds taken by all reduce tasks=14942208
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=601
		CPU time spent (ms)=7130
		Physical memory (bytes) snapshot=1503195136
		Virtual memory (bytes) snapshot=15797313536
		Total committed heap usage (bytes)=1783103488
		Peak Map Physical memory (bytes)=377892864
		Peak Map Virtual memory (bytes)=3947724800
		Peak Reduce Physical memory (bytes)=382185472
		Peak Reduce Virtual memory (bytes)=3968339968
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201208 14:56:23.819" starttime="20201208 14:56:23.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:56:23.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:56:23.820" starttime="20201208 14:56:23.820"></status>
</kw>
<status status="PASS" endtime="20201208 14:56:23.820" starttime="20201208 14:55:46.353"></status>
</kw>
<msg timestamp="20201208 14:56:23.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:56:23.821" starttime="20201208 14:55:46.353"></status>
</kw>
<msg timestamp="20201208 14:56:23.821" level="INFO">${output} = 2020-12-08 14:55:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-08 14:55:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201208 14:56:23.821" starttime="20201208 14:55:46.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201208 14:56:23.821" starttime="20201208 14:56:23.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:56:23.822" starttime="20201208 14:56:23.822"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:56:23.822" critical="yes" starttime="20201208 14:55:46.317"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201208 14:56:23.823" starttime="20201208 14:55:10.748"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:53:35.682" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:53:35.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:53:35.687" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:53:35.687" starttime="20201208 14:53:35.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:53:35.688" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:53:35.688" starttime="20201208 14:53:35.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:53:35.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:53:35.688" starttime="20201208 14:53:35.688"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:35.688" starttime="20201208 14:53:35.677"></status>
</kw>
<msg timestamp="20201208 14:53:35.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:53:35.689" starttime="20201208 14:53:35.677"></status>
</kw>
<msg timestamp="20201208 14:53:35.689" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:53:35.689" starttime="20201208 14:53:35.677"></status>
</kw>
<msg timestamp="20201208 14:53:35.689" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:53:35.689" starttime="20201208 14:53:35.676"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:53:35.694" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:53:35.694" starttime="20201208 14:53:35.693"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:53:35.695" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:53:35.695" starttime="20201208 14:53:35.695"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:35.696" starttime="20201208 14:53:35.692"></status>
</kw>
<msg timestamp="20201208 14:53:35.696" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:53:35.696" starttime="20201208 14:53:35.691"></status>
</kw>
<status status="PASS" endtime="20201208 14:53:35.696" starttime="20201208 14:53:35.691"></status>
</kw>
<msg timestamp="20201208 14:53:35.696" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:53:35.696" starttime="20201208 14:53:35.690"></status>
</kw>
<msg timestamp="20201208 14:53:35.696" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:53:35.696" starttime="20201208 14:53:35.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:53:35.700" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:54:18.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:54:18.149" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:53:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:53:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201208 14:54:18.149" starttime="20201208 14:53:35.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:54:18.150" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:53:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:53:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:53:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:53:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:53:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-49A084FD2F98-&gt;0a9cb7a1-83e8-4baa-9cf7-fab2c1eddd0d
2020-12-08 14:53:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-08 14:53:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-08 14:53:41 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 14:53:42 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 14:53:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607439137616_0001
2020-12-08 14:53:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-08 14:53:42 INFO  Configuration:2795 - resource-types.xml not found
2020-12-08 14:53:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-08 14:53:42 INFO  YarnClientImpl:329 - Submitted application application_1607439137616_0001
2020-12-08 14:53:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607439137616_0001/
2020-12-08 14:53:43 INFO  Job:1619 - Running job: job_1607439137616_0001
2020-12-08 14:53:52 INFO  Job:1640 - Job job_1607439137616_0001 running in uber mode : false
2020-12-08 14:53:52 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 14:53:59 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 14:54:05 INFO  Job:1647 -  map 67% reduce 0%
2020-12-08 14:54:10 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 14:54:14 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 14:54:17 INFO  Job:1658 - Job job_1607439137616_0001 completed successfully
2020-12-08 14:54:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39360
		Total time spent by all reduces in occupied slots (ms)=14760
		Total time spent by all map tasks (ms)=9840
		Total time spent by all reduce tasks (ms)=3690
		Total vcore-milliseconds taken by all map tasks=9840
		Total vcore-milliseconds taken by all reduce tasks=3690
		Total megabyte-milliseconds taken by all map tasks=40304640
		Total megabyte-milliseconds taken by all reduce tasks=15114240
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=680
		CPU time spent (ms)=7210
		Physical memory (bytes) snapshot=1365852160
		Virtual memory (bytes) snapshot=15815057408
		Total committed heap usage (bytes)=1443889152
		Peak Map Physical memory (bytes)=377610240
		Peak Map Virtual memory (bytes)=3951042560
		Peak Reduce Physical memory (bytes)=313851904
		Peak Reduce Virtual memory (bytes)=3966062592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.776 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201208 14:54:18.150" starttime="20201208 14:54:18.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:54:18.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:54:18.151" starttime="20201208 14:54:18.151"></status>
</kw>
<status status="PASS" endtime="20201208 14:54:18.151" starttime="20201208 14:53:35.697"></status>
</kw>
<msg timestamp="20201208 14:54:18.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:54:18.152" starttime="20201208 14:53:35.697"></status>
</kw>
<msg timestamp="20201208 14:54:18.152" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-08 14:53:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:53:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201208 14:54:18.152" starttime="20201208 14:53:35.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:54:18.152" starttime="20201208 14:54:18.152"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:54:18.153" critical="yes" starttime="20201208 14:53:35.676"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:54:18.158" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:54:18.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:54:18.164" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:54:18.164" starttime="20201208 14:54:18.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:54:18.165" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:54:18.165" starttime="20201208 14:54:18.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:54:18.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:54:18.166" starttime="20201208 14:54:18.165"></status>
</kw>
<status status="PASS" endtime="20201208 14:54:18.166" starttime="20201208 14:54:18.155"></status>
</kw>
<msg timestamp="20201208 14:54:18.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:54:18.166" starttime="20201208 14:54:18.155"></status>
</kw>
<msg timestamp="20201208 14:54:18.166" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:54:18.166" starttime="20201208 14:54:18.155"></status>
</kw>
<msg timestamp="20201208 14:54:18.167" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201208 14:54:18.167" starttime="20201208 14:54:18.154"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201208 14:54:18.167" level="INFO">${random} = 22</msg>
<status status="PASS" endtime="20201208 14:54:18.167" starttime="20201208 14:54:18.167"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:54:18.171" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:54:18.171" starttime="20201208 14:54:18.171"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:54:18.172" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:54:18.172" starttime="20201208 14:54:18.171"></status>
</kw>
<status status="PASS" endtime="20201208 14:54:18.172" starttime="20201208 14:54:18.170"></status>
</kw>
<msg timestamp="20201208 14:54:18.172" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:54:18.172" starttime="20201208 14:54:18.169"></status>
</kw>
<status status="PASS" endtime="20201208 14:54:18.172" starttime="20201208 14:54:18.169"></status>
</kw>
<msg timestamp="20201208 14:54:18.172" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:54:18.173" starttime="20201208 14:54:18.168"></status>
</kw>
<msg timestamp="20201208 14:54:18.173" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201208 14:54:18.173" starttime="20201208 14:54:18.167"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:54:18.176" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:54:18.176" starttime="20201208 14:54:18.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:54:18.177" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:54:18.177" starttime="20201208 14:54:18.176"></status>
</kw>
<status status="PASS" endtime="20201208 14:54:18.177" starttime="20201208 14:54:18.175"></status>
</kw>
<msg timestamp="20201208 14:54:18.177" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:54:18.177" starttime="20201208 14:54:18.175"></status>
</kw>
<status status="PASS" endtime="20201208 14:54:18.177" starttime="20201208 14:54:18.174"></status>
</kw>
<msg timestamp="20201208 14:54:18.177" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201208 14:54:18.178" starttime="20201208 14:54:18.174"></status>
</kw>
<msg timestamp="20201208 14:54:18.178" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201208 14:54:18.178" starttime="20201208 14:54:18.173"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201208 14:54:18.181" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201208 14:54:18.181" starttime="20201208 14:54:18.180"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201208 14:54:18.181" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201208 14:54:18.182" starttime="20201208 14:54:18.181"></status>
</kw>
<status status="PASS" endtime="20201208 14:54:18.182" starttime="20201208 14:54:18.180"></status>
</kw>
<msg timestamp="20201208 14:54:18.182" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201208 14:54:18.182" starttime="20201208 14:54:18.180"></status>
</kw>
<status status="PASS" endtime="20201208 14:54:18.182" starttime="20201208 14:54:18.179"></status>
</kw>
<msg timestamp="20201208 14:54:18.182" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-22.txt</msg>
<status status="PASS" endtime="20201208 14:54:18.182" starttime="20201208 14:54:18.179"></status>
</kw>
<msg timestamp="20201208 14:54:18.182" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-22.txt</msg>
<status status="PASS" endtime="20201208 14:54:18.183" starttime="20201208 14:54:18.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201208 14:54:18.186" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-22.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201208 14:54:56.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20201208 14:54:56.226" level="INFO">${output} = 2020-12-08 14:54:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-08 14:54:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201208 14:54:56.226" starttime="20201208 14:54:18.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201208 14:54:56.227" level="INFO">2020-12-08 14:54:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-08 14:54:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-08 14:54:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-08 14:54:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-08 14:54:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-08 14:54:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-08 14:54:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E5B459DAF745-&gt;0a9cb7a1-83e8-4baa-9cf7-fab2c1eddd0d
2020-12-08 14:54:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-08 14:54:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-08 14:54:21 INFO  JobSubmitter:202 - number of splits:3
2020-12-08 14:54:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607439137616_0002
2020-12-08 14:54:22 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-08 14:54:22 INFO  Configuration:2795 - resource-types.xml not found
2020-12-08 14:54:22 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-08 14:54:22 INFO  YarnClientImpl:329 - Submitted application application_1607439137616_0002
2020-12-08 14:54:22 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607439137616_0002/
2020-12-08 14:54:22 INFO  Job:1619 - Running job: job_1607439137616_0002
2020-12-08 14:54:30 INFO  Job:1640 - Job job_1607439137616_0002 running in uber mode : false
2020-12-08 14:54:30 INFO  Job:1647 -  map 0% reduce 0%
2020-12-08 14:54:37 INFO  Job:1647 -  map 33% reduce 0%
2020-12-08 14:54:43 INFO  Job:1647 -  map 67% reduce 0%
2020-12-08 14:54:48 INFO  Job:1647 -  map 100% reduce 0%
2020-12-08 14:54:52 INFO  Job:1647 -  map 100% reduce 100%
2020-12-08 14:54:55 INFO  Job:1658 - Job job_1607439137616_0002 completed successfully
2020-12-08 14:54:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118991
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40792
		Total time spent by all reduces in occupied slots (ms)=14528
		Total time spent by all map tasks (ms)=10198
		Total time spent by all reduce tasks (ms)=3632
		Total vcore-milliseconds taken by all map tasks=10198
		Total vcore-milliseconds taken by all reduce tasks=3632
		Total megabyte-milliseconds taken by all map tasks=41771008
		Total megabyte-milliseconds taken by all reduce tasks=14876672
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=634
		CPU time spent (ms)=7250
		Physical memory (bytes) snapshot=1484578816
		Virtual memory (bytes) snapshot=15795027968
		Total committed heap usage (bytes)=1758461952
		Peak Map Physical memory (bytes)=374120448
		Peak Map Virtual memory (bytes)=3948302336
		Peak Reduce Physical memory (bytes)=367374336
		Peak Reduce Virtual memory (bytes)=3951988736
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201208 14:54:56.228" starttime="20201208 14:54:56.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201208 14:54:56.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201208 14:54:56.229" starttime="20201208 14:54:56.228"></status>
</kw>
<status status="PASS" endtime="20201208 14:54:56.229" starttime="20201208 14:54:18.184"></status>
</kw>
<msg timestamp="20201208 14:54:56.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201208 14:54:56.229" starttime="20201208 14:54:18.183"></status>
</kw>
<msg timestamp="20201208 14:54:56.229" level="INFO">${output} = 2020-12-08 14:54:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-08 14:54:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201208 14:54:56.229" starttime="20201208 14:54:18.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201208 14:54:56.230" starttime="20201208 14:54:56.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201208 14:54:56.231" starttime="20201208 14:54:56.230"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201208 14:54:56.231" critical="yes" starttime="20201208 14:54:18.153"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201208 14:54:56.232" starttime="20201208 14:53:35.625"></status>
</suite>
<status status="PASS" elapsedtime="205426" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="582992" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
