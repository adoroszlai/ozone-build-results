<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201203 15:10:28.988" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:03.413" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:08.057" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 15:06:08.057" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:08.057" starttime="20201203 15:06:03.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:08.059" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 15:06:08.059" starttime="20201203 15:06:08.058"></status>
</kw>
<msg timestamp="20201203 15:06:08.059" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:08.059" starttime="20201203 15:06:03.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:08.068" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:12.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:06:12.115" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:12.115" starttime="20201203 15:06:08.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:12.116" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:06:12.116" starttime="20201203 15:06:12.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:06:12.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:06:12.117" starttime="20201203 15:06:12.116"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:12.117" starttime="20201203 15:06:08.062"></status>
</kw>
<msg timestamp="20201203 15:06:12.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:06:12.117" starttime="20201203 15:06:08.062"></status>
</kw>
<msg timestamp="20201203 15:06:12.118" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:12.118" starttime="20201203 15:06:08.061"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201203 15:06:12.118" starttime="20201203 15:06:12.118"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:12.118" starttime="20201203 15:06:08.060"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:12.118" starttime="20201203 15:06:08.060"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:12.126" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:15.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:06:15.848" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:15.848" starttime="20201203 15:06:12.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:15.850" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:06:15.850" starttime="20201203 15:06:15.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:06:15.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:06:15.851" starttime="20201203 15:06:15.850"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:15.851" starttime="20201203 15:06:12.121"></status>
</kw>
<msg timestamp="20201203 15:06:15.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:06:15.851" starttime="20201203 15:06:12.120"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:15.852" starttime="20201203 15:06:12.120"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:15.852" starttime="20201203 15:06:12.119"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:15.852" starttime="20201203 15:06:12.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201203 15:06:15.853" starttime="20201203 15:06:15.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:15.857" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:19.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:06:19.744" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:19.744" starttime="20201203 15:06:15.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:19.745" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:06:15.667Z",
  "modificationTime" : "2020-12-03T15:06:15.667Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201203 15:06:19.745" starttime="20201203 15:06:19.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:06:19.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:06:19.746" starttime="20201203 15:06:19.745"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:19.746" starttime="20201203 15:06:15.854"></status>
</kw>
<msg timestamp="20201203 15:06:19.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:06:19.746" starttime="20201203 15:06:15.853"></status>
</kw>
<msg timestamp="20201203 15:06:19.746" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:19.746" starttime="20201203 15:06:15.853"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201203 15:06:19.747" starttime="20201203 15:06:19.747"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 15:06:19.751" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 15:06:19.751" starttime="20201203 15:06:19.750"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:06:19.751" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 15:06:19.752" starttime="20201203 15:06:19.751"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:19.752" starttime="20201203 15:06:19.750"></status>
</kw>
<msg timestamp="20201203 15:06:19.752" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 15:06:19.752" starttime="20201203 15:06:19.749"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:19.752" starttime="20201203 15:06:19.749"></status>
</kw>
<msg timestamp="20201203 15:06:19.752" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201203 15:06:19.752" starttime="20201203 15:06:19.748"></status>
</kw>
<msg timestamp="20201203 15:06:19.753" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201203 15:06:19.753" starttime="20201203 15:06:19.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:19.758" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:23.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:06:23.765" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:23.765" starttime="20201203 15:06:19.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:23.766" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:06:23.766" starttime="20201203 15:06:23.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:06:23.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:06:23.767" starttime="20201203 15:06:23.767"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:23.767" starttime="20201203 15:06:19.754"></status>
</kw>
<msg timestamp="20201203 15:06:23.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:06:23.768" starttime="20201203 15:06:19.753"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:23.768" starttime="20201203 15:06:19.753"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:23.771" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:32.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:06:32.081" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:32.081" starttime="20201203 15:06:23.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:32.083" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:06:32.083" starttime="20201203 15:06:32.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:06:32.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:06:32.084" starttime="20201203 15:06:32.084"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:32.084" starttime="20201203 15:06:23.769"></status>
</kw>
<msg timestamp="20201203 15:06:32.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:06:32.085" starttime="20201203 15:06:23.769"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:32.085" starttime="20201203 15:06:23.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:32.089" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:38.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:06:38.342" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:38.342" starttime="20201203 15:06:32.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:38.343" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:06:38.343" starttime="20201203 15:06:38.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:06:38.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:06:38.344" starttime="20201203 15:06:38.343"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:38.344" starttime="20201203 15:06:32.086"></status>
</kw>
<msg timestamp="20201203 15:06:38.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:06:38.344" starttime="20201203 15:06:32.086"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:38.344" starttime="20201203 15:06:32.085"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:38.349" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:44.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:06:44.284" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:44.284" starttime="20201203 15:06:38.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:44.285" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:06:44.285" starttime="20201203 15:06:44.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:06:44.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:06:44.286" starttime="20201203 15:06:44.286"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:44.287" starttime="20201203 15:06:38.345"></status>
</kw>
<msg timestamp="20201203 15:06:44.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:06:44.287" starttime="20201203 15:06:38.345"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:44.287" starttime="20201203 15:06:38.344"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:06:44.287" critical="yes" starttime="20201203 15:06:03.408"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 15:06:44.300" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 15:06:44.300" starttime="20201203 15:06:44.300"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:06:44.301" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 15:06:44.301" starttime="20201203 15:06:44.300"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:44.301" starttime="20201203 15:06:44.299"></status>
</kw>
<msg timestamp="20201203 15:06:44.301" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 15:06:44.301" starttime="20201203 15:06:44.298"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:44.301" starttime="20201203 15:06:44.298"></status>
</kw>
<msg timestamp="20201203 15:06:44.302" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 15:06:44.302" starttime="20201203 15:06:44.297"></status>
</kw>
<msg timestamp="20201203 15:06:44.302" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 15:06:44.302" starttime="20201203 15:06:44.296"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:44.308" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:48.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:06:48.072" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:48.072" starttime="20201203 15:06:44.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:48.073" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:06:48.073" starttime="20201203 15:06:48.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:06:48.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:06:48.074" starttime="20201203 15:06:48.074"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:48.075" starttime="20201203 15:06:44.303"></status>
</kw>
<msg timestamp="20201203 15:06:48.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:06:48.075" starttime="20201203 15:06:44.303"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:48.075" starttime="20201203 15:06:44.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:06:48.079" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:06:52.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:06:52.101" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:06:52.101" starttime="20201203 15:06:48.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:06:52.102" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:06:52.102" starttime="20201203 15:06:52.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:06:52.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:06:52.103" starttime="20201203 15:06:52.103"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:52.103" starttime="20201203 15:06:48.076"></status>
</kw>
<msg timestamp="20201203 15:06:52.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:06:52.104" starttime="20201203 15:06:48.076"></status>
</kw>
<status status="PASS" endtime="20201203 15:06:52.104" starttime="20201203 15:06:48.075"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:06:52.104" critical="yes" starttime="20201203 15:06:44.294"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201203 15:06:52.105" starttime="20201203 15:06:03.343"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 15:08:52.320" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 15:08:52.320" starttime="20201203 15:08:52.320"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:08:52.321" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 15:08:52.321" starttime="20201203 15:08:52.320"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:52.321" starttime="20201203 15:08:52.319"></status>
</kw>
<msg timestamp="20201203 15:08:52.321" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 15:08:52.321" starttime="20201203 15:08:52.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:08:52.322" starttime="20201203 15:08:52.322"></status>
</kw>
<msg timestamp="20201203 15:08:52.322" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 15:08:52.322" starttime="20201203 15:08:52.321"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:52.323" starttime="20201203 15:08:52.318"></status>
</kw>
<msg timestamp="20201203 15:08:52.323" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 15:08:52.323" starttime="20201203 15:08:52.318"></status>
</kw>
<msg timestamp="20201203 15:08:52.323" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 15:08:52.323" starttime="20201203 15:08:52.317"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 15:08:52.323" level="INFO">${random} = 19290</msg>
<status status="PASS" endtime="20201203 15:08:52.324" starttime="20201203 15:08:52.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:08:52.329" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-19290 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:08:56.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:08:56.456" level="INFO">${output} = 2020-12-03 15:08:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:08:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201203 15:08:56.456" starttime="20201203 15:08:52.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:08:56.458" level="INFO">2020-12-03 15:08:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:08:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:08:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 15:08:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 15:08:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-45BE2FA31D7B-&gt;17221f9c-84fc-4467-ab4d-87a4b34ca706
2020-12-03 15:08:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201203 15:08:56.458" starttime="20201203 15:08:56.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:08:56.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:08:56.459" starttime="20201203 15:08:56.458"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:56.459" starttime="20201203 15:08:52.324"></status>
</kw>
<msg timestamp="20201203 15:08:56.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:08:56.460" starttime="20201203 15:08:52.324"></status>
</kw>
<msg timestamp="20201203 15:08:56.460" level="INFO">${result} = 2020-12-03 15:08:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:08:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201203 15:08:56.460" starttime="20201203 15:08:52.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:08:56.466" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:08:58.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:08:58.940" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 15:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 15:08 ofs://om/volume1/bucket1/ozone-19290
-rw-...</msg>
<status status="PASS" endtime="20201203 15:08:58.940" starttime="20201203 15:08:56.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:08:58.941" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 15:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 15:08 ofs://om/volume1/bucket1/ozone-19290
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 15:07 ofs://om/volume1/bucket1/ozone-60511
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 15:06 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 15:08 ofs://om/volume1/bucket1/wordcount-19.txt</msg>
<status status="PASS" endtime="20201203 15:08:58.941" starttime="20201203 15:08:58.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:08:58.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:08:58.942" starttime="20201203 15:08:58.942"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:58.943" starttime="20201203 15:08:56.462"></status>
</kw>
<msg timestamp="20201203 15:08:58.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:08:58.943" starttime="20201203 15:08:56.462"></status>
</kw>
<msg timestamp="20201203 15:08:58.943" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 15:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 15:08 ofs://om/volume1/bucket1/ozone-19290
-rw-...</msg>
<status status="PASS" endtime="20201203 15:08:58.943" starttime="20201203 15:08:56.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:08:58.944" starttime="20201203 15:08:58.943"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 15:08:58.944" critical="yes" starttime="20201203 15:08:52.316"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201203 15:08:58.945" starttime="20201203 15:08:52.262"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 15:07:14.163" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 15:07:14.163" starttime="20201203 15:07:14.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:07:14.163" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 15:07:14.163" starttime="20201203 15:07:14.163"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:14.164" starttime="20201203 15:07:14.161"></status>
</kw>
<msg timestamp="20201203 15:07:14.164" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 15:07:14.164" starttime="20201203 15:07:14.161"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:14.164" starttime="20201203 15:07:14.160"></status>
</kw>
<msg timestamp="20201203 15:07:14.164" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 15:07:14.164" starttime="20201203 15:07:14.159"></status>
</kw>
<msg timestamp="20201203 15:07:14.165" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 15:07:14.165" starttime="20201203 15:07:14.158"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 15:07:14.166" level="INFO">${random} = 60511</msg>
<status status="PASS" endtime="20201203 15:07:14.166" starttime="20201203 15:07:14.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:07:14.171" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-60511 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:07:18.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:07:18.466" level="INFO">${output} = 2020-12-03 15:07:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:07:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201203 15:07:18.466" starttime="20201203 15:07:14.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:07:18.467" level="INFO">2020-12-03 15:07:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:07:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:07:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 15:07:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 15:07:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C3C9D1182D57-&gt;17221f9c-84fc-4467-ab4d-87a4b34ca706
2020-12-03 15:07:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201203 15:07:18.467" starttime="20201203 15:07:18.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:07:18.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:07:18.468" starttime="20201203 15:07:18.467"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:18.468" starttime="20201203 15:07:14.167"></status>
</kw>
<msg timestamp="20201203 15:07:18.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:07:18.468" starttime="20201203 15:07:14.166"></status>
</kw>
<msg timestamp="20201203 15:07:18.469" level="INFO">${result} = 2020-12-03 15:07:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:07:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201203 15:07:18.469" starttime="20201203 15:07:14.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:07:18.474" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:07:20.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:07:20.666" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 15:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 15:07 o3fs://bucket1.volume1.om/ozone-60511
dr...</msg>
<status status="PASS" endtime="20201203 15:07:20.666" starttime="20201203 15:07:18.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:07:20.667" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 15:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 15:07 o3fs://bucket1.volume1.om/ozone-60511
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 15:06 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 15:07:20.667" starttime="20201203 15:07:20.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:07:20.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:07:20.668" starttime="20201203 15:07:20.668"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:20.668" starttime="20201203 15:07:18.471"></status>
</kw>
<msg timestamp="20201203 15:07:20.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:07:20.669" starttime="20201203 15:07:18.469"></status>
</kw>
<msg timestamp="20201203 15:07:20.669" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 15:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 15:07 o3fs://bucket1.volume1.om/ozone-60511
dr...</msg>
<status status="PASS" endtime="20201203 15:07:20.669" starttime="20201203 15:07:18.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:07:20.669" starttime="20201203 15:07:20.669"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 15:07:20.670" critical="yes" starttime="20201203 15:07:14.157"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201203 15:07:20.671" starttime="20201203 15:07:14.100"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:07:08.185" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:07:08.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:07:08.187" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201203 15:07:08.187" starttime="20201203 15:07:08.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:07:08.189" level="INFO">rm</msg>
<status status="PASS" endtime="20201203 15:07:08.189" starttime="20201203 15:07:08.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:07:08.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:07:08.190" starttime="20201203 15:07:08.189"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:08.190" starttime="20201203 15:07:08.180"></status>
</kw>
<msg timestamp="20201203 15:07:08.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:07:08.190" starttime="20201203 15:07:08.180"></status>
</kw>
<msg timestamp="20201203 15:07:08.190" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201203 15:07:08.191" starttime="20201203 15:07:08.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:07:08.192" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:07:08.192" starttime="20201203 15:07:08.191"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:07:08.196" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:07:08.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:07:08.219" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:07:08.219" starttime="20201203 15:07:08.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:07:08.220" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:07:08.221" starttime="20201203 15:07:08.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:07:08.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:07:08.222" starttime="20201203 15:07:08.221"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:08.222" starttime="20201203 15:07:08.193"></status>
</kw>
<msg timestamp="20201203 15:07:08.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:07:08.222" starttime="20201203 15:07:08.193"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:08.222" starttime="20201203 15:07:08.192"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:08.222" starttime="20201203 15:07:08.192"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:08.222" starttime="20201203 15:07:08.179"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:07:08.223" critical="yes" starttime="20201203 15:07:08.178"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201203 15:07:08.224" starttime="20201203 15:07:08.124"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:05:57.449" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:05:57.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:05:57.451" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201203 15:05:57.451" starttime="20201203 15:05:57.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:05:57.453" level="INFO">om</msg>
<status status="PASS" endtime="20201203 15:05:57.453" starttime="20201203 15:05:57.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:05:57.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:05:57.454" starttime="20201203 15:05:57.453"></status>
</kw>
<status status="PASS" endtime="20201203 15:05:57.455" starttime="20201203 15:05:57.443"></status>
</kw>
<msg timestamp="20201203 15:05:57.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:05:57.455" starttime="20201203 15:05:57.443"></status>
</kw>
<msg timestamp="20201203 15:05:57.455" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201203 15:05:57.455" starttime="20201203 15:05:57.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:05:57.456" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:05:57.456" starttime="20201203 15:05:57.456"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:05:57.461" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:05:57.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:05:57.479" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:05:57.479" starttime="20201203 15:05:57.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:05:57.480" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:05:57.480" starttime="20201203 15:05:57.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:05:57.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:05:57.481" starttime="20201203 15:05:57.480"></status>
</kw>
<status status="PASS" endtime="20201203 15:05:57.481" starttime="20201203 15:05:57.458"></status>
</kw>
<msg timestamp="20201203 15:05:57.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:05:57.482" starttime="20201203 15:05:57.457"></status>
</kw>
<status status="PASS" endtime="20201203 15:05:57.482" starttime="20201203 15:05:57.457"></status>
</kw>
<status status="PASS" endtime="20201203 15:05:57.482" starttime="20201203 15:05:57.456"></status>
</kw>
<status status="PASS" endtime="20201203 15:05:57.482" starttime="20201203 15:05:57.442"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:05:57.482" critical="yes" starttime="20201203 15:05:57.441"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201203 15:05:57.483" starttime="20201203 15:05:57.387"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:09:05.109" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:09:05.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:09:05.116" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:09:05.116" starttime="20201203 15:09:05.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:09:05.117" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:09:05.117" starttime="20201203 15:09:05.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:09:05.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:09:05.118" starttime="20201203 15:09:05.117"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:05.118" starttime="20201203 15:09:05.103"></status>
</kw>
<msg timestamp="20201203 15:09:05.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:09:05.119" starttime="20201203 15:09:05.103"></status>
</kw>
<msg timestamp="20201203 15:09:05.119" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:09:05.119" starttime="20201203 15:09:05.103"></status>
</kw>
<msg timestamp="20201203 15:09:05.119" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:09:05.119" starttime="20201203 15:09:05.102"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 15:09:05.124" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 15:09:05.124" starttime="20201203 15:09:05.124"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:09:05.125" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 15:09:05.125" starttime="20201203 15:09:05.124"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:05.125" starttime="20201203 15:09:05.122"></status>
</kw>
<msg timestamp="20201203 15:09:05.125" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 15:09:05.125" starttime="20201203 15:09:05.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:09:05.126" starttime="20201203 15:09:05.126"></status>
</kw>
<msg timestamp="20201203 15:09:05.127" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 15:09:05.127" starttime="20201203 15:09:05.126"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:05.127" starttime="20201203 15:09:05.121"></status>
</kw>
<msg timestamp="20201203 15:09:05.127" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 15:09:05.127" starttime="20201203 15:09:05.120"></status>
</kw>
<msg timestamp="20201203 15:09:05.127" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 15:09:05.127" starttime="20201203 15:09:05.119"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:09:05.132" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:09:42.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:09:42.257" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 15:09:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:09:07 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201203 15:09:42.257" starttime="20201203 15:09:05.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:09:42.258" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-03 15:09:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:09:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:09:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 15:09:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 15:09:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E52C748388B8-&gt;17221f9c-84fc-4467-ab4d-87a4b34ca706
2020-12-03 15:09:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-03 15:09:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-03 15:09:09 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-03 15:09:09 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008149781, maxDate=1607612949781, sequenceNumber=3, masterKeyId=2))
2020-12-03 15:09:09 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9a c1 99 c9 e2 2e 38 9a c9 cb e9 e4 2e 40 03 48 01 5a 0d 33 31 34 33 36 36 34 30 33 31 34 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-03 15:09:09 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008149781, maxDate=1607612949781, sequenceNumber=3, masterKeyId=2)
2020-12-03 15:09:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 15:09:10 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 15:09:10 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 15:09:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607007909056_0003
2020-12-03 15:09:10 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008149781, maxDate=1607612949781, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9a c1 99 c9 e2 2e 38 9a c9 cb e9 e4 2e 40 03 48 01 5a 0d 33 31 34 33 36 36 34 30 33 31 34 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-03 15:09:11 INFO  Configuration:2795 - resource-types.xml not found
2020-12-03 15:09:11 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-03 15:09:11 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-03 15:09:12 INFO  YarnClientImpl:329 - Submitted application application_1607007909056_0003
2020-12-03 15:09:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607007909056_0003/
2020-12-03 15:09:12 INFO  Job:1619 - Running job: job_1607007909056_0003
2020-12-03 15:09:20 INFO  Job:1640 - Job job_1607007909056_0003 running in uber mode : false
2020-12-03 15:09:20 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 15:09:32 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 15:09:34 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 15:09:40 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 15:09:41 INFO  Job:1658 - Job job_1607007909056_0003 completed successfully
2020-12-03 15:09:41 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=54988
		Total time spent by all reduces in occupied slots (ms)=9144
		Total time spent by all map tasks (ms)=27494
		Total time spent by all reduce tasks (ms)=4572
		Total vcore-milliseconds taken by all map tasks=27494
		Total vcore-milliseconds taken by all reduce tasks=4572
		Total megabyte-milliseconds taken by all map tasks=56307712
		Total megabyte-milliseconds taken by all reduce tasks=9363456
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1220
		CPU time spent (ms)=8110
		Physical memory (bytes) snapshot=1444622336
		Virtual memory (bytes) snapshot=14046838784
		Total committed heap usage (bytes)=1256194048
		Peak Map Physical memory (bytes)=388907008
		Peak Map Virtual memory (bytes)=3508088832
		Peak Reduce Physical memory (bytes)=309006336
		Peak Reduce Virtual memory (bytes)=3530125312
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.573 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201203 15:09:42.258" starttime="20201203 15:09:42.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:09:42.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:09:42.259" starttime="20201203 15:09:42.258"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.259" starttime="20201203 15:09:05.128"></status>
</kw>
<msg timestamp="20201203 15:09:42.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:09:42.259" starttime="20201203 15:09:05.128"></status>
</kw>
<msg timestamp="20201203 15:09:42.260" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 15:09:07 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:09:07 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201203 15:09:42.260" starttime="20201203 15:09:05.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 15:09:42.261" starttime="20201203 15:09:42.260"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 15:09:42.261" critical="yes" starttime="20201203 15:09:05.101"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:09:42.268" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:09:42.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:09:42.275" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:09:42.275" starttime="20201203 15:09:42.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:09:42.276" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:09:42.276" starttime="20201203 15:09:42.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:09:42.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:09:42.276" starttime="20201203 15:09:42.276"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.277" starttime="20201203 15:09:42.264"></status>
</kw>
<msg timestamp="20201203 15:09:42.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:09:42.277" starttime="20201203 15:09:42.264"></status>
</kw>
<msg timestamp="20201203 15:09:42.277" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:09:42.277" starttime="20201203 15:09:42.263"></status>
</kw>
<msg timestamp="20201203 15:09:42.278" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:09:42.278" starttime="20201203 15:09:42.262"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 15:09:42.278" level="INFO">${random} = 14</msg>
<status status="PASS" endtime="20201203 15:09:42.278" starttime="20201203 15:09:42.278"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 15:09:42.282" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 15:09:42.282" starttime="20201203 15:09:42.282"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:09:42.283" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 15:09:42.283" starttime="20201203 15:09:42.282"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.283" starttime="20201203 15:09:42.281"></status>
</kw>
<msg timestamp="20201203 15:09:42.283" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 15:09:42.283" starttime="20201203 15:09:42.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:09:42.284" starttime="20201203 15:09:42.284"></status>
</kw>
<msg timestamp="20201203 15:09:42.284" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 15:09:42.284" starttime="20201203 15:09:42.283"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.285" starttime="20201203 15:09:42.280"></status>
</kw>
<msg timestamp="20201203 15:09:42.285" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 15:09:42.285" starttime="20201203 15:09:42.279"></status>
</kw>
<msg timestamp="20201203 15:09:42.285" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 15:09:42.285" starttime="20201203 15:09:42.278"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 15:09:42.288" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 15:09:42.288" starttime="20201203 15:09:42.288"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:09:42.289" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 15:09:42.289" starttime="20201203 15:09:42.289"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.289" starttime="20201203 15:09:42.287"></status>
</kw>
<msg timestamp="20201203 15:09:42.289" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 15:09:42.289" starttime="20201203 15:09:42.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 15:09:42.291" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201203 15:09:42.291" starttime="20201203 15:09:42.290"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:09:42.291" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201203 15:09:42.291" starttime="20201203 15:09:42.291"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.292" starttime="20201203 15:09:42.290"></status>
</kw>
<msg timestamp="20201203 15:09:42.292" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201203 15:09:42.292" starttime="20201203 15:09:42.290"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.292" starttime="20201203 15:09:42.286"></status>
</kw>
<msg timestamp="20201203 15:09:42.292" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201203 15:09:42.292" starttime="20201203 15:09:42.286"></status>
</kw>
<msg timestamp="20201203 15:09:42.293" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201203 15:09:42.293" starttime="20201203 15:09:42.285"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 15:09:42.296" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 15:09:42.296" starttime="20201203 15:09:42.296"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:09:42.296" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 15:09:42.297" starttime="20201203 15:09:42.296"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.297" starttime="20201203 15:09:42.295"></status>
</kw>
<msg timestamp="20201203 15:09:42.297" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 15:09:42.297" starttime="20201203 15:09:42.295"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 15:09:42.298" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201203 15:09:42.298" starttime="20201203 15:09:42.298"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:09:42.299" level="INFO">${result} = /wordcount-14.txt</msg>
<status status="PASS" endtime="20201203 15:09:42.299" starttime="20201203 15:09:42.298"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.299" starttime="20201203 15:09:42.297"></status>
</kw>
<msg timestamp="20201203 15:09:42.299" level="INFO">${path_with_leading} = /wordcount-14.txt</msg>
<status status="PASS" endtime="20201203 15:09:42.299" starttime="20201203 15:09:42.297"></status>
</kw>
<status status="PASS" endtime="20201203 15:09:42.300" starttime="20201203 15:09:42.294"></status>
</kw>
<msg timestamp="20201203 15:09:42.300" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-14.txt</msg>
<status status="PASS" endtime="20201203 15:09:42.300" starttime="20201203 15:09:42.293"></status>
</kw>
<msg timestamp="20201203 15:09:42.300" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-14.txt</msg>
<status status="PASS" endtime="20201203 15:09:42.300" starttime="20201203 15:09:42.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:09:42.305" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-14.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:10:19.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:10:19.821" level="INFO">${output} = 2020-12-03 15:09:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-03 15:09:44 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20201203 15:10:19.822" starttime="20201203 15:09:42.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:10:19.823" level="INFO">2020-12-03 15:09:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-03 15:09:44 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-03 15:09:45 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008184993, maxDate=1607612984993, sequenceNumber=4, masterKeyId=2))
2020-12-03 15:09:45 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 d4 9b c9 e2 2e 38 b7 dc cd e9 e4 2e 40 04 48 01 5a 0d 33 31 34 33 36 36 34 30 33 31 34 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-03 15:09:45 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008184993, maxDate=1607612984993, sequenceNumber=4, masterKeyId=2)
2020-12-03 15:09:45 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 15:09:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:09:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:09:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 15:09:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 15:09:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E2D767C1CF03-&gt;17221f9c-84fc-4467-ab4d-87a4b34ca706
2020-12-03 15:09:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 15:09:46 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 15:09:47 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 15:09:47 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607007909056_0004
2020-12-03 15:09:47 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008184993, maxDate=1607612984993, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b7 d4 9b c9 e2 2e 38 b7 dc cd e9 e4 2e 40 04 48 01 5a 0d 33 31 34 33 36 36 34 30 33 31 34 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-03 15:09:47 INFO  Configuration:2795 - resource-types.xml not found
2020-12-03 15:09:47 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-03 15:09:47 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-03 15:09:48 INFO  YarnClientImpl:329 - Submitted application application_1607007909056_0004
2020-12-03 15:09:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607007909056_0004/
2020-12-03 15:09:48 INFO  Job:1619 - Running job: job_1607007909056_0004
2020-12-03 15:09:58 INFO  Job:1640 - Job job_1607007909056_0004 running in uber mode : false
2020-12-03 15:09:58 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 15:10:09 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 15:10:11 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 15:10:16 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 15:10:19 INFO  Job:1658 - Job job_1607007909056_0004 completed successfully
2020-12-03 15:10:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1128409
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39713
		OFS: Number of bytes written=22202
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53882
		Total time spent by all reduces in occupied slots (ms)=8494
		Total time spent by all map tasks (ms)=26941
		Total time spent by all reduce tasks (ms)=4247
		Total vcore-milliseconds taken by all map tasks=26941
		Total vcore-milliseconds taken by all reduce tasks=4247
		Total megabyte-milliseconds taken by all map tasks=55175168
		Total megabyte-milliseconds taken by all reduce tasks=8697856
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1654
		CPU time spent (ms)=8800
		Physical memory (bytes) snapshot=1610346496
		Virtual memory (bytes) snapshot=14038519808
		Total committed heap usage (bytes)=1400897536
		Peak Map Physical memory (bytes)=541274112
		Peak Map Virtual memory (bytes)=3509694464
		Peak Reduce Physical memory (bytes)=297910272
		Peak Reduce Virtual memory (bytes)=3524919296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201203 15:10:19.823" starttime="20201203 15:10:19.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:10:19.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:10:19.824" starttime="20201203 15:10:19.823"></status>
</kw>
<status status="PASS" endtime="20201203 15:10:19.824" starttime="20201203 15:09:42.301"></status>
</kw>
<msg timestamp="20201203 15:10:19.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:10:19.825" starttime="20201203 15:09:42.301"></status>
</kw>
<msg timestamp="20201203 15:10:19.825" level="INFO">${output} = 2020-12-03 15:09:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-03 15:09:44 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20201203 15:10:19.825" starttime="20201203 15:09:42.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201203 15:10:19.826" starttime="20201203 15:10:19.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 15:10:19.826" starttime="20201203 15:10:19.826"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 15:10:19.827" critical="yes" starttime="20201203 15:09:42.261"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201203 15:10:19.829" starttime="20201203 15:09:05.043"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:07:26.592" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:07:26.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:07:26.597" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:07:26.597" starttime="20201203 15:07:26.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:07:26.598" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:07:26.598" starttime="20201203 15:07:26.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:07:26.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:07:26.598" starttime="20201203 15:07:26.598"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:26.599" starttime="20201203 15:07:26.586"></status>
</kw>
<msg timestamp="20201203 15:07:26.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:07:26.599" starttime="20201203 15:07:26.585"></status>
</kw>
<msg timestamp="20201203 15:07:26.599" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:07:26.599" starttime="20201203 15:07:26.585"></status>
</kw>
<msg timestamp="20201203 15:07:26.600" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:07:26.600" starttime="20201203 15:07:26.585"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 15:07:26.606" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 15:07:26.606" starttime="20201203 15:07:26.605"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:07:26.606" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 15:07:26.606" starttime="20201203 15:07:26.606"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:26.606" starttime="20201203 15:07:26.603"></status>
</kw>
<msg timestamp="20201203 15:07:26.607" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 15:07:26.607" starttime="20201203 15:07:26.602"></status>
</kw>
<status status="PASS" endtime="20201203 15:07:26.607" starttime="20201203 15:07:26.601"></status>
</kw>
<msg timestamp="20201203 15:07:26.607" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 15:07:26.607" starttime="20201203 15:07:26.601"></status>
</kw>
<msg timestamp="20201203 15:07:26.608" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 15:07:26.608" starttime="20201203 15:07:26.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:07:26.613" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:08:10.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:08:10.562" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 15:07:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:07:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201203 15:08:10.562" starttime="20201203 15:07:26.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:08:10.564" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-03 15:07:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:07:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:07:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 15:07:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 15:07:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C647AB3EC210-&gt;17221f9c-84fc-4467-ab4d-87a4b34ca706
2020-12-03 15:07:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-03 15:07:30 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-03 15:07:31 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-03 15:07:31 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008051637, maxDate=1607612851637, sequenceNumber=1, masterKeyId=2))
2020-12-03 15:07:31 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff bf 93 c9 e2 2e 38 ff c7 c5 e9 e4 2e 40 01 48 01 5a 0d 33 31 34 33 36 36 34 30 33 31 34 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-03 15:07:31 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008051637, maxDate=1607612851637, sequenceNumber=1, masterKeyId=2)
2020-12-03 15:07:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 15:07:32 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 15:07:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607007909056_0001
2020-12-03 15:07:32 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008051637, maxDate=1607612851637, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff bf 93 c9 e2 2e 38 ff c7 c5 e9 e4 2e 40 01 48 01 5a 0d 33 31 34 33 36 36 34 30 33 31 34 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-03 15:07:33 INFO  Configuration:2795 - resource-types.xml not found
2020-12-03 15:07:33 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-03 15:07:33 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-03 15:07:34 INFO  YarnClientImpl:329 - Submitted application application_1607007909056_0001
2020-12-03 15:07:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607007909056_0001/
2020-12-03 15:07:35 INFO  Job:1619 - Running job: job_1607007909056_0001
2020-12-03 15:07:47 INFO  Job:1640 - Job job_1607007909056_0001 running in uber mode : false
2020-12-03 15:07:47 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 15:07:59 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 15:08:00 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 15:08:01 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 15:08:06 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 15:08:09 INFO  Job:1658 - Job job_1607007909056_0001 completed successfully
2020-12-03 15:08:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065981
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=55448
		Total time spent by all reduces in occupied slots (ms)=10190
		Total time spent by all map tasks (ms)=27724
		Total time spent by all reduce tasks (ms)=5095
		Total vcore-milliseconds taken by all map tasks=27724
		Total vcore-milliseconds taken by all reduce tasks=5095
		Total megabyte-milliseconds taken by all map tasks=56778752
		Total megabyte-milliseconds taken by all reduce tasks=10434560
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1231
		CPU time spent (ms)=8970
		Physical memory (bytes) snapshot=1456537600
		Virtual memory (bytes) snapshot=14057467904
		Total committed heap usage (bytes)=1171259392
		Peak Map Physical memory (bytes)=387969024
		Peak Map Virtual memory (bytes)=3511427072
		Peak Reduce Physical memory (bytes)=300625920
		Peak Reduce Virtual memory (bytes)=3529801728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.178 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201203 15:08:10.564" starttime="20201203 15:08:10.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:08:10.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:08:10.565" starttime="20201203 15:08:10.564"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:10.565" starttime="20201203 15:07:26.609"></status>
</kw>
<msg timestamp="20201203 15:08:10.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:08:10.565" starttime="20201203 15:07:26.608"></status>
</kw>
<msg timestamp="20201203 15:08:10.566" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 15:07:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:07:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201203 15:08:10.566" starttime="20201203 15:07:26.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 15:08:10.567" starttime="20201203 15:08:10.566"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 15:08:10.567" critical="yes" starttime="20201203 15:07:26.584"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:08:10.573" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:08:10.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:08:10.583" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:08:10.583" starttime="20201203 15:08:10.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:08:10.584" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:08:10.584" starttime="20201203 15:08:10.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:08:10.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:08:10.585" starttime="20201203 15:08:10.584"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:10.585" starttime="20201203 15:08:10.570"></status>
</kw>
<msg timestamp="20201203 15:08:10.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:08:10.586" starttime="20201203 15:08:10.570"></status>
</kw>
<msg timestamp="20201203 15:08:10.586" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:08:10.586" starttime="20201203 15:08:10.569"></status>
</kw>
<msg timestamp="20201203 15:08:10.587" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 15:08:10.587" starttime="20201203 15:08:10.569"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 15:08:10.587" level="INFO">${random} = 19</msg>
<status status="PASS" endtime="20201203 15:08:10.587" starttime="20201203 15:08:10.587"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 15:08:10.592" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 15:08:10.592" starttime="20201203 15:08:10.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:08:10.593" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 15:08:10.593" starttime="20201203 15:08:10.593"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:10.593" starttime="20201203 15:08:10.591"></status>
</kw>
<msg timestamp="20201203 15:08:10.593" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 15:08:10.594" starttime="20201203 15:08:10.590"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:10.594" starttime="20201203 15:08:10.589"></status>
</kw>
<msg timestamp="20201203 15:08:10.594" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 15:08:10.594" starttime="20201203 15:08:10.588"></status>
</kw>
<msg timestamp="20201203 15:08:10.594" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 15:08:10.594" starttime="20201203 15:08:10.587"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 15:08:10.598" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 15:08:10.598" starttime="20201203 15:08:10.598"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:08:10.599" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 15:08:10.599" starttime="20201203 15:08:10.599"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:10.599" starttime="20201203 15:08:10.597"></status>
</kw>
<msg timestamp="20201203 15:08:10.600" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 15:08:10.600" starttime="20201203 15:08:10.597"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:10.600" starttime="20201203 15:08:10.596"></status>
</kw>
<msg timestamp="20201203 15:08:10.600" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201203 15:08:10.600" starttime="20201203 15:08:10.595"></status>
</kw>
<msg timestamp="20201203 15:08:10.600" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201203 15:08:10.600" starttime="20201203 15:08:10.594"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 15:08:10.604" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 15:08:10.604" starttime="20201203 15:08:10.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:08:10.606" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 15:08:10.606" starttime="20201203 15:08:10.604"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:10.606" starttime="20201203 15:08:10.603"></status>
</kw>
<msg timestamp="20201203 15:08:10.606" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 15:08:10.606" starttime="20201203 15:08:10.603"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:10.607" starttime="20201203 15:08:10.602"></status>
</kw>
<msg timestamp="20201203 15:08:10.607" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-19.txt</msg>
<status status="PASS" endtime="20201203 15:08:10.607" starttime="20201203 15:08:10.601"></status>
</kw>
<msg timestamp="20201203 15:08:10.607" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-19.txt</msg>
<status status="PASS" endtime="20201203 15:08:10.607" starttime="20201203 15:08:10.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:08:10.612" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-19.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:08:45.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:08:45.715" level="INFO">${output} = 2020-12-03 15:08:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-03 15:08:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20201203 15:08:45.715" starttime="20201203 15:08:10.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:08:45.716" level="INFO">2020-12-03 15:08:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-03 15:08:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-03 15:08:13 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008093377, maxDate=1607612893377, sequenceNumber=2, masterKeyId=2))
2020-12-03 15:08:13 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 be 88 96 c9 e2 2e 38 be 90 c8 e9 e4 2e 40 02 48 01 5a 0d 33 31 34 33 36 36 34 30 33 31 34 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-03 15:08:13 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008093377, maxDate=1607612893377, sequenceNumber=2, masterKeyId=2)
2020-12-03 15:08:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 15:08:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 15:08:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:08:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 15:08:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 15:08:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8363929E2B4C-&gt;17221f9c-84fc-4467-ab4d-87a4b34ca706
2020-12-03 15:08:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 15:08:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 15:08:15 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 15:08:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607007909056_0002
2020-12-03 15:08:15 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607008093377, maxDate=1607612893377, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 be 88 96 c9 e2 2e 38 be 90 c8 e9 e4 2e 40 02 48 01 5a 0d 33 31 34 33 36 36 34 30 33 31 34 36 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-03 15:08:16 INFO  Configuration:2795 - resource-types.xml not found
2020-12-03 15:08:16 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-03 15:08:16 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-03 15:08:17 INFO  YarnClientImpl:329 - Submitted application application_1607007909056_0002
2020-12-03 15:08:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607007909056_0002/
2020-12-03 15:08:17 INFO  Job:1619 - Running job: job_1607007909056_0002
2020-12-03 15:08:25 INFO  Job:1640 - Job job_1607007909056_0002 running in uber mode : false
2020-12-03 15:08:25 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 15:08:38 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 15:08:39 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 15:08:40 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 15:08:44 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 15:08:45 INFO  Job:1658 - Job job_1607007909056_0002 completed successfully
2020-12-03 15:08:45 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1128493
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39716
		O3FS: Number of bytes written=22202
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52098
		Total time spent by all reduces in occupied slots (ms)=8260
		Total time spent by all map tasks (ms)=26049
		Total time spent by all reduce tasks (ms)=4130
		Total vcore-milliseconds taken by all map tasks=26049
		Total vcore-milliseconds taken by all reduce tasks=4130
		Total megabyte-milliseconds taken by all map tasks=53348352
		Total megabyte-milliseconds taken by all reduce tasks=8458240
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1203
		CPU time spent (ms)=8410
		Physical memory (bytes) snapshot=1464573952
		Virtual memory (bytes) snapshot=14060150784
		Total committed heap usage (bytes)=1257766912
		Peak Map Physical memory (bytes)=397041664
		Peak Map Virtual memory (bytes)=3513888768
		Peak Reduce Physical memory (bytes)=302481408
		Peak Reduce Virtual memory (bytes)=3528724480
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201203 15:08:45.716" starttime="20201203 15:08:45.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:08:45.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:08:45.717" starttime="20201203 15:08:45.717"></status>
</kw>
<status status="PASS" endtime="20201203 15:08:45.718" starttime="20201203 15:08:10.608"></status>
</kw>
<msg timestamp="20201203 15:08:45.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:08:45.718" starttime="20201203 15:08:10.608"></status>
</kw>
<msg timestamp="20201203 15:08:45.718" level="INFO">${output} = 2020-12-03 15:08:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-03 15:08:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20201203 15:08:45.718" starttime="20201203 15:08:10.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201203 15:08:45.719" starttime="20201203 15:08:45.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 15:08:45.719" starttime="20201203 15:08:45.719"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 15:08:45.720" critical="yes" starttime="20201203 15:08:10.568"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201203 15:08:45.721" starttime="20201203 15:07:26.523"></status>
</suite>
<status status="PASS" elapsedtime="216196" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
