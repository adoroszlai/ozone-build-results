<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201203 14:37:27.789" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:08.495" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:11.529" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 14:23:11.530" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 14:23:11.530" starttime="20201203 14:23:08.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:11.531" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 14:23:11.532" starttime="20201203 14:23:11.530"></status>
</kw>
<msg timestamp="20201203 14:23:11.532" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 14:23:11.532" starttime="20201203 14:23:08.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:11.540" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:14.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:14.203" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:23:14.203" starttime="20201203 14:23:11.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:14.204" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:23:14.205" starttime="20201203 14:23:14.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:14.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:14.205" starttime="20201203 14:23:14.205"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:14.206" starttime="20201203 14:23:11.534"></status>
</kw>
<msg timestamp="20201203 14:23:14.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:14.206" starttime="20201203 14:23:11.534"></status>
</kw>
<msg timestamp="20201203 14:23:14.206" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201203 14:23:14.206" starttime="20201203 14:23:11.533"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201203 14:23:14.207" starttime="20201203 14:23:14.206"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:14.207" starttime="20201203 14:23:11.533"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:14.207" starttime="20201203 14:23:11.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:14.213" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:16.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:16.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:23:16.526" starttime="20201203 14:23:14.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:16.528" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:23:16.528" starttime="20201203 14:23:16.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:16.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:16.529" starttime="20201203 14:23:16.528"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:16.529" starttime="20201203 14:23:14.209"></status>
</kw>
<msg timestamp="20201203 14:23:16.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:16.529" starttime="20201203 14:23:14.209"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:16.529" starttime="20201203 14:23:14.208"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:16.530" starttime="20201203 14:23:14.207"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:16.530" starttime="20201203 14:23:14.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201203 14:23:16.530" starttime="20201203 14:23:16.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:16.534" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:19.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:19.047" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T14:23:16.485Z",
  "modificat...</msg>
<status status="PASS" endtime="20201203 14:23:19.047" starttime="20201203 14:23:16.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:19.048" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T14:23:16.485Z",
  "modificationTime" : "2020-12-03T14:23:16.485Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201203 14:23:19.048" starttime="20201203 14:23:19.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:19.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:19.049" starttime="20201203 14:23:19.049"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:19.049" starttime="20201203 14:23:16.532"></status>
</kw>
<msg timestamp="20201203 14:23:19.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:19.050" starttime="20201203 14:23:16.531"></status>
</kw>
<msg timestamp="20201203 14:23:19.050" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T14:23:16.485Z",
  "modificat...</msg>
<status status="PASS" endtime="20201203 14:23:19.050" starttime="20201203 14:23:16.530"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201203 14:23:19.051" starttime="20201203 14:23:19.050"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:23:19.055" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:23:19.055" starttime="20201203 14:23:19.054"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:23:19.056" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:23:19.056" starttime="20201203 14:23:19.055"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:19.056" starttime="20201203 14:23:19.054"></status>
</kw>
<msg timestamp="20201203 14:23:19.056" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:23:19.056" starttime="20201203 14:23:19.053"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:19.056" starttime="20201203 14:23:19.052"></status>
</kw>
<msg timestamp="20201203 14:23:19.057" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201203 14:23:19.057" starttime="20201203 14:23:19.051"></status>
</kw>
<msg timestamp="20201203 14:23:19.057" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201203 14:23:19.057" starttime="20201203 14:23:19.051"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:19.060" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:21.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:21.464" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:23:21.464" starttime="20201203 14:23:19.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:21.466" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:23:21.466" starttime="20201203 14:23:21.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:21.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:21.466" starttime="20201203 14:23:21.466"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:21.467" starttime="20201203 14:23:19.058"></status>
</kw>
<msg timestamp="20201203 14:23:21.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:21.467" starttime="20201203 14:23:19.057"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:21.467" starttime="20201203 14:23:19.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:21.471" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:27.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:27.534" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:23:27.534" starttime="20201203 14:23:21.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:27.535" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:23:27.535" starttime="20201203 14:23:27.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:27.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:27.536" starttime="20201203 14:23:27.536"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:27.536" starttime="20201203 14:23:21.468"></status>
</kw>
<msg timestamp="20201203 14:23:27.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:27.537" starttime="20201203 14:23:21.468"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:27.537" starttime="20201203 14:23:21.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:27.541" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:31.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:31.703" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:23:31.703" starttime="20201203 14:23:27.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:31.705" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:23:31.705" starttime="20201203 14:23:31.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:31.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:31.705" starttime="20201203 14:23:31.705"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:31.707" starttime="20201203 14:23:27.538"></status>
</kw>
<msg timestamp="20201203 14:23:31.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:31.708" starttime="20201203 14:23:27.538"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:31.708" starttime="20201203 14:23:27.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:31.712" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:35.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:35.706" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:23:35.706" starttime="20201203 14:23:31.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:35.707" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:23:35.708" starttime="20201203 14:23:35.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:35.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:35.708" starttime="20201203 14:23:35.708"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:35.708" starttime="20201203 14:23:31.709"></status>
</kw>
<msg timestamp="20201203 14:23:35.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:35.709" starttime="20201203 14:23:31.709"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:35.709" starttime="20201203 14:23:31.708"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 14:23:35.709" critical="yes" starttime="20201203 14:23:08.484"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:23:35.714" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:23:35.715" starttime="20201203 14:23:35.714"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:23:35.715" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:23:35.715" starttime="20201203 14:23:35.715"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:35.715" starttime="20201203 14:23:35.713"></status>
</kw>
<msg timestamp="20201203 14:23:35.715" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:23:35.716" starttime="20201203 14:23:35.713"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:35.716" starttime="20201203 14:23:35.712"></status>
</kw>
<msg timestamp="20201203 14:23:35.716" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 14:23:35.716" starttime="20201203 14:23:35.712"></status>
</kw>
<msg timestamp="20201203 14:23:35.716" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 14:23:35.716" starttime="20201203 14:23:35.711"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:35.720" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:38.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:38.146" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:23:38.146" starttime="20201203 14:23:35.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:38.148" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:23:38.148" starttime="20201203 14:23:38.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:38.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:38.149" starttime="20201203 14:23:38.148"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:38.149" starttime="20201203 14:23:35.717"></status>
</kw>
<msg timestamp="20201203 14:23:38.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:38.149" starttime="20201203 14:23:35.717"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:38.150" starttime="20201203 14:23:35.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:38.155" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:40.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:40.496" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:23:40.496" starttime="20201203 14:23:38.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:40.497" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:23:40.497" starttime="20201203 14:23:40.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:40.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:40.498" starttime="20201203 14:23:40.498"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:40.499" starttime="20201203 14:23:38.151"></status>
</kw>
<msg timestamp="20201203 14:23:40.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:40.499" starttime="20201203 14:23:38.150"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:40.499" starttime="20201203 14:23:38.150"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 14:23:40.499" critical="yes" starttime="20201203 14:23:35.710"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201203 14:23:40.500" starttime="20201203 14:23:08.403"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:25:24.308" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:25:24.308" starttime="20201203 14:25:24.307"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:25:24.308" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:25:24.308" starttime="20201203 14:25:24.308"></status>
</kw>
<status status="PASS" endtime="20201203 14:25:24.309" starttime="20201203 14:25:24.306"></status>
</kw>
<msg timestamp="20201203 14:25:24.309" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:25:24.309" starttime="20201203 14:25:24.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:25:24.310" starttime="20201203 14:25:24.310"></status>
</kw>
<msg timestamp="20201203 14:25:24.310" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 14:25:24.310" starttime="20201203 14:25:24.309"></status>
</kw>
<status status="PASS" endtime="20201203 14:25:24.310" starttime="20201203 14:25:24.305"></status>
</kw>
<msg timestamp="20201203 14:25:24.310" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:25:24.310" starttime="20201203 14:25:24.304"></status>
</kw>
<msg timestamp="20201203 14:25:24.311" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:25:24.311" starttime="20201203 14:25:24.303"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:25:24.311" level="INFO">${random} = 13678</msg>
<status status="PASS" endtime="20201203 14:25:24.311" starttime="20201203 14:25:24.311"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:25:24.317" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-13678 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:25:28.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:25:28.030" level="INFO">${output} = 2020-12-03 14:25:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:25:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 ...</msg>
<status status="PASS" endtime="20201203 14:25:28.030" starttime="20201203 14:25:24.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:25:28.031" level="INFO">2020-12-03 14:25:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:25:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 14:25:26 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-03 14:25:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:25:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E40FD0559E0F-&gt;b548005d-f0b9-4e2f-8b0f-b7a8566c5170
2020-12-03 14:25:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201203 14:25:28.031" starttime="20201203 14:25:28.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:25:28.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:25:28.032" starttime="20201203 14:25:28.032"></status>
</kw>
<status status="PASS" endtime="20201203 14:25:28.032" starttime="20201203 14:25:24.312"></status>
</kw>
<msg timestamp="20201203 14:25:28.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:25:28.033" starttime="20201203 14:25:24.312"></status>
</kw>
<msg timestamp="20201203 14:25:28.033" level="INFO">${result} = 2020-12-03 14:25:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:25:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 ...</msg>
<status status="PASS" endtime="20201203 14:25:28.033" starttime="20201203 14:25:24.311"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:25:28.039" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:25:29.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:25:29.906" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-03 14:25 ofs://om/volume1/bucket1/ozone-13678
-rw-...</msg>
<status status="PASS" endtime="20201203 14:25:29.906" starttime="20201203 14:25:28.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:25:29.907" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-03 14:25 ofs://om/volume1/bucket1/ozone-13678
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-03 14:23 ofs://om/volume1/bucket1/ozone-98241
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:23 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:24 ofs://om/volume1/bucket1/wordcount-71.txt</msg>
<status status="PASS" endtime="20201203 14:25:29.907" starttime="20201203 14:25:29.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:25:29.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:25:29.908" starttime="20201203 14:25:29.908"></status>
</kw>
<status status="PASS" endtime="20201203 14:25:29.909" starttime="20201203 14:25:28.035"></status>
</kw>
<msg timestamp="20201203 14:25:29.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:25:29.909" starttime="20201203 14:25:28.035"></status>
</kw>
<msg timestamp="20201203 14:25:29.909" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-03 14:25 ofs://om/volume1/bucket1/ozone-13678
-rw-...</msg>
<status status="PASS" endtime="20201203 14:25:29.909" starttime="20201203 14:25:28.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:25:29.911" starttime="20201203 14:25:29.910"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 14:25:29.911" critical="yes" starttime="20201203 14:25:24.302"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201203 14:25:29.913" starttime="20201203 14:25:24.241"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:23:46.142" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:23:46.142" starttime="20201203 14:23:46.142"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:23:46.143" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:23:46.143" starttime="20201203 14:23:46.142"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:46.143" starttime="20201203 14:23:46.141"></status>
</kw>
<msg timestamp="20201203 14:23:46.143" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:23:46.143" starttime="20201203 14:23:46.140"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:46.144" starttime="20201203 14:23:46.140"></status>
</kw>
<msg timestamp="20201203 14:23:46.144" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:23:46.144" starttime="20201203 14:23:46.139"></status>
</kw>
<msg timestamp="20201203 14:23:46.144" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:23:46.144" starttime="20201203 14:23:46.138"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:23:46.145" level="INFO">${random} = 98241</msg>
<status status="PASS" endtime="20201203 14:23:46.145" starttime="20201203 14:23:46.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:46.151" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-98241 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:50.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:50.219" level="INFO">${output} = 2020-12-03 14:23:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:23:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 ...</msg>
<status status="PASS" endtime="20201203 14:23:50.219" starttime="20201203 14:23:46.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:50.220" level="INFO">2020-12-03 14:23:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:23:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 14:23:48 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-03 14:23:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:23:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F495B027F600-&gt;b548005d-f0b9-4e2f-8b0f-b7a8566c5170
2020-12-03 14:23:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201203 14:23:50.220" starttime="20201203 14:23:50.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:50.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:50.221" starttime="20201203 14:23:50.220"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:50.221" starttime="20201203 14:23:46.146"></status>
</kw>
<msg timestamp="20201203 14:23:50.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:50.222" starttime="20201203 14:23:46.145"></status>
</kw>
<msg timestamp="20201203 14:23:50.222" level="INFO">${result} = 2020-12-03 14:23:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:23:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 ...</msg>
<status status="PASS" endtime="20201203 14:23:50.222" starttime="20201203 14:23:46.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:50.228" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:52.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:52.186" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-03 14:23 o3fs://bucket1.volume1.om/ozone-98241
dr...</msg>
<status status="PASS" endtime="20201203 14:23:52.187" starttime="20201203 14:23:50.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:52.188" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-03 14:23 o3fs://bucket1.volume1.om/ozone-98241
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:23 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 14:23:52.188" starttime="20201203 14:23:52.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:52.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:52.189" starttime="20201203 14:23:52.188"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:52.189" starttime="20201203 14:23:50.225"></status>
</kw>
<msg timestamp="20201203 14:23:52.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:52.189" starttime="20201203 14:23:50.223"></status>
</kw>
<msg timestamp="20201203 14:23:52.189" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-03 14:23 o3fs://bucket1.volume1.om/ozone-98241
dr...</msg>
<status status="PASS" endtime="20201203 14:23:52.189" starttime="20201203 14:23:50.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:23:52.190" starttime="20201203 14:23:52.190"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 14:23:52.190" critical="yes" starttime="20201203 14:23:46.137"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201203 14:23:52.192" starttime="20201203 14:23:46.073"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:25:35.231" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:25:35.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:25:35.238" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:25:35.238" starttime="20201203 14:25:35.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:25:35.239" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:25:35.239" starttime="20201203 14:25:35.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:25:35.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:25:35.240" starttime="20201203 14:25:35.239"></status>
</kw>
<status status="PASS" endtime="20201203 14:25:35.240" starttime="20201203 14:25:35.227"></status>
</kw>
<msg timestamp="20201203 14:25:35.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:25:35.240" starttime="20201203 14:25:35.227"></status>
</kw>
<msg timestamp="20201203 14:25:35.240" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:25:35.240" starttime="20201203 14:25:35.226"></status>
</kw>
<msg timestamp="20201203 14:25:35.240" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:25:35.241" starttime="20201203 14:25:35.226"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:25:35.245" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:25:35.245" starttime="20201203 14:25:35.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:25:35.246" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:25:35.246" starttime="20201203 14:25:35.245"></status>
</kw>
<status status="PASS" endtime="20201203 14:25:35.246" starttime="20201203 14:25:35.243"></status>
</kw>
<msg timestamp="20201203 14:25:35.246" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:25:35.246" starttime="20201203 14:25:35.243"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:25:35.247" starttime="20201203 14:25:35.247"></status>
</kw>
<msg timestamp="20201203 14:25:35.247" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 14:25:35.247" starttime="20201203 14:25:35.246"></status>
</kw>
<status status="PASS" endtime="20201203 14:25:35.247" starttime="20201203 14:25:35.242"></status>
</kw>
<msg timestamp="20201203 14:25:35.247" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:25:35.248" starttime="20201203 14:25:35.241"></status>
</kw>
<msg timestamp="20201203 14:25:35.248" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:25:35.248" starttime="20201203 14:25:35.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:25:35.253" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:26:09.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:26:09.518" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:25:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:25:37 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201203 14:26:09.518" starttime="20201203 14:25:35.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:26:09.519" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:25:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:25:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 14:25:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-03 14:25:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:25:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6B61AE3E8338-&gt;b548005d-f0b9-4e2f-8b0f-b7a8566c5170
2020-12-03 14:25:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-03 14:25:38 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-03 14:25:38 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 14:25:39 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-03 14:25:39 INFO  JobSubmitter:198 - number of splits:3
2020-12-03 14:25:39 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607005354957_0003
2020-12-03 14:25:39 INFO  YarnClientImpl:273 - Submitted application application_1607005354957_0003
2020-12-03 14:25:39 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607005354957_0003/
2020-12-03 14:25:39 INFO  Job:1339 - Running job: job_1607005354957_0003
2020-12-03 14:25:47 INFO  Job:1360 - Job job_1607005354957_0003 running in uber mode : false
2020-12-03 14:25:47 INFO  Job:1367 -  map 0% reduce 0%
2020-12-03 14:25:53 INFO  Job:1367 -  map 33% reduce 0%
2020-12-03 14:25:58 INFO  Job:1367 -  map 67% reduce 0%
2020-12-03 14:26:03 INFO  Job:1367 -  map 100% reduce 0%
2020-12-03 14:26:08 INFO  Job:1367 -  map 100% reduce 100%
2020-12-03 14:26:08 INFO  Job:1378 - Job job_1607005354957_0003 completed successfully
2020-12-03 14:26:08 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610689
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44152
		Total time spent by all reduces in occupied slots (ms)=16200
		Total time spent by all map tasks (ms)=11038
		Total time spent by all reduce tasks (ms)=4050
		Total vcore-milliseconds taken by all map tasks=11038
		Total vcore-milliseconds taken by all reduce tasks=4050
		Total megabyte-milliseconds taken by all map tasks=45211648
		Total megabyte-milliseconds taken by all reduce tasks=16588800
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=640
		CPU time spent (ms)=7580
		Physical memory (bytes) snapshot=1153839104
		Virtual memory (bytes) snapshot=15781646336
		Total committed heap usage (bytes)=1047527424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.387 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201203 14:26:09.519" starttime="20201203 14:26:09.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:26:09.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:26:09.520" starttime="20201203 14:26:09.520"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.521" starttime="20201203 14:25:35.249"></status>
</kw>
<msg timestamp="20201203 14:26:09.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:26:09.521" starttime="20201203 14:25:35.248"></status>
</kw>
<msg timestamp="20201203 14:26:09.521" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:25:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:25:37 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201203 14:26:09.521" starttime="20201203 14:25:35.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:26:09.522" starttime="20201203 14:26:09.521"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:26:09.522" critical="yes" starttime="20201203 14:25:35.225"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:26:09.530" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:26:09.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:26:09.537" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:26:09.537" starttime="20201203 14:26:09.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:26:09.538" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:26:09.538" starttime="20201203 14:26:09.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:26:09.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:26:09.539" starttime="20201203 14:26:09.538"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.539" starttime="20201203 14:26:09.525"></status>
</kw>
<msg timestamp="20201203 14:26:09.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:26:09.540" starttime="20201203 14:26:09.525"></status>
</kw>
<msg timestamp="20201203 14:26:09.540" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:26:09.540" starttime="20201203 14:26:09.524"></status>
</kw>
<msg timestamp="20201203 14:26:09.540" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:26:09.540" starttime="20201203 14:26:09.524"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:26:09.541" level="INFO">${random} = 73</msg>
<status status="PASS" endtime="20201203 14:26:09.541" starttime="20201203 14:26:09.540"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:26:09.545" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:26:09.545" starttime="20201203 14:26:09.544"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:26:09.545" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:26:09.545" starttime="20201203 14:26:09.545"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.546" starttime="20201203 14:26:09.544"></status>
</kw>
<msg timestamp="20201203 14:26:09.546" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:26:09.546" starttime="20201203 14:26:09.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:26:09.547" starttime="20201203 14:26:09.546"></status>
</kw>
<msg timestamp="20201203 14:26:09.547" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 14:26:09.547" starttime="20201203 14:26:09.546"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.547" starttime="20201203 14:26:09.542"></status>
</kw>
<msg timestamp="20201203 14:26:09.547" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:26:09.547" starttime="20201203 14:26:09.542"></status>
</kw>
<msg timestamp="20201203 14:26:09.548" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:26:09.548" starttime="20201203 14:26:09.541"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:26:09.551" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:26:09.551" starttime="20201203 14:26:09.551"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:26:09.552" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:26:09.552" starttime="20201203 14:26:09.551"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.552" starttime="20201203 14:26:09.550"></status>
</kw>
<msg timestamp="20201203 14:26:09.552" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:26:09.552" starttime="20201203 14:26:09.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:26:09.554" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201203 14:26:09.554" starttime="20201203 14:26:09.553"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:26:09.554" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201203 14:26:09.554" starttime="20201203 14:26:09.554"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.555" starttime="20201203 14:26:09.553"></status>
</kw>
<msg timestamp="20201203 14:26:09.555" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201203 14:26:09.555" starttime="20201203 14:26:09.552"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.555" starttime="20201203 14:26:09.549"></status>
</kw>
<msg timestamp="20201203 14:26:09.555" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201203 14:26:09.555" starttime="20201203 14:26:09.548"></status>
</kw>
<msg timestamp="20201203 14:26:09.555" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201203 14:26:09.555" starttime="20201203 14:26:09.548"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:26:09.559" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:26:09.559" starttime="20201203 14:26:09.558"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:26:09.559" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:26:09.559" starttime="20201203 14:26:09.559"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.560" starttime="20201203 14:26:09.558"></status>
</kw>
<msg timestamp="20201203 14:26:09.560" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:26:09.560" starttime="20201203 14:26:09.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:26:09.561" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201203 14:26:09.561" starttime="20201203 14:26:09.561"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:26:09.562" level="INFO">${result} = /wordcount-73.txt</msg>
<status status="PASS" endtime="20201203 14:26:09.562" starttime="20201203 14:26:09.561"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.562" starttime="20201203 14:26:09.560"></status>
</kw>
<msg timestamp="20201203 14:26:09.562" level="INFO">${path_with_leading} = /wordcount-73.txt</msg>
<status status="PASS" endtime="20201203 14:26:09.562" starttime="20201203 14:26:09.560"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:09.562" starttime="20201203 14:26:09.557"></status>
</kw>
<msg timestamp="20201203 14:26:09.562" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-73.txt</msg>
<status status="PASS" endtime="20201203 14:26:09.562" starttime="20201203 14:26:09.556"></status>
</kw>
<msg timestamp="20201203 14:26:09.563" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-73.txt</msg>
<status status="PASS" endtime="20201203 14:26:09.563" starttime="20201203 14:26:09.556"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:26:09.567" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-73.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:26:48.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:26:48.746" level="INFO">${output} = 2020-12-03 14:26:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-03 14:26:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201203 14:26:48.746" starttime="20201203 14:26:09.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:26:48.747" level="INFO">2020-12-03 14:26:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-03 14:26:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 14:26:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:26:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 14:26:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-03 14:26:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:26:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-55FCB504BC41-&gt;b548005d-f0b9-4e2f-8b0f-b7a8566c5170
2020-12-03 14:26:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 14:26:13 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-03 14:26:13 INFO  JobSubmitter:198 - number of splits:3
2020-12-03 14:26:13 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607005354957_0004
2020-12-03 14:26:13 INFO  YarnClientImpl:273 - Submitted application application_1607005354957_0004
2020-12-03 14:26:13 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607005354957_0004/
2020-12-03 14:26:13 INFO  Job:1339 - Running job: job_1607005354957_0004
2020-12-03 14:26:22 INFO  Job:1360 - Job job_1607005354957_0004 running in uber mode : false
2020-12-03 14:26:22 INFO  Job:1367 -  map 0% reduce 0%
2020-12-03 14:26:29 INFO  Job:1367 -  map 33% reduce 0%
2020-12-03 14:26:35 INFO  Job:1367 -  map 67% reduce 0%
2020-12-03 14:26:40 INFO  Job:1367 -  map 100% reduce 0%
2020-12-03 14:26:44 INFO  Job:1367 -  map 100% reduce 100%
2020-12-03 14:26:48 INFO  Job:1378 - Job job_1607005354957_0004 completed successfully
2020-12-03 14:26:48 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=673449
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39713
		OFS: Number of bytes written=22202
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45364
		Total time spent by all reduces in occupied slots (ms)=16776
		Total time spent by all map tasks (ms)=11341
		Total time spent by all reduce tasks (ms)=4194
		Total vcore-milliseconds taken by all map tasks=11341
		Total vcore-milliseconds taken by all reduce tasks=4194
		Total megabyte-milliseconds taken by all map tasks=46452736
		Total megabyte-milliseconds taken by all reduce tasks=17178624
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=715
		CPU time spent (ms)=8220
		Physical memory (bytes) snapshot=1123868672
		Virtual memory (bytes) snapshot=15765336064
		Total committed heap usage (bytes)=1014497280
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201203 14:26:48.747" starttime="20201203 14:26:48.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:26:48.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:26:48.748" starttime="20201203 14:26:48.747"></status>
</kw>
<status status="PASS" endtime="20201203 14:26:48.751" starttime="20201203 14:26:09.564"></status>
</kw>
<msg timestamp="20201203 14:26:48.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:26:48.751" starttime="20201203 14:26:09.564"></status>
</kw>
<msg timestamp="20201203 14:26:48.752" level="INFO">${output} = 2020-12-03 14:26:11 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-03 14:26:11 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201203 14:26:48.752" starttime="20201203 14:26:09.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201203 14:26:48.753" starttime="20201203 14:26:48.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:26:48.754" starttime="20201203 14:26:48.753"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:26:48.755" critical="yes" starttime="20201203 14:26:09.523"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201203 14:26:48.756" starttime="20201203 14:25:35.173"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:57.555" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:23:57.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:23:57.562" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:23:57.562" starttime="20201203 14:23:57.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:23:57.563" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:23:57.563" starttime="20201203 14:23:57.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:23:57.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:23:57.564" starttime="20201203 14:23:57.564"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:57.564" starttime="20201203 14:23:57.550"></status>
</kw>
<msg timestamp="20201203 14:23:57.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:23:57.565" starttime="20201203 14:23:57.550"></status>
</kw>
<msg timestamp="20201203 14:23:57.565" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:23:57.565" starttime="20201203 14:23:57.550"></status>
</kw>
<msg timestamp="20201203 14:23:57.565" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:23:57.565" starttime="20201203 14:23:57.549"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:23:57.570" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:23:57.570" starttime="20201203 14:23:57.570"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:23:57.571" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:23:57.571" starttime="20201203 14:23:57.570"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:57.571" starttime="20201203 14:23:57.568"></status>
</kw>
<msg timestamp="20201203 14:23:57.571" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:23:57.571" starttime="20201203 14:23:57.568"></status>
</kw>
<status status="PASS" endtime="20201203 14:23:57.572" starttime="20201203 14:23:57.567"></status>
</kw>
<msg timestamp="20201203 14:23:57.572" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:23:57.572" starttime="20201203 14:23:57.566"></status>
</kw>
<msg timestamp="20201203 14:23:57.572" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:23:57.572" starttime="20201203 14:23:57.565"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:23:57.575" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:24:42.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:24:42.488" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:23:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:23:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201203 14:24:42.488" starttime="20201203 14:23:57.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:24:42.489" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:23:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:23:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 14:23:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-03 14:24:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:24:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1ED0D0589F4E-&gt;b548005d-f0b9-4e2f-8b0f-b7a8566c5170
2020-12-03 14:24:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-03 14:24:01 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-03 14:24:04 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-03 14:24:04 INFO  JobSubmitter:198 - number of splits:3
2020-12-03 14:24:04 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607005354957_0001
2020-12-03 14:24:05 INFO  YarnClientImpl:273 - Submitted application application_1607005354957_0001
2020-12-03 14:24:05 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607005354957_0001/
2020-12-03 14:24:05 INFO  Job:1339 - Running job: job_1607005354957_0001
2020-12-03 14:24:16 INFO  Job:1360 - Job job_1607005354957_0001 running in uber mode : false
2020-12-03 14:24:16 INFO  Job:1367 -  map 0% reduce 0%
2020-12-03 14:24:23 INFO  Job:1367 -  map 33% reduce 0%
2020-12-03 14:24:29 INFO  Job:1367 -  map 67% reduce 0%
2020-12-03 14:24:35 INFO  Job:1367 -  map 100% reduce 0%
2020-12-03 14:24:40 INFO  Job:1367 -  map 100% reduce 100%
2020-12-03 14:24:41 INFO  Job:1378 - Job job_1607005354957_0001 completed successfully
2020-12-03 14:24:41 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610901
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49700
		Total time spent by all reduces in occupied slots (ms)=16600
		Total time spent by all map tasks (ms)=12425
		Total time spent by all reduce tasks (ms)=4150
		Total vcore-milliseconds taken by all map tasks=12425
		Total vcore-milliseconds taken by all reduce tasks=4150
		Total megabyte-milliseconds taken by all map tasks=50892800
		Total megabyte-milliseconds taken by all reduce tasks=16998400
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1066
		CPU time spent (ms)=8610
		Physical memory (bytes) snapshot=1384050688
		Virtual memory (bytes) snapshot=15801348096
		Total committed heap usage (bytes)=1128267776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.568 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201203 14:24:42.490" starttime="20201203 14:24:42.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:24:42.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:24:42.491" starttime="20201203 14:24:42.490"></status>
</kw>
<status status="PASS" endtime="20201203 14:24:42.491" starttime="20201203 14:23:57.573"></status>
</kw>
<msg timestamp="20201203 14:24:42.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:24:42.491" starttime="20201203 14:23:57.573"></status>
</kw>
<msg timestamp="20201203 14:24:42.492" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:23:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:23:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201203 14:24:42.492" starttime="20201203 14:23:57.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:24:42.493" starttime="20201203 14:24:42.492"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:24:42.493" critical="yes" starttime="20201203 14:23:57.548"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:24:42.500" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:24:42.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:24:42.506" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:24:42.506" starttime="20201203 14:24:42.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:24:42.507" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:24:42.507" starttime="20201203 14:24:42.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:24:42.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:24:42.508" starttime="20201203 14:24:42.507"></status>
</kw>
<status status="PASS" endtime="20201203 14:24:42.508" starttime="20201203 14:24:42.495"></status>
</kw>
<msg timestamp="20201203 14:24:42.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:24:42.508" starttime="20201203 14:24:42.495"></status>
</kw>
<msg timestamp="20201203 14:24:42.509" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:24:42.509" starttime="20201203 14:24:42.495"></status>
</kw>
<msg timestamp="20201203 14:24:42.509" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201203 14:24:42.509" starttime="20201203 14:24:42.494"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:24:42.510" level="INFO">${random} = 71</msg>
<status status="PASS" endtime="20201203 14:24:42.510" starttime="20201203 14:24:42.509"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:24:42.514" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:24:42.514" starttime="20201203 14:24:42.514"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:24:42.515" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:24:42.515" starttime="20201203 14:24:42.514"></status>
</kw>
<status status="PASS" endtime="20201203 14:24:42.515" starttime="20201203 14:24:42.513"></status>
</kw>
<msg timestamp="20201203 14:24:42.515" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:24:42.515" starttime="20201203 14:24:42.512"></status>
</kw>
<status status="PASS" endtime="20201203 14:24:42.516" starttime="20201203 14:24:42.512"></status>
</kw>
<msg timestamp="20201203 14:24:42.516" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:24:42.516" starttime="20201203 14:24:42.511"></status>
</kw>
<msg timestamp="20201203 14:24:42.516" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:24:42.516" starttime="20201203 14:24:42.510"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:24:42.520" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:24:42.520" starttime="20201203 14:24:42.519"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:24:42.520" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:24:42.520" starttime="20201203 14:24:42.520"></status>
</kw>
<status status="PASS" endtime="20201203 14:24:42.521" starttime="20201203 14:24:42.519"></status>
</kw>
<msg timestamp="20201203 14:24:42.521" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:24:42.521" starttime="20201203 14:24:42.518"></status>
</kw>
<status status="PASS" endtime="20201203 14:24:42.521" starttime="20201203 14:24:42.518"></status>
</kw>
<msg timestamp="20201203 14:24:42.521" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201203 14:24:42.521" starttime="20201203 14:24:42.517"></status>
</kw>
<msg timestamp="20201203 14:24:42.521" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201203 14:24:42.521" starttime="20201203 14:24:42.516"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:24:42.525" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:24:42.526" starttime="20201203 14:24:42.525"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:24:42.526" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:24:42.526" starttime="20201203 14:24:42.526"></status>
</kw>
<status status="PASS" endtime="20201203 14:24:42.526" starttime="20201203 14:24:42.524"></status>
</kw>
<msg timestamp="20201203 14:24:42.527" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:24:42.527" starttime="20201203 14:24:42.524"></status>
</kw>
<status status="PASS" endtime="20201203 14:24:42.527" starttime="20201203 14:24:42.523"></status>
</kw>
<msg timestamp="20201203 14:24:42.527" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-71.txt</msg>
<status status="PASS" endtime="20201203 14:24:42.527" starttime="20201203 14:24:42.522"></status>
</kw>
<msg timestamp="20201203 14:24:42.527" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-71.txt</msg>
<status status="PASS" endtime="20201203 14:24:42.527" starttime="20201203 14:24:42.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:24:42.533" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-71.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:25:18.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:25:18.893" level="INFO">${output} = 2020-12-03 14:24:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-03 14:24:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201203 14:25:18.893" starttime="20201203 14:24:42.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:25:18.895" level="INFO">2020-12-03 14:24:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-03 14:24:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 14:24:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:24:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-03 14:24:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-03 14:24:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:24:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-22B4DCE0CA94-&gt;b548005d-f0b9-4e2f-8b0f-b7a8566c5170
2020-12-03 14:24:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 14:24:46 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-03 14:24:46 INFO  JobSubmitter:198 - number of splits:3
2020-12-03 14:24:46 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607005354957_0002
2020-12-03 14:24:47 INFO  YarnClientImpl:273 - Submitted application application_1607005354957_0002
2020-12-03 14:24:47 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607005354957_0002/
2020-12-03 14:24:47 INFO  Job:1339 - Running job: job_1607005354957_0002
2020-12-03 14:24:55 INFO  Job:1360 - Job job_1607005354957_0002 running in uber mode : false
2020-12-03 14:24:55 INFO  Job:1367 -  map 0% reduce 0%
2020-12-03 14:25:02 INFO  Job:1367 -  map 33% reduce 0%
2020-12-03 14:25:08 INFO  Job:1367 -  map 67% reduce 0%
2020-12-03 14:25:13 INFO  Job:1367 -  map 100% reduce 0%
2020-12-03 14:25:17 INFO  Job:1367 -  map 100% reduce 100%
2020-12-03 14:25:18 INFO  Job:1378 - Job job_1607005354957_0002 completed successfully
2020-12-03 14:25:18 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=673533
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39716
		O3FS: Number of bytes written=22202
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45036
		Total time spent by all reduces in occupied slots (ms)=17428
		Total time spent by all map tasks (ms)=11259
		Total time spent by all reduce tasks (ms)=4357
		Total vcore-milliseconds taken by all map tasks=11259
		Total vcore-milliseconds taken by all reduce tasks=4357
		Total megabyte-milliseconds taken by all map tasks=46116864
		Total megabyte-milliseconds taken by all reduce tasks=17846272
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=687
		CPU time spent (ms)=8460
		Physical memory (bytes) snapshot=1175072768
		Virtual memory (bytes) snapshot=15798280192
		Total committed heap usage (bytes)=1006632960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201203 14:25:18.895" starttime="20201203 14:25:18.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:25:18.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:25:18.896" starttime="20201203 14:25:18.895"></status>
</kw>
<status status="PASS" endtime="20201203 14:25:18.896" starttime="20201203 14:24:42.528"></status>
</kw>
<msg timestamp="20201203 14:25:18.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:25:18.896" starttime="20201203 14:24:42.528"></status>
</kw>
<msg timestamp="20201203 14:25:18.897" level="INFO">${output} = 2020-12-03 14:24:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-03 14:24:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201203 14:25:18.897" starttime="20201203 14:24:42.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201203 14:25:18.897" starttime="20201203 14:25:18.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:25:18.898" starttime="20201203 14:25:18.897"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:25:18.898" critical="yes" starttime="20201203 14:24:42.493"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201203 14:25:18.899" starttime="20201203 14:23:57.495"></status>
</suite>
<status status="PASS" elapsedtime="198875" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:27:55.764" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:27:58.420" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 14:27:58.420" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 14:27:58.420" starttime="20201203 14:27:55.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:27:58.421" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 14:27:58.421" starttime="20201203 14:27:58.421"></status>
</kw>
<msg timestamp="20201203 14:27:58.422" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 14:27:58.422" starttime="20201203 14:27:55.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:27:58.428" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:00.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:00.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:28:00.854" starttime="20201203 14:27:58.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:00.856" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:28:00.856" starttime="20201203 14:28:00.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:00.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:00.857" starttime="20201203 14:28:00.856"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:00.857" starttime="20201203 14:27:58.424"></status>
</kw>
<msg timestamp="20201203 14:28:00.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:00.857" starttime="20201203 14:27:58.423"></status>
</kw>
<msg timestamp="20201203 14:28:00.858" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201203 14:28:00.858" starttime="20201203 14:27:58.423"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201203 14:28:00.858" starttime="20201203 14:28:00.858"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:00.858" starttime="20201203 14:27:58.422"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:00.858" starttime="20201203 14:27:58.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:00.864" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:03.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:03.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:28:03.274" starttime="20201203 14:28:00.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:03.276" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:28:03.276" starttime="20201203 14:28:03.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:03.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:03.277" starttime="20201203 14:28:03.276"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:03.277" starttime="20201203 14:28:00.860"></status>
</kw>
<msg timestamp="20201203 14:28:03.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:03.277" starttime="20201203 14:28:00.860"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:03.277" starttime="20201203 14:28:00.859"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:03.278" starttime="20201203 14:28:00.859"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:03.278" starttime="20201203 14:28:00.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201203 14:28:03.278" starttime="20201203 14:28:03.278"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:03.284" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:05.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:05.758" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T14:28:03.218Z",
  "modificat...</msg>
<status status="PASS" endtime="20201203 14:28:05.758" starttime="20201203 14:28:03.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:05.760" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T14:28:03.218Z",
  "modificationTime" : "2020-12-03T14:28:03.218Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201203 14:28:05.760" starttime="20201203 14:28:05.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:05.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:05.761" starttime="20201203 14:28:05.760"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:05.761" starttime="20201203 14:28:03.280"></status>
</kw>
<msg timestamp="20201203 14:28:05.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:05.761" starttime="20201203 14:28:03.279"></status>
</kw>
<msg timestamp="20201203 14:28:05.761" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T14:28:03.218Z",
  "modificat...</msg>
<status status="PASS" endtime="20201203 14:28:05.761" starttime="20201203 14:28:03.278"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201203 14:28:05.762" starttime="20201203 14:28:05.762"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:28:05.767" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:28:05.767" starttime="20201203 14:28:05.766"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:28:05.768" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:28:05.768" starttime="20201203 14:28:05.767"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:05.768" starttime="20201203 14:28:05.766"></status>
</kw>
<msg timestamp="20201203 14:28:05.768" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:28:05.768" starttime="20201203 14:28:05.765"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:05.769" starttime="20201203 14:28:05.765"></status>
</kw>
<msg timestamp="20201203 14:28:05.769" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201203 14:28:05.769" starttime="20201203 14:28:05.764"></status>
</kw>
<msg timestamp="20201203 14:28:05.769" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201203 14:28:05.769" starttime="20201203 14:28:05.762"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:05.772" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:08.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:08.235" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:28:08.235" starttime="20201203 14:28:05.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:08.237" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:28:08.237" starttime="20201203 14:28:08.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:08.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:08.238" starttime="20201203 14:28:08.237"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:08.238" starttime="20201203 14:28:05.770"></status>
</kw>
<msg timestamp="20201203 14:28:08.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:08.238" starttime="20201203 14:28:05.770"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:08.238" starttime="20201203 14:28:05.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:08.243" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:14.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:14.070" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:28:14.070" starttime="20201203 14:28:08.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:14.072" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:28:14.072" starttime="20201203 14:28:14.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:14.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:14.072" starttime="20201203 14:28:14.072"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:14.073" starttime="20201203 14:28:08.240"></status>
</kw>
<msg timestamp="20201203 14:28:14.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:14.073" starttime="20201203 14:28:08.239"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:14.073" starttime="20201203 14:28:08.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:14.077" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:18.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:18.392" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:28:18.393" starttime="20201203 14:28:14.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:18.395" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:28:18.395" starttime="20201203 14:28:18.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:18.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:18.396" starttime="20201203 14:28:18.395"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:18.397" starttime="20201203 14:28:14.074"></status>
</kw>
<msg timestamp="20201203 14:28:18.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:18.397" starttime="20201203 14:28:14.074"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:18.397" starttime="20201203 14:28:14.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:18.405" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:22.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:22.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:28:22.674" starttime="20201203 14:28:18.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:22.676" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:28:22.676" starttime="20201203 14:28:22.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:22.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:22.677" starttime="20201203 14:28:22.676"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:22.677" starttime="20201203 14:28:18.399"></status>
</kw>
<msg timestamp="20201203 14:28:22.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:22.677" starttime="20201203 14:28:18.399"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:22.677" starttime="20201203 14:28:18.398"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 14:28:22.678" critical="yes" starttime="20201203 14:27:55.756"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:28:22.683" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:28:22.683" starttime="20201203 14:28:22.682"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:28:22.684" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:28:22.684" starttime="20201203 14:28:22.683"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:22.684" starttime="20201203 14:28:22.682"></status>
</kw>
<msg timestamp="20201203 14:28:22.684" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:28:22.684" starttime="20201203 14:28:22.681"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:22.684" starttime="20201203 14:28:22.681"></status>
</kw>
<msg timestamp="20201203 14:28:22.685" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 14:28:22.685" starttime="20201203 14:28:22.680"></status>
</kw>
<msg timestamp="20201203 14:28:22.685" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 14:28:22.685" starttime="20201203 14:28:22.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:22.689" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:25.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:25.216" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:28:25.216" starttime="20201203 14:28:22.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:25.217" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:28:25.217" starttime="20201203 14:28:25.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:25.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:25.218" starttime="20201203 14:28:25.218"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:25.218" starttime="20201203 14:28:22.686"></status>
</kw>
<msg timestamp="20201203 14:28:25.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:25.219" starttime="20201203 14:28:22.686"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:25.219" starttime="20201203 14:28:22.685"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:25.223" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:27.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:27.678" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:28:27.678" starttime="20201203 14:28:25.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:27.679" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:28:27.679" starttime="20201203 14:28:27.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:27.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:27.680" starttime="20201203 14:28:27.679"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:27.680" starttime="20201203 14:28:25.220"></status>
</kw>
<msg timestamp="20201203 14:28:27.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:27.680" starttime="20201203 14:28:25.220"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:27.681" starttime="20201203 14:28:25.219"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 14:28:27.681" critical="yes" starttime="20201203 14:28:22.678"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201203 14:28:27.683" starttime="20201203 14:27:55.685"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:30:15.464" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:30:15.464" starttime="20201203 14:30:15.464"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:30:15.466" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:30:15.466" starttime="20201203 14:30:15.465"></status>
</kw>
<status status="PASS" endtime="20201203 14:30:15.467" starttime="20201203 14:30:15.463"></status>
</kw>
<msg timestamp="20201203 14:30:15.467" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:30:15.467" starttime="20201203 14:30:15.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:30:15.468" starttime="20201203 14:30:15.468"></status>
</kw>
<msg timestamp="20201203 14:30:15.468" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 14:30:15.468" starttime="20201203 14:30:15.467"></status>
</kw>
<status status="PASS" endtime="20201203 14:30:15.469" starttime="20201203 14:30:15.461"></status>
</kw>
<msg timestamp="20201203 14:30:15.469" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:30:15.469" starttime="20201203 14:30:15.461"></status>
</kw>
<msg timestamp="20201203 14:30:15.469" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:30:15.469" starttime="20201203 14:30:15.460"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:30:15.470" level="INFO">${random} = 53841</msg>
<status status="PASS" endtime="20201203 14:30:15.470" starttime="20201203 14:30:15.469"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:30:15.475" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-53841 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:30:19.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:30:19.586" level="INFO">${output} = 2020-12-03 14:30:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:30:19.586" starttime="20201203 14:30:15.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:30:19.587" level="INFO">2020-12-03 14:30:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:17 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-03 14:30:17 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:30:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:30:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:30:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:30:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-94EF79BAC62D-&gt;45073260-0358-40ed-9f45-5012240bcd20
2020-12-03 14:30:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 14:30:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201203 14:30:19.587" starttime="20201203 14:30:19.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:30:19.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:30:19.588" starttime="20201203 14:30:19.587"></status>
</kw>
<status status="PASS" endtime="20201203 14:30:19.588" starttime="20201203 14:30:15.470"></status>
</kw>
<msg timestamp="20201203 14:30:19.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:30:19.589" starttime="20201203 14:30:15.470"></status>
</kw>
<msg timestamp="20201203 14:30:19.589" level="INFO">${result} = 2020-12-03 14:30:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:30:19.589" starttime="20201203 14:30:15.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:30:19.594" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:30:21.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:30:21.692" level="INFO">${output} = 2020-12-03 14:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:21 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:30:21.692" starttime="20201203 14:30:19.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:30:21.693" level="INFO">2020-12-03 14:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:21 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-03 14:28 ofs://om/volume1/bucket1/ozone-38379
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-03 14:30 ofs://om/volume1/bucket1/ozone-53841
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:28 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:29 ofs://om/volume1/bucket1/wordcount-61.txt
2020-12-03 14:30:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201203 14:30:21.693" starttime="20201203 14:30:21.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:30:21.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:30:21.694" starttime="20201203 14:30:21.693"></status>
</kw>
<status status="PASS" endtime="20201203 14:30:21.695" starttime="20201203 14:30:19.591"></status>
</kw>
<msg timestamp="20201203 14:30:21.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:30:21.695" starttime="20201203 14:30:19.591"></status>
</kw>
<msg timestamp="20201203 14:30:21.695" level="INFO">${result} = 2020-12-03 14:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:21 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:30:21.695" starttime="20201203 14:30:19.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:30:21.696" starttime="20201203 14:30:21.695"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 14:30:21.696" critical="yes" starttime="20201203 14:30:15.459"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201203 14:30:21.697" starttime="20201203 14:30:15.390"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:28:33.219" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:28:33.219" starttime="20201203 14:28:33.219"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:28:33.220" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:28:33.220" starttime="20201203 14:28:33.219"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:33.220" starttime="20201203 14:28:33.218"></status>
</kw>
<msg timestamp="20201203 14:28:33.220" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:28:33.220" starttime="20201203 14:28:33.217"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:33.221" starttime="20201203 14:28:33.217"></status>
</kw>
<msg timestamp="20201203 14:28:33.221" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:28:33.221" starttime="20201203 14:28:33.216"></status>
</kw>
<msg timestamp="20201203 14:28:33.221" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:28:33.221" starttime="20201203 14:28:33.215"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:28:33.222" level="INFO">${random} = 38379</msg>
<status status="PASS" endtime="20201203 14:28:33.222" starttime="20201203 14:28:33.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:33.229" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-38379 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:37.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:37.258" level="INFO">${output} = 2020-12-03 14:28:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:28:37.258" starttime="20201203 14:28:33.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:37.260" level="INFO">2020-12-03 14:28:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:35 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-03 14:28:35 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:28:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:28:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:28:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:28:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F4E0BE5FC154-&gt;45073260-0358-40ed-9f45-5012240bcd20
2020-12-03 14:28:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 14:28:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201203 14:28:37.260" starttime="20201203 14:28:37.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:37.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:37.261" starttime="20201203 14:28:37.260"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:37.261" starttime="20201203 14:28:33.222"></status>
</kw>
<msg timestamp="20201203 14:28:37.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:37.261" starttime="20201203 14:28:33.222"></status>
</kw>
<msg timestamp="20201203 14:28:37.261" level="INFO">${result} = 2020-12-03 14:28:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:28:37.261" starttime="20201203 14:28:33.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:37.267" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:39.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:39.184" level="INFO">${output} = 2020-12-03 14:28:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:28:39.184" starttime="20201203 14:28:37.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:39.185" level="INFO">2020-12-03 14:28:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:39 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-03 14:28 o3fs://bucket1.volume1.om/ozone-38379
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:28 o3fs://bucket1.volume1.om/user
2020-12-03 14:28:39 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201203 14:28:39.185" starttime="20201203 14:28:39.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:39.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:39.186" starttime="20201203 14:28:39.185"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:39.186" starttime="20201203 14:28:37.264"></status>
</kw>
<msg timestamp="20201203 14:28:39.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:39.187" starttime="20201203 14:28:37.262"></status>
</kw>
<msg timestamp="20201203 14:28:39.187" level="INFO">${result} = 2020-12-03 14:28:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:28:39.187" starttime="20201203 14:28:37.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:28:39.188" starttime="20201203 14:28:39.187"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 14:28:39.188" critical="yes" starttime="20201203 14:28:33.214"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201203 14:28:39.189" starttime="20201203 14:28:33.154"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:30:27.141" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:30:27.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:30:27.145" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:30:27.145" starttime="20201203 14:30:27.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:30:27.146" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:30:27.146" starttime="20201203 14:30:27.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:30:27.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:30:27.148" starttime="20201203 14:30:27.147"></status>
</kw>
<status status="PASS" endtime="20201203 14:30:27.148" starttime="20201203 14:30:27.133"></status>
</kw>
<msg timestamp="20201203 14:30:27.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:30:27.148" starttime="20201203 14:30:27.133"></status>
</kw>
<msg timestamp="20201203 14:30:27.148" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:30:27.148" starttime="20201203 14:30:27.132"></status>
</kw>
<msg timestamp="20201203 14:30:27.149" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:30:27.149" starttime="20201203 14:30:27.132"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:30:27.156" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:30:27.157" starttime="20201203 14:30:27.156"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:30:27.157" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:30:27.157" starttime="20201203 14:30:27.157"></status>
</kw>
<status status="PASS" endtime="20201203 14:30:27.158" starttime="20201203 14:30:27.154"></status>
</kw>
<msg timestamp="20201203 14:30:27.158" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:30:27.158" starttime="20201203 14:30:27.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:30:27.159" starttime="20201203 14:30:27.158"></status>
</kw>
<msg timestamp="20201203 14:30:27.159" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 14:30:27.159" starttime="20201203 14:30:27.158"></status>
</kw>
<status status="PASS" endtime="20201203 14:30:27.159" starttime="20201203 14:30:27.150"></status>
</kw>
<msg timestamp="20201203 14:30:27.159" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:30:27.159" starttime="20201203 14:30:27.150"></status>
</kw>
<msg timestamp="20201203 14:30:27.160" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:30:27.160" starttime="20201203 14:30:27.149"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:30:27.165" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:31:11.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:31:11.611" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:30:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30...</msg>
<status status="PASS" endtime="20201203 14:31:11.611" starttime="20201203 14:30:27.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:31:11.613" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:30:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-03 14:30:29 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:30:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:30:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:30:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:30:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BD1BF7B203DA-&gt;45073260-0358-40ed-9f45-5012240bcd20
2020-12-03 14:30:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-03 14:30:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-12-03 14:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 14:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 14:30:31 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 14:30:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607005653509_0003
2020-12-03 14:30:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-03 14:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:32 INFO  Configuration:2752 - resource-types.xml not found
2020-12-03 14:30:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-03 14:30:32 INFO  YarnClientImpl:324 - Submitted application application_1607005653509_0003
2020-12-03 14:30:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607005653509_0003/
2020-12-03 14:30:32 INFO  Job:1619 - Running job: job_1607005653509_0003
2020-12-03 14:30:40 INFO  Job:1640 - Job job_1607005653509_0003 running in uber mode : false
2020-12-03 14:30:40 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 14:30:48 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 14:30:53 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 14:30:59 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 14:31:07 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 14:31:10 INFO  Job:1658 - Job job_1607005653509_0003 completed successfully
2020-12-03 14:31:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016145
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47040
		Total time spent by all reduces in occupied slots (ms)=26484
		Total time spent by all map tasks (ms)=11760
		Total time spent by all reduce tasks (ms)=6621
		Total vcore-milliseconds taken by all map tasks=11760
		Total vcore-milliseconds taken by all reduce tasks=6621
		Total megabyte-milliseconds taken by all map tasks=48168960
		Total megabyte-milliseconds taken by all reduce tasks=27119616
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=724
		CPU time spent (ms)=7950
		Physical memory (bytes) snapshot=1277726720
		Virtual memory (bytes) snapshot=15782055936
		Total committed heap usage (bytes)=1083179008
		Peak Map Physical memory (bytes)=379310080
		Peak Map Virtual memory (bytes)=3941675008
		Peak Reduce Physical memory (bytes)=286785536
		Peak Reduce Virtual memory (bytes)=3963179008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.171 seconds
2020-12-03 14:31:10 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-03 14:31:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201203 14:31:11.613" starttime="20201203 14:31:11.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:31:11.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:31:11.614" starttime="20201203 14:31:11.613"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.614" starttime="20201203 14:30:27.161"></status>
</kw>
<msg timestamp="20201203 14:31:11.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:31:11.614" starttime="20201203 14:30:27.161"></status>
</kw>
<msg timestamp="20201203 14:31:11.615" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:30:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30...</msg>
<status status="PASS" endtime="20201203 14:31:11.615" starttime="20201203 14:30:27.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:31:11.616" starttime="20201203 14:31:11.615"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:31:11.616" critical="yes" starttime="20201203 14:30:27.131"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:31:11.623" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:31:11.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:31:11.630" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:31:11.630" starttime="20201203 14:31:11.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:31:11.631" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:31:11.631" starttime="20201203 14:31:11.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:31:11.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:31:11.632" starttime="20201203 14:31:11.631"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.632" starttime="20201203 14:31:11.620"></status>
</kw>
<msg timestamp="20201203 14:31:11.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:31:11.632" starttime="20201203 14:31:11.619"></status>
</kw>
<msg timestamp="20201203 14:31:11.633" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:31:11.633" starttime="20201203 14:31:11.618"></status>
</kw>
<msg timestamp="20201203 14:31:11.633" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:31:11.633" starttime="20201203 14:31:11.618"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:31:11.634" level="INFO">${random} = 37</msg>
<status status="PASS" endtime="20201203 14:31:11.634" starttime="20201203 14:31:11.633"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:31:11.640" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:31:11.640" starttime="20201203 14:31:11.639"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:31:11.640" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:31:11.640" starttime="20201203 14:31:11.640"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.641" starttime="20201203 14:31:11.638"></status>
</kw>
<msg timestamp="20201203 14:31:11.641" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:31:11.641" starttime="20201203 14:31:11.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:31:11.642" starttime="20201203 14:31:11.641"></status>
</kw>
<msg timestamp="20201203 14:31:11.642" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 14:31:11.642" starttime="20201203 14:31:11.641"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.642" starttime="20201203 14:31:11.635"></status>
</kw>
<msg timestamp="20201203 14:31:11.643" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:31:11.643" starttime="20201203 14:31:11.635"></status>
</kw>
<msg timestamp="20201203 14:31:11.643" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:31:11.643" starttime="20201203 14:31:11.634"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:31:11.646" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:31:11.646" starttime="20201203 14:31:11.646"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:31:11.647" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:31:11.647" starttime="20201203 14:31:11.647"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.647" starttime="20201203 14:31:11.645"></status>
</kw>
<msg timestamp="20201203 14:31:11.648" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:31:11.648" starttime="20201203 14:31:11.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:31:11.651" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201203 14:31:11.651" starttime="20201203 14:31:11.650"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:31:11.651" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201203 14:31:11.651" starttime="20201203 14:31:11.651"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.652" starttime="20201203 14:31:11.649"></status>
</kw>
<msg timestamp="20201203 14:31:11.652" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201203 14:31:11.652" starttime="20201203 14:31:11.648"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.653" starttime="20201203 14:31:11.644"></status>
</kw>
<msg timestamp="20201203 14:31:11.653" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201203 14:31:11.653" starttime="20201203 14:31:11.644"></status>
</kw>
<msg timestamp="20201203 14:31:11.653" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201203 14:31:11.653" starttime="20201203 14:31:11.643"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:31:11.657" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:31:11.657" starttime="20201203 14:31:11.656"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:31:11.658" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:31:11.658" starttime="20201203 14:31:11.657"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.658" starttime="20201203 14:31:11.656"></status>
</kw>
<msg timestamp="20201203 14:31:11.658" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:31:11.658" starttime="20201203 14:31:11.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:31:11.659" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201203 14:31:11.659" starttime="20201203 14:31:11.659"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:31:11.660" level="INFO">${result} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201203 14:31:11.660" starttime="20201203 14:31:11.660"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.660" starttime="20201203 14:31:11.659"></status>
</kw>
<msg timestamp="20201203 14:31:11.660" level="INFO">${path_with_leading} = /wordcount-37.txt</msg>
<status status="PASS" endtime="20201203 14:31:11.660" starttime="20201203 14:31:11.658"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:11.661" starttime="20201203 14:31:11.655"></status>
</kw>
<msg timestamp="20201203 14:31:11.661" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201203 14:31:11.661" starttime="20201203 14:31:11.654"></status>
</kw>
<msg timestamp="20201203 14:31:11.661" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-37.txt</msg>
<status status="PASS" endtime="20201203 14:31:11.661" starttime="20201203 14:31:11.653"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:31:11.666" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-37.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:31:53.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:31:53.237" level="INFO">${output} = 2020-12-03 14:31:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:31:53.237" starttime="20201203 14:31:11.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:31:53.238" level="INFO">2020-12-03 14:31:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-12-03 14:31:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 14:31:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:14 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-03 14:31:14 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:31:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:31:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:31:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:31:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5E05D97882ED-&gt;45073260-0358-40ed-9f45-5012240bcd20
2020-12-03 14:31:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 14:31:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 14:31:18 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 14:31:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607005653509_0004
2020-12-03 14:31:18 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-03 14:31:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:19 INFO  Configuration:2752 - resource-types.xml not found
2020-12-03 14:31:19 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-03 14:31:19 INFO  YarnClientImpl:324 - Submitted application application_1607005653509_0004
2020-12-03 14:31:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607005653509_0004/
2020-12-03 14:31:19 INFO  Job:1619 - Running job: job_1607005653509_0004
2020-12-03 14:31:27 INFO  Job:1640 - Job job_1607005653509_0004 running in uber mode : false
2020-12-03 14:31:27 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 14:31:34 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 14:31:40 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 14:31:46 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 14:31:51 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 14:31:52 INFO  Job:1658 - Job job_1607005653509_0004 completed successfully
2020-12-03 14:31:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:52 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1078785
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39713
		OFS: Number of bytes written=22202
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48728
		Total time spent by all reduces in occupied slots (ms)=16708
		Total time spent by all map tasks (ms)=12182
		Total time spent by all reduce tasks (ms)=4177
		Total vcore-milliseconds taken by all map tasks=12182
		Total vcore-milliseconds taken by all reduce tasks=4177
		Total megabyte-milliseconds taken by all map tasks=49897472
		Total megabyte-milliseconds taken by all reduce tasks=17108992
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=720
		CPU time spent (ms)=8300
		Physical memory (bytes) snapshot=1279619072
		Virtual memory (bytes) snapshot=15791845376
		Total committed heap usage (bytes)=1131937792
		Peak Map Physical memory (bytes)=383594496
		Peak Map Virtual memory (bytes)=3946168320
		Peak Reduce Physical memory (bytes)=274792448
		Peak Reduce Virtual memory (bytes)=3953807360
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202
2020-12-03 14:31:52 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201203 14:31:53.238" starttime="20201203 14:31:53.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:31:53.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:31:53.239" starttime="20201203 14:31:53.238"></status>
</kw>
<status status="PASS" endtime="20201203 14:31:53.239" starttime="20201203 14:31:11.662"></status>
</kw>
<msg timestamp="20201203 14:31:53.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:31:53.239" starttime="20201203 14:31:11.662"></status>
</kw>
<msg timestamp="20201203 14:31:53.240" level="INFO">${output} = 2020-12-03 14:31:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:31:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:31:53.240" starttime="20201203 14:31:11.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201203 14:31:53.241" starttime="20201203 14:31:53.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:31:53.241" starttime="20201203 14:31:53.241"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:31:53.242" critical="yes" starttime="20201203 14:31:11.616"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201203 14:31:53.243" starttime="20201203 14:30:27.066"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:44.666" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:28:44.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:28:44.672" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:28:44.672" starttime="20201203 14:28:44.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:28:44.673" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:28:44.674" starttime="20201203 14:28:44.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:28:44.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:28:44.674" starttime="20201203 14:28:44.674"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:44.674" starttime="20201203 14:28:44.661"></status>
</kw>
<msg timestamp="20201203 14:28:44.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:28:44.675" starttime="20201203 14:28:44.661"></status>
</kw>
<msg timestamp="20201203 14:28:44.675" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:28:44.675" starttime="20201203 14:28:44.660"></status>
</kw>
<msg timestamp="20201203 14:28:44.675" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:28:44.675" starttime="20201203 14:28:44.660"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:28:44.682" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:28:44.682" starttime="20201203 14:28:44.681"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:28:44.683" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:28:44.683" starttime="20201203 14:28:44.682"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:44.683" starttime="20201203 14:28:44.680"></status>
</kw>
<msg timestamp="20201203 14:28:44.683" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:28:44.683" starttime="20201203 14:28:44.679"></status>
</kw>
<status status="PASS" endtime="20201203 14:28:44.684" starttime="20201203 14:28:44.679"></status>
</kw>
<msg timestamp="20201203 14:28:44.684" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:28:44.684" starttime="20201203 14:28:44.678"></status>
</kw>
<msg timestamp="20201203 14:28:44.684" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:28:44.684" starttime="20201203 14:28:44.677"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:28:44.688" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:29:27.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:29:27.317" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:28:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28...</msg>
<status status="PASS" endtime="20201203 14:29:27.317" starttime="20201203 14:28:44.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:29:27.319" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:28:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:47 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-03 14:28:47 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:28:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:28:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:28:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:28:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F3BB981EFF96-&gt;45073260-0358-40ed-9f45-5012240bcd20
2020-12-03 14:28:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-03 14:28:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-12-03 14:28:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:49 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 14:28:49 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 14:28:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607005653509_0001
2020-12-03 14:28:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-03 14:28:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:49 INFO  Configuration:2752 - resource-types.xml not found
2020-12-03 14:28:49 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-03 14:28:50 INFO  YarnClientImpl:324 - Submitted application application_1607005653509_0001
2020-12-03 14:28:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607005653509_0001/
2020-12-03 14:28:50 INFO  Job:1619 - Running job: job_1607005653509_0001
2020-12-03 14:29:01 INFO  Job:1640 - Job job_1607005653509_0001 running in uber mode : false
2020-12-03 14:29:01 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 14:29:08 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 14:29:14 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 14:29:20 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 14:29:25 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 14:29:26 INFO  Job:1658 - Job job_1607005653509_0001 completed successfully
2020-12-03 14:29:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:26 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016349
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45816
		Total time spent by all reduces in occupied slots (ms)=17092
		Total time spent by all map tasks (ms)=11454
		Total time spent by all reduce tasks (ms)=4273
		Total vcore-milliseconds taken by all map tasks=11454
		Total vcore-milliseconds taken by all reduce tasks=4273
		Total megabyte-milliseconds taken by all map tasks=46915584
		Total megabyte-milliseconds taken by all reduce tasks=17502208
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=683
		CPU time spent (ms)=7690
		Physical memory (bytes) snapshot=1379221504
		Virtual memory (bytes) snapshot=15796375552
		Total committed heap usage (bytes)=1145044992
		Peak Map Physical memory (bytes)=389693440
		Peak Map Virtual memory (bytes)=3946016768
		Peak Reduce Physical memory (bytes)=296755200
		Peak Reduce Virtual memory (bytes)=3968966656
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.178 seconds
2020-12-03 14:29:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:26 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-03 14:29:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201203 14:29:27.319" starttime="20201203 14:29:27.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:29:27.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:29:27.320" starttime="20201203 14:29:27.319"></status>
</kw>
<status status="PASS" endtime="20201203 14:29:27.321" starttime="20201203 14:28:44.685"></status>
</kw>
<msg timestamp="20201203 14:29:27.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:29:27.321" starttime="20201203 14:28:44.685"></status>
</kw>
<msg timestamp="20201203 14:29:27.321" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:28:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:28...</msg>
<status status="PASS" endtime="20201203 14:29:27.321" starttime="20201203 14:28:44.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:29:27.322" starttime="20201203 14:29:27.321"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:29:27.322" critical="yes" starttime="20201203 14:28:44.659"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:29:27.329" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:29:27.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:29:27.338" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:29:27.338" starttime="20201203 14:29:27.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:29:27.339" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:29:27.339" starttime="20201203 14:29:27.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:29:27.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:29:27.340" starttime="20201203 14:29:27.340"></status>
</kw>
<status status="PASS" endtime="20201203 14:29:27.341" starttime="20201203 14:29:27.325"></status>
</kw>
<msg timestamp="20201203 14:29:27.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:29:27.341" starttime="20201203 14:29:27.324"></status>
</kw>
<msg timestamp="20201203 14:29:27.341" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:29:27.341" starttime="20201203 14:29:27.324"></status>
</kw>
<msg timestamp="20201203 14:29:27.341" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201203 14:29:27.341" starttime="20201203 14:29:27.323"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:29:27.342" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20201203 14:29:27.342" starttime="20201203 14:29:27.342"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:29:27.347" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:29:27.347" starttime="20201203 14:29:27.346"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:29:27.347" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:29:27.347" starttime="20201203 14:29:27.347"></status>
</kw>
<status status="PASS" endtime="20201203 14:29:27.348" starttime="20201203 14:29:27.346"></status>
</kw>
<msg timestamp="20201203 14:29:27.348" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:29:27.348" starttime="20201203 14:29:27.345"></status>
</kw>
<status status="PASS" endtime="20201203 14:29:27.348" starttime="20201203 14:29:27.344"></status>
</kw>
<msg timestamp="20201203 14:29:27.348" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:29:27.348" starttime="20201203 14:29:27.343"></status>
</kw>
<msg timestamp="20201203 14:29:27.348" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:29:27.348" starttime="20201203 14:29:27.342"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:29:27.352" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:29:27.352" starttime="20201203 14:29:27.352"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:29:27.353" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:29:27.353" starttime="20201203 14:29:27.352"></status>
</kw>
<status status="PASS" endtime="20201203 14:29:27.353" starttime="20201203 14:29:27.351"></status>
</kw>
<msg timestamp="20201203 14:29:27.353" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:29:27.353" starttime="20201203 14:29:27.350"></status>
</kw>
<status status="PASS" endtime="20201203 14:29:27.353" starttime="20201203 14:29:27.350"></status>
</kw>
<msg timestamp="20201203 14:29:27.354" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201203 14:29:27.354" starttime="20201203 14:29:27.349"></status>
</kw>
<msg timestamp="20201203 14:29:27.354" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201203 14:29:27.354" starttime="20201203 14:29:27.348"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:29:27.357" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:29:27.357" starttime="20201203 14:29:27.357"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:29:27.358" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:29:27.358" starttime="20201203 14:29:27.358"></status>
</kw>
<status status="PASS" endtime="20201203 14:29:27.358" starttime="20201203 14:29:27.356"></status>
</kw>
<msg timestamp="20201203 14:29:27.358" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:29:27.358" starttime="20201203 14:29:27.356"></status>
</kw>
<status status="PASS" endtime="20201203 14:29:27.359" starttime="20201203 14:29:27.355"></status>
</kw>
<msg timestamp="20201203 14:29:27.359" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201203 14:29:27.359" starttime="20201203 14:29:27.355"></status>
</kw>
<msg timestamp="20201203 14:29:27.359" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201203 14:29:27.359" starttime="20201203 14:29:27.354"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:29:27.364" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:30:09.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:30:09.685" level="INFO">${output} = 2020-12-03 14:29:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:30:09.685" starttime="20201203 14:29:27.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:30:09.686" level="INFO">2020-12-03 14:29:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-12-03 14:29:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 14:29:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:30 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-03 14:29:30 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-03 14:29:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:29:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:29:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:29:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0D6971B7F53D-&gt;45073260-0358-40ed-9f45-5012240bcd20
2020-12-03 14:29:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 14:29:31 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 14:29:31 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 14:29:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607005653509_0002
2020-12-03 14:29:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-03 14:29:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:32 INFO  Configuration:2752 - resource-types.xml not found
2020-12-03 14:29:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-03 14:29:32 INFO  YarnClientImpl:324 - Submitted application application_1607005653509_0002
2020-12-03 14:29:32 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607005653509_0002/
2020-12-03 14:29:32 INFO  Job:1619 - Running job: job_1607005653509_0002
2020-12-03 14:29:40 INFO  Job:1640 - Job job_1607005653509_0002 running in uber mode : false
2020-12-03 14:29:40 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 14:29:48 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 14:29:54 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 14:30:00 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 14:30:06 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 14:30:09 INFO  Job:1658 - Job job_1607005653509_0002 completed successfully
2020-12-03 14:30:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:30:09 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1078869
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39716
		O3FS: Number of bytes written=22202
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46640
		Total time spent by all reduces in occupied slots (ms)=18060
		Total time spent by all map tasks (ms)=11660
		Total time spent by all reduce tasks (ms)=4515
		Total vcore-milliseconds taken by all map tasks=11660
		Total vcore-milliseconds taken by all reduce tasks=4515
		Total megabyte-milliseconds taken by all map tasks=47759360
		Total megabyte-milliseconds taken by all reduce tasks=18493440
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=674
		CPU time spent (ms)=8100
		Physical memory (bytes) snapshot=1218813952
		Virtual memory (bytes) snapshot=15786430464
		Total committed heap usage (bytes)=1072168960
		Peak Map Physical memory (bytes)=315252736
		Peak Map Virtual memory (bytes)=3945934848
		Peak Reduce Physical memory (bytes)=302985216
		Peak Reduce Virtual memory (bytes)=3969097728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202
2020-12-03 14:30:09 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201203 14:30:09.686" starttime="20201203 14:30:09.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:30:09.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:30:09.687" starttime="20201203 14:30:09.686"></status>
</kw>
<status status="PASS" endtime="20201203 14:30:09.687" starttime="20201203 14:29:27.360"></status>
</kw>
<msg timestamp="20201203 14:30:09.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:30:09.687" starttime="20201203 14:29:27.360"></status>
</kw>
<msg timestamp="20201203 14:30:09.688" level="INFO">${output} = 2020-12-03 14:29:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-03 14:29:29 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201203 14:30:09.688" starttime="20201203 14:29:27.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201203 14:30:09.689" starttime="20201203 14:30:09.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:30:09.689" starttime="20201203 14:30:09.689"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:30:09.689" critical="yes" starttime="20201203 14:29:27.323"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201203 14:30:09.691" starttime="20201203 14:28:44.607"></status>
</suite>
<status status="PASS" elapsedtime="215601" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:06.577" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:11.347" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 14:33:11.347" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 14:33:11.347" starttime="20201203 14:33:06.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:11.348" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 14:33:11.348" starttime="20201203 14:33:11.347"></status>
</kw>
<msg timestamp="20201203 14:33:11.348" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201203 14:33:11.348" starttime="20201203 14:33:06.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:11.354" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:15.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:33:15.370" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:33:15.370" starttime="20201203 14:33:11.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:15.371" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:33:15.371" starttime="20201203 14:33:15.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:33:15.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:33:15.372" starttime="20201203 14:33:15.372"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:15.372" starttime="20201203 14:33:11.350"></status>
</kw>
<msg timestamp="20201203 14:33:15.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:33:15.373" starttime="20201203 14:33:11.350"></status>
</kw>
<msg timestamp="20201203 14:33:15.373" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201203 14:33:15.373" starttime="20201203 14:33:11.350"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201203 14:33:15.373" starttime="20201203 14:33:15.373"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:15.374" starttime="20201203 14:33:11.349"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:15.374" starttime="20201203 14:33:11.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:15.378" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:19.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:33:19.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:33:19.040" starttime="20201203 14:33:15.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:19.041" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:33:19.041" starttime="20201203 14:33:19.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:33:19.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:33:19.042" starttime="20201203 14:33:19.042"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:19.043" starttime="20201203 14:33:15.376"></status>
</kw>
<msg timestamp="20201203 14:33:19.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:33:19.043" starttime="20201203 14:33:15.375"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:19.043" starttime="20201203 14:33:15.375"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:19.043" starttime="20201203 14:33:15.374"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:19.043" starttime="20201203 14:33:15.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201203 14:33:19.044" starttime="20201203 14:33:19.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:19.047" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:22.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:33:22.337" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T14:33:18.948Z",
  "modificat...</msg>
<status status="PASS" endtime="20201203 14:33:22.337" starttime="20201203 14:33:19.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:22.338" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T14:33:18.948Z",
  "modificationTime" : "2020-12-03T14:33:18.948Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201203 14:33:22.339" starttime="20201203 14:33:22.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:33:22.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:33:22.339" starttime="20201203 14:33:22.339"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:22.340" starttime="20201203 14:33:19.045"></status>
</kw>
<msg timestamp="20201203 14:33:22.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:33:22.340" starttime="20201203 14:33:19.044"></status>
</kw>
<msg timestamp="20201203 14:33:22.340" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T14:33:18.948Z",
  "modificat...</msg>
<status status="PASS" endtime="20201203 14:33:22.340" starttime="20201203 14:33:19.044"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201203 14:33:22.341" starttime="20201203 14:33:22.340"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:33:22.345" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:33:22.345" starttime="20201203 14:33:22.344"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:33:22.345" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:33:22.345" starttime="20201203 14:33:22.345"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:22.346" starttime="20201203 14:33:22.344"></status>
</kw>
<msg timestamp="20201203 14:33:22.346" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:33:22.346" starttime="20201203 14:33:22.343"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:22.346" starttime="20201203 14:33:22.343"></status>
</kw>
<msg timestamp="20201203 14:33:22.346" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201203 14:33:22.346" starttime="20201203 14:33:22.342"></status>
</kw>
<msg timestamp="20201203 14:33:22.346" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201203 14:33:22.346" starttime="20201203 14:33:22.341"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:22.351" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:26.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:33:26.084" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:33:26.084" starttime="20201203 14:33:22.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:26.087" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:33:26.087" starttime="20201203 14:33:26.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:33:26.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:33:26.088" starttime="20201203 14:33:26.087"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:26.088" starttime="20201203 14:33:22.348"></status>
</kw>
<msg timestamp="20201203 14:33:26.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:33:26.089" starttime="20201203 14:33:22.347"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:26.089" starttime="20201203 14:33:22.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:26.096" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:33.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:33:33.622" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:33:33.622" starttime="20201203 14:33:26.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:33.624" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:33:33.624" starttime="20201203 14:33:33.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:33:33.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:33:33.624" starttime="20201203 14:33:33.624"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:33.625" starttime="20201203 14:33:26.090"></status>
</kw>
<msg timestamp="20201203 14:33:33.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:33:33.625" starttime="20201203 14:33:26.090"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:33.626" starttime="20201203 14:33:26.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:33.631" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:39.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:33:39.548" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:33:39.548" starttime="20201203 14:33:33.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:39.549" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:33:39.550" starttime="20201203 14:33:39.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:33:39.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:33:39.550" starttime="20201203 14:33:39.550"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:39.551" starttime="20201203 14:33:33.627"></status>
</kw>
<msg timestamp="20201203 14:33:39.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:33:39.551" starttime="20201203 14:33:33.627"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:39.551" starttime="20201203 14:33:33.626"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:39.555" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:45.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:33:45.822" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:33:45.822" starttime="20201203 14:33:39.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:45.823" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:33:45.824" starttime="20201203 14:33:45.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:33:45.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:33:45.824" starttime="20201203 14:33:45.824"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:45.825" starttime="20201203 14:33:39.552"></status>
</kw>
<msg timestamp="20201203 14:33:45.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:33:45.825" starttime="20201203 14:33:39.552"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:45.825" starttime="20201203 14:33:39.551"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 14:33:45.825" critical="yes" starttime="20201203 14:33:06.571"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:33:45.832" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:33:45.832" starttime="20201203 14:33:45.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:33:45.833" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:33:45.833" starttime="20201203 14:33:45.832"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:45.833" starttime="20201203 14:33:45.831"></status>
</kw>
<msg timestamp="20201203 14:33:45.833" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:33:45.833" starttime="20201203 14:33:45.830"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:45.833" starttime="20201203 14:33:45.830"></status>
</kw>
<msg timestamp="20201203 14:33:45.834" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 14:33:45.834" starttime="20201203 14:33:45.828"></status>
</kw>
<msg timestamp="20201203 14:33:45.834" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 14:33:45.834" starttime="20201203 14:33:45.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:45.840" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:49.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:33:49.360" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:33:49.360" starttime="20201203 14:33:45.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:49.361" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:33:49.361" starttime="20201203 14:33:49.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:33:49.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:33:49.362" starttime="20201203 14:33:49.361"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:49.363" starttime="20201203 14:33:45.835"></status>
</kw>
<msg timestamp="20201203 14:33:49.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:33:49.363" starttime="20201203 14:33:45.834"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:49.363" starttime="20201203 14:33:45.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:49.368" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:33:52.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:33:52.987" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 14:33:52.988" starttime="20201203 14:33:49.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:33:52.989" level="INFO"></msg>
<status status="PASS" endtime="20201203 14:33:52.989" starttime="20201203 14:33:52.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:33:52.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:33:52.989" starttime="20201203 14:33:52.989"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:52.990" starttime="20201203 14:33:49.364"></status>
</kw>
<msg timestamp="20201203 14:33:52.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:33:52.990" starttime="20201203 14:33:49.364"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:52.990" starttime="20201203 14:33:49.363"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 14:33:52.990" critical="yes" starttime="20201203 14:33:45.827"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201203 14:33:52.991" starttime="20201203 14:33:06.506"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:35:39.306" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:35:39.307" starttime="20201203 14:35:39.306"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:35:39.307" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:35:39.307" starttime="20201203 14:35:39.307"></status>
</kw>
<status status="PASS" endtime="20201203 14:35:39.307" starttime="20201203 14:35:39.306"></status>
</kw>
<msg timestamp="20201203 14:35:39.308" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:35:39.308" starttime="20201203 14:35:39.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:35:39.308" starttime="20201203 14:35:39.308"></status>
</kw>
<msg timestamp="20201203 14:35:39.309" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 14:35:39.309" starttime="20201203 14:35:39.308"></status>
</kw>
<status status="PASS" endtime="20201203 14:35:39.309" starttime="20201203 14:35:39.304"></status>
</kw>
<msg timestamp="20201203 14:35:39.309" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:35:39.309" starttime="20201203 14:35:39.304"></status>
</kw>
<msg timestamp="20201203 14:35:39.309" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:35:39.309" starttime="20201203 14:35:39.303"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:35:39.310" level="INFO">${random} = 85077</msg>
<status status="PASS" endtime="20201203 14:35:39.310" starttime="20201203 14:35:39.309"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:35:39.316" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-85077 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:35:43.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:35:43.071" level="INFO">${output} = 2020-12-03 14:35:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:35:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201203 14:35:43.072" starttime="20201203 14:35:39.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:35:43.073" level="INFO">2020-12-03 14:35:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:35:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:35:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:35:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:35:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0D029077F4D8-&gt;4bcc7577-7db4-4511-ada6-7834736e7d98
2020-12-03 14:35:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201203 14:35:43.073" starttime="20201203 14:35:43.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:35:43.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:35:43.075" starttime="20201203 14:35:43.073"></status>
</kw>
<status status="PASS" endtime="20201203 14:35:43.075" starttime="20201203 14:35:39.311"></status>
</kw>
<msg timestamp="20201203 14:35:43.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:35:43.075" starttime="20201203 14:35:39.310"></status>
</kw>
<msg timestamp="20201203 14:35:43.076" level="INFO">${result} = 2020-12-03 14:35:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:35:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201203 14:35:43.076" starttime="20201203 14:35:39.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:35:43.081" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:35:45.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:35:45.155" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 14:34 ofs://om/volume1/bucket1/ozone-25884
-rw-...</msg>
<status status="PASS" endtime="20201203 14:35:45.155" starttime="20201203 14:35:43.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:35:45.157" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 14:34 ofs://om/volume1/bucket1/ozone-25884
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 14:35 ofs://om/volume1/bucket1/ozone-85077
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:33 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:35 ofs://om/volume1/bucket1/wordcount-28.txt</msg>
<status status="PASS" endtime="20201203 14:35:45.157" starttime="20201203 14:35:45.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:35:45.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:35:45.158" starttime="20201203 14:35:45.157"></status>
</kw>
<status status="PASS" endtime="20201203 14:35:45.158" starttime="20201203 14:35:43.078"></status>
</kw>
<msg timestamp="20201203 14:35:45.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:35:45.158" starttime="20201203 14:35:43.078"></status>
</kw>
<msg timestamp="20201203 14:35:45.159" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:33 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 14:34 ofs://om/volume1/bucket1/ozone-25884
-rw-...</msg>
<status status="PASS" endtime="20201203 14:35:45.159" starttime="20201203 14:35:43.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:35:45.159" starttime="20201203 14:35:45.159"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 14:35:45.159" critical="yes" starttime="20201203 14:35:39.302"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201203 14:35:45.160" starttime="20201203 14:35:39.245"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:33:58.524" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:33:58.524" starttime="20201203 14:33:58.523"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:33:58.524" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:33:58.524" starttime="20201203 14:33:58.524"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:58.525" starttime="20201203 14:33:58.523"></status>
</kw>
<msg timestamp="20201203 14:33:58.525" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:33:58.525" starttime="20201203 14:33:58.522"></status>
</kw>
<status status="PASS" endtime="20201203 14:33:58.525" starttime="20201203 14:33:58.521"></status>
</kw>
<msg timestamp="20201203 14:33:58.525" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:33:58.525" starttime="20201203 14:33:58.520"></status>
</kw>
<msg timestamp="20201203 14:33:58.525" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:33:58.525" starttime="20201203 14:33:58.519"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:33:58.526" level="INFO">${random} = 25884</msg>
<status status="PASS" endtime="20201203 14:33:58.526" starttime="20201203 14:33:58.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:33:58.533" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-25884 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:34:02.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:34:02.836" level="INFO">${output} = 2020-12-03 14:34:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:34:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201203 14:34:02.836" starttime="20201203 14:33:58.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:34:02.837" level="INFO">2020-12-03 14:34:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:34:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:34:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:34:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:34:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8CE4BF2C1F8D-&gt;4bcc7577-7db4-4511-ada6-7834736e7d98
2020-12-03 14:34:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201203 14:34:02.837" starttime="20201203 14:34:02.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:34:02.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:34:02.838" starttime="20201203 14:34:02.837"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:02.839" starttime="20201203 14:33:58.527"></status>
</kw>
<msg timestamp="20201203 14:34:02.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:34:02.839" starttime="20201203 14:33:58.527"></status>
</kw>
<msg timestamp="20201203 14:34:02.839" level="INFO">${result} = 2020-12-03 14:34:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:34:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201203 14:34:02.839" starttime="20201203 14:33:58.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:34:02.844" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:34:04.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:34:04.938" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 14:34 o3fs://bucket1.volume1.om/ozone-25884
dr...</msg>
<status status="PASS" endtime="20201203 14:34:04.938" starttime="20201203 14:34:02.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:34:04.939" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 14:34 o3fs://bucket1.volume1.om/ozone-25884
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:33 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201203 14:34:04.939" starttime="20201203 14:34:04.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:34:04.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:34:04.940" starttime="20201203 14:34:04.940"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:04.940" starttime="20201203 14:34:02.841"></status>
</kw>
<msg timestamp="20201203 14:34:04.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:34:04.941" starttime="20201203 14:34:02.840"></status>
</kw>
<msg timestamp="20201203 14:34:04.941" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-03 14:33 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-03 14:34 o3fs://bucket1.volume1.om/ozone-25884
dr...</msg>
<status status="PASS" endtime="20201203 14:34:04.941" starttime="20201203 14:34:02.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:34:04.942" starttime="20201203 14:34:04.941"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 14:34:04.942" critical="yes" starttime="20201203 14:33:58.518"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201203 14:34:04.944" starttime="20201203 14:33:58.453"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:35:50.589" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:35:50.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:35:50.593" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:35:50.593" starttime="20201203 14:35:50.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:35:50.594" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:35:50.594" starttime="20201203 14:35:50.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:35:50.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:35:50.595" starttime="20201203 14:35:50.594"></status>
</kw>
<status status="PASS" endtime="20201203 14:35:50.595" starttime="20201203 14:35:50.583"></status>
</kw>
<msg timestamp="20201203 14:35:50.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:35:50.596" starttime="20201203 14:35:50.582"></status>
</kw>
<msg timestamp="20201203 14:35:50.596" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:35:50.596" starttime="20201203 14:35:50.582"></status>
</kw>
<msg timestamp="20201203 14:35:50.596" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:35:50.596" starttime="20201203 14:35:50.581"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:35:50.601" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:35:50.601" starttime="20201203 14:35:50.601"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:35:50.602" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:35:50.602" starttime="20201203 14:35:50.601"></status>
</kw>
<status status="PASS" endtime="20201203 14:35:50.602" starttime="20201203 14:35:50.599"></status>
</kw>
<msg timestamp="20201203 14:35:50.602" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:35:50.602" starttime="20201203 14:35:50.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:35:50.603" starttime="20201203 14:35:50.603"></status>
</kw>
<msg timestamp="20201203 14:35:50.603" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 14:35:50.603" starttime="20201203 14:35:50.602"></status>
</kw>
<status status="PASS" endtime="20201203 14:35:50.604" starttime="20201203 14:35:50.598"></status>
</kw>
<msg timestamp="20201203 14:35:50.604" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:35:50.604" starttime="20201203 14:35:50.597"></status>
</kw>
<msg timestamp="20201203 14:35:50.604" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:35:50.604" starttime="20201203 14:35:50.597"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:35:50.609" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:36:32.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:36:32.797" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:35:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:35:52 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201203 14:36:32.798" starttime="20201203 14:35:50.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:36:32.802" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:35:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:35:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:35:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:35:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:35:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4CF33AD868BD-&gt;4bcc7577-7db4-4511-ada6-7834736e7d98
2020-12-03 14:35:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-03 14:35:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-12-03 14:35:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 14:35:54 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 14:35:54 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 14:35:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607005960377_0003
2020-12-03 14:35:55 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-03 14:35:55 INFO  Configuration:2795 - resource-types.xml not found
2020-12-03 14:35:55 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-03 14:35:55 INFO  YarnClientImpl:329 - Submitted application application_1607005960377_0003
2020-12-03 14:35:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607005960377_0003/
2020-12-03 14:35:55 INFO  Job:1619 - Running job: job_1607005960377_0003
2020-12-03 14:36:03 INFO  Job:1640 - Job job_1607005960377_0003 running in uber mode : false
2020-12-03 14:36:03 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 14:36:10 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 14:36:16 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 14:36:22 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 14:36:28 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 14:36:32 INFO  Job:1658 - Job job_1607005960377_0003 completed successfully
2020-12-03 14:36:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056241
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45888
		Total time spent by all reduces in occupied slots (ms)=16916
		Total time spent by all map tasks (ms)=11472
		Total time spent by all reduce tasks (ms)=4229
		Total vcore-milliseconds taken by all map tasks=11472
		Total vcore-milliseconds taken by all reduce tasks=4229
		Total megabyte-milliseconds taken by all map tasks=46989312
		Total megabyte-milliseconds taken by all reduce tasks=17321984
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=731
		CPU time spent (ms)=7830
		Physical memory (bytes) snapshot=1502121984
		Virtual memory (bytes) snapshot=15798476800
		Total committed heap usage (bytes)=1770520576
		Peak Map Physical memory (bytes)=384421888
		Peak Map Virtual memory (bytes)=3946475520
		Peak Reduce Physical memory (bytes)=382459904
		Peak Reduce Virtual memory (bytes)=3969028096
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.093 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201203 14:36:32.802" starttime="20201203 14:36:32.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:36:32.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:36:32.803" starttime="20201203 14:36:32.803"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.804" starttime="20201203 14:35:50.605"></status>
</kw>
<msg timestamp="20201203 14:36:32.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:36:32.804" starttime="20201203 14:35:50.605"></status>
</kw>
<msg timestamp="20201203 14:36:32.805" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:35:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:35:52 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201203 14:36:32.805" starttime="20201203 14:35:50.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:36:32.806" starttime="20201203 14:36:32.805"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:36:32.806" critical="yes" starttime="20201203 14:35:50.580"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:36:32.812" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:36:32.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:36:32.823" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:36:32.823" starttime="20201203 14:36:32.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:36:32.824" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:36:32.824" starttime="20201203 14:36:32.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:36:32.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:36:32.825" starttime="20201203 14:36:32.824"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.825" starttime="20201203 14:36:32.809"></status>
</kw>
<msg timestamp="20201203 14:36:32.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:36:32.825" starttime="20201203 14:36:32.809"></status>
</kw>
<msg timestamp="20201203 14:36:32.826" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:36:32.826" starttime="20201203 14:36:32.808"></status>
</kw>
<msg timestamp="20201203 14:36:32.826" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:36:32.826" starttime="20201203 14:36:32.808"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:36:32.827" level="INFO">${random} = 91</msg>
<status status="PASS" endtime="20201203 14:36:32.827" starttime="20201203 14:36:32.826"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:36:32.831" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:36:32.831" starttime="20201203 14:36:32.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:36:32.832" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:36:32.832" starttime="20201203 14:36:32.832"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.832" starttime="20201203 14:36:32.830"></status>
</kw>
<msg timestamp="20201203 14:36:32.832" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:36:32.833" starttime="20201203 14:36:32.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201203 14:36:32.834" starttime="20201203 14:36:32.833"></status>
</kw>
<msg timestamp="20201203 14:36:32.834" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201203 14:36:32.834" starttime="20201203 14:36:32.833"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.834" starttime="20201203 14:36:32.828"></status>
</kw>
<msg timestamp="20201203 14:36:32.834" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:36:32.834" starttime="20201203 14:36:32.828"></status>
</kw>
<msg timestamp="20201203 14:36:32.835" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201203 14:36:32.835" starttime="20201203 14:36:32.827"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:36:32.839" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:36:32.839" starttime="20201203 14:36:32.839"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:36:32.840" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:36:32.840" starttime="20201203 14:36:32.840"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.840" starttime="20201203 14:36:32.838"></status>
</kw>
<msg timestamp="20201203 14:36:32.841" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:36:32.841" starttime="20201203 14:36:32.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:36:32.843" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201203 14:36:32.843" starttime="20201203 14:36:32.842"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:36:32.844" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201203 14:36:32.844" starttime="20201203 14:36:32.844"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.844" starttime="20201203 14:36:32.841"></status>
</kw>
<msg timestamp="20201203 14:36:32.844" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201203 14:36:32.844" starttime="20201203 14:36:32.841"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.845" starttime="20201203 14:36:32.837"></status>
</kw>
<msg timestamp="20201203 14:36:32.845" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201203 14:36:32.845" starttime="20201203 14:36:32.836"></status>
</kw>
<msg timestamp="20201203 14:36:32.845" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201203 14:36:32.845" starttime="20201203 14:36:32.835"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201203 14:36:32.849" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201203 14:36:32.849" starttime="20201203 14:36:32.849"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:36:32.850" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201203 14:36:32.850" starttime="20201203 14:36:32.849"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.850" starttime="20201203 14:36:32.848"></status>
</kw>
<msg timestamp="20201203 14:36:32.850" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201203 14:36:32.850" starttime="20201203 14:36:32.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:36:32.852" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201203 14:36:32.852" starttime="20201203 14:36:32.851"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:36:32.853" level="INFO">${result} = /wordcount-91.txt</msg>
<status status="PASS" endtime="20201203 14:36:32.853" starttime="20201203 14:36:32.852"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.853" starttime="20201203 14:36:32.851"></status>
</kw>
<msg timestamp="20201203 14:36:32.853" level="INFO">${path_with_leading} = /wordcount-91.txt</msg>
<status status="PASS" endtime="20201203 14:36:32.853" starttime="20201203 14:36:32.850"></status>
</kw>
<status status="PASS" endtime="20201203 14:36:32.854" starttime="20201203 14:36:32.847"></status>
</kw>
<msg timestamp="20201203 14:36:32.854" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-91.txt</msg>
<status status="PASS" endtime="20201203 14:36:32.854" starttime="20201203 14:36:32.846"></status>
</kw>
<msg timestamp="20201203 14:36:32.854" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-91.txt</msg>
<status status="PASS" endtime="20201203 14:36:32.854" starttime="20201203 14:36:32.845"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:36:32.858" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-91.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:37:19.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:37:19.732" level="INFO">${output} = 2020-12-03 14:36:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-12-03 14:36:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201203 14:37:19.732" starttime="20201203 14:36:32.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:37:19.734" level="INFO">2020-12-03 14:36:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-12-03 14:36:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 14:36:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:36:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:36:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:36:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:36:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B5EA6828EF93-&gt;4bcc7577-7db4-4511-ada6-7834736e7d98
2020-12-03 14:36:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 14:36:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 14:36:42 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 14:36:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607005960377_0004
2020-12-03 14:36:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-03 14:36:42 INFO  Configuration:2795 - resource-types.xml not found
2020-12-03 14:36:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-03 14:36:42 INFO  YarnClientImpl:329 - Submitted application application_1607005960377_0004
2020-12-03 14:36:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607005960377_0004/
2020-12-03 14:36:42 INFO  Job:1619 - Running job: job_1607005960377_0004
2020-12-03 14:36:52 INFO  Job:1640 - Job job_1607005960377_0004 running in uber mode : false
2020-12-03 14:36:52 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 14:36:59 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 14:37:05 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 14:37:10 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 14:37:16 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 14:37:19 INFO  Job:1658 - Job job_1607005960377_0004 completed successfully
2020-12-03 14:37:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1118901
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39713
		OFS: Number of bytes written=22202
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46256
		Total time spent by all reduces in occupied slots (ms)=16964
		Total time spent by all map tasks (ms)=11564
		Total time spent by all reduce tasks (ms)=4241
		Total vcore-milliseconds taken by all map tasks=11564
		Total vcore-milliseconds taken by all reduce tasks=4241
		Total megabyte-milliseconds taken by all map tasks=47366144
		Total megabyte-milliseconds taken by all reduce tasks=17371136
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=708
		CPU time spent (ms)=8570
		Physical memory (bytes) snapshot=1416224768
		Virtual memory (bytes) snapshot=15788888064
		Total committed heap usage (bytes)=1600651264
		Peak Map Physical memory (bytes)=373772288
		Peak Map Virtual memory (bytes)=3947999232
		Peak Reduce Physical memory (bytes)=384671744
		Peak Reduce Virtual memory (bytes)=3967651840
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201203 14:37:19.734" starttime="20201203 14:37:19.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:37:19.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:37:19.735" starttime="20201203 14:37:19.734"></status>
</kw>
<status status="PASS" endtime="20201203 14:37:19.735" starttime="20201203 14:36:32.855"></status>
</kw>
<msg timestamp="20201203 14:37:19.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:37:19.735" starttime="20201203 14:36:32.855"></status>
</kw>
<msg timestamp="20201203 14:37:19.736" level="INFO">${output} = 2020-12-03 14:36:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-12-03 14:36:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201203 14:37:19.736" starttime="20201203 14:36:32.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201203 14:37:19.736" starttime="20201203 14:37:19.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:37:19.737" starttime="20201203 14:37:19.737"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:37:19.737" critical="yes" starttime="20201203 14:36:32.807"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201203 14:37:19.739" starttime="20201203 14:35:50.511"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:34:10.472" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:34:10.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:34:10.477" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:34:10.477" starttime="20201203 14:34:10.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:34:10.478" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:34:10.478" starttime="20201203 14:34:10.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:34:10.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:34:10.479" starttime="20201203 14:34:10.478"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:10.479" starttime="20201203 14:34:10.465"></status>
</kw>
<msg timestamp="20201203 14:34:10.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:34:10.480" starttime="20201203 14:34:10.465"></status>
</kw>
<msg timestamp="20201203 14:34:10.480" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:34:10.480" starttime="20201203 14:34:10.465"></status>
</kw>
<msg timestamp="20201203 14:34:10.480" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:34:10.480" starttime="20201203 14:34:10.464"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:34:10.485" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:34:10.485" starttime="20201203 14:34:10.485"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:34:10.486" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:34:10.486" starttime="20201203 14:34:10.485"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:10.486" starttime="20201203 14:34:10.483"></status>
</kw>
<msg timestamp="20201203 14:34:10.486" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:34:10.486" starttime="20201203 14:34:10.483"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:10.486" starttime="20201203 14:34:10.482"></status>
</kw>
<msg timestamp="20201203 14:34:10.486" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:34:10.487" starttime="20201203 14:34:10.481"></status>
</kw>
<msg timestamp="20201203 14:34:10.487" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:34:10.487" starttime="20201203 14:34:10.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:34:10.492" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:34:54.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:34:54.989" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:34:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:34:12 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201203 14:34:54.989" starttime="20201203 14:34:10.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:34:54.991" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:34:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:34:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:34:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:34:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:34:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-25663ACC9EBC-&gt;4bcc7577-7db4-4511-ada6-7834736e7d98
2020-12-03 14:34:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-03 14:34:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-12-03 14:34:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 14:34:15 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 14:34:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607005960377_0001
2020-12-03 14:34:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-03 14:34:16 INFO  Configuration:2795 - resource-types.xml not found
2020-12-03 14:34:16 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-03 14:34:16 INFO  YarnClientImpl:329 - Submitted application application_1607005960377_0001
2020-12-03 14:34:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607005960377_0001/
2020-12-03 14:34:16 INFO  Job:1619 - Running job: job_1607005960377_0001
2020-12-03 14:34:28 INFO  Job:1640 - Job job_1607005960377_0001 running in uber mode : false
2020-12-03 14:34:29 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 14:34:36 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 14:34:41 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 14:34:47 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 14:34:53 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 14:34:54 INFO  Job:1658 - Job job_1607005960377_0001 completed successfully
2020-12-03 14:34:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46484
		Total time spent by all reduces in occupied slots (ms)=18248
		Total time spent by all map tasks (ms)=11621
		Total time spent by all reduce tasks (ms)=4562
		Total vcore-milliseconds taken by all map tasks=11621
		Total vcore-milliseconds taken by all reduce tasks=4562
		Total megabyte-milliseconds taken by all map tasks=47599616
		Total megabyte-milliseconds taken by all reduce tasks=18685952
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=732
		CPU time spent (ms)=8370
		Physical memory (bytes) snapshot=1513181184
		Virtual memory (bytes) snapshot=15803904000
		Total committed heap usage (bytes)=1782579200
		Peak Map Physical memory (bytes)=381894656
		Peak Map Virtual memory (bytes)=3948847104
		Peak Reduce Physical memory (bytes)=384077824
		Peak Reduce Virtual memory (bytes)=3964772352
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.004 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201203 14:34:54.991" starttime="20201203 14:34:54.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:34:54.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:34:54.992" starttime="20201203 14:34:54.991"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:54.992" starttime="20201203 14:34:10.488"></status>
</kw>
<msg timestamp="20201203 14:34:54.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:34:54.992" starttime="20201203 14:34:10.487"></status>
</kw>
<msg timestamp="20201203 14:34:54.993" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-03 14:34:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:34:12 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201203 14:34:54.993" starttime="20201203 14:34:10.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:34:54.993" starttime="20201203 14:34:54.993"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:34:54.993" critical="yes" starttime="20201203 14:34:10.463"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:34:55.000" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:34:55.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:34:55.009" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:34:55.009" starttime="20201203 14:34:54.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:34:55.010" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:34:55.010" starttime="20201203 14:34:55.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:34:55.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:34:55.011" starttime="20201203 14:34:55.011"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:55.012" starttime="20201203 14:34:54.996"></status>
</kw>
<msg timestamp="20201203 14:34:55.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:34:55.012" starttime="20201203 14:34:54.996"></status>
</kw>
<msg timestamp="20201203 14:34:55.012" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:34:55.012" starttime="20201203 14:34:54.996"></status>
</kw>
<msg timestamp="20201203 14:34:55.013" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201203 14:34:55.013" starttime="20201203 14:34:54.995"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 14:34:55.014" level="INFO">${random} = 28</msg>
<status status="PASS" endtime="20201203 14:34:55.014" starttime="20201203 14:34:55.013"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:34:55.019" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:34:55.019" starttime="20201203 14:34:55.018"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:34:55.019" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:34:55.019" starttime="20201203 14:34:55.019"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:55.020" starttime="20201203 14:34:55.018"></status>
</kw>
<msg timestamp="20201203 14:34:55.020" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:34:55.020" starttime="20201203 14:34:55.017"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:55.020" starttime="20201203 14:34:55.016"></status>
</kw>
<msg timestamp="20201203 14:34:55.020" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:34:55.020" starttime="20201203 14:34:55.015"></status>
</kw>
<msg timestamp="20201203 14:34:55.020" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201203 14:34:55.021" starttime="20201203 14:34:55.014"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:34:55.024" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:34:55.024" starttime="20201203 14:34:55.024"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:34:55.025" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:34:55.025" starttime="20201203 14:34:55.024"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:55.025" starttime="20201203 14:34:55.023"></status>
</kw>
<msg timestamp="20201203 14:34:55.025" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:34:55.025" starttime="20201203 14:34:55.023"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:55.025" starttime="20201203 14:34:55.022"></status>
</kw>
<msg timestamp="20201203 14:34:55.025" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201203 14:34:55.025" starttime="20201203 14:34:55.021"></status>
</kw>
<msg timestamp="20201203 14:34:55.026" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201203 14:34:55.026" starttime="20201203 14:34:55.021"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201203 14:34:55.029" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201203 14:34:55.029" starttime="20201203 14:34:55.029"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 14:34:55.030" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201203 14:34:55.030" starttime="20201203 14:34:55.029"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:55.030" starttime="20201203 14:34:55.028"></status>
</kw>
<msg timestamp="20201203 14:34:55.030" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201203 14:34:55.030" starttime="20201203 14:34:55.028"></status>
</kw>
<status status="PASS" endtime="20201203 14:34:55.030" starttime="20201203 14:34:55.027"></status>
</kw>
<msg timestamp="20201203 14:34:55.031" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-28.txt</msg>
<status status="PASS" endtime="20201203 14:34:55.031" starttime="20201203 14:34:55.027"></status>
</kw>
<msg timestamp="20201203 14:34:55.031" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-28.txt</msg>
<status status="PASS" endtime="20201203 14:34:55.031" starttime="20201203 14:34:55.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 14:34:55.036" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-28.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 14:35:33.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 14:35:33.859" level="INFO">${output} = 2020-12-03 14:34:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-12-03 14:34:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201203 14:35:33.859" starttime="20201203 14:34:55.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 14:35:33.860" level="INFO">2020-12-03 14:34:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-12-03 14:34:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-03 14:34:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-03 14:34:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-03 14:34:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-03 14:34:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 14:34:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-79A4D2345869-&gt;4bcc7577-7db4-4511-ada6-7834736e7d98
2020-12-03 14:34:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 14:34:58 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-03 14:34:59 INFO  JobSubmitter:202 - number of splits:3
2020-12-03 14:34:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607005960377_0002
2020-12-03 14:34:59 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-03 14:34:59 INFO  Configuration:2795 - resource-types.xml not found
2020-12-03 14:34:59 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-03 14:34:59 INFO  YarnClientImpl:329 - Submitted application application_1607005960377_0002
2020-12-03 14:34:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607005960377_0002/
2020-12-03 14:34:59 INFO  Job:1619 - Running job: job_1607005960377_0002
2020-12-03 14:35:08 INFO  Job:1640 - Job job_1607005960377_0002 running in uber mode : false
2020-12-03 14:35:08 INFO  Job:1647 -  map 0% reduce 0%
2020-12-03 14:35:15 INFO  Job:1647 -  map 33% reduce 0%
2020-12-03 14:35:20 INFO  Job:1647 -  map 67% reduce 0%
2020-12-03 14:35:26 INFO  Job:1647 -  map 100% reduce 0%
2020-12-03 14:35:32 INFO  Job:1647 -  map 100% reduce 100%
2020-12-03 14:35:33 INFO  Job:1658 - Job job_1607005960377_0002 completed successfully
2020-12-03 14:35:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1118989
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39716
		O3FS: Number of bytes written=22202
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45740
		Total time spent by all reduces in occupied slots (ms)=17136
		Total time spent by all map tasks (ms)=11435
		Total time spent by all reduce tasks (ms)=4284
		Total vcore-milliseconds taken by all map tasks=11435
		Total vcore-milliseconds taken by all reduce tasks=4284
		Total megabyte-milliseconds taken by all map tasks=46837760
		Total megabyte-milliseconds taken by all reduce tasks=17547264
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=760
		CPU time spent (ms)=7900
		Physical memory (bytes) snapshot=1408184320
		Virtual memory (bytes) snapshot=15779176448
		Total committed heap usage (bytes)=1605369856
		Peak Map Physical memory (bytes)=377454592
		Peak Map Virtual memory (bytes)=3953152000
		Peak Reduce Physical memory (bytes)=383967232
		Peak Reduce Virtual memory (bytes)=3966926848
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201203 14:35:33.861" starttime="20201203 14:35:33.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 14:35:33.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 14:35:33.862" starttime="20201203 14:35:33.861"></status>
</kw>
<status status="PASS" endtime="20201203 14:35:33.862" starttime="20201203 14:34:55.032"></status>
</kw>
<msg timestamp="20201203 14:35:33.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 14:35:33.862" starttime="20201203 14:34:55.032"></status>
</kw>
<msg timestamp="20201203 14:35:33.862" level="INFO">${output} = 2020-12-03 14:34:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.6:8032
2020-12-03 14:34:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201203 14:35:33.862" starttime="20201203 14:34:55.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201203 14:35:33.863" starttime="20201203 14:35:33.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201203 14:35:33.864" starttime="20201203 14:35:33.863"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201203 14:35:33.864" critical="yes" starttime="20201203 14:34:54.994"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201203 14:35:33.865" starttime="20201203 14:34:10.406"></status>
</suite>
<status status="PASS" elapsedtime="231578" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="646054" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
