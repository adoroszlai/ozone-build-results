<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201203 15:17:35.315" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:12:56.669" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:13:08.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:13:08.303" level="INFO">${output} = 2020-12-03 15:12:58,729 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:12:58,968 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201203 15:13:08.303" starttime="20201203 15:12:56.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:13:08.304" level="INFO">2020-12-03 15:12:58,729 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:12:58,968 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:12:58,969 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-03 15:13:01,435 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-03 15:13:02,787 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-12-03 15:13:02,787 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-12-03 15:13:02,787 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-12-03 15:13:02,787 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-12-03 15:13:02,787 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-12-03 15:13:02,787 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-12-03 15:13:02,787 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-12-03 15:13:02,790 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-12-03 15:13:02,799 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:02,855 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-56638, with testuser/scm@EXAMPLE.COM as owner.
2020-12-03 15:13:03,405 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-56638/bucket-0-95343, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-03 15:13:03,812 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:04,812 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:05,814 [Thread-9] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:05,884 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-03 15:13:06,814 [Thread-9] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,536
Average Time spent in bucket creation: 00:00:00,190
Average Time spent in key creation: 00:00:01,333
Average Time spent in key write: 00:00:01,202
Total bytes written: 10240
Total Execution time: 00:00:08,786
***************************************************</msg>
<status status="PASS" endtime="20201203 15:13:08.304" starttime="20201203 15:13:08.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:13:08.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:13:08.305" starttime="20201203 15:13:08.305"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:08.305" starttime="20201203 15:12:56.663"></status>
</kw>
<msg timestamp="20201203 15:13:08.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:13:08.306" starttime="20201203 15:12:56.663"></status>
</kw>
<msg timestamp="20201203 15:13:08.306" level="INFO">${result} = 2020-12-03 15:12:58,729 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:12:58,968 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201203 15:13:08.306" starttime="20201203 15:12:56.662"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201203 15:13:08.307" starttime="20201203 15:13:08.307"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:08.307" starttime="20201203 15:13:08.306"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 15:13:08.307" critical="yes" starttime="20201203 15:12:56.662"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:13:08.314" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:13:17.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:13:17.347" level="INFO">${output} = 2020-12-03 15:13:10,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:13:10,480 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201203 15:13:17.347" starttime="20201203 15:13:08.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:13:17.349" level="INFO">2020-12-03 15:13:10,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:13:10,480 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:13:10,481 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-03 15:13:10,678 [main] INFO freon.BaseFreonGenerator: Executing test with prefix a0r1o4yxnp
2020-12-03 15:13:10,693 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-03 15:13:11,698 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:12,065 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-03 15:13:12,585 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-12-03 15:13:12,679 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-03 15:13:12,698 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:13,478 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-03 15:13:13,699 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:13,890 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-03 15:13:13,891 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-E7DD21A57B17-&gt;95db3bfb-e45c-4855-a76f-62bfe8177112
2020-12-03 15:13:13,892 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-03 15:13:14,699 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:15,712 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:16,713 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-03 15:13:16,916 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3410.144101, max=3410.144101, mean=3410.144101, stddev=0.0, median=3410.144101, p75=3410.144101, p95=3410.144101, p98=3410.144101, p99=3410.144101, p999=3410.144101, mean_rate=0.24023478885838281, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-03 15:13:16,916 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-12-03 15:13:16,920 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-03 15:13:16,920 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201203 15:13:17.350" starttime="20201203 15:13:17.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:13:17.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:13:17.351" starttime="20201203 15:13:17.350"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:17.351" starttime="20201203 15:13:08.310"></status>
</kw>
<msg timestamp="20201203 15:13:17.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:13:17.352" starttime="20201203 15:13:08.310"></status>
</kw>
<msg timestamp="20201203 15:13:17.352" level="INFO">${result} = 2020-12-03 15:13:10,257 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:13:10,480 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201203 15:13:17.352" starttime="20201203 15:13:08.309"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201203 15:13:17.353" starttime="20201203 15:13:17.353"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:17.354" starttime="20201203 15:13:17.353"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 15:13:17.354" critical="yes" starttime="20201203 15:13:08.308"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:13:17.359" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:13:22.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:13:22.792" level="INFO">${output} = 2020-12-03 15:13:19,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:13:19,427 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201203 15:13:22.792" starttime="20201203 15:13:17.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:13:22.793" level="INFO">2020-12-03 15:13:19,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:13:19,427 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:13:19,428 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-03 15:13:19,600 [main] INFO freon.BaseFreonGenerator: Executing test with prefix mkhgp8vm3b
2020-12-03 15:13:19,614 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-03 15:13:20,621 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:20,839 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-03 15:13:21,460 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-03 15:13:21,622 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:22,622 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-03 15:13:22,741 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=272.349558, max=272.349558, mean=272.349558, stddev=0.0, median=272.349558, p75=272.349558, p95=272.349558, p98=272.349558, p99=272.349558, p999=272.349558, mean_rate=0.7162675021405636, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-03 15:13:22,742 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-03 15:13:22,742 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-03 15:13:22,742 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201203 15:13:22.793" starttime="20201203 15:13:22.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:13:22.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:13:22.794" starttime="20201203 15:13:22.793"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:22.794" starttime="20201203 15:13:17.356"></status>
</kw>
<msg timestamp="20201203 15:13:22.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:13:22.795" starttime="20201203 15:13:17.356"></status>
</kw>
<msg timestamp="20201203 15:13:22.795" level="INFO">${result} = 2020-12-03 15:13:19,281 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:13:19,427 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201203 15:13:22.795" starttime="20201203 15:13:17.355"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201203 15:13:22.796" starttime="20201203 15:13:22.796"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:22.796" starttime="20201203 15:13:22.795"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 15:13:22.797" critical="yes" starttime="20201203 15:13:17.354"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:13:22.803" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:13:28.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:13:28.319" level="INFO">${output} = 2020-12-03 15:13:24,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:13:24,991 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201203 15:13:28.319" starttime="20201203 15:13:22.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:13:28.320" level="INFO">2020-12-03 15:13:24,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:13:24,991 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-03 15:13:24,991 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-03 15:13:25,232 [main] INFO freon.BaseFreonGenerator: Executing test with prefix jbv1zuzokm
2020-12-03 15:13:25,257 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-03 15:13:26,279 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-03 15:13:26,521 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-03 15:13:27,153 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-03 15:13:27,280 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-03 15:13:28,165 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=162.545347, max=162.545347, mean=162.545347, stddev=0.0, median=162.545347, p75=162.545347, p95=162.545347, p98=162.545347, p99=162.545347, p999=162.545347, mean_rate=0.8861668450708098, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-03 15:13:28,166 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-03 15:13:28,170 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-03 15:13:28,170 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201203 15:13:28.320" starttime="20201203 15:13:28.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:13:28.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:13:28.321" starttime="20201203 15:13:28.320"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:28.321" starttime="20201203 15:13:22.799"></status>
</kw>
<msg timestamp="20201203 15:13:28.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:13:28.321" starttime="20201203 15:13:22.799"></status>
</kw>
<msg timestamp="20201203 15:13:28.322" level="INFO">${result} = 2020-12-03 15:13:24,734 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-03 15:13:24,991 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201203 15:13:28.322" starttime="20201203 15:13:22.798"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201203 15:13:28.323" starttime="20201203 15:13:28.323"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:28.323" starttime="20201203 15:13:28.322"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201203 15:13:28.323" critical="yes" starttime="20201203 15:13:22.797"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201203 15:13:28.325" starttime="20201203 15:12:56.636"></status>
</suite>
<status status="PASS" endtime="20201203 15:13:28.328" starttime="20201203 15:12:56.609"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:12:48.523" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:12:48.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:12:48.526" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:12:48.526" starttime="20201203 15:12:48.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:12:48.527" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:12:48.527" starttime="20201203 15:12:48.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:12:48.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:12:48.528" starttime="20201203 15:12:48.527"></status>
</kw>
<status status="PASS" endtime="20201203 15:12:48.528" starttime="20201203 15:12:48.515"></status>
</kw>
<msg timestamp="20201203 15:12:48.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:12:48.528" starttime="20201203 15:12:48.515"></status>
</kw>
<msg timestamp="20201203 15:12:48.534" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:12:48.534" starttime="20201203 15:12:48.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:12:48.535" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:12:48.535" starttime="20201203 15:12:48.534"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:12:48.552" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:12:48.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:12:48.576" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:12:48.576" starttime="20201203 15:12:48.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:12:48.577" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:12:48.577" starttime="20201203 15:12:48.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:12:48.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:12:48.578" starttime="20201203 15:12:48.577"></status>
</kw>
<status status="PASS" endtime="20201203 15:12:48.578" starttime="20201203 15:12:48.541"></status>
</kw>
<msg timestamp="20201203 15:12:48.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:12:48.578" starttime="20201203 15:12:48.536"></status>
</kw>
<status status="PASS" endtime="20201203 15:12:48.579" starttime="20201203 15:12:48.536"></status>
</kw>
<status status="PASS" endtime="20201203 15:12:48.579" starttime="20201203 15:12:48.535"></status>
</kw>
<status status="PASS" endtime="20201203 15:12:48.579" starttime="20201203 15:12:48.514"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:12:48.579" critical="yes" starttime="20201203 15:12:48.513"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201203 15:12:48.581" starttime="20201203 15:12:48.403"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201203 15:13:34.893" level="INFO">${random} = 19823</msg>
<status status="PASS" endtime="20201203 15:13:34.893" starttime="20201203 15:13:34.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201203 15:13:34.895" level="INFO">${source} = 19823-source</msg>
<status status="PASS" endtime="20201203 15:13:34.895" starttime="20201203 15:13:34.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201203 15:13:34.898" level="INFO">${target} = 19823-target</msg>
<status status="PASS" endtime="20201203 15:13:34.898" starttime="20201203 15:13:34.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:13:34.909" level="INFO">Running command 'ozone sh volume create 19823-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:13:39.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:13:39.219" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:13:39.219" starttime="20201203 15:13:34.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:13:39.221" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:13:39.221" starttime="20201203 15:13:39.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:13:39.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:13:39.221" starttime="20201203 15:13:39.221"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:39.222" starttime="20201203 15:13:34.902"></status>
</kw>
<msg timestamp="20201203 15:13:39.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:13:39.222" starttime="20201203 15:13:34.901"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:39.222" starttime="20201203 15:13:34.898"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:13:39.225" level="INFO">Running command 'ozone sh volume create 19823-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:13:43.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:13:43.488" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:13:43.488" starttime="20201203 15:13:39.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:13:43.489" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:13:43.489" starttime="20201203 15:13:43.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:13:43.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:13:43.490" starttime="20201203 15:13:43.489"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:43.490" starttime="20201203 15:13:39.223"></status>
</kw>
<msg timestamp="20201203 15:13:43.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:13:43.490" starttime="20201203 15:13:39.223"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:43.491" starttime="20201203 15:13:39.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:13:43.497" level="INFO">Running command 'ozone sh bucket create 19823-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:13:48.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:13:48.024" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:13:48.025" starttime="20201203 15:13:43.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:13:48.026" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:13:48.026" starttime="20201203 15:13:48.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:13:48.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:13:48.027" starttime="20201203 15:13:48.026"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:48.027" starttime="20201203 15:13:43.493"></status>
</kw>
<msg timestamp="20201203 15:13:48.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:13:48.028" starttime="20201203 15:13:43.492"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:48.028" starttime="20201203 15:13:43.492"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:13:48.033" level="INFO">Running command 'ozone sh key put 19823-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:13:54.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:13:54.313" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:13:54.313" starttime="20201203 15:13:48.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:13:54.315" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:13:54.315" starttime="20201203 15:13:54.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:13:54.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:13:54.316" starttime="20201203 15:13:54.316"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:54.316" starttime="20201203 15:13:48.029"></status>
</kw>
<msg timestamp="20201203 15:13:54.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:13:54.317" starttime="20201203 15:13:48.028"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:54.317" starttime="20201203 15:13:48.028"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:13:54.322" level="INFO">Running command 'ozone sh bucket create 19823-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:13:58.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:13:58.030" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:13:58.030" starttime="20201203 15:13:54.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:13:58.031" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:13:58.031" starttime="20201203 15:13:58.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:13:58.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:13:58.032" starttime="20201203 15:13:58.031"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:58.032" starttime="20201203 15:13:54.318"></status>
</kw>
<msg timestamp="20201203 15:13:58.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:13:58.032" starttime="20201203 15:13:54.318"></status>
</kw>
<status status="PASS" endtime="20201203 15:13:58.032" starttime="20201203 15:13:54.317"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:13:58.036" level="INFO">Running command 'ozone sh bucket link 19823-source/readable-bucket 19823-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:01.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:01.815" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:01.815" starttime="20201203 15:13:58.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:01.817" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:14:01.817" starttime="20201203 15:14:01.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:01.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:01.817" starttime="20201203 15:14:01.817"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:01.818" starttime="20201203 15:13:58.034"></status>
</kw>
<msg timestamp="20201203 15:14:01.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:01.818" starttime="20201203 15:13:58.033"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:01.818" starttime="20201203 15:13:58.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:01.823" level="INFO">Running command 'ozone sh bucket link 19823-source/readable-bucket 19823-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:05.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:05.980" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:05.980" starttime="20201203 15:14:01.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:05.981" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:14:05.981" starttime="20201203 15:14:05.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:05.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:05.982" starttime="20201203 15:14:05.981"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:05.982" starttime="20201203 15:14:01.819"></status>
</kw>
<msg timestamp="20201203 15:14:05.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:05.982" starttime="20201203 15:14:01.819"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:05.982" starttime="20201203 15:14:01.818"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:05.986" level="INFO">Running command 'ozone sh bucket link 19823-source/unreadable-bucket 19823-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:10.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:10.050" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:10.050" starttime="20201203 15:14:05.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:10.052" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:14:10.052" starttime="20201203 15:14:10.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:10.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:10.052" starttime="20201203 15:14:10.052"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:10.053" starttime="20201203 15:14:05.983"></status>
</kw>
<msg timestamp="20201203 15:14:10.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:10.053" starttime="20201203 15:14:05.983"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:10.053" starttime="20201203 15:14:05.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:10.059" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 19823-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:13.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:13.958" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:13.959" starttime="20201203 15:14:10.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:13.959" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201203 15:14:13.960" starttime="20201203 15:14:13.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:13.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:13.960" starttime="20201203 15:14:13.960"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:13.961" starttime="20201203 15:14:10.054"></status>
</kw>
<msg timestamp="20201203 15:14:13.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:13.969" starttime="20201203 15:14:10.054"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:13.969" starttime="20201203 15:14:10.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:13.985" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 19823-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:18.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:18.368" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:18.368" starttime="20201203 15:14:13.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:18.369" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201203 15:14:18.369" starttime="20201203 15:14:18.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:18.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:18.370" starttime="20201203 15:14:18.370"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:18.371" starttime="20201203 15:14:13.970"></status>
</kw>
<msg timestamp="20201203 15:14:18.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:18.371" starttime="20201203 15:14:13.970"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:18.371" starttime="20201203 15:14:13.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:18.375" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 19823-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:22.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:22.245" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:22.245" starttime="20201203 15:14:18.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:22.246" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201203 15:14:22.246" starttime="20201203 15:14:22.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:22.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:22.247" starttime="20201203 15:14:22.246"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:22.247" starttime="20201203 15:14:18.372"></status>
</kw>
<msg timestamp="20201203 15:14:22.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:22.247" starttime="20201203 15:14:18.372"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:22.247" starttime="20201203 15:14:18.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:22.251" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 19823-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:26.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:26.274" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:26.274" starttime="20201203 15:14:22.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:26.276" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201203 15:14:26.276" starttime="20201203 15:14:26.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:26.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:26.277" starttime="20201203 15:14:26.276"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:26.277" starttime="20201203 15:14:22.248"></status>
</kw>
<msg timestamp="20201203 15:14:26.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:26.277" starttime="20201203 15:14:22.248"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:26.278" starttime="20201203 15:14:22.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:26.282" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 19823-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:30.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:30.348" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:30.348" starttime="20201203 15:14:26.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:30.349" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201203 15:14:30.349" starttime="20201203 15:14:30.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:30.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:30.350" starttime="20201203 15:14:30.349"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.350" starttime="20201203 15:14:26.279"></status>
</kw>
<msg timestamp="20201203 15:14:30.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:30.350" starttime="20201203 15:14:26.278"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.350" starttime="20201203 15:14:26.278"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.351" starttime="20201203 15:13:43.491"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.351" starttime="20201203 15:13:43.491"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.351" starttime="20201203 15:13:34.892"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:30.358" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:30.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:30.359" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:14:30.359" starttime="20201203 15:14:30.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:30.360" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:14:30.361" starttime="20201203 15:14:30.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:30.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:30.361" starttime="20201203 15:14:30.361"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.362" starttime="20201203 15:14:30.354"></status>
</kw>
<msg timestamp="20201203 15:14:30.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:30.362" starttime="20201203 15:14:30.354"></status>
</kw>
<msg timestamp="20201203 15:14:30.362" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:14:30.362" starttime="20201203 15:14:30.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:14:30.363" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:14:30.364" starttime="20201203 15:14:30.362"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:30.369" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:30.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:30.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:14:30.385" starttime="20201203 15:14:30.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:30.386" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:14:30.386" starttime="20201203 15:14:30.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:30.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:30.386" starttime="20201203 15:14:30.386"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.387" starttime="20201203 15:14:30.365"></status>
</kw>
<msg timestamp="20201203 15:14:30.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:30.387" starttime="20201203 15:14:30.365"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.387" starttime="20201203 15:14:30.364"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.387" starttime="20201203 15:14:30.364"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.387" starttime="20201203 15:14:30.353"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:30.387" starttime="20201203 15:14:30.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:30.392" level="INFO">Running command 'ozone sh bucket link 19823-source/no-such-bucket 19823-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:34.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:34.204" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:34.204" starttime="20201203 15:14:30.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:34.206" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:14:34.206" starttime="20201203 15:14:34.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:34.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:34.207" starttime="20201203 15:14:34.206"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:34.207" starttime="20201203 15:14:30.389"></status>
</kw>
<msg timestamp="20201203 15:14:34.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:34.207" starttime="20201203 15:14:30.388"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:34.207" starttime="20201203 15:14:30.388"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:34.210" level="INFO">Running command 'ozone sh key list 19823-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:38.518" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 15:14:38.518" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:38.518" starttime="20201203 15:14:34.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:38.520" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201203 15:14:38.520" starttime="20201203 15:14:38.519"></status>
</kw>
<msg timestamp="20201203 15:14:38.520" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:38.520" starttime="20201203 15:14:34.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201203 15:14:38.521" starttime="20201203 15:14:38.521"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:14:38.521" critical="yes" starttime="20201203 15:14:30.351"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:38.528" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:38.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:38.531" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:14:38.531" starttime="20201203 15:14:38.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:38.532" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:14:38.533" starttime="20201203 15:14:38.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:38.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:38.533" starttime="20201203 15:14:38.533"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:38.534" starttime="20201203 15:14:38.525"></status>
</kw>
<msg timestamp="20201203 15:14:38.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:38.534" starttime="20201203 15:14:38.525"></status>
</kw>
<msg timestamp="20201203 15:14:38.534" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:14:38.534" starttime="20201203 15:14:38.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:14:38.535" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:14:38.535" starttime="20201203 15:14:38.534"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:38.539" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:38.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:38.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:14:38.551" starttime="20201203 15:14:38.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:38.553" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:14:38.553" starttime="20201203 15:14:38.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:38.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:38.553" starttime="20201203 15:14:38.553"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:38.554" starttime="20201203 15:14:38.536"></status>
</kw>
<msg timestamp="20201203 15:14:38.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:38.554" starttime="20201203 15:14:38.536"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:38.554" starttime="20201203 15:14:38.535"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:38.554" starttime="20201203 15:14:38.535"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:38.554" starttime="20201203 15:14:38.524"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:38.555" starttime="20201203 15:14:38.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:38.559" level="INFO">Running command 'ozone sh bucket link 19823-source/bucket1 19823-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:42.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:42.734" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:42.734" starttime="20201203 15:14:38.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:42.735" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:14:42.735" starttime="20201203 15:14:42.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:42.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:42.736" starttime="20201203 15:14:42.735"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:42.736" starttime="20201203 15:14:38.556"></status>
</kw>
<msg timestamp="20201203 15:14:42.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:42.737" starttime="20201203 15:14:38.555"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:42.737" starttime="20201203 15:14:38.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:42.742" level="INFO">Running command 'ozone sh bucket create 19823-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:46.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:46.968" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:46.968" starttime="20201203 15:14:42.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:46.969" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:14:46.969" starttime="20201203 15:14:46.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:46.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:46.970" starttime="20201203 15:14:46.969"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:46.970" starttime="20201203 15:14:42.739"></status>
</kw>
<msg timestamp="20201203 15:14:46.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:46.970" starttime="20201203 15:14:42.738"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:46.971" starttime="20201203 15:14:42.737"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:46.975" level="INFO">Running command 'ozone sh key put 19823-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:14:53.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:14:53.494" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:14:53.496" starttime="20201203 15:14:46.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:14:53.497" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:14:53.498" starttime="20201203 15:14:53.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:14:53.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:14:53.499" starttime="20201203 15:14:53.498"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:53.499" starttime="20201203 15:14:46.972"></status>
</kw>
<msg timestamp="20201203 15:14:53.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:14:53.499" starttime="20201203 15:14:46.971"></status>
</kw>
<status status="PASS" endtime="20201203 15:14:53.500" starttime="20201203 15:14:46.971"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201203 15:14:53.502" level="INFO">${postfix} = 69937</msg>
<status status="PASS" endtime="20201203 15:14:53.502" starttime="20201203 15:14:53.502"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201203 15:14:53.503" level="INFO">${tmpfile} = /tmp/tempkey-69937</msg>
<status status="PASS" endtime="20201203 15:14:53.503" starttime="20201203 15:14:53.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:14:53.508" level="INFO">Running command 'ozone sh key get -f 19823-target/link1/key1 /tmp/tempkey-69937 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:00.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:00.297" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:15:00.297" starttime="20201203 15:14:53.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:00.298" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:15:00.299" starttime="20201203 15:15:00.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:00.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:00.299" starttime="20201203 15:15:00.299"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.300" starttime="20201203 15:14:53.504"></status>
</kw>
<msg timestamp="20201203 15:15:00.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:00.301" starttime="20201203 15:14:53.504"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.301" starttime="20201203 15:14:53.503"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201203 15:15:00.304" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-69937 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:00.308" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201203 15:15:00.308" starttime="20201203 15:15:00.301"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:00.315" level="INFO">Running command 'rm -f /tmp/tempkey-69937 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:00.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:00.317" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:15:00.317" starttime="20201203 15:15:00.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:00.318" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:15:00.318" starttime="20201203 15:15:00.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:00.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:00.319" starttime="20201203 15:15:00.319"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.320" starttime="20201203 15:15:00.311"></status>
</kw>
<msg timestamp="20201203 15:15:00.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:00.320" starttime="20201203 15:15:00.310"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.320" starttime="20201203 15:15:00.309"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:15:00.321" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201203 15:15:00.321" starttime="20201203 15:15:00.320"></status>
</kw>
<msg timestamp="20201203 15:15:00.321" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201203 15:15:00.321" starttime="20201203 15:14:53.501"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:00.322" starttime="20201203 15:15:00.322"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.322" starttime="20201203 15:14:53.500"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:15:00.322" critical="yes" starttime="20201203 15:14:38.522"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:00.329" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:00.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:00.330" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:15:00.331" starttime="20201203 15:15:00.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:00.331" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:15:00.332" starttime="20201203 15:15:00.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:00.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:00.332" starttime="20201203 15:15:00.332"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.333" starttime="20201203 15:15:00.325"></status>
</kw>
<msg timestamp="20201203 15:15:00.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:00.333" starttime="20201203 15:15:00.325"></status>
</kw>
<msg timestamp="20201203 15:15:00.333" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:15:00.333" starttime="20201203 15:15:00.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:15:00.334" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:15:00.334" starttime="20201203 15:15:00.333"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:00.340" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:00.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:00.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:15:00.363" starttime="20201203 15:15:00.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:00.364" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:15:00.364" starttime="20201203 15:15:00.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:00.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:00.365" starttime="20201203 15:15:00.364"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.365" starttime="20201203 15:15:00.336"></status>
</kw>
<msg timestamp="20201203 15:15:00.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:00.366" starttime="20201203 15:15:00.335"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.366" starttime="20201203 15:15:00.335"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.366" starttime="20201203 15:15:00.334"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.366" starttime="20201203 15:15:00.324"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:00.366" starttime="20201203 15:15:00.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:00.372" level="INFO">Running command 'ozone sh key put 19823-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:06.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:06.749" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:15:06.749" starttime="20201203 15:15:00.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:06.750" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:15:06.750" starttime="20201203 15:15:06.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:06.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:06.751" starttime="20201203 15:15:06.750"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:06.751" starttime="20201203 15:15:00.367"></status>
</kw>
<msg timestamp="20201203 15:15:06.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:06.751" starttime="20201203 15:15:00.367"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:06.752" starttime="20201203 15:15:00.366"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201203 15:15:06.754" level="INFO">${postfix} = 44991</msg>
<status status="PASS" endtime="20201203 15:15:06.754" starttime="20201203 15:15:06.753"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201203 15:15:06.755" level="INFO">${tmpfile} = /tmp/tempkey-44991</msg>
<status status="PASS" endtime="20201203 15:15:06.755" starttime="20201203 15:15:06.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:06.760" level="INFO">Running command 'ozone sh key get -f 19823-source/bucket1/key2 /tmp/tempkey-44991 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:12.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:12.851" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:15:12.851" starttime="20201203 15:15:06.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:12.852" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:15:12.853" starttime="20201203 15:15:12.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:12.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:12.854" starttime="20201203 15:15:12.853"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.854" starttime="20201203 15:15:06.756"></status>
</kw>
<msg timestamp="20201203 15:15:12.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:12.854" starttime="20201203 15:15:06.755"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.855" starttime="20201203 15:15:06.755"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201203 15:15:12.858" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-44991 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:12.860" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201203 15:15:12.860" starttime="20201203 15:15:12.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:12.867" level="INFO">Running command 'rm -f /tmp/tempkey-44991 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:12.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:12.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:15:12.877" starttime="20201203 15:15:12.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:12.878" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:15:12.878" starttime="20201203 15:15:12.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:12.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:12.879" starttime="20201203 15:15:12.878"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.879" starttime="20201203 15:15:12.862"></status>
</kw>
<msg timestamp="20201203 15:15:12.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:12.879" starttime="20201203 15:15:12.862"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.879" starttime="20201203 15:15:12.861"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:15:12.880" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201203 15:15:12.880" starttime="20201203 15:15:12.880"></status>
</kw>
<msg timestamp="20201203 15:15:12.880" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201203 15:15:12.880" starttime="20201203 15:15:06.753"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:12.881" starttime="20201203 15:15:12.881"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.881" starttime="20201203 15:15:06.752"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:15:12.881" critical="yes" starttime="20201203 15:15:00.323"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:12.888" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:12.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:12.891" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:15:12.891" starttime="20201203 15:15:12.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:12.892" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:15:12.892" starttime="20201203 15:15:12.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:12.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:12.893" starttime="20201203 15:15:12.892"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.893" starttime="20201203 15:15:12.885"></status>
</kw>
<msg timestamp="20201203 15:15:12.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:12.893" starttime="20201203 15:15:12.885"></status>
</kw>
<msg timestamp="20201203 15:15:12.894" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:15:12.894" starttime="20201203 15:15:12.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:15:12.895" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:15:12.895" starttime="20201203 15:15:12.894"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:12.901" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:12.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:12.918" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:15:12.918" starttime="20201203 15:15:12.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:12.919" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:15:12.919" starttime="20201203 15:15:12.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:12.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:12.920" starttime="20201203 15:15:12.920"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.921" starttime="20201203 15:15:12.896"></status>
</kw>
<msg timestamp="20201203 15:15:12.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:12.921" starttime="20201203 15:15:12.896"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.921" starttime="20201203 15:15:12.895"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.922" starttime="20201203 15:15:12.895"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.922" starttime="20201203 15:15:12.884"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:12.922" starttime="20201203 15:15:12.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:12.926" level="INFO">Running command 'ozone sh key list 19823-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:17.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:17.423" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201203 15:15:17.423" starttime="20201203 15:15:12.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:17.424" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201203 15:15:17.424" starttime="20201203 15:15:17.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:17.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:17.425" starttime="20201203 15:15:17.424"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:17.425" starttime="20201203 15:15:12.923"></status>
</kw>
<msg timestamp="20201203 15:15:17.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:17.425" starttime="20201203 15:15:12.923"></status>
</kw>
<msg timestamp="20201203 15:15:17.426" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201203 15:15:17.426" starttime="20201203 15:15:12.922"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:17.431" level="INFO">Running command 'ozone sh key list 19823-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:21.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:21.839" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201203 15:15:21.839" starttime="20201203 15:15:17.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:21.841" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201203 15:15:21.841" starttime="20201203 15:15:21.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:21.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:21.841" starttime="20201203 15:15:21.841"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:21.842" starttime="20201203 15:15:17.427"></status>
</kw>
<msg timestamp="20201203 15:15:21.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:21.842" starttime="20201203 15:15:17.426"></status>
</kw>
<msg timestamp="20201203 15:15:21.842" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201203 15:15:21.842" starttime="20201203 15:15:17.426"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:21.843" starttime="20201203 15:15:21.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:21.843" starttime="20201203 15:15:21.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:21.844" starttime="20201203 15:15:21.844"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:15:21.844" critical="yes" starttime="20201203 15:15:12.882"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:21.851" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:21.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:21.854" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:15:21.855" starttime="20201203 15:15:21.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:21.856" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:15:21.856" starttime="20201203 15:15:21.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:21.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:21.857" starttime="20201203 15:15:21.856"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:21.858" starttime="20201203 15:15:21.847"></status>
</kw>
<msg timestamp="20201203 15:15:21.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:21.858" starttime="20201203 15:15:21.847"></status>
</kw>
<msg timestamp="20201203 15:15:21.858" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:15:21.858" starttime="20201203 15:15:21.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:15:21.859" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:15:21.859" starttime="20201203 15:15:21.858"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:21.865" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:21.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:21.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:15:21.881" starttime="20201203 15:15:21.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:21.882" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:15:21.883" starttime="20201203 15:15:21.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:21.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:21.883" starttime="20201203 15:15:21.883"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:21.884" starttime="20201203 15:15:21.861"></status>
</kw>
<msg timestamp="20201203 15:15:21.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:21.884" starttime="20201203 15:15:21.860"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:21.884" starttime="20201203 15:15:21.860"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:21.884" starttime="20201203 15:15:21.859"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:21.884" starttime="20201203 15:15:21.846"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:21.884" starttime="20201203 15:15:21.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:21.890" level="INFO">Running command 'ozone sh key delete 19823-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:25.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:25.939" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:15:25.939" starttime="20201203 15:15:21.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:25.941" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:15:25.941" starttime="20201203 15:15:25.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:25.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:25.945" starttime="20201203 15:15:25.941"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:25.945" starttime="20201203 15:15:21.885"></status>
</kw>
<msg timestamp="20201203 15:15:25.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:25.946" starttime="20201203 15:15:21.885"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:25.946" starttime="20201203 15:15:21.885"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:25.963" level="INFO">Running command 'ozone sh key list 19823-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:30.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:30.290" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201203 15:15:30.290" starttime="20201203 15:15:25.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:30.292" level="INFO">key1</msg>
<status status="PASS" endtime="20201203 15:15:30.293" starttime="20201203 15:15:30.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:30.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:30.293" starttime="20201203 15:15:30.293"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:30.294" starttime="20201203 15:15:25.947"></status>
</kw>
<msg timestamp="20201203 15:15:30.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:30.294" starttime="20201203 15:15:25.947"></status>
</kw>
<msg timestamp="20201203 15:15:30.294" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201203 15:15:30.294" starttime="20201203 15:15:25.946"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:30.295" starttime="20201203 15:15:30.294"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:15:30.295" critical="yes" starttime="20201203 15:15:21.845"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:30.301" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:30.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:30.304" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:15:30.304" starttime="20201203 15:15:30.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:30.305" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:15:30.305" starttime="20201203 15:15:30.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:30.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:30.306" starttime="20201203 15:15:30.306"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:30.306" starttime="20201203 15:15:30.298"></status>
</kw>
<msg timestamp="20201203 15:15:30.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:30.307" starttime="20201203 15:15:30.298"></status>
</kw>
<msg timestamp="20201203 15:15:30.307" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:15:30.307" starttime="20201203 15:15:30.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:15:30.308" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:15:30.308" starttime="20201203 15:15:30.307"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:30.313" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:30.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:30.336" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:15:30.336" starttime="20201203 15:15:30.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:30.337" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:15:30.337" starttime="20201203 15:15:30.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:30.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:30.338" starttime="20201203 15:15:30.337"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:30.338" starttime="20201203 15:15:30.309"></status>
</kw>
<msg timestamp="20201203 15:15:30.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:30.339" starttime="20201203 15:15:30.309"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:30.339" starttime="20201203 15:15:30.308"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:30.339" starttime="20201203 15:15:30.308"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:30.339" starttime="20201203 15:15:30.297"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:30.339" starttime="20201203 15:15:30.296"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:30.344" level="INFO">Running command 'ozone sh bucket list 19823-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:34.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:34.519" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:15:34.519" starttime="20201203 15:15:30.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:34.520" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:34.065Z",
  "modificationTime" : "2020-12-03T15:14:34.065Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:09.866Z",
  "modificationTime" : "2020-12-03T15:14:30.130Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:42.559Z",
  "modificationTime" : "2020-12-03T15:14:42.559Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:01.655Z",
  "modificationTime" : "2020-12-03T15:14:26.180Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:05.901Z",
  "modificationTime" : "2020-12-03T15:14:05.901Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201203 15:15:34.520" starttime="20201203 15:15:34.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:34.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:34.521" starttime="20201203 15:15:34.520"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:34.521" starttime="20201203 15:15:30.341"></status>
</kw>
<msg timestamp="20201203 15:15:34.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:34.521" starttime="20201203 15:15:30.340"></status>
</kw>
<msg timestamp="20201203 15:15:34.522" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:15:34.522" starttime="20201203 15:15:30.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:34.522" starttime="20201203 15:15:34.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:34.523" starttime="20201203 15:15:34.523"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:15:34.524" critical="yes" starttime="20201203 15:15:30.296"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:34.533" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:34.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:34.536" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:15:34.536" starttime="20201203 15:15:34.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:34.537" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:15:34.537" starttime="20201203 15:15:34.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:34.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:34.538" starttime="20201203 15:15:34.538"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:34.539" starttime="20201203 15:15:34.530"></status>
</kw>
<msg timestamp="20201203 15:15:34.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:34.539" starttime="20201203 15:15:34.529"></status>
</kw>
<msg timestamp="20201203 15:15:34.540" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:15:34.540" starttime="20201203 15:15:34.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:15:34.540" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:15:34.541" starttime="20201203 15:15:34.540"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:34.547" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:34.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:34.557" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:15:34.557" starttime="20201203 15:15:34.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:34.558" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:15:34.559" starttime="20201203 15:15:34.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:34.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:34.559" starttime="20201203 15:15:34.559"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:34.560" starttime="20201203 15:15:34.543"></status>
</kw>
<msg timestamp="20201203 15:15:34.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:34.560" starttime="20201203 15:15:34.542"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:34.560" starttime="20201203 15:15:34.542"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:34.560" starttime="20201203 15:15:34.541"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:34.560" starttime="20201203 15:15:34.528"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:34.560" starttime="20201203 15:15:34.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:34.565" level="INFO">Running command 'ozone sh bucket info 19823-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:38.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:38.882" level="INFO">${output} = 19823-source bucket1</msg>
<status status="PASS" endtime="20201203 15:15:38.882" starttime="20201203 15:15:34.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:38.883" level="INFO">19823-source bucket1</msg>
<status status="PASS" endtime="20201203 15:15:38.883" starttime="20201203 15:15:38.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:38.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:38.884" starttime="20201203 15:15:38.884"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:38.884" starttime="20201203 15:15:34.562"></status>
</kw>
<msg timestamp="20201203 15:15:38.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:38.885" starttime="20201203 15:15:34.562"></status>
</kw>
<msg timestamp="20201203 15:15:38.885" level="INFO">${result} = 19823-source bucket1</msg>
<status status="PASS" endtime="20201203 15:15:38.885" starttime="20201203 15:15:34.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:38.886" starttime="20201203 15:15:38.885"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:15:38.886" critical="yes" starttime="20201203 15:15:34.527"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:38.893" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:38.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:38.895" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:15:38.895" starttime="20201203 15:15:38.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:38.896" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:15:38.896" starttime="20201203 15:15:38.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:38.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:38.897" starttime="20201203 15:15:38.896"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:38.897" starttime="20201203 15:15:38.889"></status>
</kw>
<msg timestamp="20201203 15:15:38.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:38.897" starttime="20201203 15:15:38.889"></status>
</kw>
<msg timestamp="20201203 15:15:38.898" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:15:38.898" starttime="20201203 15:15:38.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:15:38.898" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:15:38.898" starttime="20201203 15:15:38.898"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:38.904" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:38.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:38.916" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:15:38.917" starttime="20201203 15:15:38.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:38.918" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:15:38.918" starttime="20201203 15:15:38.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:38.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:38.919" starttime="20201203 15:15:38.918"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:38.919" starttime="20201203 15:15:38.900"></status>
</kw>
<msg timestamp="20201203 15:15:38.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:38.919" starttime="20201203 15:15:38.900"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:38.920" starttime="20201203 15:15:38.899"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:38.920" starttime="20201203 15:15:38.899"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:38.920" starttime="20201203 15:15:38.888"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:38.920" starttime="20201203 15:15:38.888"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:38.924" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 19823-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:42.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:42.741" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:15:42.741" starttime="20201203 15:15:38.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:42.745" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201203 15:15:42.745" starttime="20201203 15:15:42.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:42.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:42.746" starttime="20201203 15:15:42.745"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:42.747" starttime="20201203 15:15:38.921"></status>
</kw>
<msg timestamp="20201203 15:15:42.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:42.747" starttime="20201203 15:15:38.921"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:42.747" starttime="20201203 15:15:38.920"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:42.753" level="INFO">Running command 'ozone sh bucket getacl 19823-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:47.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:47.090" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201203 15:15:47.090" starttime="20201203 15:15:42.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:47.091" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201203 15:15:47.091" starttime="20201203 15:15:47.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:47.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:47.092" starttime="20201203 15:15:47.091"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:47.092" starttime="20201203 15:15:42.750"></status>
</kw>
<msg timestamp="20201203 15:15:47.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:47.092" starttime="20201203 15:15:42.750"></status>
</kw>
<msg timestamp="20201203 15:15:47.092" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201203 15:15:47.093" starttime="20201203 15:15:42.748"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:47.093" starttime="20201203 15:15:47.093"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:47.093" starttime="20201203 15:15:42.748"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:47.100" level="INFO">Running command 'ozone sh bucket getacl 19823-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:52.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:52.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:15:52.259" starttime="20201203 15:15:47.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:52.260" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:15:52.260" starttime="20201203 15:15:52.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:52.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:52.261" starttime="20201203 15:15:52.260"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:52.261" starttime="20201203 15:15:47.096"></status>
</kw>
<msg timestamp="20201203 15:15:52.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:52.261" starttime="20201203 15:15:47.095"></status>
</kw>
<msg timestamp="20201203 15:15:52.262" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201203 15:15:52.262" starttime="20201203 15:15:47.094"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:15:52.262" starttime="20201203 15:15:52.262"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:52.262" starttime="20201203 15:15:47.093"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:52.267" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 19823-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:15:56.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:15:56.566" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:15:56.566" starttime="20201203 15:15:52.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:15:56.568" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201203 15:15:56.568" starttime="20201203 15:15:56.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:15:56.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:15:56.568" starttime="20201203 15:15:56.568"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:56.569" starttime="20201203 15:15:52.264"></status>
</kw>
<msg timestamp="20201203 15:15:56.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:15:56.569" starttime="20201203 15:15:52.263"></status>
</kw>
<status status="PASS" endtime="20201203 15:15:56.569" starttime="20201203 15:15:52.263"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:15:56.574" level="INFO">Running command 'ozone sh bucket getacl 19823-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:01.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:01.682" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:01.682" starttime="20201203 15:15:56.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:01.683" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:01.683" starttime="20201203 15:16:01.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:01.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:01.684" starttime="20201203 15:16:01.684"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:01.685" starttime="20201203 15:15:56.571"></status>
</kw>
<msg timestamp="20201203 15:16:01.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:01.685" starttime="20201203 15:15:56.571"></status>
</kw>
<msg timestamp="20201203 15:16:01.685" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201203 15:16:01.685" starttime="20201203 15:15:56.570"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:01.686" starttime="20201203 15:16:01.685"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:01.686" starttime="20201203 15:15:56.569"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:01.692" level="INFO">Running command 'ozone sh bucket getacl 19823-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:06.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:06.276" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201203 15:16:06.276" starttime="20201203 15:16:01.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:06.278" level="INFO">READ</msg>
<status status="PASS" endtime="20201203 15:16:06.278" starttime="20201203 15:16:06.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:06.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:06.279" starttime="20201203 15:16:06.278"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:06.279" starttime="20201203 15:16:01.688"></status>
</kw>
<msg timestamp="20201203 15:16:06.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:06.279" starttime="20201203 15:16:01.687"></status>
</kw>
<msg timestamp="20201203 15:16:06.279" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201203 15:16:06.279" starttime="20201203 15:16:01.687"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:06.280" starttime="20201203 15:16:06.280"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:06.280" starttime="20201203 15:16:01.686"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:16:06.281" critical="yes" starttime="20201203 15:15:38.887"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:06.311" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:06.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:06.313" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:16:06.313" starttime="20201203 15:16:06.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:06.314" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:16:06.315" starttime="20201203 15:16:06.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:06.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:06.316" starttime="20201203 15:16:06.315"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:06.316" starttime="20201203 15:16:06.294"></status>
</kw>
<msg timestamp="20201203 15:16:06.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:06.316" starttime="20201203 15:16:06.294"></status>
</kw>
<msg timestamp="20201203 15:16:06.317" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:16:06.317" starttime="20201203 15:16:06.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:16:06.318" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:16:06.318" starttime="20201203 15:16:06.317"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:06.323" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:06.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:06.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:06.342" starttime="20201203 15:16:06.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:06.343" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:06.344" starttime="20201203 15:16:06.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:06.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:06.344" starttime="20201203 15:16:06.344"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:06.344" starttime="20201203 15:16:06.320"></status>
</kw>
<msg timestamp="20201203 15:16:06.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:06.345" starttime="20201203 15:16:06.320"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:06.345" starttime="20201203 15:16:06.319"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:06.345" starttime="20201203 15:16:06.318"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:06.345" starttime="20201203 15:16:06.293"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:06.345" starttime="20201203 15:16:06.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:06.350" level="INFO">Running command 'ozone sh bucket link 19823-source/bucket2 19823-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:10.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:10.165" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:10.165" starttime="20201203 15:16:06.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:10.166" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:16:10.166" starttime="20201203 15:16:10.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:10.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:10.167" starttime="20201203 15:16:10.166"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:10.167" starttime="20201203 15:16:06.347"></status>
</kw>
<msg timestamp="20201203 15:16:10.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:10.167" starttime="20201203 15:16:06.347"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:10.167" starttime="20201203 15:16:06.346"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:10.172" level="INFO">Running command 'ozone sh bucket create 19823-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:13.948" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 15:16:13.948" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:13.948" starttime="20201203 15:16:10.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:13.950" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201203 15:16:13.950" starttime="20201203 15:16:13.949"></status>
</kw>
<msg timestamp="20201203 15:16:13.954" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:13.954" starttime="20201203 15:16:10.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:13.955" starttime="20201203 15:16:13.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:13.960" level="INFO">Running command 'ozone sh bucket create 19823-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:18.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:18.001" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:18.001" starttime="20201203 15:16:13.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:18.002" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:16:18.003" starttime="20201203 15:16:18.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:18.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:18.003" starttime="20201203 15:16:18.003"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:18.004" starttime="20201203 15:16:13.956"></status>
</kw>
<msg timestamp="20201203 15:16:18.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:18.004" starttime="20201203 15:16:13.956"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:18.004" starttime="20201203 15:16:13.955"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:18.007" level="INFO">Running command 'ozone sh bucket link 19823-source/bucket1 19823-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:22.231" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 15:16:22.231" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:22.231" starttime="20201203 15:16:18.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.232" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201203 15:16:22.232" starttime="20201203 15:16:22.231"></status>
</kw>
<msg timestamp="20201203 15:16:22.233" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:22.233" starttime="20201203 15:16:18.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:22.233" starttime="20201203 15:16:22.233"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:16:22.234" critical="yes" starttime="20201203 15:16:06.282"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:22.241" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:22.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:22.242" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:16:22.242" starttime="20201203 15:16:22.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.243" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:16:22.243" starttime="20201203 15:16:22.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:22.248" starttime="20201203 15:16:22.244"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.248" starttime="20201203 15:16:22.237"></status>
</kw>
<msg timestamp="20201203 15:16:22.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:22.248" starttime="20201203 15:16:22.237"></status>
</kw>
<msg timestamp="20201203 15:16:22.249" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:16:22.249" starttime="20201203 15:16:22.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:16:22.250" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:16:22.250" starttime="20201203 15:16:22.249"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:22.259" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:22.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:22.290" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:22.290" starttime="20201203 15:16:22.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.292" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:22.292" starttime="20201203 15:16:22.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:22.293" starttime="20201203 15:16:22.292"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.293" starttime="20201203 15:16:22.255"></status>
</kw>
<msg timestamp="20201203 15:16:22.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:22.294" starttime="20201203 15:16:22.254"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.295" starttime="20201203 15:16:22.250"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.295" starttime="20201203 15:16:22.250"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.295" starttime="20201203 15:16:22.236"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.295" starttime="20201203 15:16:22.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:22.301" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:22.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:22.305" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:22.305" starttime="20201203 15:16:22.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.306" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:22.306" starttime="20201203 15:16:22.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:22.307" starttime="20201203 15:16:22.306"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.307" starttime="20201203 15:16:22.298"></status>
</kw>
<msg timestamp="20201203 15:16:22.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:22.308" starttime="20201203 15:16:22.298"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.308" starttime="20201203 15:16:22.297"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:22.313" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:22.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:22.314" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:16:22.314" starttime="20201203 15:16:22.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.316" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:16:22.316" starttime="20201203 15:16:22.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:22.316" starttime="20201203 15:16:22.316"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.317" starttime="20201203 15:16:22.309"></status>
</kw>
<msg timestamp="20201203 15:16:22.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:22.317" starttime="20201203 15:16:22.309"></status>
</kw>
<msg timestamp="20201203 15:16:22.317" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:16:22.317" starttime="20201203 15:16:22.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:16:22.318" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:16:22.318" starttime="20201203 15:16:22.317"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:22.324" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:22.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:22.345" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:22.345" starttime="20201203 15:16:22.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.346" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:22.347" starttime="20201203 15:16:22.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:22.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:22.348" starttime="20201203 15:16:22.347"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.348" starttime="20201203 15:16:22.320"></status>
</kw>
<msg timestamp="20201203 15:16:22.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:22.348" starttime="20201203 15:16:22.319"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.349" starttime="20201203 15:16:22.319"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.349" starttime="20201203 15:16:22.318"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.349" starttime="20201203 15:16:22.308"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:22.349" starttime="20201203 15:16:22.308"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:22.353" level="INFO">Running command 'ozone sh key list 19823-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:26.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:26.716" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:26.716" starttime="20201203 15:16:22.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.718" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "19823-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-12-03T15:13:51.951Z",
  "modificationTime" : "2020-12-03T15:13:53.880Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201203 15:16:26.718" starttime="20201203 15:16:26.717"></status>
</kw>
<msg timestamp="20201203 15:16:26.718" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:26.718" starttime="20201203 15:16:22.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:26.719" starttime="20201203 15:16:26.718"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.719" starttime="20201203 15:16:22.296"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.720" starttime="20201203 15:16:22.296"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:16:26.721" critical="yes" starttime="20201203 15:16:22.234"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:26.732" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:26.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:26.734" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:16:26.734" starttime="20201203 15:16:26.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.735" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:16:26.735" starttime="20201203 15:16:26.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:26.736" starttime="20201203 15:16:26.736"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.736" starttime="20201203 15:16:26.726"></status>
</kw>
<msg timestamp="20201203 15:16:26.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:26.737" starttime="20201203 15:16:26.726"></status>
</kw>
<msg timestamp="20201203 15:16:26.739" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:16:26.739" starttime="20201203 15:16:26.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:16:26.740" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:16:26.740" starttime="20201203 15:16:26.739"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:26.745" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:26.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:26.770" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:26.770" starttime="20201203 15:16:26.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.771" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:26.771" starttime="20201203 15:16:26.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:26.772" starttime="20201203 15:16:26.771"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.772" starttime="20201203 15:16:26.741"></status>
</kw>
<msg timestamp="20201203 15:16:26.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:26.772" starttime="20201203 15:16:26.741"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.772" starttime="20201203 15:16:26.740"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.772" starttime="20201203 15:16:26.740"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.773" starttime="20201203 15:16:26.725"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.773" starttime="20201203 15:16:26.724"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:26.778" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:26.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:26.782" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:26.782" starttime="20201203 15:16:26.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.783" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:26.783" starttime="20201203 15:16:26.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:26.784" starttime="20201203 15:16:26.783"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.784" starttime="20201203 15:16:26.775"></status>
</kw>
<msg timestamp="20201203 15:16:26.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:26.784" starttime="20201203 15:16:26.775"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.785" starttime="20201203 15:16:26.774"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:26.789" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:26.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:26.792" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:16:26.792" starttime="20201203 15:16:26.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.793" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:16:26.793" starttime="20201203 15:16:26.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:26.794" starttime="20201203 15:16:26.793"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.794" starttime="20201203 15:16:26.786"></status>
</kw>
<msg timestamp="20201203 15:16:26.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:26.794" starttime="20201203 15:16:26.786"></status>
</kw>
<msg timestamp="20201203 15:16:26.795" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:16:26.795" starttime="20201203 15:16:26.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:16:26.795" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:16:26.795" starttime="20201203 15:16:26.795"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:26.800" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:26.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:26.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:26.839" starttime="20201203 15:16:26.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.840" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:26.840" starttime="20201203 15:16:26.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:26.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:26.841" starttime="20201203 15:16:26.840"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.841" starttime="20201203 15:16:26.797"></status>
</kw>
<msg timestamp="20201203 15:16:26.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:26.841" starttime="20201203 15:16:26.797"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.842" starttime="20201203 15:16:26.796"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.842" starttime="20201203 15:16:26.796"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.842" starttime="20201203 15:16:26.785"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:26.842" starttime="20201203 15:16:26.785"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:26.846" level="INFO">Running command 'ozone sh key list 19823-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:30.887" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 15:16:30.887" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:30.887" starttime="20201203 15:16:26.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:30.889" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201203 15:16:30.889" starttime="20201203 15:16:30.888"></status>
</kw>
<msg timestamp="20201203 15:16:30.889" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:30.889" starttime="20201203 15:16:26.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:30.890" starttime="20201203 15:16:30.889"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.890" starttime="20201203 15:16:26.773"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.890" starttime="20201203 15:16:26.773"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:16:30.890" critical="yes" starttime="20201203 15:16:26.722"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:30.897" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:30.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:30.907" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:16:30.907" starttime="20201203 15:16:30.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:30.909" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:16:30.909" starttime="20201203 15:16:30.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:30.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:30.909" starttime="20201203 15:16:30.909"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.910" starttime="20201203 15:16:30.893"></status>
</kw>
<msg timestamp="20201203 15:16:30.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:30.910" starttime="20201203 15:16:30.893"></status>
</kw>
<msg timestamp="20201203 15:16:30.910" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:16:30.910" starttime="20201203 15:16:30.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:16:30.911" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:16:30.911" starttime="20201203 15:16:30.910"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:30.916" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:30.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:30.939" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:30.939" starttime="20201203 15:16:30.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:30.940" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:30.940" starttime="20201203 15:16:30.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:30.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:30.940" starttime="20201203 15:16:30.940"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.941" starttime="20201203 15:16:30.912"></status>
</kw>
<msg timestamp="20201203 15:16:30.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:30.941" starttime="20201203 15:16:30.912"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.941" starttime="20201203 15:16:30.911"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.941" starttime="20201203 15:16:30.911"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.941" starttime="20201203 15:16:30.892"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.941" starttime="20201203 15:16:30.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:30.948" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:30.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:30.951" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:30.951" starttime="20201203 15:16:30.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:30.952" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:30.952" starttime="20201203 15:16:30.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:30.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:30.953" starttime="20201203 15:16:30.952"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.954" starttime="20201203 15:16:30.943"></status>
</kw>
<msg timestamp="20201203 15:16:30.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:30.954" starttime="20201203 15:16:30.943"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.954" starttime="20201203 15:16:30.943"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:30.960" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:30.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:30.962" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:16:30.962" starttime="20201203 15:16:30.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:30.963" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:16:30.963" starttime="20201203 15:16:30.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:30.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:30.968" starttime="20201203 15:16:30.963"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:30.969" starttime="20201203 15:16:30.956"></status>
</kw>
<msg timestamp="20201203 15:16:30.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:30.969" starttime="20201203 15:16:30.956"></status>
</kw>
<msg timestamp="20201203 15:16:30.969" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:16:30.969" starttime="20201203 15:16:30.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:16:30.970" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:16:30.970" starttime="20201203 15:16:30.969"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:30.974" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:31.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:31.012" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:31.012" starttime="20201203 15:16:30.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:31.013" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:31.013" starttime="20201203 15:16:31.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:31.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:31.014" starttime="20201203 15:16:31.014"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:31.014" starttime="20201203 15:16:30.971"></status>
</kw>
<msg timestamp="20201203 15:16:31.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:31.015" starttime="20201203 15:16:30.971"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:31.015" starttime="20201203 15:16:30.971"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:31.015" starttime="20201203 15:16:30.970"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:31.015" starttime="20201203 15:16:30.955"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:31.015" starttime="20201203 15:16:30.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:31.021" level="INFO">Running command 'ozone sh bucket info 19823-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:35.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:35.154" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:35.154" starttime="20201203 15:16:31.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:35.155" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:09.866Z",
  "modificationTime" : "2020-12-03T15:14:30.130Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201203 15:16:35.155" starttime="20201203 15:16:35.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:35.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:35.156" starttime="20201203 15:16:35.156"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:35.156" starttime="20201203 15:16:31.016"></status>
</kw>
<msg timestamp="20201203 15:16:35.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:35.157" starttime="20201203 15:16:31.016"></status>
</kw>
<msg timestamp="20201203 15:16:35.157" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:35.157" starttime="20201203 15:16:31.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:35.158" starttime="20201203 15:16:35.157"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:35.158" starttime="20201203 15:16:35.158"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:35.162" level="INFO">Running command 'ozone sh key list 19823-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:38.891" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 15:16:38.891" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:38.892" starttime="20201203 15:16:35.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:38.893" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201203 15:16:38.893" starttime="20201203 15:16:38.892"></status>
</kw>
<msg timestamp="20201203 15:16:38.893" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:38.893" starttime="20201203 15:16:35.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:38.894" starttime="20201203 15:16:38.894"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:38.894" starttime="20201203 15:16:30.942"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:38.894" starttime="20201203 15:16:30.942"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:16:38.895" critical="yes" starttime="20201203 15:16:30.891"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:38.903" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:38.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:38.905" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:16:38.905" starttime="20201203 15:16:38.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:38.906" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:16:38.907" starttime="20201203 15:16:38.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:38.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:38.907" starttime="20201203 15:16:38.907"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:38.908" starttime="20201203 15:16:38.898"></status>
</kw>
<msg timestamp="20201203 15:16:38.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:38.908" starttime="20201203 15:16:38.898"></status>
</kw>
<msg timestamp="20201203 15:16:38.908" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:16:38.908" starttime="20201203 15:16:38.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:16:38.909" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:16:38.909" starttime="20201203 15:16:38.908"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:38.913" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:38.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:38.946" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:38.946" starttime="20201203 15:16:38.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:38.947" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:38.947" starttime="20201203 15:16:38.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:38.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:38.948" starttime="20201203 15:16:38.947"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:38.948" starttime="20201203 15:16:38.911"></status>
</kw>
<msg timestamp="20201203 15:16:38.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:38.949" starttime="20201203 15:16:38.910"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:38.949" starttime="20201203 15:16:38.910"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:38.949" starttime="20201203 15:16:38.909"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:38.949" starttime="20201203 15:16:38.897"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:38.949" starttime="20201203 15:16:38.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:38.955" level="INFO">Running command 'ozone sh bucket link 19823-target/loop1 19823-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:43.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:43.302" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:43.302" starttime="20201203 15:16:38.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:43.304" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:16:43.305" starttime="20201203 15:16:43.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:43.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:43.305" starttime="20201203 15:16:43.305"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:43.306" starttime="20201203 15:16:38.951"></status>
</kw>
<msg timestamp="20201203 15:16:43.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:43.306" starttime="20201203 15:16:38.950"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:43.306" starttime="20201203 15:16:38.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:43.312" level="INFO">Running command 'ozone sh bucket link 19823-target/loop2 19823-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:47.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:47.357" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:47.357" starttime="20201203 15:16:43.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:47.358" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:16:47.358" starttime="20201203 15:16:47.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:47.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:47.359" starttime="20201203 15:16:47.358"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:47.359" starttime="20201203 15:16:43.307"></status>
</kw>
<msg timestamp="20201203 15:16:47.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:47.359" starttime="20201203 15:16:43.307"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:47.360" starttime="20201203 15:16:43.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:47.365" level="INFO">Running command 'ozone sh bucket link 19823-target/loop3 19823-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:51.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:51.372" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:51.372" starttime="20201203 15:16:47.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:51.373" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:16:51.373" starttime="20201203 15:16:51.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:51.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:51.374" starttime="20201203 15:16:51.374"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:51.374" starttime="20201203 15:16:47.361"></status>
</kw>
<msg timestamp="20201203 15:16:51.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:51.375" starttime="20201203 15:16:47.361"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:51.375" starttime="20201203 15:16:47.360"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:51.379" level="INFO">Running command 'ozone sh key list 19823-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:55.000" level="INFO">${rc} = 255</msg>
<msg timestamp="20201203 15:16:55.001" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:55.001" starttime="20201203 15:16:51.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:55.002" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201203 15:16:55.002" starttime="20201203 15:16:55.001"></status>
</kw>
<msg timestamp="20201203 15:16:55.002" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:55.002" starttime="20201203 15:16:51.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201203 15:16:55.003" starttime="20201203 15:16:55.002"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:16:55.003" critical="yes" starttime="20201203 15:16:38.896"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:55.010" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:55.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:55.013" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:16:55.013" starttime="20201203 15:16:55.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:55.015" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:16:55.015" starttime="20201203 15:16:55.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:55.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:55.016" starttime="20201203 15:16:55.015"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:55.016" starttime="20201203 15:16:55.006"></status>
</kw>
<msg timestamp="20201203 15:16:55.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:55.016" starttime="20201203 15:16:55.006"></status>
</kw>
<msg timestamp="20201203 15:16:55.016" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:16:55.016" starttime="20201203 15:16:55.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:16:55.017" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:16:55.017" starttime="20201203 15:16:55.017"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:55.023" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:55.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:55.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:16:55.040" starttime="20201203 15:16:55.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:55.041" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:16:55.041" starttime="20201203 15:16:55.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:55.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:55.042" starttime="20201203 15:16:55.041"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:55.042" starttime="20201203 15:16:55.019"></status>
</kw>
<msg timestamp="20201203 15:16:55.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:55.042" starttime="20201203 15:16:55.018"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:55.043" starttime="20201203 15:16:55.018"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:55.043" starttime="20201203 15:16:55.017"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:55.043" starttime="20201203 15:16:55.005"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:55.043" starttime="20201203 15:16:55.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:55.048" level="INFO">Running command 'ozone sh bucket link 19823-source/bucket1 19823-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:16:58.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:16:58.610" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:16:58.610" starttime="20201203 15:16:55.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:16:58.611" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:16:58.611" starttime="20201203 15:16:58.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:16:58.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:16:58.612" starttime="20201203 15:16:58.611"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:58.612" starttime="20201203 15:16:55.044"></status>
</kw>
<msg timestamp="20201203 15:16:58.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:16:58.612" starttime="20201203 15:16:55.044"></status>
</kw>
<status status="PASS" endtime="20201203 15:16:58.613" starttime="20201203 15:16:55.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:16:58.617" level="INFO">Running command 'ozone sh key put 19823-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:17:04.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:17:04.928" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:17:04.928" starttime="20201203 15:16:58.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:17:04.929" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:17:04.929" starttime="20201203 15:17:04.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:17:04.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:17:04.930" starttime="20201203 15:17:04.929"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:04.930" starttime="20201203 15:16:58.614"></status>
</kw>
<msg timestamp="20201203 15:17:04.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:17:04.930" starttime="20201203 15:16:58.614"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:04.931" starttime="20201203 15:16:58.613"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201203 15:17:04.933" level="INFO">${postfix} = 06714</msg>
<status status="PASS" endtime="20201203 15:17:04.933" starttime="20201203 15:17:04.932"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201203 15:17:04.933" level="INFO">${tmpfile} = /tmp/tempkey-06714</msg>
<status status="PASS" endtime="20201203 15:17:04.934" starttime="20201203 15:17:04.933"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:17:04.939" level="INFO">Running command 'ozone sh key get -f 19823-target/link1/key3 /tmp/tempkey-06714 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:17:10.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:17:10.858" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:17:10.859" starttime="20201203 15:17:04.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:17:10.860" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:17:10.860" starttime="20201203 15:17:10.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:17:10.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:17:10.860" starttime="20201203 15:17:10.860"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.861" starttime="20201203 15:17:04.935"></status>
</kw>
<msg timestamp="20201203 15:17:10.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:17:10.861" starttime="20201203 15:17:04.934"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.861" starttime="20201203 15:17:04.934"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201203 15:17:10.864" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-06714 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:17:10.867" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201203 15:17:10.867" starttime="20201203 15:17:10.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:17:10.873" level="INFO">Running command 'rm -f /tmp/tempkey-06714 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:17:10.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:17:10.876" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:17:10.876" starttime="20201203 15:17:10.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:17:10.879" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:17:10.879" starttime="20201203 15:17:10.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:17:10.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:17:10.880" starttime="20201203 15:17:10.880"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.881" starttime="20201203 15:17:10.869"></status>
</kw>
<msg timestamp="20201203 15:17:10.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:17:10.881" starttime="20201203 15:17:10.868"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.882" starttime="20201203 15:17:10.867"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201203 15:17:10.883" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201203 15:17:10.883" starttime="20201203 15:17:10.882"></status>
</kw>
<msg timestamp="20201203 15:17:10.883" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201203 15:17:10.883" starttime="20201203 15:17:04.931"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201203 15:17:10.884" starttime="20201203 15:17:10.883"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.884" starttime="20201203 15:17:04.931"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:17:10.885" critical="yes" starttime="20201203 15:16:55.004"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:17:10.893" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:17:10.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:17:10.894" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201203 15:17:10.894" starttime="20201203 15:17:10.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:17:10.895" level="INFO">scm</msg>
<status status="PASS" endtime="20201203 15:17:10.895" starttime="20201203 15:17:10.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:17:10.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:17:10.897" starttime="20201203 15:17:10.896"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.897" starttime="20201203 15:17:10.888"></status>
</kw>
<msg timestamp="20201203 15:17:10.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:17:10.897" starttime="20201203 15:17:10.888"></status>
</kw>
<msg timestamp="20201203 15:17:10.897" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201203 15:17:10.898" starttime="20201203 15:17:10.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201203 15:17:10.898" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201203 15:17:10.898" starttime="20201203 15:17:10.898"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:17:10.903" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:17:10.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:17:10.920" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201203 15:17:10.920" starttime="20201203 15:17:10.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:17:10.921" level="INFO"></msg>
<status status="PASS" endtime="20201203 15:17:10.921" starttime="20201203 15:17:10.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:17:10.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:17:10.922" starttime="20201203 15:17:10.922"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.922" starttime="20201203 15:17:10.900"></status>
</kw>
<msg timestamp="20201203 15:17:10.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:17:10.923" starttime="20201203 15:17:10.899"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.923" starttime="20201203 15:17:10.899"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.923" starttime="20201203 15:17:10.898"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.923" starttime="20201203 15:17:10.887"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:10.923" starttime="20201203 15:17:10.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:17:10.928" level="INFO">Running command 'ozone sh bucket delete 19823-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:17:15.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:17:15.047" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:17:15.047" starttime="20201203 15:17:10.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:17:15.049" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201203 15:17:15.049" starttime="20201203 15:17:15.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:17:15.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:17:15.050" starttime="20201203 15:17:15.049"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:15.050" starttime="20201203 15:17:10.924"></status>
</kw>
<msg timestamp="20201203 15:17:15.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:17:15.050" starttime="20201203 15:17:10.924"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:15.050" starttime="20201203 15:17:10.923"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:17:15.056" level="INFO">Running command 'ozone sh bucket list 19823-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:17:19.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:17:19.622" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:17:19.622" starttime="20201203 15:17:15.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:17:19.623" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:16:17.925Z",
  "modificationTime" : "2020-12-03T15:16:17.925Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:34.065Z",
  "modificationTime" : "2020-12-03T15:14:34.065Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:09.866Z",
  "modificationTime" : "2020-12-03T15:14:30.130Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:16:10.055Z",
  "modificationTime" : "2020-12-03T15:16:10.055Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:16:58.522Z",
  "modificationTime" : "2020-12-03T15:16:58.522Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:16:51.198Z",
  "modificationTime" : "2020-12-03T15:16:51.198Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:16:43.026Z",
  "modificationTime" : "2020-12-03T15:16:43.026Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:16:47.270Z",
  "modificationTime" : "2020-12-03T15:16:47.270Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:01.655Z",
  "modificationTime" : "2020-12-03T15:14:26.180Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "19823-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-03T15:14:05.901Z",
  "modificationTime" : "2020-12-03T15:14:05.901Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "19823-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201203 15:17:19.623" starttime="20201203 15:17:19.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:17:19.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:17:19.624" starttime="20201203 15:17:19.624"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:19.624" starttime="20201203 15:17:15.052"></status>
</kw>
<msg timestamp="20201203 15:17:19.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:17:19.625" starttime="20201203 15:17:15.052"></status>
</kw>
<msg timestamp="20201203 15:17:19.625" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201203 15:17:19.625" starttime="20201203 15:17:15.051"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201203 15:17:19.626" starttime="20201203 15:17:19.625"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201203 15:17:19.635" level="INFO">Running command 'ozone sh key list 19823-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201203 15:17:23.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20201203 15:17:23.900" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201203 15:17:23.900" starttime="20201203 15:17:19.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201203 15:17:23.901" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201203 15:17:23.901" starttime="20201203 15:17:23.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201203 15:17:23.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201203 15:17:23.902" starttime="20201203 15:17:23.901"></status>
</kw>
<status status="PASS" endtime="20201203 15:17:23.902" starttime="20201203 15:17:19.627"></status>
</kw>
<msg timestamp="20201203 15:17:23.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201203 15:17:23.902" starttime="20201203 15:17:19.627"></status>
</kw>
<msg timestamp="20201203 15:17:23.903" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201203 15:17:23.903" starttime="20201203 15:17:19.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201203 15:17:23.903" starttime="20201203 15:17:23.903"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201203 15:17:23.903" critical="yes" starttime="20201203 15:17:10.886"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201203 15:17:23.906" starttime="20201203 15:13:34.790"></status>
</suite>
<status status="PASS" elapsedtime="261013" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
