<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201221 17:21:30.165" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="upgrade">
<suite source="/opt/ozone/smoketest/freon/generate.robot" id="s1-s1" name="Generate">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:19:58.997" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:20:05.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:20:05.099" level="INFO">${output} = 2020-12-21 17:19:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:20:05.099" starttime="20201221 17:19:58.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:20:05.100" level="INFO">2020-12-21 17:19:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:20:00 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2020-12-21 17:20:00 INFO  BaseFreonGenerator:244 - Executing test with prefix ockgpre
2020-12-21 17:20:00 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-21 17:20:00 WARN  NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2020-12-21 17:20:01 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-21 17:20:01 INFO  RpcClient:288 - Creating Volume: vol1, with hadoop as owner.
2020-12-21 17:20:01 INFO  RpcClient:427 - Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:20:02 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-21 17:20:02 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
2020-12-21 17:20:03 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-21 17:20:04 INFO  ProgressBar:163 - Progress: 100.00 % (1 out of 1)
2020-12-21 17:20:04 INFO  metrics:107 - type=TIMER, name=key-create, count=1, min=2475.516718, max=2475.516718, mean=2475.516718, stddev=0.0, median=2475.516718, p75=2475.516718, p95=2475.516718, p98=2475.516718, p99=2475.516718, p999=2475.516718, mean_rate=0.3297767028059787, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-21 17:20:04 INFO  BaseFreonGenerator:75 - Total execution time (sec): 4
2020-12-21 17:20:04 INFO  BaseFreonGenerator:75 - Failures: 0
2020-12-21 17:20:04 INFO  BaseFreonGenerator:75 - Successful executions: 1</msg>
<status status="PASS" endtime="20201221 17:20:05.100" starttime="20201221 17:20:05.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:20:05.100" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:20:05.100" starttime="20201221 17:20:05.100"></status>
</kw>
<status status="PASS" endtime="20201221 17:20:05.101" starttime="20201221 17:19:58.995"></status>
</kw>
<msg timestamp="20201221 17:20:05.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:20:05.101" starttime="20201221 17:19:58.994"></status>
</kw>
<msg timestamp="20201221 17:20:05.101" level="INFO">${result} = 2020-12-21 17:19:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:20:05.101" starttime="20201221 17:19:58.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:20:05.102" starttime="20201221 17:20:05.101"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:20:05.102" critical="yes" starttime="20201221 17:19:58.993"></status>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:20:05.107" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:20:08.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:20:08.397" level="INFO">${output} = 2020-12-21 17:20:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:20:08.398" starttime="20201221 17:20:05.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:20:08.398" level="INFO">2020-12-21 17:20:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:20:06 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2020-12-21 17:20:06 INFO  BaseFreonGenerator:244 - Executing test with prefix omkgpre
2020-12-21 17:20:06 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-21 17:20:06 WARN  NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2020-12-21 17:20:07 INFO  ProgressBar:163 - Progress: 100.00 % (1 out of 1)
2020-12-21 17:20:08 INFO  metrics:107 - type=TIMER, name=key-create, count=1, min=43.054537, max=43.054537, mean=43.054537, stddev=0.0, median=43.054537, p75=43.054537, p95=43.054537, p98=43.054537, p99=43.054537, p999=43.054537, mean_rate=0.9856685507780154, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-21 17:20:08 INFO  BaseFreonGenerator:75 - Total execution time (sec): 2
2020-12-21 17:20:08 INFO  BaseFreonGenerator:75 - Failures: 0
2020-12-21 17:20:08 INFO  BaseFreonGenerator:75 - Successful executions: 1</msg>
<status status="PASS" endtime="20201221 17:20:08.399" starttime="20201221 17:20:08.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:20:08.399" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:20:08.399" starttime="20201221 17:20:08.399"></status>
</kw>
<status status="PASS" endtime="20201221 17:20:08.400" starttime="20201221 17:20:05.105"></status>
</kw>
<msg timestamp="20201221 17:20:08.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:20:08.400" starttime="20201221 17:20:05.105"></status>
</kw>
<msg timestamp="20201221 17:20:08.400" level="INFO">${result} = 2020-12-21 17:20:06 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:20:08.400" starttime="20201221 17:20:05.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:20:08.401" starttime="20201221 17:20:08.400"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:20:08.401" critical="yes" starttime="20201221 17:20:05.103"></status>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:20:08.405" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:20:11.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:20:11.821" level="INFO">${output} = 2020-12-21 17:20:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:20:11.821" starttime="20201221 17:20:08.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:20:11.822" level="INFO">2020-12-21 17:20:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:20:09 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2020-12-21 17:20:09 INFO  BaseFreonGenerator:244 - Executing test with prefix ombgpre
2020-12-21 17:20:09 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-21 17:20:09 WARN  NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2020-12-21 17:20:10 INFO  ProgressBar:163 - Progress: 100.00 % (1 out of 1)
2020-12-21 17:20:11 INFO  metrics:107 - type=TIMER, name=bucket-create, count=1, min=8.847245, max=8.847245, mean=8.847245, stddev=0.0, median=8.847245, p75=8.847245, p95=8.847245, p98=8.847245, p99=8.847245, p999=8.847245, mean_rate=0.9874102380529076, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-21 17:20:11 INFO  BaseFreonGenerator:75 - Total execution time (sec): 2
2020-12-21 17:20:11 INFO  BaseFreonGenerator:75 - Failures: 0
2020-12-21 17:20:11 INFO  BaseFreonGenerator:75 - Successful executions: 1</msg>
<status status="PASS" endtime="20201221 17:20:11.822" starttime="20201221 17:20:11.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:20:11.822" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:20:11.822" starttime="20201221 17:20:11.822"></status>
</kw>
<status status="PASS" endtime="20201221 17:20:11.823" starttime="20201221 17:20:08.403"></status>
</kw>
<msg timestamp="20201221 17:20:11.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:20:11.823" starttime="20201221 17:20:08.403"></status>
</kw>
<msg timestamp="20201221 17:20:11.823" level="INFO">${result} = 2020-12-21 17:20:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:20:11.823" starttime="20201221 17:20:08.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:20:11.824" starttime="20201221 17:20:11.823"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:20:11.824" critical="yes" starttime="20201221 17:20:08.402"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20201221 17:20:11.825" starttime="20201221 17:19:58.953"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s2" name="Validate">
<test id="s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:21:18.558" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:21:23.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:21:23.458" level="INFO">${output} = 2020-12-21 17:21:19,606 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:21:19,780 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:21:23.458" starttime="20201221 17:21:18.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:21:23.459" level="INFO">2020-12-21 17:21:19,606 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:21:19,780 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:21:19,780 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-21 17:21:19,964 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2020-12-21 17:21:19,979 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:21:20,980 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:21:21,434 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-21 17:21:21,981 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:21:22,981 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-21 17:21:23,129 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=51.566247, max=51.566247, mean=51.566247, stddev=0.0, median=51.566247, p75=51.566247, p95=51.566247, p98=51.566247, p99=51.566247, p999=51.566247, mean_rate=0.9762369974164513, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-21 17:21:23,129 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-21 17:21:23,130 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-21 17:21:23,130 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201221 17:21:23.459" starttime="20201221 17:21:23.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:21:23.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:21:23.460" starttime="20201221 17:21:23.459"></status>
</kw>
<status status="PASS" endtime="20201221 17:21:23.460" starttime="20201221 17:21:18.552"></status>
</kw>
<msg timestamp="20201221 17:21:23.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:21:23.460" starttime="20201221 17:21:18.552"></status>
</kw>
<msg timestamp="20201221 17:21:23.461" level="INFO">${result} = 2020-12-21 17:21:19,606 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:21:19,780 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:21:23.461" starttime="20201221 17:21:18.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:21:23.461" starttime="20201221 17:21:23.461"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:21:23.461" critical="yes" starttime="20201221 17:21:18.550"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20201221 17:21:23.463" starttime="20201221 17:21:18.509"></status>
</suite>
<suite source="/opt/ozone/smoketest/freon/validate.robot" id="s1-s3" name="Validate">
<test id="s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:20:16.463" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:20:21.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:20:21.165" level="INFO">${output} = 2020-12-21 17:20:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:20:21.165" starttime="20201221 17:20:16.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:20:21.166" level="INFO">2020-12-21 17:20:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:20:17 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2020-12-21 17:20:17 INFO  BaseFreonGenerator:244 - Executing test with prefix ockgpre
2020-12-21 17:20:17 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-21 17:20:17 WARN  NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2020-12-21 17:20:18 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-21 17:20:19 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
2020-12-21 17:20:19 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-21 17:20:20 INFO  ProgressBar:163 - Progress: 100.00 % (1 out of 1)
2020-12-21 17:20:20 INFO  metrics:107 - type=TIMER, name=key-validate, count=1, min=93.711425, max=93.711425, mean=93.711425, stddev=0.0, median=93.711425, p75=93.711425, p95=93.711425, p98=93.711425, p99=93.711425, p999=93.711425, mean_rate=0.9808757199378887, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-21 17:20:20 INFO  BaseFreonGenerator:75 - Total execution time (sec): 3
2020-12-21 17:20:20 INFO  BaseFreonGenerator:75 - Failures: 0
2020-12-21 17:20:20 INFO  BaseFreonGenerator:75 - Successful executions: 1</msg>
<status status="PASS" endtime="20201221 17:20:21.166" starttime="20201221 17:20:21.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:20:21.167" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:20:21.167" starttime="20201221 17:20:21.166"></status>
</kw>
<status status="PASS" endtime="20201221 17:20:21.167" starttime="20201221 17:20:16.462"></status>
</kw>
<msg timestamp="20201221 17:20:21.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:20:21.167" starttime="20201221 17:20:16.462"></status>
</kw>
<msg timestamp="20201221 17:20:21.168" level="INFO">${result} = 2020-12-21 17:20:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:20:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:20:21.168" starttime="20201221 17:20:16.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:20:21.168" starttime="20201221 17:20:21.168"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:20:21.168" critical="yes" starttime="20201221 17:20:16.460"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20201221 17:20:21.169" starttime="20201221 17:20:16.427"></status>
</suite>
<status status="PASS" elapsedtime="22568" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="5">Critical Tests</stat>
<stat fail="0" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="upgrade" pass="5">upgrade</stat>
<stat fail="0" id="s1-s1" name="Generate" pass="3">upgrade.Generate</stat>
<stat fail="0" id="s1-s2" name="Validate" pass="1">upgrade.Validate</stat>
<stat fail="0" id="s1-s3" name="Validate" pass="1">upgrade.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
