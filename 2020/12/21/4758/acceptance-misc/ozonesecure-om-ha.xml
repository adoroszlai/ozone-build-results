<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201221 17:18:45.225" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:14:24.718" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:14:40.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:14:40.851" level="INFO">${output} = 2020-12-21 17:14:26,421 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:26,655 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:14:40.852" starttime="20201221 17:14:24.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:14:40.853" level="INFO">2020-12-21 17:14:26,421 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:26,655 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:14:26,655 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-21 17:14:26,809 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2020-12-21 17:14:26,821 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-21 17:14:27,824 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:28,824 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:29,202 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-21 17:14:29,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:30,485 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-12-21 17:14:30,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:31,085 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:14:31,828 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:32,833 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:33,815 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-21 17:14:33,834 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:34,187 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 17:14:34,187 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-17985CB92DBF-&gt;cd28b0ab-940a-4b1f-b7d7-ea9c8a1886d0
2020-12-21 17:14:34,188 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 17:14:34,834 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:35,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:36,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:37,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:38,837 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:39,837 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-21 17:14:40,507 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=8033.078409, max=8033.078409, mean=8033.078409, stddev=0.0, median=8033.078409, p75=8033.078409, p95=8033.078409, p98=8033.078409, p99=8033.078409, p999=8033.078409, mean_rate=0.10878153291209977, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-21 17:14:40,509 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 14
2020-12-21 17:14:40,511 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-21 17:14:40,511 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201221 17:14:40.853" starttime="20201221 17:14:40.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:14:40.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:14:40.854" starttime="20201221 17:14:40.853"></status>
</kw>
<status status="PASS" endtime="20201221 17:14:40.854" starttime="20201221 17:14:24.714"></status>
</kw>
<msg timestamp="20201221 17:14:40.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:14:40.854" starttime="20201221 17:14:24.714"></status>
</kw>
<msg timestamp="20201221 17:14:40.855" level="INFO">${result} = 2020-12-21 17:14:26,421 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:26,655 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:14:40.855" starttime="20201221 17:14:24.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:14:40.855" starttime="20201221 17:14:40.855"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:14:40.856" critical="yes" starttime="20201221 17:14:24.712"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:14:40.861" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:14:45.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:14:45.834" level="INFO">${output} = 2020-12-21 17:14:42,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:42,904 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:14:45.834" starttime="20201221 17:14:40.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:14:45.836" level="INFO">2020-12-21 17:14:42,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:42,904 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:14:42,904 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-21 17:14:43,081 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2020-12-21 17:14:43,101 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-21 17:14:44,105 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:44,230 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-21 17:14:44,773 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-21 17:14:45,106 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-21 17:14:45,814 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=308.976828, max=308.976828, mean=308.976828, stddev=0.0, median=308.976828, p75=308.976828, p95=308.976828, p98=308.976828, p99=308.976828, p999=308.976828, mean_rate=0.8701483870570561, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-21 17:14:45,815 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-21 17:14:45,815 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-21 17:14:45,815 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201221 17:14:45.836" starttime="20201221 17:14:45.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:14:45.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:14:45.837" starttime="20201221 17:14:45.836"></status>
</kw>
<status status="PASS" endtime="20201221 17:14:45.837" starttime="20201221 17:14:40.858"></status>
</kw>
<msg timestamp="20201221 17:14:45.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:14:45.837" starttime="20201221 17:14:40.858"></status>
</kw>
<msg timestamp="20201221 17:14:45.838" level="INFO">${result} = 2020-12-21 17:14:42,668 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:42,904 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:14:45.838" starttime="20201221 17:14:40.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:14:45.838" starttime="20201221 17:14:45.838"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:14:45.839" critical="yes" starttime="20201221 17:14:40.856"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:14:45.845" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:14:50.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:14:50.489" level="INFO">${output} = 2020-12-21 17:14:47,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:47,548 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:14:50.489" starttime="20201221 17:14:45.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:14:50.490" level="INFO">2020-12-21 17:14:47,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:47,548 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:14:47,548 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-21 17:14:47,739 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2020-12-21 17:14:47,763 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-21 17:14:48,770 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:48,877 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-21 17:14:49,410 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-21 17:14:49,771 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-21 17:14:50,469 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=132.584034, max=132.584034, mean=132.584034, stddev=0.0, median=132.584034, p75=132.584034, p95=132.584034, p98=132.584034, p99=132.584034, p999=132.584034, mean_rate=0.8704827736024786, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-21 17:14:50,470 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-21 17:14:50,470 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-21 17:14:50,470 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201221 17:14:50.491" starttime="20201221 17:14:50.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:14:50.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:14:50.491" starttime="20201221 17:14:50.491"></status>
</kw>
<status status="PASS" endtime="20201221 17:14:50.492" starttime="20201221 17:14:45.842"></status>
</kw>
<msg timestamp="20201221 17:14:50.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:14:50.492" starttime="20201221 17:14:45.842"></status>
</kw>
<msg timestamp="20201221 17:14:50.492" level="INFO">${result} = 2020-12-21 17:14:47,366 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:47,548 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:14:50.492" starttime="20201221 17:14:45.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:14:50.493" starttime="20201221 17:14:50.492"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:14:50.493" critical="yes" starttime="20201221 17:14:45.840"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20201221 17:14:50.495" starttime="20201221 17:14:24.692"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:14:50.506" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:14:57.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:14:57.200" level="INFO">${output} = 2020-12-21 17:14:52,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:52,499 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:14:57.200" starttime="20201221 17:14:50.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:14:57.201" level="INFO">2020-12-21 17:14:52,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:52,499 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:14:52,500 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-21 17:14:52,657 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2020-12-21 17:14:52,674 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-21 17:14:53,674 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:53,789 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1070)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:999)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:927)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2915)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2020-12-21 17:14:54,676 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:55,029 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-21 17:14:55,677 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-21 17:14:56,677 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-21 17:14:56,843 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=90.957444, max=90.957444, mean=90.957444, stddev=0.0, median=90.957444, p75=90.957444, p95=90.957444, p98=90.957444, p99=90.957444, p999=90.957444, mean_rate=0.9829258622034975, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-21 17:14:56,844 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2020-12-21 17:14:56,847 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-21 17:14:56,847 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201221 17:14:57.201" starttime="20201221 17:14:57.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:14:57.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:14:57.202" starttime="20201221 17:14:57.201"></status>
</kw>
<status status="PASS" endtime="20201221 17:14:57.202" starttime="20201221 17:14:50.503"></status>
</kw>
<msg timestamp="20201221 17:14:57.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:14:57.203" starttime="20201221 17:14:50.503"></status>
</kw>
<msg timestamp="20201221 17:14:57.203" level="INFO">${result} = 2020-12-21 17:14:52,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:14:52,499 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:14:57.203" starttime="20201221 17:14:50.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:14:57.204" starttime="20201221 17:14:57.203"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:14:57.204" critical="yes" starttime="20201221 17:14:50.502"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20201221 17:14:57.205" starttime="20201221 17:14:50.497"></status>
</suite>
<status status="PASS" endtime="20201221 17:14:57.207" starttime="20201221 17:14:24.662"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:14:16.232" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:14:16.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:14:16.237" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:14:16.237" starttime="20201221 17:14:16.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:14:16.238" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:14:16.238" starttime="20201221 17:14:16.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:14:16.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:14:16.238" starttime="20201221 17:14:16.238"></status>
</kw>
<status status="PASS" endtime="20201221 17:14:16.239" starttime="20201221 17:14:16.222"></status>
</kw>
<msg timestamp="20201221 17:14:16.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:14:16.239" starttime="20201221 17:14:16.222"></status>
</kw>
<msg timestamp="20201221 17:14:16.239" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:14:16.239" starttime="20201221 17:14:16.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:14:16.246" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:14:16.246" starttime="20201221 17:14:16.239"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:14:16.261" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:14:16.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:14:16.288" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:14:16.288" starttime="20201221 17:14:16.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:14:16.290" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:14:16.290" starttime="20201221 17:14:16.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:14:16.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:14:16.290" starttime="20201221 17:14:16.290"></status>
</kw>
<status status="PASS" endtime="20201221 17:14:16.291" starttime="20201221 17:14:16.248"></status>
</kw>
<msg timestamp="20201221 17:14:16.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:14:16.291" starttime="20201221 17:14:16.247"></status>
</kw>
<status status="PASS" endtime="20201221 17:14:16.291" starttime="20201221 17:14:16.247"></status>
</kw>
<status status="PASS" endtime="20201221 17:14:16.291" starttime="20201221 17:14:16.246"></status>
</kw>
<status status="PASS" endtime="20201221 17:14:16.291" starttime="20201221 17:14:16.220"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:14:16.291" critical="yes" starttime="20201221 17:14:16.212"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201221 17:14:16.300" starttime="20201221 17:14:16.084"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 17:15:02.923" level="INFO">${random} = 91664</msg>
<status status="PASS" endtime="20201221 17:15:02.923" starttime="20201221 17:15:02.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201221 17:15:02.924" level="INFO">${source} = 91664-source</msg>
<status status="PASS" endtime="20201221 17:15:02.924" starttime="20201221 17:15:02.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201221 17:15:02.925" level="INFO">${target} = 91664-target</msg>
<status status="PASS" endtime="20201221 17:15:02.926" starttime="20201221 17:15:02.925"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:02.930" level="INFO">Running command 'ozone sh volume create 91664-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:07.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:07.754" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:07.754" starttime="20201221 17:15:02.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:07.755" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:15:07.755" starttime="20201221 17:15:07.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:07.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:07.755" starttime="20201221 17:15:07.755"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:07.756" starttime="20201221 17:15:02.926"></status>
</kw>
<msg timestamp="20201221 17:15:07.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:07.756" starttime="20201221 17:15:02.926"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:07.756" starttime="20201221 17:15:02.926"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:07.759" level="INFO">Running command 'ozone sh volume create 91664-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:11.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:11.652" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:11.652" starttime="20201221 17:15:07.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:11.653" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:15:11.653" starttime="20201221 17:15:11.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:11.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:11.654" starttime="20201221 17:15:11.653"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:11.654" starttime="20201221 17:15:07.757"></status>
</kw>
<msg timestamp="20201221 17:15:11.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:11.654" starttime="20201221 17:15:07.757"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:11.654" starttime="20201221 17:15:07.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:11.659" level="INFO">Running command 'ozone sh bucket create 91664-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:15.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:15.208" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:15.208" starttime="20201221 17:15:11.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:15.210" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:15:15.210" starttime="20201221 17:15:15.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:15.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:15.210" starttime="20201221 17:15:15.210"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:15.210" starttime="20201221 17:15:11.656"></status>
</kw>
<msg timestamp="20201221 17:15:15.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:15.211" starttime="20201221 17:15:11.656"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:15.211" starttime="20201221 17:15:11.655"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:15.214" level="INFO">Running command 'ozone sh key put 91664-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:23.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:23.821" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:23.821" starttime="20201221 17:15:15.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:23.823" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:15:23.826" starttime="20201221 17:15:23.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:23.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:23.827" starttime="20201221 17:15:23.827"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:23.827" starttime="20201221 17:15:15.212"></status>
</kw>
<msg timestamp="20201221 17:15:23.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:23.828" starttime="20201221 17:15:15.212"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:23.828" starttime="20201221 17:15:15.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:23.831" level="INFO">Running command 'ozone sh bucket create 91664-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:27.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:27.360" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:27.360" starttime="20201221 17:15:23.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:27.361" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:15:27.361" starttime="20201221 17:15:27.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:27.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:27.362" starttime="20201221 17:15:27.362"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:27.362" starttime="20201221 17:15:23.829"></status>
</kw>
<msg timestamp="20201221 17:15:27.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:27.363" starttime="20201221 17:15:23.828"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:27.363" starttime="20201221 17:15:23.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:27.366" level="INFO">Running command 'ozone sh bucket link 91664-source/readable-bucket 91664-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:31.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:31.154" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:31.154" starttime="20201221 17:15:27.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:31.155" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:15:31.155" starttime="20201221 17:15:31.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:31.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:31.156" starttime="20201221 17:15:31.155"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:31.156" starttime="20201221 17:15:27.364"></status>
</kw>
<msg timestamp="20201221 17:15:31.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:31.156" starttime="20201221 17:15:27.364"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:31.157" starttime="20201221 17:15:27.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:31.160" level="INFO">Running command 'ozone sh bucket link 91664-source/readable-bucket 91664-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:34.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:34.665" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:34.665" starttime="20201221 17:15:31.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:34.666" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:15:34.666" starttime="20201221 17:15:34.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:34.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:34.666" starttime="20201221 17:15:34.666"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:34.667" starttime="20201221 17:15:31.158"></status>
</kw>
<msg timestamp="20201221 17:15:34.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:34.667" starttime="20201221 17:15:31.157"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:34.667" starttime="20201221 17:15:31.157"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:34.670" level="INFO">Running command 'ozone sh bucket link 91664-source/unreadable-bucket 91664-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:38.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:38.641" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:38.641" starttime="20201221 17:15:34.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:38.642" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:15:38.642" starttime="20201221 17:15:38.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:38.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:38.643" starttime="20201221 17:15:38.642"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:38.643" starttime="20201221 17:15:34.668"></status>
</kw>
<msg timestamp="20201221 17:15:38.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:38.643" starttime="20201221 17:15:34.668"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:38.643" starttime="20201221 17:15:34.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:38.647" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 91664-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:42.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:42.155" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:42.155" starttime="20201221 17:15:38.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:42.157" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201221 17:15:42.157" starttime="20201221 17:15:42.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:42.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:42.157" starttime="20201221 17:15:42.157"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:42.158" starttime="20201221 17:15:38.644"></status>
</kw>
<msg timestamp="20201221 17:15:42.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:42.158" starttime="20201221 17:15:38.644"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:42.158" starttime="20201221 17:15:38.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:42.163" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 91664-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:45.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:45.705" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:45.705" starttime="20201221 17:15:42.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:45.706" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201221 17:15:45.706" starttime="20201221 17:15:45.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:45.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:45.707" starttime="20201221 17:15:45.706"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:45.707" starttime="20201221 17:15:42.160"></status>
</kw>
<msg timestamp="20201221 17:15:45.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:45.707" starttime="20201221 17:15:42.159"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:45.708" starttime="20201221 17:15:42.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:45.711" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 91664-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:49.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:49.607" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:49.607" starttime="20201221 17:15:45.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:49.608" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201221 17:15:49.609" starttime="20201221 17:15:49.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:49.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:49.609" starttime="20201221 17:15:49.609"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:49.609" starttime="20201221 17:15:45.709"></status>
</kw>
<msg timestamp="20201221 17:15:49.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:49.610" starttime="20201221 17:15:45.708"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:49.610" starttime="20201221 17:15:45.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:49.613" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 91664-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:53.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:53.289" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:53.289" starttime="20201221 17:15:49.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:53.290" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201221 17:15:53.290" starttime="20201221 17:15:53.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:53.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:53.291" starttime="20201221 17:15:53.290"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:53.291" starttime="20201221 17:15:49.611"></status>
</kw>
<msg timestamp="20201221 17:15:53.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:53.291" starttime="20201221 17:15:49.610"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:53.291" starttime="20201221 17:15:49.610"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:53.295" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 91664-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:57.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:57.038" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:15:57.038" starttime="20201221 17:15:53.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:57.039" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201221 17:15:57.039" starttime="20201221 17:15:57.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:57.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:57.040" starttime="20201221 17:15:57.039"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.040" starttime="20201221 17:15:53.292"></status>
</kw>
<msg timestamp="20201221 17:15:57.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:57.040" starttime="20201221 17:15:53.292"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.041" starttime="20201221 17:15:53.292"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.041" starttime="20201221 17:15:11.655"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.041" starttime="20201221 17:15:11.655"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.041" starttime="20201221 17:15:02.922"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:57.047" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:57.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:57.050" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:15:57.050" starttime="20201221 17:15:57.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:57.051" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:15:57.051" starttime="20201221 17:15:57.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:57.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:57.052" starttime="20201221 17:15:57.051"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.052" starttime="20201221 17:15:57.044"></status>
</kw>
<msg timestamp="20201221 17:15:57.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:57.052" starttime="20201221 17:15:57.044"></status>
</kw>
<msg timestamp="20201221 17:15:57.053" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:15:57.053" starttime="20201221 17:15:57.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:15:57.054" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:15:57.054" starttime="20201221 17:15:57.053"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:57.058" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:15:57.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:15:57.075" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:15:57.075" starttime="20201221 17:15:57.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:15:57.076" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:15:57.077" starttime="20201221 17:15:57.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:15:57.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:15:57.077" starttime="20201221 17:15:57.077"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.078" starttime="20201221 17:15:57.056"></status>
</kw>
<msg timestamp="20201221 17:15:57.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:15:57.078" starttime="20201221 17:15:57.055"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.078" starttime="20201221 17:15:57.055"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.078" starttime="20201221 17:15:57.054"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.078" starttime="20201221 17:15:57.043"></status>
</kw>
<status status="PASS" endtime="20201221 17:15:57.078" starttime="20201221 17:15:57.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:15:57.082" level="INFO">Running command 'ozone sh bucket link 91664-source/no-such-bucket 91664-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:00.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:00.543" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:00.543" starttime="20201221 17:15:57.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:00.544" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:16:00.545" starttime="20201221 17:16:00.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:00.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:00.545" starttime="20201221 17:16:00.545"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:00.546" starttime="20201221 17:15:57.079"></status>
</kw>
<msg timestamp="20201221 17:16:00.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:00.546" starttime="20201221 17:15:57.079"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:00.546" starttime="20201221 17:15:57.078"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:00.549" level="INFO">Running command 'ozone sh key list 91664-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:04.073" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 17:16:04.073" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:04.074" starttime="20201221 17:16:00.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:04.075" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201221 17:16:04.075" starttime="20201221 17:16:04.074"></status>
</kw>
<msg timestamp="20201221 17:16:04.075" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:04.075" starttime="20201221 17:16:00.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201221 17:16:04.076" starttime="20201221 17:16:04.075"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:16:04.076" critical="yes" starttime="20201221 17:15:57.041"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:04.083" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:04.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:04.085" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:16:04.086" starttime="20201221 17:16:04.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:04.086" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:16:04.087" starttime="20201221 17:16:04.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:04.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:04.087" starttime="20201221 17:16:04.087"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:04.087" starttime="20201221 17:16:04.080"></status>
</kw>
<msg timestamp="20201221 17:16:04.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:04.088" starttime="20201221 17:16:04.080"></status>
</kw>
<msg timestamp="20201221 17:16:04.088" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:16:04.088" starttime="20201221 17:16:04.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:16:04.089" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:16:04.089" starttime="20201221 17:16:04.088"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:04.095" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:04.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:04.109" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:16:04.109" starttime="20201221 17:16:04.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:04.110" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:16:04.111" starttime="20201221 17:16:04.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:04.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:04.111" starttime="20201221 17:16:04.111"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:04.112" starttime="20201221 17:16:04.090"></status>
</kw>
<msg timestamp="20201221 17:16:04.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:04.112" starttime="20201221 17:16:04.090"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:04.112" starttime="20201221 17:16:04.089"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:04.112" starttime="20201221 17:16:04.089"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:04.113" starttime="20201221 17:16:04.079"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:04.113" starttime="20201221 17:16:04.078"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:04.117" level="INFO">Running command 'ozone sh bucket link 91664-source/bucket1 91664-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:07.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:07.844" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:07.844" starttime="20201221 17:16:04.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:07.846" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:16:07.846" starttime="20201221 17:16:07.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:07.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:07.846" starttime="20201221 17:16:07.846"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:07.847" starttime="20201221 17:16:04.114"></status>
</kw>
<msg timestamp="20201221 17:16:07.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:07.847" starttime="20201221 17:16:04.114"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:07.847" starttime="20201221 17:16:04.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:07.851" level="INFO">Running command 'ozone sh bucket create 91664-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:11.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:11.542" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:11.542" starttime="20201221 17:16:07.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:11.543" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:16:11.543" starttime="20201221 17:16:11.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:11.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:11.544" starttime="20201221 17:16:11.543"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:11.544" starttime="20201221 17:16:07.849"></status>
</kw>
<msg timestamp="20201221 17:16:11.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:11.544" starttime="20201221 17:16:07.848"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:11.544" starttime="20201221 17:16:07.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:11.548" level="INFO">Running command 'ozone sh key put 91664-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:19.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:19.867" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:19.867" starttime="20201221 17:16:11.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:19.868" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:16:19.868" starttime="20201221 17:16:19.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:19.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:19.869" starttime="20201221 17:16:19.868"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:19.869" starttime="20201221 17:16:11.545"></status>
</kw>
<msg timestamp="20201221 17:16:19.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:19.869" starttime="20201221 17:16:11.545"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:19.870" starttime="20201221 17:16:11.544"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201221 17:16:19.871" level="INFO">${postfix} = 23793</msg>
<status status="PASS" endtime="20201221 17:16:19.871" starttime="20201221 17:16:19.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201221 17:16:19.872" level="INFO">${tmpfile} = /tmp/tempkey-23793</msg>
<status status="PASS" endtime="20201221 17:16:19.872" starttime="20201221 17:16:19.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:19.875" level="INFO">Running command 'ozone sh key get -f 91664-target/link1/key1 /tmp/tempkey-23793 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:25.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:25.199" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:25.199" starttime="20201221 17:16:19.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:25.200" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:16:25.200" starttime="20201221 17:16:25.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:25.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:25.201" starttime="20201221 17:16:25.201"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.201" starttime="20201221 17:16:19.873"></status>
</kw>
<msg timestamp="20201221 17:16:25.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:25.202" starttime="20201221 17:16:19.873"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.202" starttime="20201221 17:16:19.872"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201221 17:16:25.204" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-23793 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:25.208" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201221 17:16:25.208" starttime="20201221 17:16:25.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:25.213" level="INFO">Running command 'rm -f /tmp/tempkey-23793 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:25.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:25.215" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:16:25.215" starttime="20201221 17:16:25.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:25.216" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:16:25.217" starttime="20201221 17:16:25.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:25.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:25.217" starttime="20201221 17:16:25.217"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.218" starttime="20201221 17:16:25.210"></status>
</kw>
<msg timestamp="20201221 17:16:25.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:25.218" starttime="20201221 17:16:25.210"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.218" starttime="20201221 17:16:25.209"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:16:25.219" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201221 17:16:25.219" starttime="20201221 17:16:25.218"></status>
</kw>
<msg timestamp="20201221 17:16:25.219" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201221 17:16:25.219" starttime="20201221 17:16:19.870"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:16:25.219" starttime="20201221 17:16:25.219"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.219" starttime="20201221 17:16:19.870"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:16:25.220" critical="yes" starttime="20201221 17:16:04.076"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:25.225" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:25.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:25.228" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:16:25.228" starttime="20201221 17:16:25.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:25.229" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:16:25.229" starttime="20201221 17:16:25.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:25.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:25.230" starttime="20201221 17:16:25.229"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.230" starttime="20201221 17:16:25.223"></status>
</kw>
<msg timestamp="20201221 17:16:25.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:25.230" starttime="20201221 17:16:25.223"></status>
</kw>
<msg timestamp="20201221 17:16:25.230" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:16:25.230" starttime="20201221 17:16:25.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:16:25.231" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:16:25.231" starttime="20201221 17:16:25.231"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:25.235" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:25.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:25.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:16:25.251" starttime="20201221 17:16:25.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:25.252" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:16:25.252" starttime="20201221 17:16:25.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:25.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:25.253" starttime="20201221 17:16:25.252"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.253" starttime="20201221 17:16:25.233"></status>
</kw>
<msg timestamp="20201221 17:16:25.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:25.253" starttime="20201221 17:16:25.232"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.253" starttime="20201221 17:16:25.232"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.253" starttime="20201221 17:16:25.231"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.254" starttime="20201221 17:16:25.222"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:25.254" starttime="20201221 17:16:25.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:25.258" level="INFO">Running command 'ozone sh key put 91664-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:33.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:33.503" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:33.503" starttime="20201221 17:16:25.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:33.505" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:16:33.505" starttime="20201221 17:16:33.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:33.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:33.505" starttime="20201221 17:16:33.505"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:33.506" starttime="20201221 17:16:25.255"></status>
</kw>
<msg timestamp="20201221 17:16:33.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:33.506" starttime="20201221 17:16:25.255"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:33.506" starttime="20201221 17:16:25.254"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201221 17:16:33.508" level="INFO">${postfix} = 85457</msg>
<status status="PASS" endtime="20201221 17:16:33.508" starttime="20201221 17:16:33.508"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201221 17:16:33.509" level="INFO">${tmpfile} = /tmp/tempkey-85457</msg>
<status status="PASS" endtime="20201221 17:16:33.509" starttime="20201221 17:16:33.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:33.512" level="INFO">Running command 'ozone sh key get -f 91664-source/bucket1/key2 /tmp/tempkey-85457 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:39.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:39.172" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:39.173" starttime="20201221 17:16:33.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:39.174" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:16:39.174" starttime="20201221 17:16:39.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:39.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:39.175" starttime="20201221 17:16:39.174"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.175" starttime="20201221 17:16:33.510"></status>
</kw>
<msg timestamp="20201221 17:16:39.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:39.175" starttime="20201221 17:16:33.509"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.175" starttime="20201221 17:16:33.509"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201221 17:16:39.178" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-85457 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:39.180" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201221 17:16:39.180" starttime="20201221 17:16:39.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:39.184" level="INFO">Running command 'rm -f /tmp/tempkey-85457 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:39.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:39.187" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:16:39.187" starttime="20201221 17:16:39.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:39.188" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:16:39.188" starttime="20201221 17:16:39.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:39.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:39.189" starttime="20201221 17:16:39.188"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.189" starttime="20201221 17:16:39.182"></status>
</kw>
<msg timestamp="20201221 17:16:39.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:39.189" starttime="20201221 17:16:39.182"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.190" starttime="20201221 17:16:39.181"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:16:39.190" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201221 17:16:39.190" starttime="20201221 17:16:39.190"></status>
</kw>
<msg timestamp="20201221 17:16:39.191" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201221 17:16:39.191" starttime="20201221 17:16:33.507"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:16:39.191" starttime="20201221 17:16:39.191"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.191" starttime="20201221 17:16:33.506"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:16:39.192" critical="yes" starttime="20201221 17:16:25.221"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:39.198" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:39.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:39.201" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:16:39.201" starttime="20201221 17:16:39.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:39.202" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:16:39.202" starttime="20201221 17:16:39.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:39.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:39.203" starttime="20201221 17:16:39.202"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.203" starttime="20201221 17:16:39.195"></status>
</kw>
<msg timestamp="20201221 17:16:39.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:39.203" starttime="20201221 17:16:39.195"></status>
</kw>
<msg timestamp="20201221 17:16:39.203" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:16:39.204" starttime="20201221 17:16:39.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:16:39.205" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:16:39.205" starttime="20201221 17:16:39.204"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:39.209" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:39.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:39.223" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:16:39.223" starttime="20201221 17:16:39.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:39.224" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:16:39.224" starttime="20201221 17:16:39.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:39.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:39.225" starttime="20201221 17:16:39.224"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.225" starttime="20201221 17:16:39.206"></status>
</kw>
<msg timestamp="20201221 17:16:39.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:39.225" starttime="20201221 17:16:39.206"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.225" starttime="20201221 17:16:39.206"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.226" starttime="20201221 17:16:39.205"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.226" starttime="20201221 17:16:39.194"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:39.226" starttime="20201221 17:16:39.193"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:39.231" level="INFO">Running command 'ozone sh key list 91664-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:42.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:42.979" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201221 17:16:42.980" starttime="20201221 17:16:39.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:42.981" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201221 17:16:42.981" starttime="20201221 17:16:42.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:42.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:42.981" starttime="20201221 17:16:42.981"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:42.982" starttime="20201221 17:16:39.227"></status>
</kw>
<msg timestamp="20201221 17:16:42.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:42.982" starttime="20201221 17:16:39.227"></status>
</kw>
<msg timestamp="20201221 17:16:42.982" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201221 17:16:42.982" starttime="20201221 17:16:39.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:42.986" level="INFO">Running command 'ozone sh key list 91664-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:46.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:46.876" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201221 17:16:46.877" starttime="20201221 17:16:42.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:46.878" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201221 17:16:46.878" starttime="20201221 17:16:46.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:46.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:46.879" starttime="20201221 17:16:46.878"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:46.879" starttime="20201221 17:16:42.983"></status>
</kw>
<msg timestamp="20201221 17:16:46.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:46.879" starttime="20201221 17:16:42.983"></status>
</kw>
<msg timestamp="20201221 17:16:46.879" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201221 17:16:46.879" starttime="20201221 17:16:42.982"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:16:46.880" starttime="20201221 17:16:46.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:16:46.880" starttime="20201221 17:16:46.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201221 17:16:46.881" starttime="20201221 17:16:46.880"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:16:46.881" critical="yes" starttime="20201221 17:16:39.192"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:46.887" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:46.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:46.889" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:16:46.889" starttime="20201221 17:16:46.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:46.890" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:16:46.890" starttime="20201221 17:16:46.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:46.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:46.891" starttime="20201221 17:16:46.891"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:46.891" starttime="20201221 17:16:46.884"></status>
</kw>
<msg timestamp="20201221 17:16:46.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:46.892" starttime="20201221 17:16:46.884"></status>
</kw>
<msg timestamp="20201221 17:16:46.892" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:16:46.892" starttime="20201221 17:16:46.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:16:46.893" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:16:46.893" starttime="20201221 17:16:46.892"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:46.897" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:46.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:46.910" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:16:46.910" starttime="20201221 17:16:46.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:46.911" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:16:46.911" starttime="20201221 17:16:46.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:46.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:46.912" starttime="20201221 17:16:46.911"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:46.912" starttime="20201221 17:16:46.894"></status>
</kw>
<msg timestamp="20201221 17:16:46.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:46.912" starttime="20201221 17:16:46.894"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:46.913" starttime="20201221 17:16:46.893"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:46.913" starttime="20201221 17:16:46.893"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:46.913" starttime="20201221 17:16:46.883"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:46.913" starttime="20201221 17:16:46.882"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:46.918" level="INFO">Running command 'ozone sh key delete 91664-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:50.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:50.716" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:50.717" starttime="20201221 17:16:46.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:50.718" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:16:50.718" starttime="20201221 17:16:50.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:50.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:50.718" starttime="20201221 17:16:50.718"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:50.719" starttime="20201221 17:16:46.914"></status>
</kw>
<msg timestamp="20201221 17:16:50.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:50.719" starttime="20201221 17:16:46.914"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:50.719" starttime="20201221 17:16:46.913"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:50.723" level="INFO">Running command 'ozone sh key list 91664-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:54.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:54.436" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201221 17:16:54.436" starttime="20201221 17:16:50.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:54.437" level="INFO">key1</msg>
<status status="PASS" endtime="20201221 17:16:54.437" starttime="20201221 17:16:54.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:54.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:54.438" starttime="20201221 17:16:54.438"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:54.438" starttime="20201221 17:16:50.720"></status>
</kw>
<msg timestamp="20201221 17:16:54.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:54.439" starttime="20201221 17:16:50.720"></status>
</kw>
<msg timestamp="20201221 17:16:54.439" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201221 17:16:54.439" starttime="20201221 17:16:50.719"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201221 17:16:54.440" starttime="20201221 17:16:54.439"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:16:54.440" critical="yes" starttime="20201221 17:16:46.882"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:54.446" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:54.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:54.450" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:16:54.450" starttime="20201221 17:16:54.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:54.451" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:16:54.451" starttime="20201221 17:16:54.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:54.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:54.451" starttime="20201221 17:16:54.451"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:54.452" starttime="20201221 17:16:54.443"></status>
</kw>
<msg timestamp="20201221 17:16:54.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:54.452" starttime="20201221 17:16:54.443"></status>
</kw>
<msg timestamp="20201221 17:16:54.452" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:16:54.452" starttime="20201221 17:16:54.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:16:54.453" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:16:54.453" starttime="20201221 17:16:54.452"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:54.457" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:54.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:54.472" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:16:54.472" starttime="20201221 17:16:54.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:54.475" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:16:54.475" starttime="20201221 17:16:54.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:54.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:54.476" starttime="20201221 17:16:54.475"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:54.476" starttime="20201221 17:16:54.454"></status>
</kw>
<msg timestamp="20201221 17:16:54.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:54.476" starttime="20201221 17:16:54.454"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:54.477" starttime="20201221 17:16:54.453"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:54.477" starttime="20201221 17:16:54.453"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:54.477" starttime="20201221 17:16:54.442"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:54.477" starttime="20201221 17:16:54.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:54.481" level="INFO">Running command 'ozone sh bucket list 91664-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:58.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:58.519" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:58.520" starttime="20201221 17:16:54.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:58.521" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:16:00.361Z",
  "modificationTime" : "2020-12-21T17:16:00.361Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:15:38.476Z",
  "modificationTime" : "2020-12-21T17:15:56.764Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:16:07.648Z",
  "modificationTime" : "2020-12-21T17:16:07.648Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:15:30.968Z",
  "modificationTime" : "2020-12-21T17:15:53.164Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:15:34.566Z",
  "modificationTime" : "2020-12-21T17:15:34.566Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201221 17:16:58.521" starttime="20201221 17:16:58.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:58.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:58.522" starttime="20201221 17:16:58.522"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:58.522" starttime="20201221 17:16:54.478"></status>
</kw>
<msg timestamp="20201221 17:16:58.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:58.523" starttime="20201221 17:16:54.478"></status>
</kw>
<msg timestamp="20201221 17:16:58.523" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:16:58.523" starttime="20201221 17:16:54.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:16:58.523" starttime="20201221 17:16:58.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201221 17:16:58.524" starttime="20201221 17:16:58.524"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:16:58.524" critical="yes" starttime="20201221 17:16:54.441"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:58.530" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:58.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:58.533" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:16:58.533" starttime="20201221 17:16:58.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:58.537" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:16:58.537" starttime="20201221 17:16:58.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:58.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:58.538" starttime="20201221 17:16:58.537"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:58.538" starttime="20201221 17:16:58.528"></status>
</kw>
<msg timestamp="20201221 17:16:58.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:58.538" starttime="20201221 17:16:58.527"></status>
</kw>
<msg timestamp="20201221 17:16:58.538" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:16:58.538" starttime="20201221 17:16:58.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:16:58.539" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:16:58.539" starttime="20201221 17:16:58.539"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:58.543" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:16:58.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:16:58.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:16:58.558" starttime="20201221 17:16:58.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:16:58.559" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:16:58.559" starttime="20201221 17:16:58.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:16:58.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:16:58.560" starttime="20201221 17:16:58.560"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:58.560" starttime="20201221 17:16:58.541"></status>
</kw>
<msg timestamp="20201221 17:16:58.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:16:58.561" starttime="20201221 17:16:58.540"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:58.561" starttime="20201221 17:16:58.540"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:58.561" starttime="20201221 17:16:58.539"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:58.561" starttime="20201221 17:16:58.526"></status>
</kw>
<status status="PASS" endtime="20201221 17:16:58.561" starttime="20201221 17:16:58.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:16:58.565" level="INFO">Running command 'ozone sh bucket info 91664-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:02.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:02.207" level="INFO">${output} = 91664-source bucket1</msg>
<status status="PASS" endtime="20201221 17:17:02.207" starttime="20201221 17:16:58.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:02.209" level="INFO">91664-source bucket1</msg>
<status status="PASS" endtime="20201221 17:17:02.209" starttime="20201221 17:17:02.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:02.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:02.210" starttime="20201221 17:17:02.209"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:02.211" starttime="20201221 17:16:58.562"></status>
</kw>
<msg timestamp="20201221 17:17:02.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:02.211" starttime="20201221 17:16:58.562"></status>
</kw>
<msg timestamp="20201221 17:17:02.211" level="INFO">${result} = 91664-source bucket1</msg>
<status status="PASS" endtime="20201221 17:17:02.211" starttime="20201221 17:16:58.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:02.212" starttime="20201221 17:17:02.211"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:17:02.212" critical="yes" starttime="20201221 17:16:58.525"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:02.221" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:02.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:02.224" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:17:02.224" starttime="20201221 17:17:02.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:02.225" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:17:02.225" starttime="20201221 17:17:02.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:02.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:02.226" starttime="20201221 17:17:02.225"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:02.227" starttime="20201221 17:17:02.218"></status>
</kw>
<msg timestamp="20201221 17:17:02.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:02.227" starttime="20201221 17:17:02.217"></status>
</kw>
<msg timestamp="20201221 17:17:02.227" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:17:02.227" starttime="20201221 17:17:02.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:17:02.228" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:17:02.228" starttime="20201221 17:17:02.228"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:02.233" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:02.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:02.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:02.249" starttime="20201221 17:17:02.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:02.251" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:02.251" starttime="20201221 17:17:02.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:02.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:02.251" starttime="20201221 17:17:02.251"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:02.252" starttime="20201221 17:17:02.231"></status>
</kw>
<msg timestamp="20201221 17:17:02.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:02.252" starttime="20201221 17:17:02.230"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:02.252" starttime="20201221 17:17:02.229"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:02.252" starttime="20201221 17:17:02.229"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:02.252" starttime="20201221 17:17:02.215"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:02.252" starttime="20201221 17:17:02.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:02.256" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 91664-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:05.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:05.801" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:05.801" starttime="20201221 17:17:02.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:05.803" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201221 17:17:05.803" starttime="20201221 17:17:05.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:05.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:05.803" starttime="20201221 17:17:05.803"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:05.804" starttime="20201221 17:17:02.254"></status>
</kw>
<msg timestamp="20201221 17:17:05.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:05.804" starttime="20201221 17:17:02.253"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:05.804" starttime="20201221 17:17:02.253"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:05.808" level="INFO">Running command 'ozone sh bucket getacl 91664-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:09.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:09.904" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201221 17:17:09.904" starttime="20201221 17:17:05.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:09.905" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201221 17:17:09.905" starttime="20201221 17:17:09.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:09.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:09.906" starttime="20201221 17:17:09.905"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:09.906" starttime="20201221 17:17:05.806"></status>
</kw>
<msg timestamp="20201221 17:17:09.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:09.906" starttime="20201221 17:17:05.806"></status>
</kw>
<msg timestamp="20201221 17:17:09.906" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201221 17:17:09.906" starttime="20201221 17:17:05.805"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:09.907" starttime="20201221 17:17:09.906"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:09.907" starttime="20201221 17:17:05.804"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:09.911" level="INFO">Running command 'ozone sh bucket getacl 91664-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:13.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:13.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:13.597" starttime="20201221 17:17:09.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:13.599" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:13.599" starttime="20201221 17:17:13.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:13.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:13.599" starttime="20201221 17:17:13.599"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:13.600" starttime="20201221 17:17:09.909"></status>
</kw>
<msg timestamp="20201221 17:17:13.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:13.600" starttime="20201221 17:17:09.909"></status>
</kw>
<msg timestamp="20201221 17:17:13.600" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201221 17:17:13.600" starttime="20201221 17:17:09.908"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:13.601" starttime="20201221 17:17:13.600"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:13.601" starttime="20201221 17:17:09.907"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:13.605" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 91664-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:17.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:17.219" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:17.219" starttime="20201221 17:17:13.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:17.221" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201221 17:17:17.221" starttime="20201221 17:17:17.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:17.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:17.221" starttime="20201221 17:17:17.221"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:17.222" starttime="20201221 17:17:13.602"></status>
</kw>
<msg timestamp="20201221 17:17:17.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:17.222" starttime="20201221 17:17:13.602"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:17.222" starttime="20201221 17:17:13.601"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:17.227" level="INFO">Running command 'ozone sh bucket getacl 91664-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:21.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:21.032" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:21.032" starttime="20201221 17:17:17.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:21.033" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:21.033" starttime="20201221 17:17:21.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:21.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:21.034" starttime="20201221 17:17:21.033"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:21.034" starttime="20201221 17:17:17.224"></status>
</kw>
<msg timestamp="20201221 17:17:21.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:21.034" starttime="20201221 17:17:17.224"></status>
</kw>
<msg timestamp="20201221 17:17:21.034" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201221 17:17:21.034" starttime="20201221 17:17:17.223"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:21.035" starttime="20201221 17:17:21.035"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:21.035" starttime="20201221 17:17:17.222"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:21.040" level="INFO">Running command 'ozone sh bucket getacl 91664-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:24.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:24.929" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201221 17:17:24.929" starttime="20201221 17:17:21.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:24.931" level="INFO">READ</msg>
<status status="PASS" endtime="20201221 17:17:24.931" starttime="20201221 17:17:24.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:24.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:24.931" starttime="20201221 17:17:24.931"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:24.932" starttime="20201221 17:17:21.037"></status>
</kw>
<msg timestamp="20201221 17:17:24.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:24.932" starttime="20201221 17:17:21.037"></status>
</kw>
<msg timestamp="20201221 17:17:24.932" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201221 17:17:24.932" starttime="20201221 17:17:21.036"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:24.933" starttime="20201221 17:17:24.932"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:24.933" starttime="20201221 17:17:21.035"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:17:24.933" critical="yes" starttime="20201221 17:17:02.213"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:24.940" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:24.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:24.942" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:17:24.942" starttime="20201221 17:17:24.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:24.944" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:17:24.944" starttime="20201221 17:17:24.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:24.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:24.945" starttime="20201221 17:17:24.944"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:24.945" starttime="20201221 17:17:24.937"></status>
</kw>
<msg timestamp="20201221 17:17:24.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:24.945" starttime="20201221 17:17:24.937"></status>
</kw>
<msg timestamp="20201221 17:17:24.946" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:17:24.946" starttime="20201221 17:17:24.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:17:24.946" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:17:24.946" starttime="20201221 17:17:24.946"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:24.950" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:24.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:24.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:24.965" starttime="20201221 17:17:24.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:24.966" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:24.966" starttime="20201221 17:17:24.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:24.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:24.966" starttime="20201221 17:17:24.966"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:24.967" starttime="20201221 17:17:24.948"></status>
</kw>
<msg timestamp="20201221 17:17:24.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:24.967" starttime="20201221 17:17:24.948"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:24.967" starttime="20201221 17:17:24.947"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:24.967" starttime="20201221 17:17:24.947"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:24.967" starttime="20201221 17:17:24.936"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:24.967" starttime="20201221 17:17:24.935"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:24.971" level="INFO">Running command 'ozone sh bucket link 91664-source/bucket2 91664-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:28.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:28.598" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:28.598" starttime="20201221 17:17:24.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:28.599" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:17:28.599" starttime="20201221 17:17:28.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:28.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:28.600" starttime="20201221 17:17:28.600"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:28.600" starttime="20201221 17:17:24.968"></status>
</kw>
<msg timestamp="20201221 17:17:28.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:28.601" starttime="20201221 17:17:24.968"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:28.601" starttime="20201221 17:17:24.968"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:28.604" level="INFO">Running command 'ozone sh bucket create 91664-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:32.022" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 17:17:32.022" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:32.022" starttime="20201221 17:17:28.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:32.024" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201221 17:17:32.024" starttime="20201221 17:17:32.023"></status>
</kw>
<msg timestamp="20201221 17:17:32.024" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:32.024" starttime="20201221 17:17:28.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:32.025" starttime="20201221 17:17:32.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:32.029" level="INFO">Running command 'ozone sh bucket create 91664-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:35.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:35.382" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:35.382" starttime="20201221 17:17:32.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:35.383" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:17:35.383" starttime="20201221 17:17:35.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:35.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:35.384" starttime="20201221 17:17:35.383"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:35.384" starttime="20201221 17:17:32.026"></status>
</kw>
<msg timestamp="20201221 17:17:35.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:35.384" starttime="20201221 17:17:32.026"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:35.384" starttime="20201221 17:17:32.025"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:35.387" level="INFO">Running command 'ozone sh bucket link 91664-source/bucket1 91664-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:38.984" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 17:17:38.984" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:38.984" starttime="20201221 17:17:35.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:38.986" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201221 17:17:38.986" starttime="20201221 17:17:38.985"></status>
</kw>
<msg timestamp="20201221 17:17:38.986" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:38.986" starttime="20201221 17:17:35.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:38.987" starttime="20201221 17:17:38.986"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:17:38.987" critical="yes" starttime="20201221 17:17:24.934"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:38.993" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:38.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:38.996" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:17:38.996" starttime="20201221 17:17:38.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:38.997" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:17:38.997" starttime="20201221 17:17:38.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:38.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:38.998" starttime="20201221 17:17:38.997"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:38.998" starttime="20201221 17:17:38.991"></status>
</kw>
<msg timestamp="20201221 17:17:38.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:38.998" starttime="20201221 17:17:38.990"></status>
</kw>
<msg timestamp="20201221 17:17:38.999" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:17:38.999" starttime="20201221 17:17:38.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:17:38.999" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:17:39.000" starttime="20201221 17:17:38.999"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:39.004" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:39.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:39.021" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:39.021" starttime="20201221 17:17:39.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:39.022" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:39.022" starttime="20201221 17:17:39.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:39.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:39.023" starttime="20201221 17:17:39.022"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.023" starttime="20201221 17:17:39.001"></status>
</kw>
<msg timestamp="20201221 17:17:39.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:39.023" starttime="20201221 17:17:39.001"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.023" starttime="20201221 17:17:39.000"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.023" starttime="20201221 17:17:39.000"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.024" starttime="20201221 17:17:38.989"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.024" starttime="20201221 17:17:38.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:39.029" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:39.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:39.033" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:39.033" starttime="20201221 17:17:39.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:39.034" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:39.034" starttime="20201221 17:17:39.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:39.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:39.035" starttime="20201221 17:17:39.035"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.035" starttime="20201221 17:17:39.026"></status>
</kw>
<msg timestamp="20201221 17:17:39.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:39.036" starttime="20201221 17:17:39.026"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.036" starttime="20201221 17:17:39.025"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:39.040" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:39.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:39.042" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:17:39.042" starttime="20201221 17:17:39.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:39.043" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:17:39.044" starttime="20201221 17:17:39.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:39.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:39.044" starttime="20201221 17:17:39.044"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.044" starttime="20201221 17:17:39.037"></status>
</kw>
<msg timestamp="20201221 17:17:39.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:39.045" starttime="20201221 17:17:39.037"></status>
</kw>
<msg timestamp="20201221 17:17:39.045" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:17:39.045" starttime="20201221 17:17:39.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:17:39.046" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:17:39.046" starttime="20201221 17:17:39.045"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:39.049" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:39.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:39.063" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:39.063" starttime="20201221 17:17:39.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:39.064" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:39.064" starttime="20201221 17:17:39.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:39.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:39.065" starttime="20201221 17:17:39.064"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.065" starttime="20201221 17:17:39.047"></status>
</kw>
<msg timestamp="20201221 17:17:39.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:39.066" starttime="20201221 17:17:39.047"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.066" starttime="20201221 17:17:39.046"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.066" starttime="20201221 17:17:39.046"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.066" starttime="20201221 17:17:39.036"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:39.066" starttime="20201221 17:17:39.036"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:39.069" level="INFO">Running command 'ozone sh key list 91664-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:42.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:42.801" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:42.801" starttime="20201221 17:17:39.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.802" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "91664-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-12-21T17:15:19.155Z",
  "modificationTime" : "2020-12-21T17:15:23.293Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201221 17:17:42.802" starttime="20201221 17:17:42.802"></status>
</kw>
<msg timestamp="20201221 17:17:42.803" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:42.803" starttime="20201221 17:17:39.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:42.803" starttime="20201221 17:17:42.803"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.804" starttime="20201221 17:17:39.025"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.804" starttime="20201221 17:17:39.024"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:17:42.804" critical="yes" starttime="20201221 17:17:38.987"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:42.810" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:42.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:42.813" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:17:42.813" starttime="20201221 17:17:42.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.814" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:17:42.814" starttime="20201221 17:17:42.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:42.814" starttime="20201221 17:17:42.814"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.815" starttime="20201221 17:17:42.808"></status>
</kw>
<msg timestamp="20201221 17:17:42.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:42.815" starttime="20201221 17:17:42.807"></status>
</kw>
<msg timestamp="20201221 17:17:42.815" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:17:42.815" starttime="20201221 17:17:42.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:17:42.816" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:17:42.816" starttime="20201221 17:17:42.815"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:42.820" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:42.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:42.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:42.835" starttime="20201221 17:17:42.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.836" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:42.836" starttime="20201221 17:17:42.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:42.837" starttime="20201221 17:17:42.836"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.837" starttime="20201221 17:17:42.817"></status>
</kw>
<msg timestamp="20201221 17:17:42.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:42.837" starttime="20201221 17:17:42.817"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.838" starttime="20201221 17:17:42.816"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.838" starttime="20201221 17:17:42.816"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.838" starttime="20201221 17:17:42.806"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.838" starttime="20201221 17:17:42.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:42.843" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:42.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:42.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:42.846" starttime="20201221 17:17:42.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.847" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:42.847" starttime="20201221 17:17:42.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:42.848" starttime="20201221 17:17:42.847"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.848" starttime="20201221 17:17:42.840"></status>
</kw>
<msg timestamp="20201221 17:17:42.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:42.848" starttime="20201221 17:17:42.840"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.848" starttime="20201221 17:17:42.839"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:42.852" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:42.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:42.855" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:17:42.855" starttime="20201221 17:17:42.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.856" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:17:42.856" starttime="20201221 17:17:42.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:42.857" starttime="20201221 17:17:42.856"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.857" starttime="20201221 17:17:42.850"></status>
</kw>
<msg timestamp="20201221 17:17:42.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:42.857" starttime="20201221 17:17:42.850"></status>
</kw>
<msg timestamp="20201221 17:17:42.857" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:17:42.857" starttime="20201221 17:17:42.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:17:42.858" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:17:42.858" starttime="20201221 17:17:42.858"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:42.863" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:42.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:42.880" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:42.880" starttime="20201221 17:17:42.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.881" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:42.881" starttime="20201221 17:17:42.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:42.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:42.882" starttime="20201221 17:17:42.882"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.882" starttime="20201221 17:17:42.860"></status>
</kw>
<msg timestamp="20201221 17:17:42.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:42.883" starttime="20201221 17:17:42.859"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.883" starttime="20201221 17:17:42.859"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.883" starttime="20201221 17:17:42.858"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.883" starttime="20201221 17:17:42.849"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:42.883" starttime="20201221 17:17:42.849"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:42.886" level="INFO">Running command 'ozone sh key list 91664-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:46.365" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 17:17:46.365" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:46.365" starttime="20201221 17:17:42.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.367" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 91664-target unreadable-link null</msg>
<status status="PASS" endtime="20201221 17:17:46.367" starttime="20201221 17:17:46.366"></status>
</kw>
<msg timestamp="20201221 17:17:46.367" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:46.367" starttime="20201221 17:17:42.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:46.368" starttime="20201221 17:17:46.367"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.368" starttime="20201221 17:17:42.839"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.368" starttime="20201221 17:17:42.838"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:17:46.368" critical="yes" starttime="20201221 17:17:42.805"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:46.374" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:46.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:46.377" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:17:46.377" starttime="20201221 17:17:46.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.378" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:17:46.378" starttime="20201221 17:17:46.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:46.379" starttime="20201221 17:17:46.378"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.379" starttime="20201221 17:17:46.372"></status>
</kw>
<msg timestamp="20201221 17:17:46.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:46.379" starttime="20201221 17:17:46.371"></status>
</kw>
<msg timestamp="20201221 17:17:46.380" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:17:46.380" starttime="20201221 17:17:46.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:17:46.381" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:17:46.381" starttime="20201221 17:17:46.380"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:46.385" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:46.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:46.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:46.406" starttime="20201221 17:17:46.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.407" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:46.408" starttime="20201221 17:17:46.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:46.408" starttime="20201221 17:17:46.408"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.409" starttime="20201221 17:17:46.382"></status>
</kw>
<msg timestamp="20201221 17:17:46.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:46.409" starttime="20201221 17:17:46.382"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.409" starttime="20201221 17:17:46.381"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.409" starttime="20201221 17:17:46.381"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.409" starttime="20201221 17:17:46.371"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.409" starttime="20201221 17:17:46.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:46.414" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:46.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:46.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:46.418" starttime="20201221 17:17:46.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.419" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:46.419" starttime="20201221 17:17:46.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:46.419" starttime="20201221 17:17:46.419"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.420" starttime="20201221 17:17:46.411"></status>
</kw>
<msg timestamp="20201221 17:17:46.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:46.420" starttime="20201221 17:17:46.411"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.420" starttime="20201221 17:17:46.410"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:46.424" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:46.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:46.427" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:17:46.427" starttime="20201221 17:17:46.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.428" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:17:46.428" starttime="20201221 17:17:46.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:46.428" starttime="20201221 17:17:46.428"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.429" starttime="20201221 17:17:46.422"></status>
</kw>
<msg timestamp="20201221 17:17:46.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:46.429" starttime="20201221 17:17:46.421"></status>
</kw>
<msg timestamp="20201221 17:17:46.429" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:17:46.429" starttime="20201221 17:17:46.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:17:46.430" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:17:46.430" starttime="20201221 17:17:46.429"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:46.434" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:46.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:46.453" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:46.453" starttime="20201221 17:17:46.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.454" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:46.454" starttime="20201221 17:17:46.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:46.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:46.455" starttime="20201221 17:17:46.455"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.455" starttime="20201221 17:17:46.431"></status>
</kw>
<msg timestamp="20201221 17:17:46.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:46.456" starttime="20201221 17:17:46.431"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.456" starttime="20201221 17:17:46.430"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.456" starttime="20201221 17:17:46.430"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.456" starttime="20201221 17:17:46.421"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:46.457" starttime="20201221 17:17:46.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:46.462" level="INFO">Running command 'ozone sh bucket info 91664-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:50.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:50.327" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:50.327" starttime="20201221 17:17:46.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:50.328" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:15:38.476Z",
  "modificationTime" : "2020-12-21T17:15:56.764Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201221 17:17:50.328" starttime="20201221 17:17:50.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:50.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:50.329" starttime="20201221 17:17:50.329"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:50.330" starttime="20201221 17:17:46.458"></status>
</kw>
<msg timestamp="20201221 17:17:50.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:50.330" starttime="20201221 17:17:46.457"></status>
</kw>
<msg timestamp="20201221 17:17:50.330" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:50.330" starttime="20201221 17:17:46.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:50.331" starttime="20201221 17:17:50.330"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:50.331" starttime="20201221 17:17:50.331"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:50.334" level="INFO">Running command 'ozone sh key list 91664-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:53.985" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 17:17:53.985" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:53.985" starttime="20201221 17:17:50.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:53.986" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 91664-source unreadable-bucket </msg>
<status status="PASS" endtime="20201221 17:17:53.986" starttime="20201221 17:17:53.985"></status>
</kw>
<msg timestamp="20201221 17:17:53.986" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:53.987" starttime="20201221 17:17:50.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201221 17:17:53.987" starttime="20201221 17:17:53.987"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:53.987" starttime="20201221 17:17:46.410"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:53.987" starttime="20201221 17:17:46.410"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:17:53.988" critical="yes" starttime="20201221 17:17:46.369"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:53.993" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:53.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:53.996" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:17:53.996" starttime="20201221 17:17:53.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:53.997" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:17:53.997" starttime="20201221 17:17:53.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:53.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:53.998" starttime="20201221 17:17:53.997"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:53.998" starttime="20201221 17:17:53.991"></status>
</kw>
<msg timestamp="20201221 17:17:53.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:53.998" starttime="20201221 17:17:53.990"></status>
</kw>
<msg timestamp="20201221 17:17:53.999" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:17:53.999" starttime="20201221 17:17:53.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:17:53.999" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:17:53.999" starttime="20201221 17:17:53.999"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:54.004" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:54.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:54.020" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:17:54.020" starttime="20201221 17:17:54.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:54.021" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:17:54.021" starttime="20201221 17:17:54.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:54.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:54.022" starttime="20201221 17:17:54.021"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:54.022" starttime="20201221 17:17:54.001"></status>
</kw>
<msg timestamp="20201221 17:17:54.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:54.022" starttime="20201221 17:17:54.001"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:54.023" starttime="20201221 17:17:54.000"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:54.023" starttime="20201221 17:17:53.999"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:54.023" starttime="20201221 17:17:53.990"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:54.023" starttime="20201221 17:17:53.989"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:54.027" level="INFO">Running command 'ozone sh bucket link 91664-target/loop1 91664-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:17:57.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:17:57.633" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:17:57.633" starttime="20201221 17:17:54.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:17:57.634" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:17:57.635" starttime="20201221 17:17:57.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:17:57.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:17:57.635" starttime="20201221 17:17:57.635"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:57.635" starttime="20201221 17:17:54.024"></status>
</kw>
<msg timestamp="20201221 17:17:57.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:17:57.636" starttime="20201221 17:17:54.024"></status>
</kw>
<status status="PASS" endtime="20201221 17:17:57.636" starttime="20201221 17:17:54.023"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:17:57.640" level="INFO">Running command 'ozone sh bucket link 91664-target/loop2 91664-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:00.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:00.995" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:00.995" starttime="20201221 17:17:57.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:00.997" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:18:00.997" starttime="20201221 17:18:00.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:00.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:00.998" starttime="20201221 17:18:00.997"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:00.998" starttime="20201221 17:17:57.637"></status>
</kw>
<msg timestamp="20201221 17:18:00.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:00.998" starttime="20201221 17:17:57.637"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:00.998" starttime="20201221 17:17:57.636"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:01.002" level="INFO">Running command 'ozone sh bucket link 91664-target/loop3 91664-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:04.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:04.518" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:04.518" starttime="20201221 17:18:01.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:04.519" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:18:04.519" starttime="20201221 17:18:04.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:04.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:04.520" starttime="20201221 17:18:04.519"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:04.520" starttime="20201221 17:18:00.999"></status>
</kw>
<msg timestamp="20201221 17:18:04.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:04.521" starttime="20201221 17:18:00.999"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:04.521" starttime="20201221 17:18:00.998"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:04.524" level="INFO">Running command 'ozone sh key list 91664-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:08.278" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 17:18:08.278" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:08.278" starttime="20201221 17:18:04.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:08.279" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201221 17:18:08.279" starttime="20201221 17:18:08.278"></status>
</kw>
<msg timestamp="20201221 17:18:08.280" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:08.280" starttime="20201221 17:18:04.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201221 17:18:08.280" starttime="20201221 17:18:08.280"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:18:08.281" critical="yes" starttime="20201221 17:17:53.988"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:08.288" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:08.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:08.291" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:18:08.291" starttime="20201221 17:18:08.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:08.292" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:18:08.292" starttime="20201221 17:18:08.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:08.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:08.293" starttime="20201221 17:18:08.292"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:08.293" starttime="20201221 17:18:08.285"></status>
</kw>
<msg timestamp="20201221 17:18:08.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:08.293" starttime="20201221 17:18:08.284"></status>
</kw>
<msg timestamp="20201221 17:18:08.294" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:18:08.294" starttime="20201221 17:18:08.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:18:08.294" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:18:08.294" starttime="20201221 17:18:08.294"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:08.298" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:08.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:08.315" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:18:08.315" starttime="20201221 17:18:08.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:08.316" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:18:08.316" starttime="20201221 17:18:08.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:08.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:08.317" starttime="20201221 17:18:08.316"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:08.317" starttime="20201221 17:18:08.296"></status>
</kw>
<msg timestamp="20201221 17:18:08.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:08.317" starttime="20201221 17:18:08.296"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:08.317" starttime="20201221 17:18:08.295"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:08.317" starttime="20201221 17:18:08.295"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:08.318" starttime="20201221 17:18:08.283"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:08.318" starttime="20201221 17:18:08.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:08.321" level="INFO">Running command 'ozone sh bucket link 91664-source/bucket1 91664-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:11.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:11.571" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:11.571" starttime="20201221 17:18:08.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:11.572" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:18:11.572" starttime="20201221 17:18:11.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:11.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:11.573" starttime="20201221 17:18:11.572"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:11.573" starttime="20201221 17:18:08.319"></status>
</kw>
<msg timestamp="20201221 17:18:11.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:11.573" starttime="20201221 17:18:08.319"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:11.574" starttime="20201221 17:18:08.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:11.577" level="INFO">Running command 'ozone sh key put 91664-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:19.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:19.710" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:19.710" starttime="20201221 17:18:11.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:19.711" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:18:19.711" starttime="20201221 17:18:19.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:19.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:19.712" starttime="20201221 17:18:19.711"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:19.712" starttime="20201221 17:18:11.575"></status>
</kw>
<msg timestamp="20201221 17:18:19.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:19.713" starttime="20201221 17:18:11.574"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:19.713" starttime="20201221 17:18:11.574"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201221 17:18:19.715" level="INFO">${postfix} = 01618</msg>
<status status="PASS" endtime="20201221 17:18:19.715" starttime="20201221 17:18:19.714"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201221 17:18:19.716" level="INFO">${tmpfile} = /tmp/tempkey-01618</msg>
<status status="PASS" endtime="20201221 17:18:19.716" starttime="20201221 17:18:19.715"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:19.720" level="INFO">Running command 'ozone sh key get -f 91664-target/link1/key3 /tmp/tempkey-01618 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:24.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:24.825" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:24.825" starttime="20201221 17:18:19.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:24.826" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:18:24.826" starttime="20201221 17:18:24.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:24.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:24.827" starttime="20201221 17:18:24.826"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.827" starttime="20201221 17:18:19.717"></status>
</kw>
<msg timestamp="20201221 17:18:24.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:24.827" starttime="20201221 17:18:19.716"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.827" starttime="20201221 17:18:19.716"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201221 17:18:24.830" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-01618 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:24.832" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201221 17:18:24.832" starttime="20201221 17:18:24.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:24.837" level="INFO">Running command 'rm -f /tmp/tempkey-01618 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:24.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:24.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:18:24.839" starttime="20201221 17:18:24.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:24.840" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:18:24.841" starttime="20201221 17:18:24.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:24.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:24.841" starttime="20201221 17:18:24.841"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.841" starttime="20201221 17:18:24.834"></status>
</kw>
<msg timestamp="20201221 17:18:24.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:24.842" starttime="20201221 17:18:24.833"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.842" starttime="20201221 17:18:24.833"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:18:24.842" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201221 17:18:24.842" starttime="20201221 17:18:24.842"></status>
</kw>
<msg timestamp="20201221 17:18:24.843" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201221 17:18:24.843" starttime="20201221 17:18:19.714"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:18:24.843" starttime="20201221 17:18:24.843"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.843" starttime="20201221 17:18:19.713"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:18:24.844" critical="yes" starttime="20201221 17:18:08.282"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:24.849" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:24.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:24.852" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201221 17:18:24.852" starttime="20201221 17:18:24.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:24.854" level="INFO">scm</msg>
<status status="PASS" endtime="20201221 17:18:24.854" starttime="20201221 17:18:24.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:24.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:24.855" starttime="20201221 17:18:24.854"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.856" starttime="20201221 17:18:24.847"></status>
</kw>
<msg timestamp="20201221 17:18:24.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:24.856" starttime="20201221 17:18:24.847"></status>
</kw>
<msg timestamp="20201221 17:18:24.856" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201221 17:18:24.856" starttime="20201221 17:18:24.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:18:24.857" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:18:24.857" starttime="20201221 17:18:24.856"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:24.861" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:24.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:24.876" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:18:24.876" starttime="20201221 17:18:24.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:24.877" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:18:24.877" starttime="20201221 17:18:24.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:24.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:24.878" starttime="20201221 17:18:24.877"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.878" starttime="20201221 17:18:24.858"></status>
</kw>
<msg timestamp="20201221 17:18:24.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:24.878" starttime="20201221 17:18:24.858"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.878" starttime="20201221 17:18:24.857"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.878" starttime="20201221 17:18:24.857"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.879" starttime="20201221 17:18:24.845"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:24.879" starttime="20201221 17:18:24.845"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:24.882" level="INFO">Running command 'ozone sh bucket delete 91664-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:28.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:28.500" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:28.500" starttime="20201221 17:18:24.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:28.502" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:18:28.502" starttime="20201221 17:18:28.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:28.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:28.503" starttime="20201221 17:18:28.502"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:28.503" starttime="20201221 17:18:24.880"></status>
</kw>
<msg timestamp="20201221 17:18:28.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:28.503" starttime="20201221 17:18:24.879"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:28.503" starttime="20201221 17:18:24.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:28.507" level="INFO">Running command 'ozone sh bucket list 91664-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:32.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:32.352" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:32.352" starttime="20201221 17:18:28.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:32.353" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:17:35.322Z",
  "modificationTime" : "2020-12-21T17:17:35.322Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:16:00.361Z",
  "modificationTime" : "2020-12-21T17:16:00.361Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:15:38.476Z",
  "modificationTime" : "2020-12-21T17:15:56.764Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:17:28.323Z",
  "modificationTime" : "2020-12-21T17:17:28.323Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:18:11.348Z",
  "modificationTime" : "2020-12-21T17:18:11.348Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:18:04.437Z",
  "modificationTime" : "2020-12-21T17:18:04.437Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:17:57.459Z",
  "modificationTime" : "2020-12-21T17:17:57.459Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:18:00.854Z",
  "modificationTime" : "2020-12-21T17:18:00.854Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:15:30.968Z",
  "modificationTime" : "2020-12-21T17:15:53.164Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "91664-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:15:34.566Z",
  "modificationTime" : "2020-12-21T17:15:34.566Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "91664-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201221 17:18:32.354" starttime="20201221 17:18:32.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:32.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:32.355" starttime="20201221 17:18:32.354"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:32.355" starttime="20201221 17:18:28.504"></status>
</kw>
<msg timestamp="20201221 17:18:32.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:32.355" starttime="20201221 17:18:28.504"></status>
</kw>
<msg timestamp="20201221 17:18:32.356" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:18:32.356" starttime="20201221 17:18:28.503"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:18:32.356" starttime="20201221 17:18:32.356"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:18:32.360" level="INFO">Running command 'ozone sh key list 91664-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:18:36.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:18:36.152" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201221 17:18:36.152" starttime="20201221 17:18:32.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:18:36.153" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201221 17:18:36.153" starttime="20201221 17:18:36.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:18:36.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:18:36.154" starttime="20201221 17:18:36.153"></status>
</kw>
<status status="PASS" endtime="20201221 17:18:36.154" starttime="20201221 17:18:32.357"></status>
</kw>
<msg timestamp="20201221 17:18:36.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:18:36.154" starttime="20201221 17:18:32.357"></status>
</kw>
<msg timestamp="20201221 17:18:36.155" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201221 17:18:36.155" starttime="20201221 17:18:32.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201221 17:18:36.155" starttime="20201221 17:18:36.155"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:18:36.155" critical="yes" starttime="20201221 17:18:24.844"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201221 17:18:36.158" starttime="20201221 17:15:02.869"></status>
</suite>
<status status="PASS" elapsedtime="246050" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
