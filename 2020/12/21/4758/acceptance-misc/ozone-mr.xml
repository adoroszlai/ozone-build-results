<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201221 16:35:09.177" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:30.010" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:32.471" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 16:21:32.471" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 16:21:32.471" starttime="20201221 16:21:30.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:32.472" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 16:21:32.472" starttime="20201221 16:21:32.471"></status>
</kw>
<msg timestamp="20201221 16:21:32.473" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 16:21:32.473" starttime="20201221 16:21:30.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:32.478" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:34.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:21:34.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:21:34.677" starttime="20201221 16:21:32.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:34.678" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:21:34.678" starttime="20201221 16:21:34.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:21:34.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:21:34.679" starttime="20201221 16:21:34.678"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:34.679" starttime="20201221 16:21:32.474"></status>
</kw>
<msg timestamp="20201221 16:21:34.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:21:34.679" starttime="20201221 16:21:32.474"></status>
</kw>
<msg timestamp="20201221 16:21:34.679" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201221 16:21:34.679" starttime="20201221 16:21:32.474"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201221 16:21:34.680" starttime="20201221 16:21:34.680"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:34.680" starttime="20201221 16:21:32.473"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:34.680" starttime="20201221 16:21:32.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:34.685" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:36.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:21:36.744" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:21:36.745" starttime="20201221 16:21:34.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:36.746" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:21:36.746" starttime="20201221 16:21:36.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:21:36.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:21:36.746" starttime="20201221 16:21:36.746"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:36.747" starttime="20201221 16:21:34.682"></status>
</kw>
<msg timestamp="20201221 16:21:36.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:21:36.747" starttime="20201221 16:21:34.682"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:36.747" starttime="20201221 16:21:34.681"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:36.747" starttime="20201221 16:21:34.681"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:36.747" starttime="20201221 16:21:34.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201221 16:21:36.748" starttime="20201221 16:21:36.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:36.751" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:38.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:21:38.906" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T16:21:36.709Z",
  "modificat...</msg>
<status status="PASS" endtime="20201221 16:21:38.906" starttime="20201221 16:21:36.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:38.907" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T16:21:36.709Z",
  "modificationTime" : "2020-12-21T16:21:36.709Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201221 16:21:38.907" starttime="20201221 16:21:38.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:21:38.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:21:38.908" starttime="20201221 16:21:38.907"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:38.908" starttime="20201221 16:21:36.749"></status>
</kw>
<msg timestamp="20201221 16:21:38.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:21:38.908" starttime="20201221 16:21:36.749"></status>
</kw>
<msg timestamp="20201221 16:21:38.909" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T16:21:36.709Z",
  "modificat...</msg>
<status status="PASS" endtime="20201221 16:21:38.909" starttime="20201221 16:21:36.748"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201221 16:21:38.909" starttime="20201221 16:21:38.909"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:21:38.913" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:21:38.913" starttime="20201221 16:21:38.913"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:21:38.914" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:21:38.914" starttime="20201221 16:21:38.913"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:38.914" starttime="20201221 16:21:38.912"></status>
</kw>
<msg timestamp="20201221 16:21:38.914" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:21:38.914" starttime="20201221 16:21:38.912"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:38.914" starttime="20201221 16:21:38.911"></status>
</kw>
<msg timestamp="20201221 16:21:38.915" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201221 16:21:38.915" starttime="20201221 16:21:38.910"></status>
</kw>
<msg timestamp="20201221 16:21:38.915" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201221 16:21:38.915" starttime="20201221 16:21:38.909"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:38.918" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:41.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:21:41.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:21:41.132" starttime="20201221 16:21:38.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:41.133" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:21:41.133" starttime="20201221 16:21:41.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:21:41.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:21:41.134" starttime="20201221 16:21:41.133"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:41.134" starttime="20201221 16:21:38.916"></status>
</kw>
<msg timestamp="20201221 16:21:41.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:21:41.134" starttime="20201221 16:21:38.915"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:41.135" starttime="20201221 16:21:38.915"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:41.139" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:47.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:21:47.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:21:47.050" starttime="20201221 16:21:41.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:47.051" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:21:47.052" starttime="20201221 16:21:47.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:21:47.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:21:47.052" starttime="20201221 16:21:47.052"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:47.053" starttime="20201221 16:21:41.136"></status>
</kw>
<msg timestamp="20201221 16:21:47.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:21:47.053" starttime="20201221 16:21:41.136"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:47.053" starttime="20201221 16:21:41.135"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:47.057" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:50.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:21:50.936" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:21:50.936" starttime="20201221 16:21:47.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:50.938" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:21:50.938" starttime="20201221 16:21:50.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:21:50.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:21:50.939" starttime="20201221 16:21:50.938"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:50.939" starttime="20201221 16:21:47.054"></status>
</kw>
<msg timestamp="20201221 16:21:50.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:21:50.939" starttime="20201221 16:21:47.054"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:50.939" starttime="20201221 16:21:47.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:50.943" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:54.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:21:54.977" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:21:54.977" starttime="20201221 16:21:50.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:54.978" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:21:54.978" starttime="20201221 16:21:54.978"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:21:54.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:21:54.979" starttime="20201221 16:21:54.979"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:54.979" starttime="20201221 16:21:50.940"></status>
</kw>
<msg timestamp="20201221 16:21:54.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:21:54.980" starttime="20201221 16:21:50.940"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:54.980" starttime="20201221 16:21:50.939"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 16:21:54.980" critical="yes" starttime="20201221 16:21:30.004"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:21:54.985" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:21:54.985" starttime="20201221 16:21:54.984"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:21:54.985" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:21:54.986" starttime="20201221 16:21:54.985"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:54.986" starttime="20201221 16:21:54.984"></status>
</kw>
<msg timestamp="20201221 16:21:54.986" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:21:54.986" starttime="20201221 16:21:54.983"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:54.986" starttime="20201221 16:21:54.983"></status>
</kw>
<msg timestamp="20201221 16:21:54.986" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 16:21:54.986" starttime="20201221 16:21:54.982"></status>
</kw>
<msg timestamp="20201221 16:21:54.986" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 16:21:54.987" starttime="20201221 16:21:54.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:54.990" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:57.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:21:57.237" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:21:57.237" starttime="20201221 16:21:54.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:57.238" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:21:57.238" starttime="20201221 16:21:57.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:21:57.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:21:57.239" starttime="20201221 16:21:57.238"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:57.239" starttime="20201221 16:21:54.987"></status>
</kw>
<msg timestamp="20201221 16:21:57.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:21:57.239" starttime="20201221 16:21:54.987"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:57.240" starttime="20201221 16:21:54.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:21:57.243" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:21:59.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:21:59.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:21:59.385" starttime="20201221 16:21:57.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:21:59.386" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:21:59.386" starttime="20201221 16:21:59.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:21:59.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:21:59.386" starttime="20201221 16:21:59.386"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:59.387" starttime="20201221 16:21:57.241"></status>
</kw>
<msg timestamp="20201221 16:21:59.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:21:59.387" starttime="20201221 16:21:57.240"></status>
</kw>
<status status="PASS" endtime="20201221 16:21:59.387" starttime="20201221 16:21:57.240"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 16:21:59.387" critical="yes" starttime="20201221 16:21:54.981"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201221 16:21:59.389" starttime="20201221 16:21:29.949"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:23:40.984" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:23:40.984" starttime="20201221 16:23:40.984"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:23:40.985" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:23:40.985" starttime="20201221 16:23:40.984"></status>
</kw>
<status status="PASS" endtime="20201221 16:23:40.985" starttime="20201221 16:23:40.983"></status>
</kw>
<msg timestamp="20201221 16:23:40.985" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:23:40.985" starttime="20201221 16:23:40.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:23:40.986" starttime="20201221 16:23:40.986"></status>
</kw>
<msg timestamp="20201221 16:23:40.986" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 16:23:40.986" starttime="20201221 16:23:40.985"></status>
</kw>
<status status="PASS" endtime="20201221 16:23:40.987" starttime="20201221 16:23:40.982"></status>
</kw>
<msg timestamp="20201221 16:23:40.987" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:23:40.987" starttime="20201221 16:23:40.982"></status>
</kw>
<msg timestamp="20201221 16:23:40.987" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:23:40.987" starttime="20201221 16:23:40.981"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:23:40.987" level="INFO">${random} = 71583</msg>
<status status="PASS" endtime="20201221 16:23:40.987" starttime="20201221 16:23:40.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:23:40.992" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-71583 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:23:44.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:23:44.404" level="INFO">${output} = 2020-12-21 16:23:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:23:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 ...</msg>
<status status="PASS" endtime="20201221 16:23:44.404" starttime="20201221 16:23:40.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:23:44.405" level="INFO">2020-12-21 16:23:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:23:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 16:23:43 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-21 16:23:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:23:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-299BCB1B32AE-&gt;35c961fa-69cd-4e90-a502-1525c805e3d0
2020-12-21 16:23:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201221 16:23:44.405" starttime="20201221 16:23:44.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:23:44.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:23:44.406" starttime="20201221 16:23:44.405"></status>
</kw>
<status status="PASS" endtime="20201221 16:23:44.406" starttime="20201221 16:23:40.988"></status>
</kw>
<msg timestamp="20201221 16:23:44.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:23:44.406" starttime="20201221 16:23:40.988"></status>
</kw>
<msg timestamp="20201221 16:23:44.406" level="INFO">${result} = 2020-12-21 16:23:42 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:23:43 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 ...</msg>
<status status="PASS" endtime="20201221 16:23:44.406" starttime="20201221 16:23:40.988"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:23:44.411" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:23:46.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:23:46.206" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-21 16:22 ofs://om/volume1/bucket1/ozone-60755
-rw-...</msg>
<status status="PASS" endtime="20201221 16:23:46.206" starttime="20201221 16:23:44.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:23:46.207" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-21 16:22 ofs://om/volume1/bucket1/ozone-60755
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-21 16:23 ofs://om/volume1/bucket1/ozone-71583
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:21 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:23 ofs://om/volume1/bucket1/wordcount-04.txt</msg>
<status status="PASS" endtime="20201221 16:23:46.207" starttime="20201221 16:23:46.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:23:46.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:23:46.208" starttime="20201221 16:23:46.207"></status>
</kw>
<status status="PASS" endtime="20201221 16:23:46.208" starttime="20201221 16:23:44.409"></status>
</kw>
<msg timestamp="20201221 16:23:46.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:23:46.208" starttime="20201221 16:23:44.408"></status>
</kw>
<msg timestamp="20201221 16:23:46.209" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-21 16:22 ofs://om/volume1/bucket1/ozone-60755
-rw-...</msg>
<status status="PASS" endtime="20201221 16:23:46.209" starttime="20201221 16:23:44.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:23:46.209" starttime="20201221 16:23:46.209"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 16:23:46.209" critical="yes" starttime="20201221 16:23:40.980"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201221 16:23:46.211" starttime="20201221 16:23:40.927"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:22:04.625" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:22:04.625" starttime="20201221 16:22:04.624"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:22:04.625" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:22:04.626" starttime="20201221 16:22:04.625"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:04.626" starttime="20201221 16:22:04.624"></status>
</kw>
<msg timestamp="20201221 16:22:04.626" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:22:04.626" starttime="20201221 16:22:04.623"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:04.626" starttime="20201221 16:22:04.623"></status>
</kw>
<msg timestamp="20201221 16:22:04.626" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:22:04.626" starttime="20201221 16:22:04.622"></status>
</kw>
<msg timestamp="20201221 16:22:04.626" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:22:04.627" starttime="20201221 16:22:04.621"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:22:04.627" level="INFO">${random} = 60755</msg>
<status status="PASS" endtime="20201221 16:22:04.627" starttime="20201221 16:22:04.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:22:04.632" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-60755 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:22:08.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:22:08.135" level="INFO">${output} = 2020-12-21 16:22:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:22:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 ...</msg>
<status status="PASS" endtime="20201221 16:22:08.135" starttime="20201221 16:22:04.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:22:08.136" level="INFO">2020-12-21 16:22:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:22:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 16:22:06 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-21 16:22:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:22:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8CA0DE84DF5A-&gt;35c961fa-69cd-4e90-a502-1525c805e3d0
2020-12-21 16:22:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201221 16:22:08.136" starttime="20201221 16:22:08.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:22:08.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:22:08.137" starttime="20201221 16:22:08.136"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:08.137" starttime="20201221 16:22:04.628"></status>
</kw>
<msg timestamp="20201221 16:22:08.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:22:08.137" starttime="20201221 16:22:04.628"></status>
</kw>
<msg timestamp="20201221 16:22:08.137" level="INFO">${result} = 2020-12-21 16:22:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:22:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 ...</msg>
<status status="PASS" endtime="20201221 16:22:08.137" starttime="20201221 16:22:04.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:22:08.142" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:22:09.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:22:09.854" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-21 16:22 o3fs://bucket1.volume1.om/ozone-60755
dr...</msg>
<status status="PASS" endtime="20201221 16:22:09.854" starttime="20201221 16:22:08.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:22:09.855" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-21 16:22 o3fs://bucket1.volume1.om/ozone-60755
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:21 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 16:22:09.855" starttime="20201221 16:22:09.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:22:09.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:22:09.856" starttime="20201221 16:22:09.855"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:09.856" starttime="20201221 16:22:08.139"></status>
</kw>
<msg timestamp="20201221 16:22:09.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:22:09.857" starttime="20201221 16:22:08.138"></status>
</kw>
<msg timestamp="20201221 16:22:09.857" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-21 16:22 o3fs://bucket1.volume1.om/ozone-60755
dr...</msg>
<status status="PASS" endtime="20201221 16:22:09.857" starttime="20201221 16:22:08.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:22:09.857" starttime="20201221 16:22:09.857"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 16:22:09.858" critical="yes" starttime="20201221 16:22:04.621"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201221 16:22:09.859" starttime="20201221 16:22:04.568"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:23:51.076" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:23:51.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:23:51.083" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:23:51.083" starttime="20201221 16:23:51.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:23:51.084" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:23:51.084" starttime="20201221 16:23:51.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:23:51.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:23:51.085" starttime="20201221 16:23:51.084"></status>
</kw>
<status status="PASS" endtime="20201221 16:23:51.085" starttime="20201221 16:23:51.072"></status>
</kw>
<msg timestamp="20201221 16:23:51.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:23:51.085" starttime="20201221 16:23:51.072"></status>
</kw>
<msg timestamp="20201221 16:23:51.085" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:23:51.085" starttime="20201221 16:23:51.071"></status>
</kw>
<msg timestamp="20201221 16:23:51.086" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:23:51.086" starttime="20201221 16:23:51.071"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:23:51.090" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:23:51.090" starttime="20201221 16:23:51.090"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:23:51.091" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:23:51.091" starttime="20201221 16:23:51.091"></status>
</kw>
<status status="PASS" endtime="20201221 16:23:51.091" starttime="20201221 16:23:51.088"></status>
</kw>
<msg timestamp="20201221 16:23:51.091" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:23:51.092" starttime="20201221 16:23:51.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:23:51.093" starttime="20201221 16:23:51.092"></status>
</kw>
<msg timestamp="20201221 16:23:51.093" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 16:23:51.093" starttime="20201221 16:23:51.092"></status>
</kw>
<status status="PASS" endtime="20201221 16:23:51.093" starttime="20201221 16:23:51.087"></status>
</kw>
<msg timestamp="20201221 16:23:51.093" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:23:51.093" starttime="20201221 16:23:51.087"></status>
</kw>
<msg timestamp="20201221 16:23:51.093" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:23:51.093" starttime="20201221 16:23:51.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:23:51.097" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:24:25.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:24:25.335" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:23:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:23:53 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201221 16:24:25.335" starttime="20201221 16:23:51.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:24:25.336" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:23:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:23:53 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 16:23:53 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-21 16:23:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:23:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A57C6B45D46B-&gt;35c961fa-69cd-4e90-a502-1525c805e3d0
2020-12-21 16:23:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-21 16:23:54 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-21 16:23:54 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 16:23:54 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-21 16:23:54 INFO  JobSubmitter:198 - number of splits:3
2020-12-21 16:23:55 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608567653521_0003
2020-12-21 16:23:55 INFO  YarnClientImpl:273 - Submitted application application_1608567653521_0003
2020-12-21 16:23:55 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608567653521_0003/
2020-12-21 16:23:55 INFO  Job:1339 - Running job: job_1608567653521_0003
2020-12-21 16:24:03 INFO  Job:1360 - Job job_1608567653521_0003 running in uber mode : false
2020-12-21 16:24:03 INFO  Job:1367 -  map 0% reduce 0%
2020-12-21 16:24:09 INFO  Job:1367 -  map 33% reduce 0%
2020-12-21 16:24:14 INFO  Job:1367 -  map 67% reduce 0%
2020-12-21 16:24:19 INFO  Job:1367 -  map 100% reduce 0%
2020-12-21 16:24:23 INFO  Job:1367 -  map 100% reduce 100%
2020-12-21 16:24:24 INFO  Job:1378 - Job job_1608567653521_0003 completed successfully
2020-12-21 16:24:24 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610709
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39832
		Total time spent by all reduces in occupied slots (ms)=14632
		Total time spent by all map tasks (ms)=9958
		Total time spent by all reduce tasks (ms)=3658
		Total vcore-milliseconds taken by all map tasks=9958
		Total vcore-milliseconds taken by all reduce tasks=3658
		Total megabyte-milliseconds taken by all map tasks=40787968
		Total megabyte-milliseconds taken by all reduce tasks=14983168
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=6280
		Physical memory (bytes) snapshot=1096884224
		Virtual memory (bytes) snapshot=15745875968
		Total committed heap usage (bytes)=1052770304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.42 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201221 16:24:25.336" starttime="20201221 16:24:25.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:24:25.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:24:25.337" starttime="20201221 16:24:25.336"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.337" starttime="20201221 16:23:51.094"></status>
</kw>
<msg timestamp="20201221 16:24:25.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:24:25.337" starttime="20201221 16:23:51.094"></status>
</kw>
<msg timestamp="20201221 16:24:25.338" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:23:53 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:23:53 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201221 16:24:25.338" starttime="20201221 16:23:51.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:24:25.338" starttime="20201221 16:24:25.338"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:24:25.339" critical="yes" starttime="20201221 16:23:51.070"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:24:25.344" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:24:25.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:24:25.350" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:24:25.350" starttime="20201221 16:24:25.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:24:25.351" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:24:25.351" starttime="20201221 16:24:25.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:24:25.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:24:25.352" starttime="20201221 16:24:25.351"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.352" starttime="20201221 16:24:25.341"></status>
</kw>
<msg timestamp="20201221 16:24:25.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:24:25.353" starttime="20201221 16:24:25.341"></status>
</kw>
<msg timestamp="20201221 16:24:25.353" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:24:25.353" starttime="20201221 16:24:25.340"></status>
</kw>
<msg timestamp="20201221 16:24:25.354" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:24:25.354" starttime="20201221 16:24:25.340"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:24:25.354" level="INFO">${random} = 20</msg>
<status status="PASS" endtime="20201221 16:24:25.354" starttime="20201221 16:24:25.354"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:24:25.358" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:24:25.358" starttime="20201221 16:24:25.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:24:25.359" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:24:25.359" starttime="20201221 16:24:25.359"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.359" starttime="20201221 16:24:25.358"></status>
</kw>
<msg timestamp="20201221 16:24:25.359" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:24:25.359" starttime="20201221 16:24:25.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:24:25.360" starttime="20201221 16:24:25.360"></status>
</kw>
<msg timestamp="20201221 16:24:25.360" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 16:24:25.360" starttime="20201221 16:24:25.360"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.361" starttime="20201221 16:24:25.356"></status>
</kw>
<msg timestamp="20201221 16:24:25.361" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:24:25.361" starttime="20201221 16:24:25.355"></status>
</kw>
<msg timestamp="20201221 16:24:25.361" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:24:25.361" starttime="20201221 16:24:25.355"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:24:25.365" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:24:25.365" starttime="20201221 16:24:25.364"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:24:25.365" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:24:25.365" starttime="20201221 16:24:25.365"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.365" starttime="20201221 16:24:25.364"></status>
</kw>
<msg timestamp="20201221 16:24:25.365" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:24:25.365" starttime="20201221 16:24:25.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:24:25.367" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201221 16:24:25.367" starttime="20201221 16:24:25.366"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:24:25.368" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201221 16:24:25.368" starttime="20201221 16:24:25.367"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.368" starttime="20201221 16:24:25.366"></status>
</kw>
<msg timestamp="20201221 16:24:25.368" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201221 16:24:25.368" starttime="20201221 16:24:25.366"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.368" starttime="20201221 16:24:25.362"></status>
</kw>
<msg timestamp="20201221 16:24:25.368" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201221 16:24:25.368" starttime="20201221 16:24:25.362"></status>
</kw>
<msg timestamp="20201221 16:24:25.369" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201221 16:24:25.369" starttime="20201221 16:24:25.361"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:24:25.372" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:24:25.372" starttime="20201221 16:24:25.372"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:24:25.373" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:24:25.373" starttime="20201221 16:24:25.372"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.373" starttime="20201221 16:24:25.371"></status>
</kw>
<msg timestamp="20201221 16:24:25.373" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:24:25.373" starttime="20201221 16:24:25.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:24:25.374" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201221 16:24:25.375" starttime="20201221 16:24:25.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:24:25.375" level="INFO">${result} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201221 16:24:25.375" starttime="20201221 16:24:25.375"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.375" starttime="20201221 16:24:25.374"></status>
</kw>
<msg timestamp="20201221 16:24:25.375" level="INFO">${path_with_leading} = /wordcount-20.txt</msg>
<status status="PASS" endtime="20201221 16:24:25.375" starttime="20201221 16:24:25.373"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:25.376" starttime="20201221 16:24:25.370"></status>
</kw>
<msg timestamp="20201221 16:24:25.376" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201221 16:24:25.376" starttime="20201221 16:24:25.369"></status>
</kw>
<msg timestamp="20201221 16:24:25.376" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201221 16:24:25.376" starttime="20201221 16:24:25.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:24:25.380" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-20.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:24:59.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:24:59.188" level="INFO">${output} = 2020-12-21 16:24:27 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-21 16:24:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201221 16:24:59.188" starttime="20201221 16:24:25.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:24:59.189" level="INFO">2020-12-21 16:24:27 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-21 16:24:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 16:24:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:24:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 16:24:27 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-21 16:24:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:24:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C687AB292380-&gt;35c961fa-69cd-4e90-a502-1525c805e3d0
2020-12-21 16:24:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 16:24:28 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-21 16:24:28 INFO  JobSubmitter:198 - number of splits:3
2020-12-21 16:24:29 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608567653521_0004
2020-12-21 16:24:29 INFO  YarnClientImpl:273 - Submitted application application_1608567653521_0004
2020-12-21 16:24:29 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608567653521_0004/
2020-12-21 16:24:29 INFO  Job:1339 - Running job: job_1608567653521_0004
2020-12-21 16:24:37 INFO  Job:1360 - Job job_1608567653521_0004 running in uber mode : false
2020-12-21 16:24:37 INFO  Job:1367 -  map 0% reduce 0%
2020-12-21 16:24:43 INFO  Job:1367 -  map 33% reduce 0%
2020-12-21 16:24:48 INFO  Job:1367 -  map 67% reduce 0%
2020-12-21 16:24:53 INFO  Job:1367 -  map 100% reduce 0%
2020-12-21 16:24:57 INFO  Job:1367 -  map 100% reduce 100%
2020-12-21 16:24:58 INFO  Job:1378 - Job job_1608567653521_0004 completed successfully
2020-12-21 16:24:58 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673471
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40276
		Total time spent by all reduces in occupied slots (ms)=14832
		Total time spent by all map tasks (ms)=10069
		Total time spent by all reduce tasks (ms)=3708
		Total vcore-milliseconds taken by all map tasks=10069
		Total vcore-milliseconds taken by all reduce tasks=3708
		Total megabyte-milliseconds taken by all map tasks=41242624
		Total megabyte-milliseconds taken by all reduce tasks=15187968
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=662
		CPU time spent (ms)=7550
		Physical memory (bytes) snapshot=1123209216
		Virtual memory (bytes) snapshot=15771111424
		Total committed heap usage (bytes)=1048051712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201221 16:24:59.190" starttime="20201221 16:24:59.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:24:59.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:24:59.190" starttime="20201221 16:24:59.190"></status>
</kw>
<status status="PASS" endtime="20201221 16:24:59.191" starttime="20201221 16:24:25.377"></status>
</kw>
<msg timestamp="20201221 16:24:59.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:24:59.191" starttime="20201221 16:24:25.377"></status>
</kw>
<msg timestamp="20201221 16:24:59.191" level="INFO">${output} = 2020-12-21 16:24:27 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-21 16:24:27 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201221 16:24:59.191" starttime="20201221 16:24:25.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201221 16:24:59.192" starttime="20201221 16:24:59.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:24:59.193" starttime="20201221 16:24:59.192"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:24:59.193" critical="yes" starttime="20201221 16:24:25.339"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201221 16:24:59.194" starttime="20201221 16:23:51.018"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:22:14.746" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:22:14.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:22:14.752" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:22:14.752" starttime="20201221 16:22:14.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:22:14.753" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:22:14.753" starttime="20201221 16:22:14.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:22:14.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:22:14.753" starttime="20201221 16:22:14.753"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:14.754" starttime="20201221 16:22:14.742"></status>
</kw>
<msg timestamp="20201221 16:22:14.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:22:14.754" starttime="20201221 16:22:14.741"></status>
</kw>
<msg timestamp="20201221 16:22:14.754" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:22:14.754" starttime="20201221 16:22:14.741"></status>
</kw>
<msg timestamp="20201221 16:22:14.754" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:22:14.754" starttime="20201221 16:22:14.741"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:22:14.759" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:22:14.759" starttime="20201221 16:22:14.758"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:22:14.759" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:22:14.759" starttime="20201221 16:22:14.759"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:14.760" starttime="20201221 16:22:14.757"></status>
</kw>
<msg timestamp="20201221 16:22:14.760" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:22:14.760" starttime="20201221 16:22:14.756"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:14.760" starttime="20201221 16:22:14.756"></status>
</kw>
<msg timestamp="20201221 16:22:14.760" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:22:14.760" starttime="20201221 16:22:14.755"></status>
</kw>
<msg timestamp="20201221 16:22:14.760" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:22:14.760" starttime="20201221 16:22:14.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:22:14.764" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:22:54.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:22:54.318" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:22:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:22:16 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201221 16:22:54.318" starttime="20201221 16:22:14.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:22:54.319" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:22:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:22:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 16:22:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-21 16:22:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:22:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-716AFEE54EC7-&gt;35c961fa-69cd-4e90-a502-1525c805e3d0
2020-12-21 16:22:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-21 16:22:20 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-21 16:22:21 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-21 16:22:21 INFO  JobSubmitter:198 - number of splits:3
2020-12-21 16:22:21 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608567653521_0001
2020-12-21 16:22:22 INFO  YarnClientImpl:273 - Submitted application application_1608567653521_0001
2020-12-21 16:22:22 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608567653521_0001/
2020-12-21 16:22:22 INFO  Job:1339 - Running job: job_1608567653521_0001
2020-12-21 16:22:31 INFO  Job:1360 - Job job_1608567653521_0001 running in uber mode : false
2020-12-21 16:22:31 INFO  Job:1367 -  map 0% reduce 0%
2020-12-21 16:22:38 INFO  Job:1367 -  map 33% reduce 0%
2020-12-21 16:22:43 INFO  Job:1367 -  map 67% reduce 0%
2020-12-21 16:22:48 INFO  Job:1367 -  map 100% reduce 0%
2020-12-21 16:22:52 INFO  Job:1367 -  map 100% reduce 100%
2020-12-21 16:22:53 INFO  Job:1378 - Job job_1608567653521_0001 completed successfully
2020-12-21 16:22:53 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42400
		Total time spent by all reduces in occupied slots (ms)=15312
		Total time spent by all map tasks (ms)=10600
		Total time spent by all reduce tasks (ms)=3828
		Total vcore-milliseconds taken by all map tasks=10600
		Total vcore-milliseconds taken by all reduce tasks=3828
		Total megabyte-milliseconds taken by all map tasks=43417600
		Total megabyte-milliseconds taken by all reduce tasks=15679488
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=713
		CPU time spent (ms)=7090
		Physical memory (bytes) snapshot=1168269312
		Virtual memory (bytes) snapshot=15795933184
		Total committed heap usage (bytes)=1018167296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.169 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201221 16:22:54.319" starttime="20201221 16:22:54.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:22:54.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:22:54.320" starttime="20201221 16:22:54.320"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:54.320" starttime="20201221 16:22:14.761"></status>
</kw>
<msg timestamp="20201221 16:22:54.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:22:54.321" starttime="20201221 16:22:14.761"></status>
</kw>
<msg timestamp="20201221 16:22:54.321" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:22:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:22:16 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201221 16:22:54.321" starttime="20201221 16:22:14.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:22:54.322" starttime="20201221 16:22:54.321"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:22:54.322" critical="yes" starttime="20201221 16:22:14.739"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:22:54.327" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:22:54.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:22:54.341" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:22:54.341" starttime="20201221 16:22:54.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:22:54.342" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:22:54.342" starttime="20201221 16:22:54.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:22:54.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:22:54.343" starttime="20201221 16:22:54.342"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:54.343" starttime="20201221 16:22:54.325"></status>
</kw>
<msg timestamp="20201221 16:22:54.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:22:54.344" starttime="20201221 16:22:54.324"></status>
</kw>
<msg timestamp="20201221 16:22:54.344" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:22:54.344" starttime="20201221 16:22:54.324"></status>
</kw>
<msg timestamp="20201221 16:22:54.344" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201221 16:22:54.344" starttime="20201221 16:22:54.324"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:22:54.345" level="INFO">${random} = 04</msg>
<status status="PASS" endtime="20201221 16:22:54.345" starttime="20201221 16:22:54.344"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:22:54.349" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:22:54.349" starttime="20201221 16:22:54.348"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:22:54.349" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:22:54.349" starttime="20201221 16:22:54.349"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:54.350" starttime="20201221 16:22:54.348"></status>
</kw>
<msg timestamp="20201221 16:22:54.350" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:22:54.350" starttime="20201221 16:22:54.347"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:54.350" starttime="20201221 16:22:54.346"></status>
</kw>
<msg timestamp="20201221 16:22:54.350" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:22:54.350" starttime="20201221 16:22:54.346"></status>
</kw>
<msg timestamp="20201221 16:22:54.350" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:22:54.350" starttime="20201221 16:22:54.345"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:22:54.354" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:22:54.354" starttime="20201221 16:22:54.353"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:22:54.354" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:22:54.354" starttime="20201221 16:22:54.354"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:54.355" starttime="20201221 16:22:54.353"></status>
</kw>
<msg timestamp="20201221 16:22:54.355" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:22:54.355" starttime="20201221 16:22:54.352"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:54.355" starttime="20201221 16:22:54.352"></status>
</kw>
<msg timestamp="20201221 16:22:54.355" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201221 16:22:54.355" starttime="20201221 16:22:54.351"></status>
</kw>
<msg timestamp="20201221 16:22:54.355" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201221 16:22:54.355" starttime="20201221 16:22:54.351"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:22:54.359" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:22:54.359" starttime="20201221 16:22:54.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:22:54.359" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:22:54.359" starttime="20201221 16:22:54.359"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:54.359" starttime="20201221 16:22:54.358"></status>
</kw>
<msg timestamp="20201221 16:22:54.359" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:22:54.359" starttime="20201221 16:22:54.357"></status>
</kw>
<status status="PASS" endtime="20201221 16:22:54.360" starttime="20201221 16:22:54.357"></status>
</kw>
<msg timestamp="20201221 16:22:54.360" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-04.txt</msg>
<status status="PASS" endtime="20201221 16:22:54.360" starttime="20201221 16:22:54.356"></status>
</kw>
<msg timestamp="20201221 16:22:54.360" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-04.txt</msg>
<status status="PASS" endtime="20201221 16:22:54.360" starttime="20201221 16:22:54.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:22:54.364" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-04.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:23:36.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:23:36.024" level="INFO">${output} = 2020-12-21 16:22:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-21 16:22:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201221 16:23:36.024" starttime="20201221 16:22:54.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:23:36.026" level="INFO">2020-12-21 16:22:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-21 16:22:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 16:22:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:22:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-21 16:22:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-21 16:22:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:22:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6DA6946CD1CF-&gt;35c961fa-69cd-4e90-a502-1525c805e3d0
2020-12-21 16:22:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 16:22:57 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-21 16:23:02 INFO  JobSubmitter:198 - number of splits:3
2020-12-21 16:23:02 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608567653521_0002
2020-12-21 16:23:03 INFO  YarnClientImpl:273 - Submitted application application_1608567653521_0002
2020-12-21 16:23:03 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608567653521_0002/
2020-12-21 16:23:03 INFO  Job:1339 - Running job: job_1608567653521_0002
2020-12-21 16:23:10 INFO  Job:1360 - Job job_1608567653521_0002 running in uber mode : false
2020-12-21 16:23:10 INFO  Job:1367 -  map 0% reduce 0%
2020-12-21 16:23:17 INFO  Job:1367 -  map 33% reduce 0%
2020-12-21 16:23:22 INFO  Job:1367 -  map 67% reduce 0%
2020-12-21 16:23:27 INFO  Job:1367 -  map 100% reduce 0%
2020-12-21 16:23:32 INFO  Job:1367 -  map 100% reduce 100%
2020-12-21 16:23:35 INFO  Job:1378 - Job job_1608567653521_0002 completed successfully
2020-12-21 16:23:35 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673555
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42180
		Total time spent by all reduces in occupied slots (ms)=15320
		Total time spent by all map tasks (ms)=10545
		Total time spent by all reduce tasks (ms)=3830
		Total vcore-milliseconds taken by all map tasks=10545
		Total vcore-milliseconds taken by all reduce tasks=3830
		Total megabyte-milliseconds taken by all map tasks=43192320
		Total megabyte-milliseconds taken by all reduce tasks=15687680
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=603
		CPU time spent (ms)=7570
		Physical memory (bytes) snapshot=1164312576
		Virtual memory (bytes) snapshot=15788322816
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201221 16:23:36.026" starttime="20201221 16:23:36.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:23:36.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:23:36.027" starttime="20201221 16:23:36.026"></status>
</kw>
<status status="PASS" endtime="20201221 16:23:36.027" starttime="20201221 16:22:54.361"></status>
</kw>
<msg timestamp="20201221 16:23:36.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:23:36.027" starttime="20201221 16:22:54.361"></status>
</kw>
<msg timestamp="20201221 16:23:36.027" level="INFO">${output} = 2020-12-21 16:22:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-21 16:22:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201221 16:23:36.027" starttime="20201221 16:22:54.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201221 16:23:36.028" starttime="20201221 16:23:36.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:23:36.028" starttime="20201221 16:23:36.028"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:23:36.029" critical="yes" starttime="20201221 16:22:54.323"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201221 16:23:36.030" starttime="20201221 16:22:14.684"></status>
</suite>
<status status="PASS" elapsedtime="189537" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:10.333" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:12.793" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 16:26:12.793" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 16:26:12.793" starttime="20201221 16:26:10.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:12.794" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 16:26:12.794" starttime="20201221 16:26:12.793"></status>
</kw>
<msg timestamp="20201221 16:26:12.794" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 16:26:12.795" starttime="20201221 16:26:10.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:12.800" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:15.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:15.110" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:26:15.110" starttime="20201221 16:26:12.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:15.111" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:26:15.111" starttime="20201221 16:26:15.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:15.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:15.112" starttime="20201221 16:26:15.111"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:15.112" starttime="20201221 16:26:12.796"></status>
</kw>
<msg timestamp="20201221 16:26:15.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:15.112" starttime="20201221 16:26:12.796"></status>
</kw>
<msg timestamp="20201221 16:26:15.113" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201221 16:26:15.113" starttime="20201221 16:26:12.796"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201221 16:26:15.113" starttime="20201221 16:26:15.113"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:15.113" starttime="20201221 16:26:12.795"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:15.113" starttime="20201221 16:26:12.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:15.118" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:17.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:17.311" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:26:17.311" starttime="20201221 16:26:15.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:17.314" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:26:17.314" starttime="20201221 16:26:17.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:17.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:17.315" starttime="20201221 16:26:17.314"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:17.315" starttime="20201221 16:26:15.115"></status>
</kw>
<msg timestamp="20201221 16:26:17.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:17.315" starttime="20201221 16:26:15.115"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:17.315" starttime="20201221 16:26:15.114"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:17.316" starttime="20201221 16:26:15.114"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:17.316" starttime="20201221 16:26:15.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201221 16:26:17.316" starttime="20201221 16:26:17.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:17.320" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:19.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:19.616" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T16:26:17.192Z",
  "modificat...</msg>
<status status="PASS" endtime="20201221 16:26:19.616" starttime="20201221 16:26:17.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:19.617" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T16:26:17.192Z",
  "modificationTime" : "2020-12-21T16:26:17.192Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201221 16:26:19.618" starttime="20201221 16:26:19.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:19.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:19.618" starttime="20201221 16:26:19.618"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:19.618" starttime="20201221 16:26:17.317"></status>
</kw>
<msg timestamp="20201221 16:26:19.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:19.619" starttime="20201221 16:26:17.317"></status>
</kw>
<msg timestamp="20201221 16:26:19.619" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T16:26:17.192Z",
  "modificat...</msg>
<status status="PASS" endtime="20201221 16:26:19.619" starttime="20201221 16:26:17.316"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201221 16:26:19.619" starttime="20201221 16:26:19.619"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:26:19.623" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:26:19.623" starttime="20201221 16:26:19.623"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:26:19.624" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:26:19.624" starttime="20201221 16:26:19.623"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:19.624" starttime="20201221 16:26:19.622"></status>
</kw>
<msg timestamp="20201221 16:26:19.624" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:26:19.624" starttime="20201221 16:26:19.622"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:19.625" starttime="20201221 16:26:19.621"></status>
</kw>
<msg timestamp="20201221 16:26:19.625" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201221 16:26:19.625" starttime="20201221 16:26:19.620"></status>
</kw>
<msg timestamp="20201221 16:26:19.625" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201221 16:26:19.625" starttime="20201221 16:26:19.620"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:19.628" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:21.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:21.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:26:21.967" starttime="20201221 16:26:19.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:21.968" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:26:21.968" starttime="20201221 16:26:21.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:21.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:21.969" starttime="20201221 16:26:21.968"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:21.969" starttime="20201221 16:26:19.626"></status>
</kw>
<msg timestamp="20201221 16:26:21.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:21.969" starttime="20201221 16:26:19.626"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:21.970" starttime="20201221 16:26:19.625"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:21.973" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:27.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:27.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:26:27.240" starttime="20201221 16:26:21.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:27.242" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:26:27.242" starttime="20201221 16:26:27.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:27.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:27.242" starttime="20201221 16:26:27.242"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:27.243" starttime="20201221 16:26:21.971"></status>
</kw>
<msg timestamp="20201221 16:26:27.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:27.243" starttime="20201221 16:26:21.970"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:27.243" starttime="20201221 16:26:21.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:27.247" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:31.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:31.182" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:26:31.182" starttime="20201221 16:26:27.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:31.183" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:26:31.183" starttime="20201221 16:26:31.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:31.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:31.184" starttime="20201221 16:26:31.183"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:31.184" starttime="20201221 16:26:27.244"></status>
</kw>
<msg timestamp="20201221 16:26:31.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:31.184" starttime="20201221 16:26:27.244"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:31.184" starttime="20201221 16:26:27.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:31.188" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:35.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:35.026" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:26:35.026" starttime="20201221 16:26:31.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:35.027" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:26:35.027" starttime="20201221 16:26:35.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:35.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:35.028" starttime="20201221 16:26:35.027"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:35.028" starttime="20201221 16:26:31.185"></status>
</kw>
<msg timestamp="20201221 16:26:35.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:35.028" starttime="20201221 16:26:31.185"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:35.028" starttime="20201221 16:26:31.185"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 16:26:35.028" critical="yes" starttime="20201221 16:26:10.327"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:26:35.033" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:26:35.033" starttime="20201221 16:26:35.033"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:26:35.034" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:26:35.034" starttime="20201221 16:26:35.034"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:35.034" starttime="20201221 16:26:35.032"></status>
</kw>
<msg timestamp="20201221 16:26:35.035" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:26:35.035" starttime="20201221 16:26:35.032"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:35.035" starttime="20201221 16:26:35.031"></status>
</kw>
<msg timestamp="20201221 16:26:35.035" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 16:26:35.035" starttime="20201221 16:26:35.031"></status>
</kw>
<msg timestamp="20201221 16:26:35.035" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 16:26:35.035" starttime="20201221 16:26:35.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:35.039" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:37.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:37.268" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:26:37.268" starttime="20201221 16:26:35.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:37.270" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:26:37.270" starttime="20201221 16:26:37.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:37.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:37.271" starttime="20201221 16:26:37.271"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:37.271" starttime="20201221 16:26:35.036"></status>
</kw>
<msg timestamp="20201221 16:26:37.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:37.272" starttime="20201221 16:26:35.036"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:37.272" starttime="20201221 16:26:35.035"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:37.275" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:39.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:39.362" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:26:39.362" starttime="20201221 16:26:37.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:39.363" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:26:39.363" starttime="20201221 16:26:39.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:39.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:39.364" starttime="20201221 16:26:39.363"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:39.364" starttime="20201221 16:26:37.273"></status>
</kw>
<msg timestamp="20201221 16:26:39.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:39.365" starttime="20201221 16:26:37.273"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:39.365" starttime="20201221 16:26:37.272"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 16:26:39.365" critical="yes" starttime="20201221 16:26:35.029"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201221 16:26:39.366" starttime="20201221 16:26:10.266"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:28:19.307" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:28:19.307" starttime="20201221 16:28:19.306"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:28:19.307" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:28:19.307" starttime="20201221 16:28:19.307"></status>
</kw>
<status status="PASS" endtime="20201221 16:28:19.308" starttime="20201221 16:28:19.306"></status>
</kw>
<msg timestamp="20201221 16:28:19.308" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:28:19.308" starttime="20201221 16:28:19.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:28:19.309" starttime="20201221 16:28:19.308"></status>
</kw>
<msg timestamp="20201221 16:28:19.309" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 16:28:19.309" starttime="20201221 16:28:19.308"></status>
</kw>
<status status="PASS" endtime="20201221 16:28:19.309" starttime="20201221 16:28:19.305"></status>
</kw>
<msg timestamp="20201221 16:28:19.309" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:28:19.309" starttime="20201221 16:28:19.304"></status>
</kw>
<msg timestamp="20201221 16:28:19.309" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:28:19.309" starttime="20201221 16:28:19.303"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:28:19.310" level="INFO">${random} = 80375</msg>
<status status="PASS" endtime="20201221 16:28:19.310" starttime="20201221 16:28:19.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:28:19.315" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-80375 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:28:25.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:28:25.269" level="INFO">${output} = 2020-12-21 16:28:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:28:25.269" starttime="20201221 16:28:19.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:28:25.270" level="INFO">2020-12-21 16:28:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-21 16:28:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:28:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:28:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:28:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:28:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4B28B3BDE652-&gt;cba97c86-45a4-49ba-9c45-899e0d23a429
2020-12-21 16:28:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 16:28:24 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201221 16:28:25.271" starttime="20201221 16:28:25.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:28:25.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:28:25.271" starttime="20201221 16:28:25.271"></status>
</kw>
<status status="PASS" endtime="20201221 16:28:25.272" starttime="20201221 16:28:19.311"></status>
</kw>
<msg timestamp="20201221 16:28:25.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:28:25.272" starttime="20201221 16:28:19.311"></status>
</kw>
<msg timestamp="20201221 16:28:25.272" level="INFO">${result} = 2020-12-21 16:28:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:28:25.272" starttime="20201221 16:28:19.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:28:25.277" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:28:27.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:28:27.135" level="INFO">${output} = 2020-12-21 16:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:28:27.136" starttime="20201221 16:28:25.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:28:27.137" level="INFO">2020-12-21 16:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:26 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:26 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-21 16:26 ofs://om/volume1/bucket1/ozone-36956
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-21 16:28 ofs://om/volume1/bucket1/ozone-80375
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:26 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:27 ofs://om/volume1/bucket1/wordcount-97.txt
2020-12-21 16:28:27 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201221 16:28:27.137" starttime="20201221 16:28:27.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:28:27.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:28:27.137" starttime="20201221 16:28:27.137"></status>
</kw>
<status status="PASS" endtime="20201221 16:28:27.138" starttime="20201221 16:28:25.274"></status>
</kw>
<msg timestamp="20201221 16:28:27.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:28:27.138" starttime="20201221 16:28:25.274"></status>
</kw>
<msg timestamp="20201221 16:28:27.138" level="INFO">${result} = 2020-12-21 16:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:28:27.138" starttime="20201221 16:28:25.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:28:27.139" starttime="20201221 16:28:27.138"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 16:28:27.139" critical="yes" starttime="20201221 16:28:19.302"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201221 16:28:27.140" starttime="20201221 16:28:19.250"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:26:44.333" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:26:44.333" starttime="20201221 16:26:44.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:26:44.334" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:26:44.334" starttime="20201221 16:26:44.333"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:44.334" starttime="20201221 16:26:44.332"></status>
</kw>
<msg timestamp="20201221 16:26:44.334" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:26:44.334" starttime="20201221 16:26:44.332"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:44.334" starttime="20201221 16:26:44.331"></status>
</kw>
<msg timestamp="20201221 16:26:44.335" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:26:44.335" starttime="20201221 16:26:44.331"></status>
</kw>
<msg timestamp="20201221 16:26:44.335" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:26:44.335" starttime="20201221 16:26:44.330"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:26:44.335" level="INFO">${random} = 36956</msg>
<status status="PASS" endtime="20201221 16:26:44.335" starttime="20201221 16:26:44.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:44.340" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-36956 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:47.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:47.933" level="INFO">${output} = 2020-12-21 16:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:26:47.934" starttime="20201221 16:26:44.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:47.935" level="INFO">2020-12-21 16:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:46 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-21 16:26:46 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:26:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:26:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:26:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:26:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E1FE1ACD8BE1-&gt;cba97c86-45a4-49ba-9c45-899e0d23a429
2020-12-21 16:26:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 16:26:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201221 16:26:47.935" starttime="20201221 16:26:47.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:47.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:47.935" starttime="20201221 16:26:47.935"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:47.936" starttime="20201221 16:26:44.336"></status>
</kw>
<msg timestamp="20201221 16:26:47.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:47.936" starttime="20201221 16:26:44.336"></status>
</kw>
<msg timestamp="20201221 16:26:47.936" level="INFO">${result} = 2020-12-21 16:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:26:47.936" starttime="20201221 16:26:44.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:47.941" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:49.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:49.667" level="INFO">${output} = 2020-12-21 16:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:26:49.667" starttime="20201221 16:26:47.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:49.668" level="INFO">2020-12-21 16:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:49 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:26 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-21 16:26 o3fs://bucket1.volume1.om/ozone-36956
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:26 o3fs://bucket1.volume1.om/user
2020-12-21 16:26:49 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201221 16:26:49.668" starttime="20201221 16:26:49.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:49.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:49.669" starttime="20201221 16:26:49.669"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:49.669" starttime="20201221 16:26:47.938"></status>
</kw>
<msg timestamp="20201221 16:26:49.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:49.670" starttime="20201221 16:26:47.937"></status>
</kw>
<msg timestamp="20201221 16:26:49.670" level="INFO">${result} = 2020-12-21 16:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:26:49.670" starttime="20201221 16:26:47.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:26:49.671" starttime="20201221 16:26:49.670"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 16:26:49.671" critical="yes" starttime="20201221 16:26:44.329"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201221 16:26:49.672" starttime="20201221 16:26:44.275"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:28:32.023" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:28:32.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:28:32.028" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:28:32.029" starttime="20201221 16:28:32.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:28:32.030" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:28:32.030" starttime="20201221 16:28:32.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:28:32.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:28:32.030" starttime="20201221 16:28:32.030"></status>
</kw>
<status status="PASS" endtime="20201221 16:28:32.031" starttime="20201221 16:28:32.019"></status>
</kw>
<msg timestamp="20201221 16:28:32.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:28:32.031" starttime="20201221 16:28:32.019"></status>
</kw>
<msg timestamp="20201221 16:28:32.031" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:28:32.031" starttime="20201221 16:28:32.018"></status>
</kw>
<msg timestamp="20201221 16:28:32.031" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:28:32.031" starttime="20201221 16:28:32.018"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:28:32.036" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:28:32.036" starttime="20201221 16:28:32.035"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:28:32.037" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:28:32.037" starttime="20201221 16:28:32.036"></status>
</kw>
<status status="PASS" endtime="20201221 16:28:32.037" starttime="20201221 16:28:32.034"></status>
</kw>
<msg timestamp="20201221 16:28:32.037" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:28:32.037" starttime="20201221 16:28:32.033"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:28:32.038" starttime="20201221 16:28:32.037"></status>
</kw>
<msg timestamp="20201221 16:28:32.038" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 16:28:32.038" starttime="20201221 16:28:32.037"></status>
</kw>
<status status="PASS" endtime="20201221 16:28:32.038" starttime="20201221 16:28:32.033"></status>
</kw>
<msg timestamp="20201221 16:28:32.038" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:28:32.038" starttime="20201221 16:28:32.032"></status>
</kw>
<msg timestamp="20201221 16:28:32.039" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:28:32.039" starttime="20201221 16:28:32.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:28:32.042" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:29:13.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:29:13.113" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:28:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28...</msg>
<status status="PASS" endtime="20201221 16:29:13.113" starttime="20201221 16:28:32.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:29:13.115" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:28:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:34 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-21 16:28:34 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:28:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:28:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:28:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:28:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A04911AA01D5-&gt;cba97c86-45a4-49ba-9c45-899e0d23a429
2020-12-21 16:28:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-21 16:28:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-21 16:28:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 16:28:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 16:28:38 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 16:28:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608567943963_0003
2020-12-21 16:28:38 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-21 16:28:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:39 INFO  Configuration:2752 - resource-types.xml not found
2020-12-21 16:28:39 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-21 16:28:39 INFO  YarnClientImpl:324 - Submitted application application_1608567943963_0003
2020-12-21 16:28:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608567943963_0003/
2020-12-21 16:28:39 INFO  Job:1619 - Running job: job_1608567943963_0003
2020-12-21 16:28:47 INFO  Job:1640 - Job job_1608567943963_0003 running in uber mode : false
2020-12-21 16:28:47 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 16:28:54 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 16:28:59 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 16:29:04 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 16:29:11 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 16:29:12 INFO  Job:1658 - Job job_1608567943963_0003 completed successfully
2020-12-21 16:29:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016157
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41564
		Total time spent by all reduces in occupied slots (ms)=25288
		Total time spent by all map tasks (ms)=10391
		Total time spent by all reduce tasks (ms)=6322
		Total vcore-milliseconds taken by all map tasks=10391
		Total vcore-milliseconds taken by all reduce tasks=6322
		Total megabyte-milliseconds taken by all map tasks=42561536
		Total megabyte-milliseconds taken by all reduce tasks=25894912
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=627
		CPU time spent (ms)=6810
		Physical memory (bytes) snapshot=1215860736
		Virtual memory (bytes) snapshot=15785537536
		Total committed heap usage (bytes)=1062731776
		Peak Map Physical memory (bytes)=310628352
		Peak Map Virtual memory (bytes)=3945074688
		Peak Reduce Physical memory (bytes)=303448064
		Peak Reduce Virtual memory (bytes)=3966889984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.26 seconds
2020-12-21 16:29:12 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-21 16:29:12 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201221 16:29:13.115" starttime="20201221 16:29:13.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:29:13.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:29:13.116" starttime="20201221 16:29:13.115"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.116" starttime="20201221 16:28:32.040"></status>
</kw>
<msg timestamp="20201221 16:29:13.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:29:13.116" starttime="20201221 16:28:32.039"></status>
</kw>
<msg timestamp="20201221 16:29:13.117" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:28:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28...</msg>
<status status="PASS" endtime="20201221 16:29:13.117" starttime="20201221 16:28:32.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:29:13.117" starttime="20201221 16:29:13.117"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:29:13.117" critical="yes" starttime="20201221 16:28:32.017"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:29:13.123" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:29:13.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:29:13.129" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:29:13.129" starttime="20201221 16:29:13.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:29:13.130" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:29:13.130" starttime="20201221 16:29:13.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:29:13.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:29:13.130" starttime="20201221 16:29:13.130"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.131" starttime="20201221 16:29:13.120"></status>
</kw>
<msg timestamp="20201221 16:29:13.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:29:13.131" starttime="20201221 16:29:13.120"></status>
</kw>
<msg timestamp="20201221 16:29:13.131" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:29:13.131" starttime="20201221 16:29:13.119"></status>
</kw>
<msg timestamp="20201221 16:29:13.131" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:29:13.132" starttime="20201221 16:29:13.119"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:29:13.132" level="INFO">${random} = 95</msg>
<status status="PASS" endtime="20201221 16:29:13.132" starttime="20201221 16:29:13.132"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:29:13.137" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:29:13.137" starttime="20201221 16:29:13.136"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:29:13.137" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:29:13.137" starttime="20201221 16:29:13.137"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.138" starttime="20201221 16:29:13.136"></status>
</kw>
<msg timestamp="20201221 16:29:13.138" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:29:13.138" starttime="20201221 16:29:13.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:29:13.139" starttime="20201221 16:29:13.138"></status>
</kw>
<msg timestamp="20201221 16:29:13.139" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 16:29:13.139" starttime="20201221 16:29:13.138"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.139" starttime="20201221 16:29:13.134"></status>
</kw>
<msg timestamp="20201221 16:29:13.139" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:29:13.139" starttime="20201221 16:29:13.133"></status>
</kw>
<msg timestamp="20201221 16:29:13.140" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:29:13.140" starttime="20201221 16:29:13.132"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:29:13.143" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:29:13.143" starttime="20201221 16:29:13.143"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:29:13.144" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:29:13.144" starttime="20201221 16:29:13.143"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.144" starttime="20201221 16:29:13.142"></status>
</kw>
<msg timestamp="20201221 16:29:13.144" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:29:13.144" starttime="20201221 16:29:13.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:29:13.146" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201221 16:29:13.146" starttime="20201221 16:29:13.145"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:29:13.146" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201221 16:29:13.146" starttime="20201221 16:29:13.146"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.146" starttime="20201221 16:29:13.145"></status>
</kw>
<msg timestamp="20201221 16:29:13.147" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201221 16:29:13.147" starttime="20201221 16:29:13.144"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.147" starttime="20201221 16:29:13.141"></status>
</kw>
<msg timestamp="20201221 16:29:13.147" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201221 16:29:13.147" starttime="20201221 16:29:13.140"></status>
</kw>
<msg timestamp="20201221 16:29:13.147" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201221 16:29:13.147" starttime="20201221 16:29:13.140"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:29:13.150" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:29:13.151" starttime="20201221 16:29:13.150"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:29:13.151" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:29:13.151" starttime="20201221 16:29:13.151"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.151" starttime="20201221 16:29:13.150"></status>
</kw>
<msg timestamp="20201221 16:29:13.151" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:29:13.151" starttime="20201221 16:29:13.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:29:13.153" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201221 16:29:13.153" starttime="20201221 16:29:13.152"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:29:13.153" level="INFO">${result} = /wordcount-95.txt</msg>
<status status="PASS" endtime="20201221 16:29:13.154" starttime="20201221 16:29:13.153"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.154" starttime="20201221 16:29:13.152"></status>
</kw>
<msg timestamp="20201221 16:29:13.154" level="INFO">${path_with_leading} = /wordcount-95.txt</msg>
<status status="PASS" endtime="20201221 16:29:13.154" starttime="20201221 16:29:13.152"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:13.154" starttime="20201221 16:29:13.149"></status>
</kw>
<msg timestamp="20201221 16:29:13.154" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-95.txt</msg>
<status status="PASS" endtime="20201221 16:29:13.154" starttime="20201221 16:29:13.148"></status>
</kw>
<msg timestamp="20201221 16:29:13.154" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-95.txt</msg>
<status status="PASS" endtime="20201221 16:29:13.155" starttime="20201221 16:29:13.147"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:29:13.158" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-95.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:29:51.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:29:51.665" level="INFO">${output} = 2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:29:51.665" starttime="20201221 16:29:13.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:29:51.666" level="INFO">2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-21 16:29:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 16:29:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-21 16:29:15 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:29:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:29:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:29:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:29:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-67FF4B15381E-&gt;cba97c86-45a4-49ba-9c45-899e0d23a429
2020-12-21 16:29:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 16:29:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 16:29:19 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 16:29:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608567943963_0004
2020-12-21 16:29:19 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-21 16:29:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:19 INFO  Configuration:2752 - resource-types.xml not found
2020-12-21 16:29:19 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-21 16:29:19 INFO  YarnClientImpl:324 - Submitted application application_1608567943963_0004
2020-12-21 16:29:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608567943963_0004/
2020-12-21 16:29:19 INFO  Job:1619 - Running job: job_1608567943963_0004
2020-12-21 16:29:26 INFO  Job:1640 - Job job_1608567943963_0004 running in uber mode : false
2020-12-21 16:29:26 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 16:29:34 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 16:29:40 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 16:29:46 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 16:29:50 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 16:29:51 INFO  Job:1658 - Job job_1608567943963_0004 completed successfully
2020-12-21 16:29:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078807
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41900
		Total time spent by all reduces in occupied slots (ms)=15020
		Total time spent by all map tasks (ms)=10475
		Total time spent by all reduce tasks (ms)=3755
		Total vcore-milliseconds taken by all map tasks=10475
		Total vcore-milliseconds taken by all reduce tasks=3755
		Total megabyte-milliseconds taken by all map tasks=42905600
		Total megabyte-milliseconds taken by all reduce tasks=15380480
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=673
		CPU time spent (ms)=7220
		Physical memory (bytes) snapshot=1206763520
		Virtual memory (bytes) snapshot=15788969984
		Total committed heap usage (bytes)=1060634624
		Peak Map Physical memory (bytes)=311009280
		Peak Map Virtual memory (bytes)=3946950656
		Peak Reduce Physical memory (bytes)=299634688
		Peak Reduce Virtual memory (bytes)=3971518464
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-21 16:29:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201221 16:29:51.666" starttime="20201221 16:29:51.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:29:51.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:29:51.667" starttime="20201221 16:29:51.666"></status>
</kw>
<status status="PASS" endtime="20201221 16:29:51.667" starttime="20201221 16:29:13.156"></status>
</kw>
<msg timestamp="20201221 16:29:51.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:29:51.667" starttime="20201221 16:29:13.155"></status>
</kw>
<msg timestamp="20201221 16:29:51.668" level="INFO">${output} = 2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:29:14 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:29:51.668" starttime="20201221 16:29:13.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201221 16:29:51.668" starttime="20201221 16:29:51.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:29:51.669" starttime="20201221 16:29:51.668"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:29:51.669" critical="yes" starttime="20201221 16:29:13.118"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201221 16:29:51.670" starttime="20201221 16:28:31.964"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:54.633" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:26:54.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:26:54.639" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:26:54.639" starttime="20201221 16:26:54.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:26:54.640" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:26:54.640" starttime="20201221 16:26:54.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:26:54.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:26:54.641" starttime="20201221 16:26:54.640"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:54.641" starttime="20201221 16:26:54.629"></status>
</kw>
<msg timestamp="20201221 16:26:54.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:26:54.641" starttime="20201221 16:26:54.629"></status>
</kw>
<msg timestamp="20201221 16:26:54.641" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:26:54.641" starttime="20201221 16:26:54.628"></status>
</kw>
<msg timestamp="20201221 16:26:54.642" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:26:54.642" starttime="20201221 16:26:54.628"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:26:54.646" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:26:54.646" starttime="20201221 16:26:54.646"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:26:54.647" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:26:54.647" starttime="20201221 16:26:54.646"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:54.647" starttime="20201221 16:26:54.644"></status>
</kw>
<msg timestamp="20201221 16:26:54.647" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:26:54.647" starttime="20201221 16:26:54.644"></status>
</kw>
<status status="PASS" endtime="20201221 16:26:54.647" starttime="20201221 16:26:54.643"></status>
</kw>
<msg timestamp="20201221 16:26:54.647" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:26:54.647" starttime="20201221 16:26:54.643"></status>
</kw>
<msg timestamp="20201221 16:26:54.648" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:26:54.648" starttime="20201221 16:26:54.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:26:54.651" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:27:35.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:27:35.727" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:26:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26...</msg>
<status status="PASS" endtime="20201221 16:27:35.727" starttime="20201221 16:26:54.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:27:35.728" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:26:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-21 16:26:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:26:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:26:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:26:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:26:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-23FCB0C1924F-&gt;cba97c86-45a4-49ba-9c45-899e0d23a429
2020-12-21 16:26:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-21 16:26:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-21 16:26:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:58 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 16:26:58 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 16:26:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608567943963_0001
2020-12-21 16:26:59 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-21 16:26:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:59 INFO  Configuration:2752 - resource-types.xml not found
2020-12-21 16:26:59 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-21 16:26:59 INFO  YarnClientImpl:324 - Submitted application application_1608567943963_0001
2020-12-21 16:26:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608567943963_0001/
2020-12-21 16:26:59 INFO  Job:1619 - Running job: job_1608567943963_0001
2020-12-21 16:27:10 INFO  Job:1640 - Job job_1608567943963_0001 running in uber mode : false
2020-12-21 16:27:10 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 16:27:17 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 16:27:22 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 16:27:29 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 16:27:34 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 16:27:35 INFO  Job:1658 - Job job_1608567943963_0001 completed successfully
2020-12-21 16:27:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40864
		Total time spent by all reduces in occupied slots (ms)=15216
		Total time spent by all map tasks (ms)=10216
		Total time spent by all reduce tasks (ms)=3804
		Total vcore-milliseconds taken by all map tasks=10216
		Total vcore-milliseconds taken by all reduce tasks=3804
		Total megabyte-milliseconds taken by all map tasks=41844736
		Total megabyte-milliseconds taken by all reduce tasks=15581184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=620
		CPU time spent (ms)=6160
		Physical memory (bytes) snapshot=1196265472
		Virtual memory (bytes) snapshot=15771594752
		Total committed heap usage (bytes)=1058537472
		Peak Map Physical memory (bytes)=313303040
		Peak Map Virtual memory (bytes)=3947065344
		Peak Reduce Physical memory (bytes)=299855872
		Peak Reduce Virtual memory (bytes)=3971792896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.157 seconds
2020-12-21 16:27:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:35 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-21 16:27:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201221 16:27:35.728" starttime="20201221 16:27:35.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:27:35.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:27:35.729" starttime="20201221 16:27:35.729"></status>
</kw>
<status status="PASS" endtime="20201221 16:27:35.729" starttime="20201221 16:26:54.649"></status>
</kw>
<msg timestamp="20201221 16:27:35.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:27:35.730" starttime="20201221 16:26:54.648"></status>
</kw>
<msg timestamp="20201221 16:27:35.730" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:26:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:26...</msg>
<status status="PASS" endtime="20201221 16:27:35.730" starttime="20201221 16:26:54.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:27:35.731" starttime="20201221 16:27:35.730"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:27:35.731" critical="yes" starttime="20201221 16:26:54.627"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:27:35.736" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:27:35.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:27:35.742" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:27:35.742" starttime="20201221 16:27:35.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:27:35.743" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:27:35.743" starttime="20201221 16:27:35.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:27:35.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:27:35.744" starttime="20201221 16:27:35.743"></status>
</kw>
<status status="PASS" endtime="20201221 16:27:35.744" starttime="20201221 16:27:35.734"></status>
</kw>
<msg timestamp="20201221 16:27:35.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:27:35.744" starttime="20201221 16:27:35.733"></status>
</kw>
<msg timestamp="20201221 16:27:35.744" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:27:35.744" starttime="20201221 16:27:35.733"></status>
</kw>
<msg timestamp="20201221 16:27:35.745" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201221 16:27:35.745" starttime="20201221 16:27:35.732"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:27:35.745" level="INFO">${random} = 97</msg>
<status status="PASS" endtime="20201221 16:27:35.745" starttime="20201221 16:27:35.745"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:27:35.749" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:27:35.749" starttime="20201221 16:27:35.749"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:27:35.750" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:27:35.750" starttime="20201221 16:27:35.750"></status>
</kw>
<status status="PASS" endtime="20201221 16:27:35.750" starttime="20201221 16:27:35.749"></status>
</kw>
<msg timestamp="20201221 16:27:35.751" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:27:35.751" starttime="20201221 16:27:35.748"></status>
</kw>
<status status="PASS" endtime="20201221 16:27:35.751" starttime="20201221 16:27:35.747"></status>
</kw>
<msg timestamp="20201221 16:27:35.751" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:27:35.751" starttime="20201221 16:27:35.746"></status>
</kw>
<msg timestamp="20201221 16:27:35.751" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:27:35.751" starttime="20201221 16:27:35.746"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:27:35.755" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:27:35.755" starttime="20201221 16:27:35.754"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:27:35.755" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:27:35.755" starttime="20201221 16:27:35.755"></status>
</kw>
<status status="PASS" endtime="20201221 16:27:35.755" starttime="20201221 16:27:35.754"></status>
</kw>
<msg timestamp="20201221 16:27:35.755" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:27:35.755" starttime="20201221 16:27:35.753"></status>
</kw>
<status status="PASS" endtime="20201221 16:27:35.756" starttime="20201221 16:27:35.753"></status>
</kw>
<msg timestamp="20201221 16:27:35.756" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201221 16:27:35.756" starttime="20201221 16:27:35.752"></status>
</kw>
<msg timestamp="20201221 16:27:35.756" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201221 16:27:35.756" starttime="20201221 16:27:35.751"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:27:35.760" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:27:35.760" starttime="20201221 16:27:35.759"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:27:35.760" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:27:35.760" starttime="20201221 16:27:35.760"></status>
</kw>
<status status="PASS" endtime="20201221 16:27:35.760" starttime="20201221 16:27:35.759"></status>
</kw>
<msg timestamp="20201221 16:27:35.761" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:27:35.761" starttime="20201221 16:27:35.758"></status>
</kw>
<status status="PASS" endtime="20201221 16:27:35.761" starttime="20201221 16:27:35.758"></status>
</kw>
<msg timestamp="20201221 16:27:35.761" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-97.txt</msg>
<status status="PASS" endtime="20201221 16:27:35.761" starttime="20201221 16:27:35.757"></status>
</kw>
<msg timestamp="20201221 16:27:35.761" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-97.txt</msg>
<status status="PASS" endtime="20201221 16:27:35.761" starttime="20201221 16:27:35.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:27:35.765" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-97.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:28:14.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:28:14.350" level="INFO">${output} = 2020-12-21 16:27:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:28:14.350" starttime="20201221 16:27:35.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:28:14.352" level="INFO">2020-12-21 16:27:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-21 16:27:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 16:27:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:38 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-21 16:27:38 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-21 16:27:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:27:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:27:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:27:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B4F4187BAE26-&gt;cba97c86-45a4-49ba-9c45-899e0d23a429
2020-12-21 16:27:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 16:27:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 16:27:39 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 16:27:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608567943963_0002
2020-12-21 16:27:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-21 16:27:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:40 INFO  Configuration:2752 - resource-types.xml not found
2020-12-21 16:27:40 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-21 16:27:40 INFO  YarnClientImpl:324 - Submitted application application_1608567943963_0002
2020-12-21 16:27:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608567943963_0002/
2020-12-21 16:27:40 INFO  Job:1619 - Running job: job_1608567943963_0002
2020-12-21 16:27:48 INFO  Job:1640 - Job job_1608567943963_0002 running in uber mode : false
2020-12-21 16:27:48 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 16:27:54 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 16:28:00 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 16:28:06 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 16:28:10 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 16:28:13 INFO  Job:1658 - Job job_1608567943963_0002 completed successfully
2020-12-21 16:28:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:28:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078891
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41588
		Total time spent by all reduces in occupied slots (ms)=14456
		Total time spent by all map tasks (ms)=10397
		Total time spent by all reduce tasks (ms)=3614
		Total vcore-milliseconds taken by all map tasks=10397
		Total vcore-milliseconds taken by all reduce tasks=3614
		Total megabyte-milliseconds taken by all map tasks=42586112
		Total megabyte-milliseconds taken by all reduce tasks=14802944
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=615
		CPU time spent (ms)=6420
		Physical memory (bytes) snapshot=1169522688
		Virtual memory (bytes) snapshot=15755890688
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=318361600
		Peak Map Virtual memory (bytes)=3952738304
		Peak Reduce Physical memory (bytes)=272486400
		Peak Reduce Virtual memory (bytes)=3952574464
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-21 16:28:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201221 16:28:14.352" starttime="20201221 16:28:14.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:28:14.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:28:14.353" starttime="20201221 16:28:14.352"></status>
</kw>
<status status="PASS" endtime="20201221 16:28:14.353" starttime="20201221 16:27:35.762"></status>
</kw>
<msg timestamp="20201221 16:28:14.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:28:14.353" starttime="20201221 16:27:35.762"></status>
</kw>
<msg timestamp="20201221 16:28:14.354" level="INFO">${output} = 2020-12-21 16:27:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-21 16:27:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201221 16:28:14.354" starttime="20201221 16:27:35.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201221 16:28:14.354" starttime="20201221 16:28:14.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:28:14.355" starttime="20201221 16:28:14.354"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:28:14.355" critical="yes" starttime="20201221 16:27:35.732"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201221 16:28:14.356" starttime="20201221 16:26:54.575"></status>
</suite>
<status status="PASS" elapsedtime="201874" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:03.174" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:08.330" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 16:31:08.330" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 16:31:08.330" starttime="20201221 16:31:03.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:08.332" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 16:31:08.332" starttime="20201221 16:31:08.331"></status>
</kw>
<msg timestamp="20201221 16:31:08.332" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 16:31:08.332" starttime="20201221 16:31:03.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:08.338" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:11.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:11.544" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:31:11.545" starttime="20201221 16:31:08.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:11.546" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:31:11.546" starttime="20201221 16:31:11.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:11.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:11.546" starttime="20201221 16:31:11.546"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:11.547" starttime="20201221 16:31:08.334"></status>
</kw>
<msg timestamp="20201221 16:31:11.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:11.547" starttime="20201221 16:31:08.334"></status>
</kw>
<msg timestamp="20201221 16:31:11.547" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201221 16:31:11.547" starttime="20201221 16:31:08.333"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201221 16:31:11.548" starttime="20201221 16:31:11.547"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:11.548" starttime="20201221 16:31:08.333"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:11.548" starttime="20201221 16:31:08.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:11.552" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:14.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:14.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:31:14.826" starttime="20201221 16:31:11.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:14.828" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:31:14.828" starttime="20201221 16:31:14.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:14.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:14.828" starttime="20201221 16:31:14.828"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:14.829" starttime="20201221 16:31:11.550"></status>
</kw>
<msg timestamp="20201221 16:31:14.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:14.829" starttime="20201221 16:31:11.550"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:14.829" starttime="20201221 16:31:11.549"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:14.829" starttime="20201221 16:31:11.549"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:14.829" starttime="20201221 16:31:11.548"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201221 16:31:14.830" starttime="20201221 16:31:14.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:14.834" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:17.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:17.961" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T16:31:14.559Z",
  "modificat...</msg>
<status status="PASS" endtime="20201221 16:31:17.961" starttime="20201221 16:31:14.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:17.962" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T16:31:14.559Z",
  "modificationTime" : "2020-12-21T16:31:14.559Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201221 16:31:17.963" starttime="20201221 16:31:17.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:17.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:17.963" starttime="20201221 16:31:17.963"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:17.964" starttime="20201221 16:31:14.831"></status>
</kw>
<msg timestamp="20201221 16:31:17.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:17.965" starttime="20201221 16:31:14.831"></status>
</kw>
<msg timestamp="20201221 16:31:17.965" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T16:31:14.559Z",
  "modificat...</msg>
<status status="PASS" endtime="20201221 16:31:17.965" starttime="20201221 16:31:14.830"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201221 16:31:17.966" starttime="20201221 16:31:17.965"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:31:17.970" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:31:17.970" starttime="20201221 16:31:17.970"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:31:17.971" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:31:17.971" starttime="20201221 16:31:17.970"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:17.971" starttime="20201221 16:31:17.969"></status>
</kw>
<msg timestamp="20201221 16:31:17.971" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:31:17.971" starttime="20201221 16:31:17.969"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:17.971" starttime="20201221 16:31:17.968"></status>
</kw>
<msg timestamp="20201221 16:31:17.972" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201221 16:31:17.972" starttime="20201221 16:31:17.967"></status>
</kw>
<msg timestamp="20201221 16:31:17.972" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201221 16:31:17.972" starttime="20201221 16:31:17.966"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:17.975" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:21.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:21.257" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:31:21.257" starttime="20201221 16:31:17.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:21.258" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:31:21.258" starttime="20201221 16:31:21.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:21.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:21.259" starttime="20201221 16:31:21.258"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:21.259" starttime="20201221 16:31:17.973"></status>
</kw>
<msg timestamp="20201221 16:31:21.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:21.260" starttime="20201221 16:31:17.973"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:21.260" starttime="20201221 16:31:17.972"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:21.264" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:28.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:28.616" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:31:28.616" starttime="20201221 16:31:21.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:28.617" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:31:28.617" starttime="20201221 16:31:28.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:28.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:28.618" starttime="20201221 16:31:28.617"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:28.618" starttime="20201221 16:31:21.261"></status>
</kw>
<msg timestamp="20201221 16:31:28.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:28.619" starttime="20201221 16:31:21.261"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:28.619" starttime="20201221 16:31:21.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:28.623" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:33.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:33.844" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:31:33.844" starttime="20201221 16:31:28.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:33.845" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:31:33.845" starttime="20201221 16:31:33.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:33.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:33.846" starttime="20201221 16:31:33.846"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:33.846" starttime="20201221 16:31:28.620"></status>
</kw>
<msg timestamp="20201221 16:31:33.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:33.847" starttime="20201221 16:31:28.620"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:33.847" starttime="20201221 16:31:28.619"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:33.851" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:38.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:38.943" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:31:38.943" starttime="20201221 16:31:33.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:38.945" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:31:38.945" starttime="20201221 16:31:38.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:38.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:38.946" starttime="20201221 16:31:38.945"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:38.946" starttime="20201221 16:31:33.848"></status>
</kw>
<msg timestamp="20201221 16:31:38.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:38.947" starttime="20201221 16:31:33.848"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:38.947" starttime="20201221 16:31:33.847"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 16:31:38.947" critical="yes" starttime="20201221 16:31:03.168"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:31:38.952" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:31:38.952" starttime="20201221 16:31:38.952"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:31:38.953" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:31:38.953" starttime="20201221 16:31:38.953"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:38.953" starttime="20201221 16:31:38.951"></status>
</kw>
<msg timestamp="20201221 16:31:38.953" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:31:38.953" starttime="20201221 16:31:38.951"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:38.954" starttime="20201221 16:31:38.950"></status>
</kw>
<msg timestamp="20201221 16:31:38.954" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 16:31:38.954" starttime="20201221 16:31:38.950"></status>
</kw>
<msg timestamp="20201221 16:31:38.954" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 16:31:38.954" starttime="20201221 16:31:38.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:38.958" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:41.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:41.880" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:31:41.880" starttime="20201221 16:31:38.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:41.881" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:31:41.881" starttime="20201221 16:31:41.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:41.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:41.882" starttime="20201221 16:31:41.881"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:41.882" starttime="20201221 16:31:38.955"></status>
</kw>
<msg timestamp="20201221 16:31:41.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:41.882" starttime="20201221 16:31:38.955"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:41.883" starttime="20201221 16:31:38.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:41.887" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:45.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:45.219" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 16:31:45.219" starttime="20201221 16:31:41.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:45.220" level="INFO"></msg>
<status status="PASS" endtime="20201221 16:31:45.220" starttime="20201221 16:31:45.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:45.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:45.221" starttime="20201221 16:31:45.220"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:45.221" starttime="20201221 16:31:41.884"></status>
</kw>
<msg timestamp="20201221 16:31:45.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:45.221" starttime="20201221 16:31:41.884"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:45.221" starttime="20201221 16:31:41.883"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 16:31:45.222" critical="yes" starttime="20201221 16:31:38.948"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201221 16:31:45.223" starttime="20201221 16:31:03.109"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:33:28.071" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:33:28.071" starttime="20201221 16:33:28.071"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:33:28.072" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:33:28.072" starttime="20201221 16:33:28.071"></status>
</kw>
<status status="PASS" endtime="20201221 16:33:28.072" starttime="20201221 16:33:28.070"></status>
</kw>
<msg timestamp="20201221 16:33:28.072" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:33:28.072" starttime="20201221 16:33:28.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:33:28.073" starttime="20201221 16:33:28.073"></status>
</kw>
<msg timestamp="20201221 16:33:28.073" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 16:33:28.073" starttime="20201221 16:33:28.072"></status>
</kw>
<status status="PASS" endtime="20201221 16:33:28.074" starttime="20201221 16:33:28.069"></status>
</kw>
<msg timestamp="20201221 16:33:28.074" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:33:28.074" starttime="20201221 16:33:28.068"></status>
</kw>
<msg timestamp="20201221 16:33:28.074" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:33:28.074" starttime="20201221 16:33:28.067"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:33:28.075" level="INFO">${random} = 80892</msg>
<status status="PASS" endtime="20201221 16:33:28.075" starttime="20201221 16:33:28.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:33:28.080" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-80892 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:33:31.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:33:31.556" level="INFO">${output} = 2020-12-21 16:33:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:33:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 16:33:31.556" starttime="20201221 16:33:28.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:33:31.557" level="INFO">2020-12-21 16:33:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:33:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:33:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:33:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:33:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1C83A15313A3-&gt;5c94bd03-e792-41d1-b9e8-3cd252e39c36
2020-12-21 16:33:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201221 16:33:31.557" starttime="20201221 16:33:31.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:33:31.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:33:31.558" starttime="20201221 16:33:31.557"></status>
</kw>
<status status="PASS" endtime="20201221 16:33:31.558" starttime="20201221 16:33:28.076"></status>
</kw>
<msg timestamp="20201221 16:33:31.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:33:31.558" starttime="20201221 16:33:28.075"></status>
</kw>
<msg timestamp="20201221 16:33:31.559" level="INFO">${result} = 2020-12-21 16:33:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:33:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 16:33:31.559" starttime="20201221 16:33:28.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:33:31.563" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:33:33.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:33:33.403" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 16:31 ofs://om/volume1/bucket1/ozone-71864
-rw-...</msg>
<status status="PASS" endtime="20201221 16:33:33.403" starttime="20201221 16:33:31.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:33:33.404" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 16:31 ofs://om/volume1/bucket1/ozone-71864
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 16:33 ofs://om/volume1/bucket1/ozone-80892
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:31 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:32 ofs://om/volume1/bucket1/wordcount-20.txt</msg>
<status status="PASS" endtime="20201221 16:33:33.404" starttime="20201221 16:33:33.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:33:33.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:33:33.405" starttime="20201221 16:33:33.404"></status>
</kw>
<status status="PASS" endtime="20201221 16:33:33.405" starttime="20201221 16:33:31.561"></status>
</kw>
<msg timestamp="20201221 16:33:33.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:33:33.406" starttime="20201221 16:33:31.560"></status>
</kw>
<msg timestamp="20201221 16:33:33.406" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 16:31 ofs://om/volume1/bucket1/ozone-71864
-rw-...</msg>
<status status="PASS" endtime="20201221 16:33:33.406" starttime="20201221 16:33:31.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:33:33.406" starttime="20201221 16:33:33.406"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 16:33:33.407" critical="yes" starttime="20201221 16:33:28.066"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201221 16:33:33.409" starttime="20201221 16:33:27.999"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:31:50.176" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:31:50.176" starttime="20201221 16:31:50.175"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:31:50.177" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:31:50.177" starttime="20201221 16:31:50.176"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:50.177" starttime="20201221 16:31:50.175"></status>
</kw>
<msg timestamp="20201221 16:31:50.177" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:31:50.177" starttime="20201221 16:31:50.174"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:50.177" starttime="20201221 16:31:50.174"></status>
</kw>
<msg timestamp="20201221 16:31:50.177" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:31:50.177" starttime="20201221 16:31:50.173"></status>
</kw>
<msg timestamp="20201221 16:31:50.178" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:31:50.178" starttime="20201221 16:31:50.172"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:31:50.178" level="INFO">${random} = 71864</msg>
<status status="PASS" endtime="20201221 16:31:50.178" starttime="20201221 16:31:50.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:50.183" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-71864 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:54.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:54.194" level="INFO">${output} = 2020-12-21 16:31:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:31:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 16:31:54.194" starttime="20201221 16:31:50.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:54.196" level="INFO">2020-12-21 16:31:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:31:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:31:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:31:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:31:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B2FD8DFD013E-&gt;5c94bd03-e792-41d1-b9e8-3cd252e39c36
2020-12-21 16:31:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201221 16:31:54.196" starttime="20201221 16:31:54.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:54.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:54.196" starttime="20201221 16:31:54.196"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:54.197" starttime="20201221 16:31:50.179"></status>
</kw>
<msg timestamp="20201221 16:31:54.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:54.197" starttime="20201221 16:31:50.179"></status>
</kw>
<msg timestamp="20201221 16:31:54.197" level="INFO">${result} = 2020-12-21 16:31:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:31:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 16:31:54.197" starttime="20201221 16:31:50.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:31:54.202" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:31:56.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:31:56.058" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 16:31 o3fs://bucket1.volume1.om/ozone-71864
dr...</msg>
<status status="PASS" endtime="20201221 16:31:56.058" starttime="20201221 16:31:54.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:31:56.060" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 16:31 o3fs://bucket1.volume1.om/ozone-71864
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:31 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 16:31:56.060" starttime="20201221 16:31:56.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:31:56.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:31:56.060" starttime="20201221 16:31:56.060"></status>
</kw>
<status status="PASS" endtime="20201221 16:31:56.061" starttime="20201221 16:31:54.199"></status>
</kw>
<msg timestamp="20201221 16:31:56.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:31:56.061" starttime="20201221 16:31:54.198"></status>
</kw>
<msg timestamp="20201221 16:31:56.061" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 16:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 16:31 o3fs://bucket1.volume1.om/ozone-71864
dr...</msg>
<status status="PASS" endtime="20201221 16:31:56.061" starttime="20201221 16:31:54.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:31:56.062" starttime="20201221 16:31:56.061"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 16:31:56.062" critical="yes" starttime="20201221 16:31:50.171"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201221 16:31:56.064" starttime="20201221 16:31:50.115"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:33:38.270" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:33:38.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:33:38.276" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:33:38.276" starttime="20201221 16:33:38.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:33:38.277" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:33:38.277" starttime="20201221 16:33:38.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:33:38.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:33:38.278" starttime="20201221 16:33:38.277"></status>
</kw>
<status status="PASS" endtime="20201221 16:33:38.278" starttime="20201221 16:33:38.266"></status>
</kw>
<msg timestamp="20201221 16:33:38.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:33:38.278" starttime="20201221 16:33:38.266"></status>
</kw>
<msg timestamp="20201221 16:33:38.278" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:33:38.278" starttime="20201221 16:33:38.265"></status>
</kw>
<msg timestamp="20201221 16:33:38.279" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:33:38.279" starttime="20201221 16:33:38.265"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:33:38.284" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:33:38.284" starttime="20201221 16:33:38.283"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:33:38.284" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:33:38.284" starttime="20201221 16:33:38.284"></status>
</kw>
<status status="PASS" endtime="20201221 16:33:38.285" starttime="20201221 16:33:38.282"></status>
</kw>
<msg timestamp="20201221 16:33:38.285" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:33:38.285" starttime="20201221 16:33:38.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:33:38.286" starttime="20201221 16:33:38.285"></status>
</kw>
<msg timestamp="20201221 16:33:38.286" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 16:33:38.286" starttime="20201221 16:33:38.285"></status>
</kw>
<status status="PASS" endtime="20201221 16:33:38.286" starttime="20201221 16:33:38.280"></status>
</kw>
<msg timestamp="20201221 16:33:38.286" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:33:38.286" starttime="20201221 16:33:38.280"></status>
</kw>
<msg timestamp="20201221 16:33:38.287" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:33:38.287" starttime="20201221 16:33:38.279"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:33:38.290" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:34:20.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:34:20.313" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:33:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:33:40 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201221 16:34:20.314" starttime="20201221 16:33:38.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:34:20.315" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:33:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:33:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:33:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:33:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:33:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-129FA4B6C546-&gt;5c94bd03-e792-41d1-b9e8-3cd252e39c36
2020-12-21 16:33:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-21 16:33:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-21 16:33:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 16:33:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 16:33:44 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 16:33:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608568238569_0003
2020-12-21 16:33:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-21 16:33:45 INFO  Configuration:2795 - resource-types.xml not found
2020-12-21 16:33:45 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-21 16:33:45 INFO  YarnClientImpl:329 - Submitted application application_1608568238569_0003
2020-12-21 16:33:45 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608568238569_0003/
2020-12-21 16:33:45 INFO  Job:1619 - Running job: job_1608568238569_0003
2020-12-21 16:33:53 INFO  Job:1640 - Job job_1608568238569_0003 running in uber mode : false
2020-12-21 16:33:53 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 16:33:59 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 16:34:05 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 16:34:11 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 16:34:18 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 16:34:19 INFO  Job:1658 - Job job_1608568238569_0003 completed successfully
2020-12-21 16:34:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056269
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41204
		Total time spent by all reduces in occupied slots (ms)=25340
		Total time spent by all map tasks (ms)=10301
		Total time spent by all reduce tasks (ms)=6335
		Total vcore-milliseconds taken by all map tasks=10301
		Total vcore-milliseconds taken by all reduce tasks=6335
		Total megabyte-milliseconds taken by all map tasks=42192896
		Total megabyte-milliseconds taken by all reduce tasks=25948160
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=635
		CPU time spent (ms)=6740
		Physical memory (bytes) snapshot=1472069632
		Virtual memory (bytes) snapshot=15760769024
		Total committed heap usage (bytes)=1786249216
		Peak Map Physical memory (bytes)=363335680
		Peak Map Virtual memory (bytes)=3937370112
		Peak Reduce Physical memory (bytes)=384425984
		Peak Reduce Virtual memory (bytes)=3965759488
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.231 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201221 16:34:20.315" starttime="20201221 16:34:20.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:34:20.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:34:20.316" starttime="20201221 16:34:20.315"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.316" starttime="20201221 16:33:38.288"></status>
</kw>
<msg timestamp="20201221 16:34:20.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:34:20.316" starttime="20201221 16:33:38.287"></status>
</kw>
<msg timestamp="20201221 16:34:20.317" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:33:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:33:40 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201221 16:34:20.317" starttime="20201221 16:33:38.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:34:20.317" starttime="20201221 16:34:20.317"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:34:20.318" critical="yes" starttime="20201221 16:33:38.264"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:34:20.323" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:34:20.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:34:20.329" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:34:20.329" starttime="20201221 16:34:20.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:34:20.330" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:34:20.330" starttime="20201221 16:34:20.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:34:20.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:34:20.331" starttime="20201221 16:34:20.330"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.331" starttime="20201221 16:34:20.321"></status>
</kw>
<msg timestamp="20201221 16:34:20.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:34:20.331" starttime="20201221 16:34:20.320"></status>
</kw>
<msg timestamp="20201221 16:34:20.332" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:34:20.332" starttime="20201221 16:34:20.320"></status>
</kw>
<msg timestamp="20201221 16:34:20.332" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:34:20.332" starttime="20201221 16:34:20.319"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:34:20.333" level="INFO">${random} = 88</msg>
<status status="PASS" endtime="20201221 16:34:20.333" starttime="20201221 16:34:20.332"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:34:20.337" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:34:20.337" starttime="20201221 16:34:20.337"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:34:20.338" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:34:20.338" starttime="20201221 16:34:20.337"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.338" starttime="20201221 16:34:20.336"></status>
</kw>
<msg timestamp="20201221 16:34:20.338" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:34:20.338" starttime="20201221 16:34:20.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 16:34:20.339" starttime="20201221 16:34:20.339"></status>
</kw>
<msg timestamp="20201221 16:34:20.340" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 16:34:20.340" starttime="20201221 16:34:20.339"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.340" starttime="20201221 16:34:20.335"></status>
</kw>
<msg timestamp="20201221 16:34:20.340" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:34:20.340" starttime="20201221 16:34:20.334"></status>
</kw>
<msg timestamp="20201221 16:34:20.340" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 16:34:20.340" starttime="20201221 16:34:20.333"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:34:20.344" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:34:20.344" starttime="20201221 16:34:20.343"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:34:20.344" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:34:20.344" starttime="20201221 16:34:20.344"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.345" starttime="20201221 16:34:20.343"></status>
</kw>
<msg timestamp="20201221 16:34:20.345" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:34:20.345" starttime="20201221 16:34:20.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:34:20.346" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201221 16:34:20.346" starttime="20201221 16:34:20.346"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:34:20.347" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201221 16:34:20.347" starttime="20201221 16:34:20.346"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.347" starttime="20201221 16:34:20.345"></status>
</kw>
<msg timestamp="20201221 16:34:20.347" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201221 16:34:20.347" starttime="20201221 16:34:20.345"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.348" starttime="20201221 16:34:20.342"></status>
</kw>
<msg timestamp="20201221 16:34:20.348" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201221 16:34:20.348" starttime="20201221 16:34:20.341"></status>
</kw>
<msg timestamp="20201221 16:34:20.348" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201221 16:34:20.348" starttime="20201221 16:34:20.340"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 16:34:20.351" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 16:34:20.352" starttime="20201221 16:34:20.351"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:34:20.352" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 16:34:20.352" starttime="20201221 16:34:20.352"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.352" starttime="20201221 16:34:20.351"></status>
</kw>
<msg timestamp="20201221 16:34:20.352" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 16:34:20.352" starttime="20201221 16:34:20.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:34:20.354" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201221 16:34:20.354" starttime="20201221 16:34:20.353"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:34:20.355" level="INFO">${result} = /wordcount-88.txt</msg>
<status status="PASS" endtime="20201221 16:34:20.355" starttime="20201221 16:34:20.354"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.355" starttime="20201221 16:34:20.353"></status>
</kw>
<msg timestamp="20201221 16:34:20.355" level="INFO">${path_with_leading} = /wordcount-88.txt</msg>
<status status="PASS" endtime="20201221 16:34:20.355" starttime="20201221 16:34:20.353"></status>
</kw>
<status status="PASS" endtime="20201221 16:34:20.355" starttime="20201221 16:34:20.349"></status>
</kw>
<msg timestamp="20201221 16:34:20.355" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-88.txt</msg>
<status status="PASS" endtime="20201221 16:34:20.355" starttime="20201221 16:34:20.349"></status>
</kw>
<msg timestamp="20201221 16:34:20.356" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-88.txt</msg>
<status status="PASS" endtime="20201221 16:34:20.356" starttime="20201221 16:34:20.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:34:20.359" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-88.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:35:01.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:35:01.620" level="INFO">${output} = 2020-12-21 16:34:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-21 16:34:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201221 16:35:01.620" starttime="20201221 16:34:20.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:35:01.621" level="INFO">2020-12-21 16:34:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-21 16:34:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 16:34:22 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:34:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:34:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:34:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:34:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-48F0DDE7D5E3-&gt;5c94bd03-e792-41d1-b9e8-3cd252e39c36
2020-12-21 16:34:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 16:34:26 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 16:34:26 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 16:34:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608568238569_0004
2020-12-21 16:34:29 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-21 16:34:29 INFO  Configuration:2795 - resource-types.xml not found
2020-12-21 16:34:29 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-21 16:34:29 INFO  YarnClientImpl:329 - Submitted application application_1608568238569_0004
2020-12-21 16:34:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608568238569_0004/
2020-12-21 16:34:29 INFO  Job:1619 - Running job: job_1608568238569_0004
2020-12-21 16:34:37 INFO  Job:1640 - Job job_1608568238569_0004 running in uber mode : false
2020-12-21 16:34:37 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 16:34:44 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 16:34:50 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 16:34:56 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 16:35:00 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 16:35:01 INFO  Job:1658 - Job job_1608568238569_0004 completed successfully
2020-12-21 16:35:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118923
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41644
		Total time spent by all reduces in occupied slots (ms)=14968
		Total time spent by all map tasks (ms)=10411
		Total time spent by all reduce tasks (ms)=3742
		Total vcore-milliseconds taken by all map tasks=10411
		Total vcore-milliseconds taken by all reduce tasks=3742
		Total megabyte-milliseconds taken by all map tasks=42643456
		Total megabyte-milliseconds taken by all reduce tasks=15327232
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=672
		CPU time spent (ms)=7760
		Physical memory (bytes) snapshot=1440718848
		Virtual memory (bytes) snapshot=15796195328
		Total committed heap usage (bytes)=1610088448
		Peak Map Physical memory (bytes)=390635520
		Peak Map Virtual memory (bytes)=3945455616
		Peak Reduce Physical memory (bytes)=372379648
		Peak Reduce Virtual memory (bytes)=3964383232
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201221 16:35:01.622" starttime="20201221 16:35:01.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:35:01.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:35:01.623" starttime="20201221 16:35:01.622"></status>
</kw>
<status status="PASS" endtime="20201221 16:35:01.623" starttime="20201221 16:34:20.357"></status>
</kw>
<msg timestamp="20201221 16:35:01.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:35:01.623" starttime="20201221 16:34:20.356"></status>
</kw>
<msg timestamp="20201221 16:35:01.623" level="INFO">${output} = 2020-12-21 16:34:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-21 16:34:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201221 16:35:01.623" starttime="20201221 16:34:20.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201221 16:35:01.624" starttime="20201221 16:35:01.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:35:01.625" starttime="20201221 16:35:01.624"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:35:01.625" critical="yes" starttime="20201221 16:34:20.318"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201221 16:35:01.626" starttime="20201221 16:33:38.210"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:32:00.960" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:32:00.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:32:00.967" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:32:00.967" starttime="20201221 16:32:00.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:32:00.968" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:32:00.968" starttime="20201221 16:32:00.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:32:00.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:32:00.969" starttime="20201221 16:32:00.968"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:00.969" starttime="20201221 16:32:00.956"></status>
</kw>
<msg timestamp="20201221 16:32:00.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:32:00.969" starttime="20201221 16:32:00.956"></status>
</kw>
<msg timestamp="20201221 16:32:00.970" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:32:00.970" starttime="20201221 16:32:00.955"></status>
</kw>
<msg timestamp="20201221 16:32:00.970" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:32:00.970" starttime="20201221 16:32:00.955"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:32:00.976" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:32:00.976" starttime="20201221 16:32:00.975"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:32:00.976" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:32:00.976" starttime="20201221 16:32:00.976"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:00.977" starttime="20201221 16:32:00.974"></status>
</kw>
<msg timestamp="20201221 16:32:00.977" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:32:00.977" starttime="20201221 16:32:00.972"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:00.977" starttime="20201221 16:32:00.972"></status>
</kw>
<msg timestamp="20201221 16:32:00.977" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:32:00.977" starttime="20201221 16:32:00.971"></status>
</kw>
<msg timestamp="20201221 16:32:00.977" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:32:00.977" starttime="20201221 16:32:00.970"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:32:00.981" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:32:44.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:32:44.418" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:32:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:32:03 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201221 16:32:44.419" starttime="20201221 16:32:00.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:32:44.420" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:32:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:32:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:32:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:32:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:32:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E1669CE579B6-&gt;5c94bd03-e792-41d1-b9e8-3cd252e39c36
2020-12-21 16:32:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-21 16:32:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-21 16:32:05 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 16:32:05 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 16:32:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608568238569_0001
2020-12-21 16:32:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-21 16:32:05 INFO  Configuration:2795 - resource-types.xml not found
2020-12-21 16:32:05 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-21 16:32:06 INFO  YarnClientImpl:329 - Submitted application application_1608568238569_0001
2020-12-21 16:32:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608568238569_0001/
2020-12-21 16:32:06 INFO  Job:1619 - Running job: job_1608568238569_0001
2020-12-21 16:32:16 INFO  Job:1640 - Job job_1608568238569_0001 running in uber mode : false
2020-12-21 16:32:16 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 16:32:23 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 16:32:29 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 16:32:35 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 16:32:39 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 16:32:43 INFO  Job:1658 - Job job_1608568238569_0001 completed successfully
2020-12-21 16:32:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056481
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42924
		Total time spent by all reduces in occupied slots (ms)=16360
		Total time spent by all map tasks (ms)=10731
		Total time spent by all reduce tasks (ms)=4090
		Total vcore-milliseconds taken by all map tasks=10731
		Total vcore-milliseconds taken by all reduce tasks=4090
		Total megabyte-milliseconds taken by all map tasks=43954176
		Total megabyte-milliseconds taken by all reduce tasks=16752640
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=663
		CPU time spent (ms)=7260
		Physical memory (bytes) snapshot=1431900160
		Virtual memory (bytes) snapshot=15787921408
		Total committed heap usage (bytes)=1629487104
		Peak Map Physical memory (bytes)=374116352
		Peak Map Virtual memory (bytes)=3947597824
		Peak Reduce Physical memory (bytes)=390819840
		Peak Reduce Virtual memory (bytes)=3967057920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.489 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201221 16:32:44.420" starttime="20201221 16:32:44.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:32:44.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:32:44.421" starttime="20201221 16:32:44.420"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:44.421" starttime="20201221 16:32:00.978"></status>
</kw>
<msg timestamp="20201221 16:32:44.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:32:44.421" starttime="20201221 16:32:00.978"></status>
</kw>
<msg timestamp="20201221 16:32:44.422" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 16:32:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:32:03 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201221 16:32:44.422" starttime="20201221 16:32:00.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:32:44.422" starttime="20201221 16:32:44.422"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:32:44.422" critical="yes" starttime="20201221 16:32:00.954"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:32:44.427" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:32:44.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:32:44.435" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:32:44.435" starttime="20201221 16:32:44.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:32:44.436" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:32:44.436" starttime="20201221 16:32:44.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:32:44.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:32:44.437" starttime="20201221 16:32:44.436"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:44.437" starttime="20201221 16:32:44.425"></status>
</kw>
<msg timestamp="20201221 16:32:44.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:32:44.438" starttime="20201221 16:32:44.425"></status>
</kw>
<msg timestamp="20201221 16:32:44.438" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:32:44.438" starttime="20201221 16:32:44.424"></status>
</kw>
<msg timestamp="20201221 16:32:44.438" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 16:32:44.438" starttime="20201221 16:32:44.424"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 16:32:44.439" level="INFO">${random} = 20</msg>
<status status="PASS" endtime="20201221 16:32:44.439" starttime="20201221 16:32:44.438"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:32:44.443" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:32:44.443" starttime="20201221 16:32:44.443"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:32:44.444" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:32:44.444" starttime="20201221 16:32:44.443"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:44.444" starttime="20201221 16:32:44.442"></status>
</kw>
<msg timestamp="20201221 16:32:44.444" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:32:44.444" starttime="20201221 16:32:44.441"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:44.444" starttime="20201221 16:32:44.440"></status>
</kw>
<msg timestamp="20201221 16:32:44.444" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:32:44.444" starttime="20201221 16:32:44.440"></status>
</kw>
<msg timestamp="20201221 16:32:44.445" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 16:32:44.445" starttime="20201221 16:32:44.439"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:32:44.448" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:32:44.448" starttime="20201221 16:32:44.448"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:32:44.449" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:32:44.449" starttime="20201221 16:32:44.448"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:44.449" starttime="20201221 16:32:44.447"></status>
</kw>
<msg timestamp="20201221 16:32:44.449" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:32:44.449" starttime="20201221 16:32:44.447"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:44.449" starttime="20201221 16:32:44.446"></status>
</kw>
<msg timestamp="20201221 16:32:44.449" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201221 16:32:44.449" starttime="20201221 16:32:44.445"></status>
</kw>
<msg timestamp="20201221 16:32:44.450" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201221 16:32:44.450" starttime="20201221 16:32:44.445"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 16:32:44.453" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 16:32:44.453" starttime="20201221 16:32:44.453"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 16:32:44.454" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 16:32:44.454" starttime="20201221 16:32:44.454"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:44.454" starttime="20201221 16:32:44.452"></status>
</kw>
<msg timestamp="20201221 16:32:44.454" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 16:32:44.454" starttime="20201221 16:32:44.452"></status>
</kw>
<status status="PASS" endtime="20201221 16:32:44.455" starttime="20201221 16:32:44.451"></status>
</kw>
<msg timestamp="20201221 16:32:44.455" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-20.txt</msg>
<status status="PASS" endtime="20201221 16:32:44.455" starttime="20201221 16:32:44.451"></status>
</kw>
<msg timestamp="20201221 16:32:44.455" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-20.txt</msg>
<status status="PASS" endtime="20201221 16:32:44.455" starttime="20201221 16:32:44.450"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 16:32:44.459" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-20.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 16:33:23.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 16:33:23.073" level="INFO">${output} = 2020-12-21 16:32:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-21 16:32:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201221 16:33:23.073" starttime="20201221 16:32:44.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 16:33:23.074" level="INFO">2020-12-21 16:32:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-21 16:32:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 16:32:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 16:32:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 16:32:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 16:32:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 16:32:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D35004E0CA45-&gt;5c94bd03-e792-41d1-b9e8-3cd252e39c36
2020-12-21 16:32:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 16:32:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 16:32:48 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 16:32:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608568238569_0002
2020-12-21 16:32:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-21 16:32:48 INFO  Configuration:2795 - resource-types.xml not found
2020-12-21 16:32:48 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-21 16:32:48 INFO  YarnClientImpl:329 - Submitted application application_1608568238569_0002
2020-12-21 16:32:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608568238569_0002/
2020-12-21 16:32:48 INFO  Job:1619 - Running job: job_1608568238569_0002
2020-12-21 16:32:57 INFO  Job:1640 - Job job_1608568238569_0002 running in uber mode : false
2020-12-21 16:32:57 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 16:33:03 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 16:33:09 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 16:33:15 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 16:33:22 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 16:33:22 INFO  Job:1658 - Job job_1608568238569_0002 completed successfully
2020-12-21 16:33:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1119011
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42604
		Total time spent by all reduces in occupied slots (ms)=25068
		Total time spent by all map tasks (ms)=10651
		Total time spent by all reduce tasks (ms)=6267
		Total vcore-milliseconds taken by all map tasks=10651
		Total vcore-milliseconds taken by all reduce tasks=6267
		Total megabyte-milliseconds taken by all map tasks=43626496
		Total megabyte-milliseconds taken by all reduce tasks=25669632
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=688
		CPU time spent (ms)=6970
		Physical memory (bytes) snapshot=1375301632
		Virtual memory (bytes) snapshot=15765131264
		Total committed heap usage (bytes)=1646264320
		Peak Map Physical memory (bytes)=389591040
		Peak Map Virtual memory (bytes)=3946999808
		Peak Reduce Physical memory (bytes)=271413248
		Peak Reduce Virtual memory (bytes)=3951312896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201221 16:33:23.074" starttime="20201221 16:33:23.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 16:33:23.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 16:33:23.075" starttime="20201221 16:33:23.075"></status>
</kw>
<status status="PASS" endtime="20201221 16:33:23.075" starttime="20201221 16:32:44.456"></status>
</kw>
<msg timestamp="20201221 16:33:23.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 16:33:23.076" starttime="20201221 16:32:44.456"></status>
</kw>
<msg timestamp="20201221 16:33:23.076" level="INFO">${output} = 2020-12-21 16:32:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2020-12-21 16:32:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201221 16:33:23.076" starttime="20201221 16:32:44.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201221 16:33:23.077" starttime="20201221 16:33:23.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 16:33:23.077" starttime="20201221 16:33:23.077"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 16:33:23.078" critical="yes" starttime="20201221 16:32:44.423"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201221 16:33:23.080" starttime="20201221 16:32:00.900"></status>
</suite>
<status status="PASS" elapsedtime="219069" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="610480" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
