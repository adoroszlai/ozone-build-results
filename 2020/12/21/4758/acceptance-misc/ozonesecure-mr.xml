<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201221 17:12:00.158" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:07:45.550" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:07:50.209" level="INFO">${rc} = 255</msg>
<msg timestamp="20201221 17:07:50.209" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:07:50.209" starttime="20201221 17:07:45.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:07:50.210" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201221 17:07:50.210" starttime="20201221 17:07:50.209"></status>
</kw>
<msg timestamp="20201221 17:07:50.210" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:07:50.210" starttime="20201221 17:07:45.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:07:50.216" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:07:54.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:07:54.115" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:07:54.115" starttime="20201221 17:07:50.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:07:54.116" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:07:54.116" starttime="20201221 17:07:54.115"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:07:54.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:07:54.117" starttime="20201221 17:07:54.116"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:54.117" starttime="20201221 17:07:50.213"></status>
</kw>
<msg timestamp="20201221 17:07:54.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:07:54.117" starttime="20201221 17:07:50.212"></status>
</kw>
<msg timestamp="20201221 17:07:54.118" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:07:54.118" starttime="20201221 17:07:50.212"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201221 17:07:54.118" starttime="20201221 17:07:54.118"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:54.118" starttime="20201221 17:07:50.211"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:54.118" starttime="20201221 17:07:50.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:07:54.123" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:07:57.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:07:57.821" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:07:57.821" starttime="20201221 17:07:54.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:07:57.822" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:07:57.822" starttime="20201221 17:07:57.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:07:57.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:07:57.823" starttime="20201221 17:07:57.822"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:57.823" starttime="20201221 17:07:54.120"></status>
</kw>
<msg timestamp="20201221 17:07:57.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:07:57.823" starttime="20201221 17:07:54.120"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:57.824" starttime="20201221 17:07:54.119"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:57.824" starttime="20201221 17:07:54.119"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:57.824" starttime="20201221 17:07:54.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201221 17:07:57.824" starttime="20201221 17:07:57.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:07:57.829" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:08:01.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:08:01.718" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:08:01.718" starttime="20201221 17:07:57.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:08:01.719" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-21T17:07:57.537Z",
  "modificationTime" : "2020-12-21T17:07:57.537Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201221 17:08:01.719" starttime="20201221 17:08:01.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:08:01.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:08:01.720" starttime="20201221 17:08:01.719"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:01.720" starttime="20201221 17:07:57.826"></status>
</kw>
<msg timestamp="20201221 17:08:01.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:08:01.720" starttime="20201221 17:07:57.825"></status>
</kw>
<msg timestamp="20201221 17:08:01.720" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:08:01.720" starttime="20201221 17:07:57.825"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201221 17:08:01.721" starttime="20201221 17:08:01.721"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 17:08:01.725" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 17:08:01.725" starttime="20201221 17:08:01.725"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:08:01.726" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 17:08:01.726" starttime="20201221 17:08:01.725"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:01.726" starttime="20201221 17:08:01.724"></status>
</kw>
<msg timestamp="20201221 17:08:01.726" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 17:08:01.726" starttime="20201221 17:08:01.724"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:01.727" starttime="20201221 17:08:01.723"></status>
</kw>
<msg timestamp="20201221 17:08:01.727" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201221 17:08:01.727" starttime="20201221 17:08:01.722"></status>
</kw>
<msg timestamp="20201221 17:08:01.727" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201221 17:08:01.727" starttime="20201221 17:08:01.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:08:01.731" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:08:05.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:08:05.569" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:08:05.570" starttime="20201221 17:08:01.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:08:05.571" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:08:05.571" starttime="20201221 17:08:05.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:08:05.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:08:05.571" starttime="20201221 17:08:05.571"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:05.572" starttime="20201221 17:08:01.728"></status>
</kw>
<msg timestamp="20201221 17:08:05.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:08:05.572" starttime="20201221 17:08:01.728"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:05.572" starttime="20201221 17:08:01.727"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:08:05.576" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:08:13.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:08:13.564" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:08:13.564" starttime="20201221 17:08:05.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:08:13.565" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:08:13.565" starttime="20201221 17:08:13.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:08:13.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:08:13.566" starttime="20201221 17:08:13.565"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:13.566" starttime="20201221 17:08:05.573"></status>
</kw>
<msg timestamp="20201221 17:08:13.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:08:13.566" starttime="20201221 17:08:05.573"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:13.567" starttime="20201221 17:08:05.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:08:13.570" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:08:19.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:08:19.277" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:08:19.277" starttime="20201221 17:08:13.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:08:19.278" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:08:19.278" starttime="20201221 17:08:19.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:08:19.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:08:19.279" starttime="20201221 17:08:19.279"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:19.279" starttime="20201221 17:08:13.568"></status>
</kw>
<msg timestamp="20201221 17:08:19.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:08:19.280" starttime="20201221 17:08:13.567"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:19.280" starttime="20201221 17:08:13.567"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:08:19.284" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:08:24.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:08:24.803" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:08:24.803" starttime="20201221 17:08:19.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:08:24.805" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:08:24.805" starttime="20201221 17:08:24.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:08:24.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:08:24.805" starttime="20201221 17:08:24.805"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:24.806" starttime="20201221 17:08:19.281"></status>
</kw>
<msg timestamp="20201221 17:08:24.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:08:24.806" starttime="20201221 17:08:19.281"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:24.806" starttime="20201221 17:08:19.280"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:08:24.806" critical="yes" starttime="20201221 17:07:45.544"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 17:08:24.811" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 17:08:24.811" starttime="20201221 17:08:24.811"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:08:24.812" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 17:08:24.812" starttime="20201221 17:08:24.812"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:24.812" starttime="20201221 17:08:24.810"></status>
</kw>
<msg timestamp="20201221 17:08:24.812" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 17:08:24.813" starttime="20201221 17:08:24.810"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:24.813" starttime="20201221 17:08:24.809"></status>
</kw>
<msg timestamp="20201221 17:08:24.813" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 17:08:24.813" starttime="20201221 17:08:24.809"></status>
</kw>
<msg timestamp="20201221 17:08:24.813" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 17:08:24.813" starttime="20201221 17:08:24.808"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:08:24.817" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:08:28.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:08:28.255" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:08:28.256" starttime="20201221 17:08:24.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:08:28.257" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:08:28.257" starttime="20201221 17:08:28.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:08:28.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:08:28.257" starttime="20201221 17:08:28.257"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:28.258" starttime="20201221 17:08:24.814"></status>
</kw>
<msg timestamp="20201221 17:08:28.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:08:28.258" starttime="20201221 17:08:24.814"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:28.258" starttime="20201221 17:08:24.813"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:08:28.262" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:08:31.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:08:31.803" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201221 17:08:31.803" starttime="20201221 17:08:28.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:08:31.805" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201221 17:08:31.805" starttime="20201221 17:08:31.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:08:31.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:08:31.806" starttime="20201221 17:08:31.805"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:31.806" starttime="20201221 17:08:28.259"></status>
</kw>
<msg timestamp="20201221 17:08:31.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:08:31.806" starttime="20201221 17:08:28.259"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:31.806" starttime="20201221 17:08:28.258"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:08:31.806" critical="yes" starttime="20201221 17:08:24.807"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201221 17:08:31.808" starttime="20201221 17:07:45.487"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 17:10:34.315" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 17:10:34.315" starttime="20201221 17:10:34.314"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:10:34.315" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 17:10:34.316" starttime="20201221 17:10:34.315"></status>
</kw>
<status status="PASS" endtime="20201221 17:10:34.316" starttime="20201221 17:10:34.314"></status>
</kw>
<msg timestamp="20201221 17:10:34.316" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 17:10:34.316" starttime="20201221 17:10:34.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:10:34.317" starttime="20201221 17:10:34.317"></status>
</kw>
<msg timestamp="20201221 17:10:34.317" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 17:10:34.317" starttime="20201221 17:10:34.316"></status>
</kw>
<status status="PASS" endtime="20201221 17:10:34.317" starttime="20201221 17:10:34.313"></status>
</kw>
<msg timestamp="20201221 17:10:34.317" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 17:10:34.317" starttime="20201221 17:10:34.312"></status>
</kw>
<msg timestamp="20201221 17:10:34.318" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 17:10:34.318" starttime="20201221 17:10:34.311"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 17:10:34.318" level="INFO">${random} = 86062</msg>
<status status="PASS" endtime="20201221 17:10:34.318" starttime="20201221 17:10:34.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:10:34.324" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-86062 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:10:38.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:10:38.022" level="INFO">${output} = 2020-12-21 17:10:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:10:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:10:38.022" starttime="20201221 17:10:34.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:10:38.023" level="INFO">2020-12-21 17:10:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:10:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:10:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 17:10:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 17:10:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-56EE69733F5A-&gt;29b24b13-309e-4851-b57f-fc1747f28815
2020-12-21 17:10:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201221 17:10:38.023" starttime="20201221 17:10:38.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:10:38.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:10:38.024" starttime="20201221 17:10:38.024"></status>
</kw>
<status status="PASS" endtime="20201221 17:10:38.025" starttime="20201221 17:10:34.319"></status>
</kw>
<msg timestamp="20201221 17:10:38.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:10:38.025" starttime="20201221 17:10:34.319"></status>
</kw>
<msg timestamp="20201221 17:10:38.025" level="INFO">${result} = 2020-12-21 17:10:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:10:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:10:38.025" starttime="20201221 17:10:34.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:10:38.030" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:10:40.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:10:40.123" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 17:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 17:09 ofs://om/volume1/bucket1/ozone-65756
-rw-...</msg>
<status status="PASS" endtime="20201221 17:10:40.123" starttime="20201221 17:10:38.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:10:40.124" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 17:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 17:09 ofs://om/volume1/bucket1/ozone-65756
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 17:10 ofs://om/volume1/bucket1/ozone-86062
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 17:08 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 17:10 ofs://om/volume1/bucket1/wordcount-95.txt</msg>
<status status="PASS" endtime="20201221 17:10:40.124" starttime="20201221 17:10:40.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:10:40.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:10:40.125" starttime="20201221 17:10:40.124"></status>
</kw>
<status status="PASS" endtime="20201221 17:10:40.125" starttime="20201221 17:10:38.027"></status>
</kw>
<msg timestamp="20201221 17:10:40.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:10:40.125" starttime="20201221 17:10:38.027"></status>
</kw>
<msg timestamp="20201221 17:10:40.125" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 17:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 17:09 ofs://om/volume1/bucket1/ozone-65756
-rw-...</msg>
<status status="PASS" endtime="20201221 17:10:40.125" starttime="20201221 17:10:38.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:10:40.126" starttime="20201221 17:10:40.126"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:10:40.126" critical="yes" starttime="20201221 17:10:34.310"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201221 17:10:40.127" starttime="20201221 17:10:34.254"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 17:08:59.243" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 17:08:59.243" starttime="20201221 17:08:59.242"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:08:59.243" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 17:08:59.243" starttime="20201221 17:08:59.243"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:59.243" starttime="20201221 17:08:59.242"></status>
</kw>
<msg timestamp="20201221 17:08:59.244" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 17:08:59.244" starttime="20201221 17:08:59.241"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:59.244" starttime="20201221 17:08:59.240"></status>
</kw>
<msg timestamp="20201221 17:08:59.244" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 17:08:59.244" starttime="20201221 17:08:59.240"></status>
</kw>
<msg timestamp="20201221 17:08:59.244" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 17:08:59.244" starttime="20201221 17:08:59.239"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 17:08:59.245" level="INFO">${random} = 65756</msg>
<status status="PASS" endtime="20201221 17:08:59.245" starttime="20201221 17:08:59.244"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:08:59.250" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-65756 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:09:05.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:09:05.913" level="INFO">${output} = 2020-12-21 17:09:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:09:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:09:05.913" starttime="20201221 17:08:59.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:09:05.914" level="INFO">2020-12-21 17:09:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:09:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:09:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 17:09:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 17:09:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3F4E8E6B95DC-&gt;29b24b13-309e-4851-b57f-fc1747f28815
2020-12-21 17:09:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201221 17:09:05.915" starttime="20201221 17:09:05.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:09:05.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:09:05.915" starttime="20201221 17:09:05.915"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:05.915" starttime="20201221 17:08:59.246"></status>
</kw>
<msg timestamp="20201221 17:09:05.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:09:05.916" starttime="20201221 17:08:59.245"></status>
</kw>
<msg timestamp="20201221 17:09:05.916" level="INFO">${result} = 2020-12-21 17:09:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:09:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201221 17:09:05.916" starttime="20201221 17:08:59.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:09:05.921" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:09:08.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:09:08.018" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 17:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 17:09 o3fs://bucket1.volume1.om/ozone-65756
dr...</msg>
<status status="PASS" endtime="20201221 17:09:08.018" starttime="20201221 17:09:05.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:09:08.019" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 17:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 17:09 o3fs://bucket1.volume1.om/ozone-65756
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 17:08 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201221 17:09:08.019" starttime="20201221 17:09:08.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:09:08.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:09:08.020" starttime="20201221 17:09:08.019"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:08.020" starttime="20201221 17:09:05.918"></status>
</kw>
<msg timestamp="20201221 17:09:08.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:09:08.020" starttime="20201221 17:09:05.917"></status>
</kw>
<msg timestamp="20201221 17:09:08.020" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-21 17:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-21 17:09 o3fs://bucket1.volume1.om/ozone-65756
dr...</msg>
<status status="PASS" endtime="20201221 17:09:08.020" starttime="20201221 17:09:05.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:09:08.021" starttime="20201221 17:09:08.021"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:09:08.021" critical="yes" starttime="20201221 17:08:59.238"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201221 17:09:08.022" starttime="20201221 17:08:59.185"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:08:53.801" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:08:53.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:08:53.804" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201221 17:08:53.804" starttime="20201221 17:08:53.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:08:53.805" level="INFO">rm</msg>
<status status="PASS" endtime="20201221 17:08:53.805" starttime="20201221 17:08:53.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:08:53.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:08:53.806" starttime="20201221 17:08:53.805"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:53.806" starttime="20201221 17:08:53.796"></status>
</kw>
<msg timestamp="20201221 17:08:53.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:08:53.806" starttime="20201221 17:08:53.796"></status>
</kw>
<msg timestamp="20201221 17:08:53.806" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201221 17:08:53.806" starttime="20201221 17:08:53.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:08:53.808" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:08:53.808" starttime="20201221 17:08:53.807"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:08:53.813" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:08:53.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:08:53.827" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:08:53.827" starttime="20201221 17:08:53.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:08:53.828" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:08:53.828" starttime="20201221 17:08:53.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:08:53.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:08:53.829" starttime="20201221 17:08:53.828"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:53.829" starttime="20201221 17:08:53.809"></status>
</kw>
<msg timestamp="20201221 17:08:53.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:08:53.829" starttime="20201221 17:08:53.809"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:53.830" starttime="20201221 17:08:53.808"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:53.830" starttime="20201221 17:08:53.808"></status>
</kw>
<status status="PASS" endtime="20201221 17:08:53.830" starttime="20201221 17:08:53.795"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:08:53.830" critical="yes" starttime="20201221 17:08:53.794"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201221 17:08:53.831" starttime="20201221 17:08:53.746"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:07:40.113" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:07:40.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:07:40.116" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201221 17:07:40.116" starttime="20201221 17:07:40.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:07:40.117" level="INFO">om</msg>
<status status="PASS" endtime="20201221 17:07:40.117" starttime="20201221 17:07:40.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:07:40.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:07:40.118" starttime="20201221 17:07:40.117"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:40.118" starttime="20201221 17:07:40.109"></status>
</kw>
<msg timestamp="20201221 17:07:40.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:07:40.118" starttime="20201221 17:07:40.109"></status>
</kw>
<msg timestamp="20201221 17:07:40.119" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201221 17:07:40.119" starttime="20201221 17:07:40.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201221 17:07:40.119" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201221 17:07:40.119" starttime="20201221 17:07:40.119"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:07:40.123" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:07:40.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:07:40.136" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:07:40.136" starttime="20201221 17:07:40.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:07:40.137" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:07:40.137" starttime="20201221 17:07:40.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:07:40.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:07:40.138" starttime="20201221 17:07:40.137"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:40.138" starttime="20201221 17:07:40.121"></status>
</kw>
<msg timestamp="20201221 17:07:40.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:07:40.138" starttime="20201221 17:07:40.120"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:40.138" starttime="20201221 17:07:40.120"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:40.138" starttime="20201221 17:07:40.119"></status>
</kw>
<status status="PASS" endtime="20201221 17:07:40.139" starttime="20201221 17:07:40.107"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201221 17:07:40.139" critical="yes" starttime="20201221 17:07:40.107"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201221 17:07:40.140" starttime="20201221 17:07:40.056"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:10:45.656" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:10:45.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:10:45.661" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:10:45.661" starttime="20201221 17:10:45.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:10:45.662" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:10:45.662" starttime="20201221 17:10:45.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:10:45.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:10:45.663" starttime="20201221 17:10:45.663"></status>
</kw>
<status status="PASS" endtime="20201221 17:10:45.663" starttime="20201221 17:10:45.652"></status>
</kw>
<msg timestamp="20201221 17:10:45.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:10:45.664" starttime="20201221 17:10:45.652"></status>
</kw>
<msg timestamp="20201221 17:10:45.664" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:10:45.664" starttime="20201221 17:10:45.651"></status>
</kw>
<msg timestamp="20201221 17:10:45.664" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:10:45.664" starttime="20201221 17:10:45.651"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 17:10:45.669" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 17:10:45.669" starttime="20201221 17:10:45.669"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:10:45.670" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 17:10:45.670" starttime="20201221 17:10:45.669"></status>
</kw>
<status status="PASS" endtime="20201221 17:10:45.670" starttime="20201221 17:10:45.667"></status>
</kw>
<msg timestamp="20201221 17:10:45.670" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 17:10:45.670" starttime="20201221 17:10:45.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:10:45.671" starttime="20201221 17:10:45.671"></status>
</kw>
<msg timestamp="20201221 17:10:45.671" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 17:10:45.671" starttime="20201221 17:10:45.670"></status>
</kw>
<status status="PASS" endtime="20201221 17:10:45.671" starttime="20201221 17:10:45.666"></status>
</kw>
<msg timestamp="20201221 17:10:45.671" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 17:10:45.671" starttime="20201221 17:10:45.665"></status>
</kw>
<msg timestamp="20201221 17:10:45.672" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 17:10:45.672" starttime="20201221 17:10:45.664"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:10:45.675" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:11:17.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:11:17.948" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 17:10:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:10:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201221 17:11:17.949" starttime="20201221 17:10:45.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:11:17.950" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-21 17:10:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:10:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:10:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 17:10:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 17:10:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DDB1F5969991-&gt;29b24b13-309e-4851-b57f-fc1747f28815
2020-12-21 17:10:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-21 17:10:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-21 17:10:49 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-12-21 17:10:50 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570649960, maxDate=1609175449960, sequenceNumber=3, masterKeyId=2))
2020-12-21 17:10:50 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f0 f9 a0 b2 e8 2e 38 f0 81 d3 d2 ea 2e 40 03 48 01 5a 0d 33 32 35 32 36 35 36 36 33 32 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-21 17:10:50 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570649960, maxDate=1609175449960, sequenceNumber=3, masterKeyId=2)
2020-12-21 17:10:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 17:10:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 17:10:50 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 17:10:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608570409753_0003
2020-12-21 17:10:50 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f0 f9 a0 b2 e8 2e 38 f0 81 d3 d2 ea 2e 40 03 48 01 5a 0d 33 32 35 32 36 35 36 36 33 32 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570649960, maxDate=1609175449960, sequenceNumber=3, masterKeyId=2)]
2020-12-21 17:10:51 INFO  Configuration:2795 - resource-types.xml not found
2020-12-21 17:10:51 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-21 17:10:51 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-21 17:10:51 INFO  YarnClientImpl:329 - Submitted application application_1608570409753_0003
2020-12-21 17:10:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608570409753_0003/
2020-12-21 17:10:51 INFO  Job:1619 - Running job: job_1608570409753_0003
2020-12-21 17:11:00 INFO  Job:1640 - Job job_1608570409753_0003 running in uber mode : false
2020-12-21 17:11:00 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 17:11:10 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 17:11:12 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 17:11:17 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 17:11:17 INFO  Job:1658 - Job job_1608570409753_0003 completed successfully
2020-12-21 17:11:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065777
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45164
		Total time spent by all reduces in occupied slots (ms)=7944
		Total time spent by all map tasks (ms)=22582
		Total time spent by all reduce tasks (ms)=3972
		Total vcore-milliseconds taken by all map tasks=22582
		Total vcore-milliseconds taken by all reduce tasks=3972
		Total megabyte-milliseconds taken by all map tasks=46247936
		Total megabyte-milliseconds taken by all reduce tasks=8134656
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1206
		CPU time spent (ms)=7430
		Physical memory (bytes) snapshot=1439121408
		Virtual memory (bytes) snapshot=14022610944
		Total committed heap usage (bytes)=1268776960
		Peak Map Physical memory (bytes)=388071424
		Peak Map Virtual memory (bytes)=3509604352
		Peak Reduce Physical memory (bytes)=307015680
		Peak Reduce Virtual memory (bytes)=3526443008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.895 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201221 17:11:17.950" starttime="20201221 17:11:17.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:11:17.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:11:17.951" starttime="20201221 17:11:17.950"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.951" starttime="20201221 17:10:45.673"></status>
</kw>
<msg timestamp="20201221 17:11:17.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:11:17.951" starttime="20201221 17:10:45.673"></status>
</kw>
<msg timestamp="20201221 17:11:17.952" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 17:10:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:10:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201221 17:11:17.952" starttime="20201221 17:10:45.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 17:11:17.952" starttime="20201221 17:11:17.952"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 17:11:17.952" critical="yes" starttime="20201221 17:10:45.650"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:11:17.958" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:11:17.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:11:17.964" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:11:17.964" starttime="20201221 17:11:17.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:11:17.965" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:11:17.965" starttime="20201221 17:11:17.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:11:17.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:11:17.966" starttime="20201221 17:11:17.966"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.966" starttime="20201221 17:11:17.955"></status>
</kw>
<msg timestamp="20201221 17:11:17.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:11:17.966" starttime="20201221 17:11:17.955"></status>
</kw>
<msg timestamp="20201221 17:11:17.967" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:11:17.967" starttime="20201221 17:11:17.954"></status>
</kw>
<msg timestamp="20201221 17:11:17.967" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:11:17.967" starttime="20201221 17:11:17.954"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 17:11:17.968" level="INFO">${random} = 01</msg>
<status status="PASS" endtime="20201221 17:11:17.968" starttime="20201221 17:11:17.967"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 17:11:17.972" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 17:11:17.972" starttime="20201221 17:11:17.971"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:11:17.972" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 17:11:17.972" starttime="20201221 17:11:17.972"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.973" starttime="20201221 17:11:17.971"></status>
</kw>
<msg timestamp="20201221 17:11:17.973" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 17:11:17.973" starttime="20201221 17:11:17.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201221 17:11:17.974" starttime="20201221 17:11:17.973"></status>
</kw>
<msg timestamp="20201221 17:11:17.974" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201221 17:11:17.974" starttime="20201221 17:11:17.973"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.974" starttime="20201221 17:11:17.969"></status>
</kw>
<msg timestamp="20201221 17:11:17.974" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 17:11:17.974" starttime="20201221 17:11:17.969"></status>
</kw>
<msg timestamp="20201221 17:11:17.975" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201221 17:11:17.975" starttime="20201221 17:11:17.968"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 17:11:17.978" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 17:11:17.978" starttime="20201221 17:11:17.978"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:11:17.979" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 17:11:17.979" starttime="20201221 17:11:17.979"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.979" starttime="20201221 17:11:17.977"></status>
</kw>
<msg timestamp="20201221 17:11:17.979" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 17:11:17.979" starttime="20201221 17:11:17.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 17:11:17.981" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201221 17:11:17.981" starttime="20201221 17:11:17.981"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:11:17.982" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201221 17:11:17.982" starttime="20201221 17:11:17.981"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.982" starttime="20201221 17:11:17.980"></status>
</kw>
<msg timestamp="20201221 17:11:17.982" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201221 17:11:17.982" starttime="20201221 17:11:17.980"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.982" starttime="20201221 17:11:17.976"></status>
</kw>
<msg timestamp="20201221 17:11:17.982" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201221 17:11:17.982" starttime="20201221 17:11:17.976"></status>
</kw>
<msg timestamp="20201221 17:11:17.983" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201221 17:11:17.983" starttime="20201221 17:11:17.975"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201221 17:11:17.986" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201221 17:11:17.986" starttime="20201221 17:11:17.986"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:11:17.987" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201221 17:11:17.987" starttime="20201221 17:11:17.986"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.987" starttime="20201221 17:11:17.985"></status>
</kw>
<msg timestamp="20201221 17:11:17.987" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201221 17:11:17.987" starttime="20201221 17:11:17.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 17:11:17.989" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201221 17:11:17.989" starttime="20201221 17:11:17.988"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:11:17.989" level="INFO">${result} = /wordcount-01.txt</msg>
<status status="PASS" endtime="20201221 17:11:17.989" starttime="20201221 17:11:17.989"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.990" starttime="20201221 17:11:17.988"></status>
</kw>
<msg timestamp="20201221 17:11:17.990" level="INFO">${path_with_leading} = /wordcount-01.txt</msg>
<status status="PASS" endtime="20201221 17:11:17.990" starttime="20201221 17:11:17.987"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:17.990" starttime="20201221 17:11:17.984"></status>
</kw>
<msg timestamp="20201221 17:11:17.990" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-01.txt</msg>
<status status="PASS" endtime="20201221 17:11:17.990" starttime="20201221 17:11:17.984"></status>
</kw>
<msg timestamp="20201221 17:11:17.990" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-01.txt</msg>
<status status="PASS" endtime="20201221 17:11:17.990" starttime="20201221 17:11:17.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:11:17.994" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-01.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:11:51.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:11:51.671" level="INFO">${output} = 2020-12-21 17:11:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-21 17:11:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201221 17:11:51.671" starttime="20201221 17:11:17.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:11:51.672" level="INFO">2020-12-21 17:11:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-21 17:11:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-12-21 17:11:20 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570680480, maxDate=1609175480480, sequenceNumber=4, masterKeyId=2))
2020-12-21 17:11:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ca e8 a2 b2 e8 2e 38 ca f0 d4 d2 ea 2e 40 04 48 01 5a 0d 33 32 35 32 36 35 36 36 33 32 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-21 17:11:20 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570680480, maxDate=1609175480480, sequenceNumber=4, masterKeyId=2)
2020-12-21 17:11:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 17:11:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:11:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:11:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 17:11:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 17:11:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3BA3075C8613-&gt;29b24b13-309e-4851-b57f-fc1747f28815
2020-12-21 17:11:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 17:11:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 17:11:22 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 17:11:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608570409753_0004
2020-12-21 17:11:22 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ca e8 a2 b2 e8 2e 38 ca f0 d4 d2 ea 2e 40 04 48 01 5a 0d 33 32 35 32 36 35 36 36 33 32 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570680480, maxDate=1609175480480, sequenceNumber=4, masterKeyId=2)]
2020-12-21 17:11:22 INFO  Configuration:2795 - resource-types.xml not found
2020-12-21 17:11:23 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-21 17:11:23 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-21 17:11:23 INFO  YarnClientImpl:329 - Submitted application application_1608570409753_0004
2020-12-21 17:11:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608570409753_0004/
2020-12-21 17:11:23 INFO  Job:1619 - Running job: job_1608570409753_0004
2020-12-21 17:11:32 INFO  Job:1640 - Job job_1608570409753_0004 running in uber mode : false
2020-12-21 17:11:32 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 17:11:43 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 17:11:45 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 17:11:46 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 17:11:50 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 17:11:51 INFO  Job:1658 - Job job_1608570409753_0004 completed successfully
2020-12-21 17:11:51 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128427
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50430
		Total time spent by all reduces in occupied slots (ms)=7732
		Total time spent by all map tasks (ms)=25215
		Total time spent by all reduce tasks (ms)=3866
		Total vcore-milliseconds taken by all map tasks=25215
		Total vcore-milliseconds taken by all reduce tasks=3866
		Total megabyte-milliseconds taken by all map tasks=51640320
		Total megabyte-milliseconds taken by all reduce tasks=7917568
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1628
		CPU time spent (ms)=8450
		Physical memory (bytes) snapshot=1598562304
		Virtual memory (bytes) snapshot=14031908864
		Total committed heap usage (bytes)=1427636224
		Peak Map Physical memory (bytes)=544124928
		Peak Map Virtual memory (bytes)=3508350976
		Peak Reduce Physical memory (bytes)=272773120
		Peak Reduce Virtual memory (bytes)=3508396032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201221 17:11:51.672" starttime="20201221 17:11:51.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:11:51.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:11:51.673" starttime="20201221 17:11:51.672"></status>
</kw>
<status status="PASS" endtime="20201221 17:11:51.673" starttime="20201221 17:11:17.992"></status>
</kw>
<msg timestamp="20201221 17:11:51.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:11:51.673" starttime="20201221 17:11:17.991"></status>
</kw>
<msg timestamp="20201221 17:11:51.674" level="INFO">${output} = 2020-12-21 17:11:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-21 17:11:20 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201221 17:11:51.674" starttime="20201221 17:11:17.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201221 17:11:51.674" starttime="20201221 17:11:51.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 17:11:51.675" starttime="20201221 17:11:51.675"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 17:11:51.675" critical="yes" starttime="20201221 17:11:17.953"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201221 17:11:51.676" starttime="20201221 17:10:45.598"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:09:13.386" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:09:13.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:09:13.393" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:09:13.393" starttime="20201221 17:09:13.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:09:13.394" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:09:13.394" starttime="20201221 17:09:13.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:09:13.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:09:13.395" starttime="20201221 17:09:13.394"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:13.395" starttime="20201221 17:09:13.382"></status>
</kw>
<msg timestamp="20201221 17:09:13.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:09:13.395" starttime="20201221 17:09:13.381"></status>
</kw>
<msg timestamp="20201221 17:09:13.395" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:09:13.395" starttime="20201221 17:09:13.381"></status>
</kw>
<msg timestamp="20201221 17:09:13.396" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:09:13.396" starttime="20201221 17:09:13.380"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 17:09:13.400" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 17:09:13.400" starttime="20201221 17:09:13.400"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:09:13.401" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 17:09:13.401" starttime="20201221 17:09:13.400"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:13.401" starttime="20201221 17:09:13.398"></status>
</kw>
<msg timestamp="20201221 17:09:13.401" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 17:09:13.401" starttime="20201221 17:09:13.398"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:13.402" starttime="20201221 17:09:13.397"></status>
</kw>
<msg timestamp="20201221 17:09:13.402" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 17:09:13.402" starttime="20201221 17:09:13.397"></status>
</kw>
<msg timestamp="20201221 17:09:13.402" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 17:09:13.402" starttime="20201221 17:09:13.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:09:13.406" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:09:51.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:09:51.199" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 17:09:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:09:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201221 17:09:51.199" starttime="20201221 17:09:13.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:09:51.200" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-21 17:09:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:09:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:09:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 17:09:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 17:09:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D6BECD484E84-&gt;29b24b13-309e-4851-b57f-fc1747f28815
2020-12-21 17:09:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-21 17:09:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-21 17:09:17 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-12-21 17:09:17 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570557808, maxDate=1609175357808, sequenceNumber=1, masterKeyId=2))
2020-12-21 17:09:17 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 80 a8 9b b2 e8 2e 38 80 b0 cd d2 ea 2e 40 01 48 01 5a 0d 33 32 35 32 36 35 36 36 33 32 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-21 17:09:17 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570557808, maxDate=1609175357808, sequenceNumber=1, masterKeyId=2)
2020-12-21 17:09:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 17:09:18 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 17:09:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608570409753_0001
2020-12-21 17:09:18 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 80 a8 9b b2 e8 2e 38 80 b0 cd d2 ea 2e 40 01 48 01 5a 0d 33 32 35 32 36 35 36 36 33 32 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570557808, maxDate=1609175357808, sequenceNumber=1, masterKeyId=2)]
2020-12-21 17:09:19 INFO  Configuration:2795 - resource-types.xml not found
2020-12-21 17:09:19 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-21 17:09:19 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-21 17:09:20 INFO  YarnClientImpl:329 - Submitted application application_1608570409753_0001
2020-12-21 17:09:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608570409753_0001/
2020-12-21 17:09:20 INFO  Job:1619 - Running job: job_1608570409753_0001
2020-12-21 17:09:32 INFO  Job:1640 - Job job_1608570409753_0001 running in uber mode : false
2020-12-21 17:09:32 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 17:09:42 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 17:09:44 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 17:09:45 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 17:09:49 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 17:09:50 INFO  Job:1658 - Job job_1608570409753_0001 completed successfully
2020-12-21 17:09:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065997
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48068
		Total time spent by all reduces in occupied slots (ms)=8392
		Total time spent by all map tasks (ms)=24034
		Total time spent by all reduce tasks (ms)=4196
		Total vcore-milliseconds taken by all map tasks=24034
		Total vcore-milliseconds taken by all reduce tasks=4196
		Total megabyte-milliseconds taken by all map tasks=49221632
		Total megabyte-milliseconds taken by all reduce tasks=8593408
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1204
		CPU time spent (ms)=7640
		Physical memory (bytes) snapshot=1450725376
		Virtual memory (bytes) snapshot=14052184064
		Total committed heap usage (bytes)=1213202432
		Peak Map Physical memory (bytes)=389189632
		Peak Map Virtual memory (bytes)=3509608448
		Peak Reduce Physical memory (bytes)=302125056
		Peak Reduce Virtual memory (bytes)=3526582272
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.612 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201221 17:09:51.201" starttime="20201221 17:09:51.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:09:51.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:09:51.201" starttime="20201221 17:09:51.201"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:51.202" starttime="20201221 17:09:13.403"></status>
</kw>
<msg timestamp="20201221 17:09:51.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:09:51.202" starttime="20201221 17:09:13.403"></status>
</kw>
<msg timestamp="20201221 17:09:51.202" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-21 17:09:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:09:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201221 17:09:51.202" starttime="20201221 17:09:13.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 17:09:51.203" starttime="20201221 17:09:51.203"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 17:09:51.203" critical="yes" starttime="20201221 17:09:13.380"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:09:51.212" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:09:51.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:09:51.220" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:09:51.220" starttime="20201221 17:09:51.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:09:51.221" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:09:51.222" starttime="20201221 17:09:51.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:09:51.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:09:51.222" starttime="20201221 17:09:51.222"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:51.222" starttime="20201221 17:09:51.209"></status>
</kw>
<msg timestamp="20201221 17:09:51.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:09:51.223" starttime="20201221 17:09:51.209"></status>
</kw>
<msg timestamp="20201221 17:09:51.223" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:09:51.223" starttime="20201221 17:09:51.208"></status>
</kw>
<msg timestamp="20201221 17:09:51.223" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201221 17:09:51.223" starttime="20201221 17:09:51.205"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 17:09:51.224" level="INFO">${random} = 95</msg>
<status status="PASS" endtime="20201221 17:09:51.224" starttime="20201221 17:09:51.223"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 17:09:51.228" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 17:09:51.228" starttime="20201221 17:09:51.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:09:51.228" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 17:09:51.228" starttime="20201221 17:09:51.228"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:51.229" starttime="20201221 17:09:51.227"></status>
</kw>
<msg timestamp="20201221 17:09:51.229" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 17:09:51.229" starttime="20201221 17:09:51.226"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:51.230" starttime="20201221 17:09:51.226"></status>
</kw>
<msg timestamp="20201221 17:09:51.230" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 17:09:51.231" starttime="20201221 17:09:51.225"></status>
</kw>
<msg timestamp="20201221 17:09:51.231" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201221 17:09:51.231" starttime="20201221 17:09:51.224"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 17:09:51.234" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 17:09:51.234" starttime="20201221 17:09:51.234"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:09:51.235" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 17:09:51.235" starttime="20201221 17:09:51.235"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:51.235" starttime="20201221 17:09:51.233"></status>
</kw>
<msg timestamp="20201221 17:09:51.235" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 17:09:51.235" starttime="20201221 17:09:51.233"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:51.236" starttime="20201221 17:09:51.232"></status>
</kw>
<msg timestamp="20201221 17:09:51.236" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201221 17:09:51.236" starttime="20201221 17:09:51.232"></status>
</kw>
<msg timestamp="20201221 17:09:51.236" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201221 17:09:51.236" starttime="20201221 17:09:51.231"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201221 17:09:51.239" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201221 17:09:51.239" starttime="20201221 17:09:51.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201221 17:09:51.240" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201221 17:09:51.240" starttime="20201221 17:09:51.240"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:51.240" starttime="20201221 17:09:51.238"></status>
</kw>
<msg timestamp="20201221 17:09:51.240" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201221 17:09:51.241" starttime="20201221 17:09:51.238"></status>
</kw>
<status status="PASS" endtime="20201221 17:09:51.241" starttime="20201221 17:09:51.237"></status>
</kw>
<msg timestamp="20201221 17:09:51.241" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-95.txt</msg>
<status status="PASS" endtime="20201221 17:09:51.241" starttime="20201221 17:09:51.237"></status>
</kw>
<msg timestamp="20201221 17:09:51.241" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-95.txt</msg>
<status status="PASS" endtime="20201221 17:09:51.241" starttime="20201221 17:09:51.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:09:51.245" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-95.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:10:28.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:10:28.132" level="INFO">${output} = 2020-12-21 17:09:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-21 17:09:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201221 17:10:28.132" starttime="20201221 17:09:51.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:10:28.133" level="INFO">2020-12-21 17:09:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-21 17:09:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
2020-12-21 17:09:53 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570593813, maxDate=1609175393813, sequenceNumber=2, masterKeyId=2))
2020-12-21 17:09:53 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b0 c3 9d b2 e8 2e 38 b0 cb cf d2 ea 2e 40 02 48 01 5a 0d 33 32 35 32 36 35 36 36 33 32 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-21 17:09:53 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570593813, maxDate=1609175393813, sequenceNumber=2, masterKeyId=2)
2020-12-21 17:09:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-21 17:09:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-21 17:09:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:09:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-21 17:09:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 17:09:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C497E897AC11-&gt;29b24b13-309e-4851-b57f-fc1747f28815
2020-12-21 17:09:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 17:09:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-21 17:09:56 INFO  JobSubmitter:202 - number of splits:3
2020-12-21 17:09:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608570409753_0002
2020-12-21 17:09:57 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b0 c3 9d b2 e8 2e 38 b0 cb cf d2 ea 2e 40 02 48 01 5a 0d 33 32 35 32 36 35 36 36 33 32 39 34 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608570593813, maxDate=1609175393813, sequenceNumber=2, masterKeyId=2)]
2020-12-21 17:09:57 INFO  Configuration:2795 - resource-types.xml not found
2020-12-21 17:09:57 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-21 17:09:57 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-21 17:09:58 INFO  YarnClientImpl:329 - Submitted application application_1608570409753_0002
2020-12-21 17:09:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608570409753_0002/
2020-12-21 17:09:58 INFO  Job:1619 - Running job: job_1608570409753_0002
2020-12-21 17:10:05 INFO  Job:1640 - Job job_1608570409753_0002 running in uber mode : false
2020-12-21 17:10:05 INFO  Job:1647 -  map 0% reduce 0%
2020-12-21 17:10:16 INFO  Job:1647 -  map 33% reduce 0%
2020-12-21 17:10:18 INFO  Job:1647 -  map 67% reduce 0%
2020-12-21 17:10:19 INFO  Job:1647 -  map 100% reduce 0%
2020-12-21 17:10:23 INFO  Job:1647 -  map 100% reduce 100%
2020-12-21 17:10:27 INFO  Job:1658 - Job job_1608570409753_0002 completed successfully
2020-12-21 17:10:27 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128511
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49216
		Total time spent by all reduces in occupied slots (ms)=8012
		Total time spent by all map tasks (ms)=24608
		Total time spent by all reduce tasks (ms)=4006
		Total vcore-milliseconds taken by all map tasks=24608
		Total vcore-milliseconds taken by all reduce tasks=4006
		Total megabyte-milliseconds taken by all map tasks=50397184
		Total megabyte-milliseconds taken by all reduce tasks=8204288
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1220
		CPU time spent (ms)=8210
		Physical memory (bytes) snapshot=1461657600
		Virtual memory (bytes) snapshot=14047944704
		Total committed heap usage (bytes)=1254621184
		Peak Map Physical memory (bytes)=395587584
		Peak Map Virtual memory (bytes)=3511586816
		Peak Reduce Physical memory (bytes)=300404736
		Peak Reduce Virtual memory (bytes)=3524280320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201221 17:10:28.133" starttime="20201221 17:10:28.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:10:28.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:10:28.134" starttime="20201221 17:10:28.133"></status>
</kw>
<status status="PASS" endtime="20201221 17:10:28.134" starttime="20201221 17:09:51.242"></status>
</kw>
<msg timestamp="20201221 17:10:28.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:10:28.134" starttime="20201221 17:09:51.242"></status>
</kw>
<msg timestamp="20201221 17:10:28.135" level="INFO">${output} = 2020-12-21 17:09:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.6:8032
2020-12-21 17:09:53 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.3:10200
202...</msg>
<status status="PASS" endtime="20201221 17:10:28.135" starttime="20201221 17:09:51.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201221 17:10:28.135" starttime="20201221 17:10:28.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201221 17:10:28.136" starttime="20201221 17:10:28.135"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201221 17:10:28.136" critical="yes" starttime="20201221 17:09:51.204"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201221 17:10:28.137" starttime="20201221 17:09:13.327"></status>
</suite>
<status status="PASS" elapsedtime="202088" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
