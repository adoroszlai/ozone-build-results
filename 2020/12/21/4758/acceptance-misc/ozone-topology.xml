<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201221 17:03:49.513" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20201221 17:00:38.765" starttime="20201221 17:00:38.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:00:38.771" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:00:38.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:00:38.860" level="INFO">${output} = HTTP/1.1 200 OK
Date: Mon, 21 Dec 2020 17:00:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 21 Dec 2020 16:02:14 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201221 17:00:38.860" starttime="20201221 17:00:38.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:00:38.861" level="INFO">HTTP/1.1 200 OK
Date: Mon, 21 Dec 2020 17:00:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 21 Dec 2020 16:02:14 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20201221 17:00:38.861" starttime="20201221 17:00:38.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:00:38.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:00:38.862" starttime="20201221 17:00:38.861"></status>
</kw>
<status status="PASS" endtime="20201221 17:00:38.862" starttime="20201221 17:00:38.766"></status>
</kw>
<msg timestamp="20201221 17:00:38.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:00:38.863" starttime="20201221 17:00:38.766"></status>
</kw>
<msg timestamp="20201221 17:00:38.863" level="INFO">${result} = HTTP/1.1 200 OK
Date: Mon, 21 Dec 2020 17:00:38 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Mon, 21 Dec 2020 16:02:14 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20201221 17:00:38.863" starttime="20201221 17:00:38.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20201221 17:00:38.863" starttime="20201221 17:00:38.863"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:00:38.863" critical="yes" starttime="20201221 17:00:38.764"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20201221 17:00:38.865" starttime="20201221 17:00:38.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:00:38.873" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:01:41.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:01:41.845" level="INFO">${output} = 2020-12-21 17:00:40,492 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:00:40,646 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:01:41.845" starttime="20201221 17:00:38.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:01:41.846" level="INFO">2020-12-21 17:00:40,492 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:00:40,646 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-21 17:00:40,646 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-21 17:00:42,748 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-12-21 17:00:42,749 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2020-12-21 17:00:42,749 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2020-12-21 17:00:42,750 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2020-12-21 17:00:42,750 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-12-21 17:00:42,750 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-12-21 17:00:42,750 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2020-12-21 17:00:42,756 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2020-12-21 17:00:42,757 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-12-21 17:00:42,763 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-12-21 17:00:42,809 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-31812, with hadoop as owner.
2020-12-21 17:00:43,063 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-64810, with hadoop as owner.
2020-12-21 17:00:43,071 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-94615, with hadoop as owner.
2020-12-21 17:00:43,078 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-62116, with hadoop as owner.
2020-12-21 17:00:43,086 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-52209, with hadoop as owner.
2020-12-21 17:00:43,101 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31812/bucket-0-34838, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,176 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64810/bucket-0-48885, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,184 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-94615/bucket-0-24680, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,193 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-62116/bucket-0-25931, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,201 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-52209/bucket-0-28663, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,207 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31812/bucket-1-16736, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,212 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64810/bucket-1-41441, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,218 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-94615/bucket-1-34189, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,233 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-62116/bucket-1-09707, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,259 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-52209/bucket-1-33245, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,273 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31812/bucket-2-93947, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,287 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64810/bucket-2-29828, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,299 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-94615/bucket-2-90831, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,318 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-62116/bucket-2-55626, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,335 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-52209/bucket-2-87597, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,347 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31812/bucket-3-67251, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,357 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64810/bucket-3-72624, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,362 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-94615/bucket-3-26305, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,370 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-62116/bucket-3-90408, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,378 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-52209/bucket-3-43630, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,384 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-31812/bucket-4-42873, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,390 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-64810/bucket-4-54696, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,397 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-94615/bucket-4-39002, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,402 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-62116/bucket-4-73945, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,409 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-52209/bucket-4-56271, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-21 17:00:43,768 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2020-12-21 17:00:44,414 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-21 17:00:44,729 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-21 17:00:44,729 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-EC341C16F58C-&gt;d5cbc868-c868-4417-a1ac-b8e7aa5ac958
2020-12-21 17:00:44,730 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 17:00:44,768 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-12-21 17:00:45,768 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-12-21 17:00:46,769 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2020-12-21 17:00:47,562 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-2A922D7E0467-&gt;428b68c4-893a-4430-9edb-2920c3bd7547
2020-12-21 17:00:47,575 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 17:00:47,786 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-12-21 17:00:48,786 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2020-12-21 17:00:49,705 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1DC3077A5152-&gt;562e86c6-7e5c-40a5-94f4-51b35ab1f19f
2020-12-21 17:00:49,722 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-21 17:00:49,794 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-12-21 17:00:50,795 [Thread-7] INFO freon.ProgressBar: Progress: 2.40 % (3 out of 125)
2020-12-21 17:00:51,796 [Thread-7] INFO freon.ProgressBar: Progress: 6.40 % (8 out of 125)
2020-12-21 17:00:52,796 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2020-12-21 17:00:53,797 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-12-21 17:00:54,797 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-12-21 17:00:55,797 [Thread-7] INFO freon.ProgressBar: Progress: 16.00 % (20 out of 125)
2020-12-21 17:00:56,798 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-12-21 17:00:57,798 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-12-21 17:00:58,799 [Thread-7] INFO freon.ProgressBar: Progress: 20.80 % (26 out of 125)
2020-12-21 17:00:59,799 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-12-21 17:01:00,800 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-12-21 17:01:01,800 [Thread-7] INFO freon.ProgressBar: Progress: 24.80 % (31 out of 125)
2020-12-21 17:01:02,800 [Thread-7] INFO freon.ProgressBar: Progress: 32.80 % (41 out of 125)
2020-12-21 17:01:03,801 [Thread-7] INFO freon.ProgressBar: Progress: 42.40 % (53 out of 125)
2020-12-21 17:01:04,801 [Thread-7] INFO freon.ProgressBar: Progress: 52.00 % (65 out of 125)
2020-12-21 17:01:05,802 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-12-21 17:01:06,802 [Thread-7] INFO freon.ProgressBar: Progress: 52.80 % (66 out of 125)
2020-12-21 17:01:07,803 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-12-21 17:01:08,803 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-12-21 17:01:09,804 [Thread-7] INFO freon.ProgressBar: Progress: 56.80 % (71 out of 125)
2020-12-21 17:01:10,804 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-12-21 17:01:11,805 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-12-21 17:01:12,805 [Thread-7] INFO freon.ProgressBar: Progress: 57.60 % (72 out of 125)
2020-12-21 17:01:13,806 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-12-21 17:01:14,806 [Thread-7] INFO freon.ProgressBar: Progress: 59.20 % (74 out of 125)
2020-12-21 17:01:15,807 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-12-21 17:01:16,807 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-12-21 17:01:17,808 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2020-12-21 17:01:18,812 [Thread-7] INFO freon.ProgressBar: Progress: 69.60 % (87 out of 125)
2020-12-21 17:01:19,813 [Thread-7] INFO freon.ProgressBar: Progress: 80.80 % (101 out of 125)
2020-12-21 17:01:20,813 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-12-21 17:01:21,814 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2020-12-21 17:01:22,814 [Thread-7] INFO freon.ProgressBar: Progress: 87.20 % (109 out of 125)
2020-12-21 17:01:23,815 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-12-21 17:01:24,815 [Thread-7] INFO freon.ProgressBar: Progress: 88.00 % (110 out of 125)
2020-12-21 17:01:25,816 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-12-21 17:01:26,816 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-12-21 17:01:27,816 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2020-12-21 17:01:28,817 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-12-21 17:01:29,817 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-12-21 17:01:30,818 [Thread-7] INFO freon.ProgressBar: Progress: 95.20 % (119 out of 125)
2020-12-21 17:01:31,818 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-12-21 17:01:32,819 [Thread-7] INFO freon.ProgressBar: Progress: 96.00 % (120 out of 125)
2020-12-21 17:01:33,819 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,294
Average Time spent in bucket creation: 00:00:00,226
Average Time spent in key creation: 00:00:02,505
Average Time spent in key write: 00:00:00,863
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:01:00,679
***************************************************</msg>
<status status="PASS" endtime="20201221 17:01:41.846" starttime="20201221 17:01:41.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:01:41.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:01:41.847" starttime="20201221 17:01:41.847"></status>
</kw>
<status status="PASS" endtime="20201221 17:01:41.847" starttime="20201221 17:00:38.867"></status>
</kw>
<msg timestamp="20201221 17:01:41.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:01:41.848" starttime="20201221 17:00:38.867"></status>
</kw>
<msg timestamp="20201221 17:01:41.848" level="INFO">${result} = 2020-12-21 17:00:40,492 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-21 17:00:40,646 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201221 17:01:41.848" starttime="20201221 17:00:38.865"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20201221 17:01:41.849" starttime="20201221 17:01:41.848"></status>
</kw>
<status status="PASS" endtime="20201221 17:01:41.849" starttime="20201221 17:01:41.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20201221 17:01:41.849" starttime="20201221 17:01:41.849"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:01:41.849" critical="yes" starttime="20201221 17:00:38.864"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201221 17:01:41.851" starttime="20201221 17:00:38.714"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:01:46.421" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:01:49.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:01:49.237" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDA...</msg>
<status status="PASS" endtime="20201221 17:01:49.237" starttime="20201221 17:01:46.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:01:49.239" level="INFO">State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" endtime="20201221 17:01:49.239" starttime="20201221 17:01:49.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:01:49.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:01:49.239" starttime="20201221 17:01:49.239"></status>
</kw>
<status status="PASS" endtime="20201221 17:01:49.240" starttime="20201221 17:01:46.416"></status>
</kw>
<msg timestamp="20201221 17:01:49.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:01:49.240" starttime="20201221 17:01:46.416"></status>
</kw>
<msg timestamp="20201221 17:01:49.240" level="INFO">${output} = State = HEALTHY
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):RATIS=9858,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):RATIS=9858,STANDA...</msg>
<status status="PASS" endtime="20201221 17:01:49.240" starttime="20201221 17:01:46.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20201221 17:01:49.241" starttime="20201221 17:01:49.240"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:01:49.241" critical="yes" starttime="20201221 17:01:46.415"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:01:49.245" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:01:51.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:01:51.855" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" endtime="20201221 17:01:51.855" starttime="20201221 17:01:49.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:01:51.856" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" endtime="20201221 17:01:51.857" starttime="20201221 17:01:51.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:01:51.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:01:51.857" starttime="20201221 17:01:51.857"></status>
</kw>
<status status="PASS" endtime="20201221 17:01:51.858" starttime="20201221 17:01:49.243"></status>
</kw>
<msg timestamp="20201221 17:01:51.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:01:51.858" starttime="20201221 17:01:49.243"></status>
</kw>
<msg timestamp="20201221 17:01:51.858" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" endtime="20201221 17:01:51.858" starttime="20201221 17:01:49.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20201221 17:01:51.859" starttime="20201221 17:01:51.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
</arguments>
<status status="PASS" endtime="20201221 17:01:51.859" starttime="20201221 17:01:51.859"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:01:51.860" critical="yes" starttime="20201221 17:01:49.241"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201221 17:01:51.861" starttime="20201221 17:01:46.366"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:01:56.498" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:01:59.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:01:59.129" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:01:59.130" starttime="20201221 17:01:56.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:01:59.131" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:01:59.131" starttime="20201221 17:01:59.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:01:59.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:01:59.131" starttime="20201221 17:01:59.131"></status>
</kw>
<status status="PASS" endtime="20201221 17:01:59.132" starttime="20201221 17:01:56.494"></status>
</kw>
<msg timestamp="20201221 17:01:59.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:01:59.132" starttime="20201221 17:01:56.494"></status>
</kw>
<msg timestamp="20201221 17:01:59.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:01:59.132" starttime="20201221 17:01:56.493"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201221 17:01:59.133" starttime="20201221 17:01:59.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:01:59.136" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:02:01.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:02:01.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:02:01.867" starttime="20201221 17:01:59.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:02:01.868" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:02:01.868" starttime="20201221 17:02:01.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:02:01.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:02:01.869" starttime="20201221 17:02:01.869"></status>
</kw>
<status status="PASS" endtime="20201221 17:02:01.869" starttime="20201221 17:01:59.134"></status>
</kw>
<msg timestamp="20201221 17:02:01.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:02:01.870" starttime="20201221 17:01:59.133"></status>
</kw>
<msg timestamp="20201221 17:02:01.870" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:02:01.870" starttime="20201221 17:01:59.133"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201221 17:02:01.870" starttime="20201221 17:02:01.870"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:02:01.874" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:02:06.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:02:06.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:02:06.947" starttime="20201221 17:02:01.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:02:06.948" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:02:06.948" starttime="20201221 17:02:06.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:02:06.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:02:06.949" starttime="20201221 17:02:06.948"></status>
</kw>
<status status="PASS" endtime="20201221 17:02:06.949" starttime="20201221 17:02:01.871"></status>
</kw>
<msg timestamp="20201221 17:02:06.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:02:06.949" starttime="20201221 17:02:01.871"></status>
</kw>
<msg timestamp="20201221 17:02:06.949" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:02:06.949" starttime="20201221 17:02:01.870"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201221 17:02:06.950" starttime="20201221 17:02:06.950"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:02:06.950" critical="yes" starttime="20201221 17:01:56.493"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201221 17:02:06.951" starttime="20201221 17:01:56.444"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 17:02:49.347" level="INFO">${random} = 50402</msg>
<status status="PASS" endtime="20201221 17:02:49.347" starttime="20201221 17:02:49.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:02:49.352" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-50402 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:03:42.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:03:42.774" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:03:42.774" starttime="20201221 17:02:49.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:03:42.775" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:03:42.775" starttime="20201221 17:03:42.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:03:42.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:03:42.776" starttime="20201221 17:03:42.775"></status>
</kw>
<status status="PASS" endtime="20201221 17:03:42.776" starttime="20201221 17:02:49.348"></status>
</kw>
<msg timestamp="20201221 17:03:42.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:03:42.776" starttime="20201221 17:02:49.348"></status>
</kw>
<msg timestamp="20201221 17:03:42.777" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:03:42.777" starttime="20201221 17:02:49.347"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201221 17:03:42.777" starttime="20201221 17:03:42.777"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:03:42.777" critical="yes" starttime="20201221 17:02:49.345"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201221 17:03:42.779" starttime="20201221 17:02:49.295"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201221 17:02:13.390" level="INFO">${random} = 45426</msg>
<status status="PASS" endtime="20201221 17:02:13.390" starttime="20201221 17:02:13.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201221 17:02:13.396" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-45426 2&gt;&amp;1'.</msg>
<msg timestamp="20201221 17:02:17.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20201221 17:02:17.789" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:02:17.789" starttime="20201221 17:02:13.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201221 17:02:17.790" level="INFO"></msg>
<status status="PASS" endtime="20201221 17:02:17.790" starttime="20201221 17:02:17.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201221 17:02:17.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201221 17:02:17.791" starttime="20201221 17:02:17.790"></status>
</kw>
<status status="PASS" endtime="20201221 17:02:17.791" starttime="20201221 17:02:13.391"></status>
</kw>
<msg timestamp="20201221 17:02:17.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201221 17:02:17.791" starttime="20201221 17:02:13.391"></status>
</kw>
<msg timestamp="20201221 17:02:17.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201221 17:02:17.791" starttime="20201221 17:02:13.390"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201221 17:02:17.792" starttime="20201221 17:02:17.792"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201221 17:02:17.792" critical="yes" starttime="20201221 17:02:13.388"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201221 17:02:17.793" starttime="20201221 17:02:13.341"></status>
</suite>
<status status="PASS" elapsedtime="137075" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
