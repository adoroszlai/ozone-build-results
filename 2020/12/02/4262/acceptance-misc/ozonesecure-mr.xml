<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201202 12:12:35.894" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:07:27.424" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:07:32.634" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 12:07:32.635" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:07:32.635" starttime="20201202 12:07:27.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:07:32.636" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 12:07:32.636" starttime="20201202 12:07:32.635"></status>
</kw>
<msg timestamp="20201202 12:07:32.636" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:07:32.636" starttime="20201202 12:07:27.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:07:32.643" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:07:36.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:07:36.941" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:07:36.941" starttime="20201202 12:07:32.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:07:36.942" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:07:36.943" starttime="20201202 12:07:36.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:07:36.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:07:36.944" starttime="20201202 12:07:36.943"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:36.944" starttime="20201202 12:07:32.639"></status>
</kw>
<msg timestamp="20201202 12:07:36.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:07:36.944" starttime="20201202 12:07:32.638"></status>
</kw>
<msg timestamp="20201202 12:07:36.945" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:07:36.945" starttime="20201202 12:07:32.638"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201202 12:07:36.945" starttime="20201202 12:07:36.945"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:36.946" starttime="20201202 12:07:32.637"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:36.946" starttime="20201202 12:07:32.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:07:36.951" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:07:41.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:07:41.533" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:07:41.533" starttime="20201202 12:07:36.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:07:41.534" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:07:41.535" starttime="20201202 12:07:41.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:07:41.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:07:41.536" starttime="20201202 12:07:41.535"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:41.536" starttime="20201202 12:07:36.948"></status>
</kw>
<msg timestamp="20201202 12:07:41.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:07:41.536" starttime="20201202 12:07:36.948"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:41.537" starttime="20201202 12:07:36.947"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:41.537" starttime="20201202 12:07:36.946"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:41.537" starttime="20201202 12:07:36.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201202 12:07:41.538" starttime="20201202 12:07:41.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:07:41.543" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:07:45.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:07:45.833" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:07:45.833" starttime="20201202 12:07:41.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:07:45.837" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:07:41.235Z",
  "modificationTime" : "2020-12-02T12:07:41.235Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201202 12:07:45.837" starttime="20201202 12:07:45.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:07:45.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:07:45.838" starttime="20201202 12:07:45.837"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:45.838" starttime="20201202 12:07:41.539"></status>
</kw>
<msg timestamp="20201202 12:07:45.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:07:45.838" starttime="20201202 12:07:41.539"></status>
</kw>
<msg timestamp="20201202 12:07:45.839" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:07:45.839" starttime="20201202 12:07:41.538"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201202 12:07:45.839" starttime="20201202 12:07:45.839"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 12:07:45.844" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 12:07:45.844" starttime="20201202 12:07:45.844"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:07:45.845" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 12:07:45.846" starttime="20201202 12:07:45.845"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:45.846" starttime="20201202 12:07:45.843"></status>
</kw>
<msg timestamp="20201202 12:07:45.846" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 12:07:45.846" starttime="20201202 12:07:45.842"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:45.847" starttime="20201202 12:07:45.842"></status>
</kw>
<msg timestamp="20201202 12:07:45.847" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201202 12:07:45.847" starttime="20201202 12:07:45.841"></status>
</kw>
<msg timestamp="20201202 12:07:45.847" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201202 12:07:45.847" starttime="20201202 12:07:45.840"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:07:45.851" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:07:49.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:07:49.931" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:07:49.931" starttime="20201202 12:07:45.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:07:49.932" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:07:49.932" starttime="20201202 12:07:49.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:07:49.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:07:49.933" starttime="20201202 12:07:49.933"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:49.934" starttime="20201202 12:07:45.848"></status>
</kw>
<msg timestamp="20201202 12:07:49.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:07:49.934" starttime="20201202 12:07:45.848"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:49.934" starttime="20201202 12:07:45.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:07:49.938" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:08:01.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:08:01.534" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:08:01.534" starttime="20201202 12:07:49.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:08:01.535" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:08:01.535" starttime="20201202 12:08:01.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:08:01.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:08:01.536" starttime="20201202 12:08:01.536"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:01.537" starttime="20201202 12:07:49.935"></status>
</kw>
<msg timestamp="20201202 12:08:01.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:08:01.537" starttime="20201202 12:07:49.935"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:01.537" starttime="20201202 12:07:49.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:08:01.543" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:08:07.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:08:07.794" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:08:07.794" starttime="20201202 12:08:01.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:08:07.796" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:08:07.796" starttime="20201202 12:08:07.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:08:07.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:08:07.797" starttime="20201202 12:08:07.796"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:07.797" starttime="20201202 12:08:01.538"></status>
</kw>
<msg timestamp="20201202 12:08:07.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:08:07.797" starttime="20201202 12:08:01.538"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:07.797" starttime="20201202 12:08:01.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:08:07.803" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:08:14.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:08:14.170" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:08:14.170" starttime="20201202 12:08:07.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:08:14.171" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:08:14.171" starttime="20201202 12:08:14.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:08:14.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:08:14.172" starttime="20201202 12:08:14.172"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:14.173" starttime="20201202 12:08:07.800"></status>
</kw>
<msg timestamp="20201202 12:08:14.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:08:14.173" starttime="20201202 12:08:07.800"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:14.173" starttime="20201202 12:08:07.798"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:08:14.173" critical="yes" starttime="20201202 12:07:27.416"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 12:08:14.182" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 12:08:14.182" starttime="20201202 12:08:14.182"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:08:14.183" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 12:08:14.183" starttime="20201202 12:08:14.182"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:14.183" starttime="20201202 12:08:14.181"></status>
</kw>
<msg timestamp="20201202 12:08:14.183" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 12:08:14.183" starttime="20201202 12:08:14.180"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:14.184" starttime="20201202 12:08:14.180"></status>
</kw>
<msg timestamp="20201202 12:08:14.184" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 12:08:14.184" starttime="20201202 12:08:14.179"></status>
</kw>
<msg timestamp="20201202 12:08:14.184" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 12:08:14.184" starttime="20201202 12:08:14.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:08:14.190" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:08:18.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:08:18.270" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:08:18.270" starttime="20201202 12:08:14.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:08:18.271" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:08:18.271" starttime="20201202 12:08:18.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:08:18.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:08:18.278" starttime="20201202 12:08:18.277"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:18.278" starttime="20201202 12:08:14.185"></status>
</kw>
<msg timestamp="20201202 12:08:18.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:08:18.279" starttime="20201202 12:08:14.185"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:18.279" starttime="20201202 12:08:14.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:08:18.285" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:08:22.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:08:22.484" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:08:22.484" starttime="20201202 12:08:18.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:08:22.486" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:08:22.486" starttime="20201202 12:08:22.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:08:22.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:08:22.488" starttime="20201202 12:08:22.486"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:22.488" starttime="20201202 12:08:18.282"></status>
</kw>
<msg timestamp="20201202 12:08:22.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:08:22.488" starttime="20201202 12:08:18.281"></status>
</kw>
<status status="PASS" endtime="20201202 12:08:22.488" starttime="20201202 12:08:18.279"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:08:22.489" critical="yes" starttime="20201202 12:08:14.177"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201202 12:08:22.490" starttime="20201202 12:07:27.350"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 12:10:55.382" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 12:10:55.382" starttime="20201202 12:10:55.382"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:10:55.383" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 12:10:55.383" starttime="20201202 12:10:55.383"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:55.383" starttime="20201202 12:10:55.381"></status>
</kw>
<msg timestamp="20201202 12:10:55.384" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 12:10:55.384" starttime="20201202 12:10:55.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:10:55.385" starttime="20201202 12:10:55.384"></status>
</kw>
<msg timestamp="20201202 12:10:55.385" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 12:10:55.385" starttime="20201202 12:10:55.384"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:55.385" starttime="20201202 12:10:55.380"></status>
</kw>
<msg timestamp="20201202 12:10:55.385" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 12:10:55.385" starttime="20201202 12:10:55.379"></status>
</kw>
<msg timestamp="20201202 12:10:55.386" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 12:10:55.386" starttime="20201202 12:10:55.378"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 12:10:55.386" level="INFO">${random} = 73180</msg>
<status status="PASS" endtime="20201202 12:10:55.386" starttime="20201202 12:10:55.386"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:10:55.394" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-73180 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:10:59.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:10:59.934" level="INFO">${output} = 2020-12-02 12:10:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:10:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201202 12:10:59.934" starttime="20201202 12:10:55.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:10:59.936" level="INFO">2020-12-02 12:10:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:10:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:10:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 12:10:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 12:10:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9010BC3B6299-&gt;32ae8d06-fe2c-4b71-b42c-52726fc97d9c
2020-12-02 12:10:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201202 12:10:59.936" starttime="20201202 12:10:59.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:10:59.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:10:59.937" starttime="20201202 12:10:59.936"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:59.937" starttime="20201202 12:10:55.387"></status>
</kw>
<msg timestamp="20201202 12:10:59.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:10:59.938" starttime="20201202 12:10:55.387"></status>
</kw>
<msg timestamp="20201202 12:10:59.938" level="INFO">${result} = 2020-12-02 12:10:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:10:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201202 12:10:59.938" starttime="20201202 12:10:55.387"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:10:59.945" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:11:02.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:11:02.422" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 12:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 12:09 ofs://om/volume1/bucket1/ozone-71449
-rw-...</msg>
<status status="PASS" endtime="20201202 12:11:02.422" starttime="20201202 12:10:59.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:11:02.423" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 12:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 12:09 ofs://om/volume1/bucket1/ozone-71449
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 12:10 ofs://om/volume1/bucket1/ozone-73180
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 12:08 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 12:10 ofs://om/volume1/bucket1/wordcount-30.txt</msg>
<status status="PASS" endtime="20201202 12:11:02.424" starttime="20201202 12:11:02.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:11:02.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:11:02.424" starttime="20201202 12:11:02.424"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:02.425" starttime="20201202 12:10:59.941"></status>
</kw>
<msg timestamp="20201202 12:11:02.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:11:02.425" starttime="20201202 12:10:59.940"></status>
</kw>
<msg timestamp="20201202 12:11:02.425" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 12:07 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 12:09 ofs://om/volume1/bucket1/ozone-71449
-rw-...</msg>
<status status="PASS" endtime="20201202 12:11:02.425" starttime="20201202 12:10:59.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:11:02.426" starttime="20201202 12:11:02.425"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 12:11:02.426" critical="yes" starttime="20201202 12:10:55.377"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201202 12:11:02.429" starttime="20201202 12:10:55.310"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 12:09:13.800" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 12:09:13.800" starttime="20201202 12:09:13.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:09:13.801" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 12:09:13.801" starttime="20201202 12:09:13.800"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:13.801" starttime="20201202 12:09:13.799"></status>
</kw>
<msg timestamp="20201202 12:09:13.801" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 12:09:13.802" starttime="20201202 12:09:13.798"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:13.802" starttime="20201202 12:09:13.797"></status>
</kw>
<msg timestamp="20201202 12:09:13.802" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 12:09:13.802" starttime="20201202 12:09:13.796"></status>
</kw>
<msg timestamp="20201202 12:09:13.802" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 12:09:13.802" starttime="20201202 12:09:13.795"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 12:09:13.803" level="INFO">${random} = 71449</msg>
<status status="PASS" endtime="20201202 12:09:13.803" starttime="20201202 12:09:13.803"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:09:13.809" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-71449 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:09:18.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:09:18.250" level="INFO">${output} = 2020-12-02 12:09:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:09:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201202 12:09:18.250" starttime="20201202 12:09:13.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:09:18.251" level="INFO">2020-12-02 12:09:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:09:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:09:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 12:09:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 12:09:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AC6A26C5BDCF-&gt;32ae8d06-fe2c-4b71-b42c-52726fc97d9c
2020-12-02 12:09:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201202 12:09:18.251" starttime="20201202 12:09:18.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:09:18.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:09:18.252" starttime="20201202 12:09:18.251"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:18.252" starttime="20201202 12:09:13.804"></status>
</kw>
<msg timestamp="20201202 12:09:18.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:09:18.253" starttime="20201202 12:09:13.804"></status>
</kw>
<msg timestamp="20201202 12:09:18.253" level="INFO">${result} = 2020-12-02 12:09:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:09:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201202 12:09:18.253" starttime="20201202 12:09:13.803"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:09:18.258" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:09:20.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:09:20.560" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 12:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 12:09 o3fs://bucket1.volume1.om/ozone-71449
dr...</msg>
<status status="PASS" endtime="20201202 12:09:20.561" starttime="20201202 12:09:18.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:09:20.562" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 12:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 12:09 o3fs://bucket1.volume1.om/ozone-71449
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 12:08 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 12:09:20.562" starttime="20201202 12:09:20.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:09:20.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:09:20.563" starttime="20201202 12:09:20.562"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:20.563" starttime="20201202 12:09:18.255"></status>
</kw>
<msg timestamp="20201202 12:09:20.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:09:20.563" starttime="20201202 12:09:18.254"></status>
</kw>
<msg timestamp="20201202 12:09:20.563" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 12:07 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 12:09 o3fs://bucket1.volume1.om/ozone-71449
dr...</msg>
<status status="PASS" endtime="20201202 12:09:20.563" starttime="20201202 12:09:18.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:09:20.564" starttime="20201202 12:09:20.564"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 12:09:20.564" critical="yes" starttime="20201202 12:09:13.794"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201202 12:09:20.566" starttime="20201202 12:09:13.720"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:09:07.861" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:09:07.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:09:07.865" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201202 12:09:07.865" starttime="20201202 12:09:07.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:09:07.866" level="INFO">rm</msg>
<status status="PASS" endtime="20201202 12:09:07.866" starttime="20201202 12:09:07.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:09:07.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:09:07.867" starttime="20201202 12:09:07.866"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:07.868" starttime="20201202 12:09:07.856"></status>
</kw>
<msg timestamp="20201202 12:09:07.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:09:07.868" starttime="20201202 12:09:07.856"></status>
</kw>
<msg timestamp="20201202 12:09:07.868" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201202 12:09:07.868" starttime="20201202 12:09:07.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:09:07.870" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:09:07.870" starttime="20201202 12:09:07.868"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:09:07.876" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:09:07.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:09:07.902" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:09:07.902" starttime="20201202 12:09:07.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:09:07.904" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:09:07.904" starttime="20201202 12:09:07.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:09:07.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:09:07.905" starttime="20201202 12:09:07.904"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:07.905" starttime="20201202 12:09:07.872"></status>
</kw>
<msg timestamp="20201202 12:09:07.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:09:07.905" starttime="20201202 12:09:07.872"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:07.905" starttime="20201202 12:09:07.871"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:07.906" starttime="20201202 12:09:07.870"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:07.906" starttime="20201202 12:09:07.855"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:09:07.906" critical="yes" starttime="20201202 12:09:07.854"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201202 12:09:07.907" starttime="20201202 12:09:07.781"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:07:21.521" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:07:21.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:07:21.524" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201202 12:07:21.524" starttime="20201202 12:07:21.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:07:21.526" level="INFO">om</msg>
<status status="PASS" endtime="20201202 12:07:21.526" starttime="20201202 12:07:21.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:07:21.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:07:21.526" starttime="20201202 12:07:21.526"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:21.527" starttime="20201202 12:07:21.516"></status>
</kw>
<msg timestamp="20201202 12:07:21.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:07:21.527" starttime="20201202 12:07:21.515"></status>
</kw>
<msg timestamp="20201202 12:07:21.527" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201202 12:07:21.527" starttime="20201202 12:07:21.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:07:21.528" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:07:21.528" starttime="20201202 12:07:21.528"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:07:21.533" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:07:21.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:07:21.551" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:07:21.551" starttime="20201202 12:07:21.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:07:21.552" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:07:21.552" starttime="20201202 12:07:21.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:07:21.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:07:21.553" starttime="20201202 12:07:21.553"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:21.554" starttime="20201202 12:07:21.530"></status>
</kw>
<msg timestamp="20201202 12:07:21.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:07:21.554" starttime="20201202 12:07:21.530"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:21.554" starttime="20201202 12:07:21.529"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:21.554" starttime="20201202 12:07:21.528"></status>
</kw>
<status status="PASS" endtime="20201202 12:07:21.554" starttime="20201202 12:07:21.514"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:07:21.555" critical="yes" starttime="20201202 12:07:21.513"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201202 12:07:21.556" starttime="20201202 12:07:21.428"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:11:08.409" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:11:08.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:11:08.415" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:11:08.415" starttime="20201202 12:11:08.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:11:08.416" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:11:08.416" starttime="20201202 12:11:08.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:11:08.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:11:08.417" starttime="20201202 12:11:08.416"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:08.417" starttime="20201202 12:11:08.403"></status>
</kw>
<msg timestamp="20201202 12:11:08.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:11:08.418" starttime="20201202 12:11:08.403"></status>
</kw>
<msg timestamp="20201202 12:11:08.418" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:11:08.418" starttime="20201202 12:11:08.403"></status>
</kw>
<msg timestamp="20201202 12:11:08.418" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:11:08.418" starttime="20201202 12:11:08.402"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 12:11:08.425" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 12:11:08.425" starttime="20201202 12:11:08.425"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:11:08.426" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 12:11:08.426" starttime="20201202 12:11:08.426"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:08.427" starttime="20201202 12:11:08.423"></status>
</kw>
<msg timestamp="20201202 12:11:08.427" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 12:11:08.427" starttime="20201202 12:11:08.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:11:08.429" starttime="20201202 12:11:08.428"></status>
</kw>
<msg timestamp="20201202 12:11:08.429" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 12:11:08.429" starttime="20201202 12:11:08.428"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:08.429" starttime="20201202 12:11:08.421"></status>
</kw>
<msg timestamp="20201202 12:11:08.429" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 12:11:08.430" starttime="20201202 12:11:08.420"></status>
</kw>
<msg timestamp="20201202 12:11:08.430" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 12:11:08.430" starttime="20201202 12:11:08.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:11:08.436" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:11:49.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:11:49.470" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 12:11:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:11:10 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201202 12:11:49.471" starttime="20201202 12:11:08.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:11:49.472" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-02 12:11:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:11:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:11:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 12:11:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 12:11:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4B011BBC9D0D-&gt;32ae8d06-fe2c-4b71-b42c-52726fc97d9c
2020-12-02 12:11:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-02 12:11:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2020-12-02 12:11:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-02 12:11:15 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606911075422, maxDate=1607515875422, sequenceNumber=3, masterKeyId=2))
2020-12-02 12:11:15 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 c7 f4 9a e2 2e 38 f6 cf a6 bb e4 2e 40 03 48 01 5a 0d 33 30 36 34 35 39 30 33 35 32 33 39 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-02 12:11:15 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606911075422, maxDate=1607515875422, sequenceNumber=3, masterKeyId=2)
2020-12-02 12:11:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 12:11:15 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 12:11:16 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 12:11:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606910791585_0003
2020-12-02 12:11:18 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 c7 f4 9a e2 2e 38 f6 cf a6 bb e4 2e 40 03 48 01 5a 0d 33 30 36 34 35 39 30 33 35 32 33 39 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606911075422, maxDate=1607515875422, sequenceNumber=3, masterKeyId=2)]
2020-12-02 12:11:19 INFO  Configuration:2795 - resource-types.xml not found
2020-12-02 12:11:19 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-02 12:11:19 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-02 12:11:20 INFO  YarnClientImpl:329 - Submitted application application_1606910791585_0003
2020-12-02 12:11:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606910791585_0003/
2020-12-02 12:11:20 INFO  Job:1619 - Running job: job_1606910791585_0003
2020-12-02 12:11:28 INFO  Job:1640 - Job job_1606910791585_0003 running in uber mode : false
2020-12-02 12:11:28 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 12:11:40 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 12:11:42 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 12:11:43 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 12:11:47 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 12:11:48 INFO  Job:1658 - Job job_1606910791585_0003 completed successfully
2020-12-02 12:11:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065061
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=55972
		Total time spent by all reduces in occupied slots (ms)=9552
		Total time spent by all map tasks (ms)=27986
		Total time spent by all reduce tasks (ms)=4776
		Total vcore-milliseconds taken by all map tasks=27986
		Total vcore-milliseconds taken by all reduce tasks=4776
		Total megabyte-milliseconds taken by all map tasks=57315328
		Total megabyte-milliseconds taken by all reduce tasks=9781248
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1342
		CPU time spent (ms)=8740
		Physical memory (bytes) snapshot=1366687744
		Virtual memory (bytes) snapshot=14049206272
		Total committed heap usage (bytes)=1192755200
		Peak Map Physical memory (bytes)=384921600
		Peak Map Virtual memory (bytes)=3512537088
		Peak Reduce Physical memory (bytes)=285208576
		Peak Reduce Virtual memory (bytes)=3516571648
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.974 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201202 12:11:49.472" starttime="20201202 12:11:49.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:11:49.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:11:49.473" starttime="20201202 12:11:49.472"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.473" starttime="20201202 12:11:08.431"></status>
</kw>
<msg timestamp="20201202 12:11:49.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:11:49.473" starttime="20201202 12:11:08.431"></status>
</kw>
<msg timestamp="20201202 12:11:49.474" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 12:11:10 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:11:10 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201202 12:11:49.474" starttime="20201202 12:11:08.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 12:11:49.475" starttime="20201202 12:11:49.474"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 12:11:49.475" critical="yes" starttime="20201202 12:11:08.401"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:11:49.481" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:11:49.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:11:49.496" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:11:49.496" starttime="20201202 12:11:49.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:11:49.497" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:11:49.497" starttime="20201202 12:11:49.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:11:49.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:11:49.498" starttime="20201202 12:11:49.497"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.498" starttime="20201202 12:11:49.479"></status>
</kw>
<msg timestamp="20201202 12:11:49.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:11:49.498" starttime="20201202 12:11:49.478"></status>
</kw>
<msg timestamp="20201202 12:11:49.499" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:11:49.499" starttime="20201202 12:11:49.478"></status>
</kw>
<msg timestamp="20201202 12:11:49.499" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:11:49.499" starttime="20201202 12:11:49.477"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 12:11:49.500" level="INFO">${random} = 24</msg>
<status status="PASS" endtime="20201202 12:11:49.500" starttime="20201202 12:11:49.499"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 12:11:49.504" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 12:11:49.504" starttime="20201202 12:11:49.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:11:49.505" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 12:11:49.505" starttime="20201202 12:11:49.504"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.505" starttime="20201202 12:11:49.503"></status>
</kw>
<msg timestamp="20201202 12:11:49.505" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 12:11:49.505" starttime="20201202 12:11:49.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:11:49.507" starttime="20201202 12:11:49.506"></status>
</kw>
<msg timestamp="20201202 12:11:49.507" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 12:11:49.507" starttime="20201202 12:11:49.506"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.507" starttime="20201202 12:11:49.501"></status>
</kw>
<msg timestamp="20201202 12:11:49.508" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 12:11:49.508" starttime="20201202 12:11:49.501"></status>
</kw>
<msg timestamp="20201202 12:11:49.508" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 12:11:49.508" starttime="20201202 12:11:49.500"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 12:11:49.512" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 12:11:49.512" starttime="20201202 12:11:49.511"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:11:49.513" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 12:11:49.513" starttime="20201202 12:11:49.512"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.513" starttime="20201202 12:11:49.511"></status>
</kw>
<msg timestamp="20201202 12:11:49.513" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 12:11:49.513" starttime="20201202 12:11:49.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 12:11:49.515" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201202 12:11:49.515" starttime="20201202 12:11:49.514"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:11:49.516" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201202 12:11:49.516" starttime="20201202 12:11:49.515"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.516" starttime="20201202 12:11:49.514"></status>
</kw>
<msg timestamp="20201202 12:11:49.516" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201202 12:11:49.516" starttime="20201202 12:11:49.513"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.517" starttime="20201202 12:11:49.510"></status>
</kw>
<msg timestamp="20201202 12:11:49.517" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201202 12:11:49.517" starttime="20201202 12:11:49.509"></status>
</kw>
<msg timestamp="20201202 12:11:49.517" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201202 12:11:49.517" starttime="20201202 12:11:49.508"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 12:11:49.521" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 12:11:49.521" starttime="20201202 12:11:49.521"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:11:49.523" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 12:11:49.523" starttime="20201202 12:11:49.521"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.523" starttime="20201202 12:11:49.520"></status>
</kw>
<msg timestamp="20201202 12:11:49.524" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 12:11:49.524" starttime="20201202 12:11:49.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 12:11:49.525" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201202 12:11:49.525" starttime="20201202 12:11:49.525"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:11:49.526" level="INFO">${result} = /wordcount-24.txt</msg>
<status status="PASS" endtime="20201202 12:11:49.526" starttime="20201202 12:11:49.526"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.526" starttime="20201202 12:11:49.524"></status>
</kw>
<msg timestamp="20201202 12:11:49.527" level="INFO">${path_with_leading} = /wordcount-24.txt</msg>
<status status="PASS" endtime="20201202 12:11:49.527" starttime="20201202 12:11:49.524"></status>
</kw>
<status status="PASS" endtime="20201202 12:11:49.527" starttime="20201202 12:11:49.519"></status>
</kw>
<msg timestamp="20201202 12:11:49.527" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-24.txt</msg>
<status status="PASS" endtime="20201202 12:11:49.527" starttime="20201202 12:11:49.518"></status>
</kw>
<msg timestamp="20201202 12:11:49.527" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-24.txt</msg>
<status status="PASS" endtime="20201202 12:11:49.527" starttime="20201202 12:11:49.517"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:11:49.532" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-24.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:12:26.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:12:26.443" level="INFO">${output} = 2020-12-02 12:11:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2020-12-02 12:11:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201202 12:12:26.443" starttime="20201202 12:11:49.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:12:26.444" level="INFO">2020-12-02 12:11:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2020-12-02 12:11:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-02 12:11:52 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606911112432, maxDate=1607515912432, sequenceNumber=4, masterKeyId=2))
2020-12-02 12:11:52 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8f e9 f6 9a e2 2e 38 8f f1 a8 bb e4 2e 40 04 48 01 5a 0d 33 30 36 34 35 39 30 33 35 32 33 39 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-02 12:11:52 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606911112432, maxDate=1607515912432, sequenceNumber=4, masterKeyId=2)
2020-12-02 12:11:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 12:11:52 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:11:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:11:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 12:11:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 12:11:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C52C4F5AEFDB-&gt;32ae8d06-fe2c-4b71-b42c-52726fc97d9c
2020-12-02 12:11:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 12:11:54 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 12:11:54 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 12:11:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606910791585_0004
2020-12-02 12:11:55 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8f e9 f6 9a e2 2e 38 8f f1 a8 bb e4 2e 40 04 48 01 5a 0d 33 30 36 34 35 39 30 33 35 32 33 39 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606911112432, maxDate=1607515912432, sequenceNumber=4, masterKeyId=2)]
2020-12-02 12:11:55 INFO  Configuration:2795 - resource-types.xml not found
2020-12-02 12:11:55 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-02 12:11:55 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-02 12:11:56 INFO  YarnClientImpl:329 - Submitted application application_1606910791585_0004
2020-12-02 12:11:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606910791585_0004/
2020-12-02 12:11:56 INFO  Job:1619 - Running job: job_1606910791585_0004
2020-12-02 12:12:05 INFO  Job:1640 - Job job_1606910791585_0004 running in uber mode : false
2020-12-02 12:12:05 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 12:12:17 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 12:12:18 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 12:12:19 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 12:12:24 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 12:12:25 INFO  Job:1658 - Job job_1606910791585_0004 completed successfully
2020-12-02 12:12:26 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1127717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39713
		OFS: Number of bytes written=22202
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56404
		Total time spent by all reduces in occupied slots (ms)=9008
		Total time spent by all map tasks (ms)=28202
		Total time spent by all reduce tasks (ms)=4504
		Total vcore-milliseconds taken by all map tasks=28202
		Total vcore-milliseconds taken by all reduce tasks=4504
		Total megabyte-milliseconds taken by all map tasks=57757696
		Total megabyte-milliseconds taken by all reduce tasks=9224192
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1202
		CPU time spent (ms)=9510
		Physical memory (bytes) snapshot=1419923456
		Virtual memory (bytes) snapshot=14051430400
		Total committed heap usage (bytes)=1293942784
		Peak Map Physical memory (bytes)=382435328
		Peak Map Virtual memory (bytes)=3509731328
		Peak Reduce Physical memory (bytes)=292659200
		Peak Reduce Virtual memory (bytes)=3524485120
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201202 12:12:26.444" starttime="20201202 12:12:26.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:12:26.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:12:26.445" starttime="20201202 12:12:26.444"></status>
</kw>
<status status="PASS" endtime="20201202 12:12:26.445" starttime="20201202 12:11:49.529"></status>
</kw>
<msg timestamp="20201202 12:12:26.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:12:26.446" starttime="20201202 12:11:49.528"></status>
</kw>
<msg timestamp="20201202 12:12:26.446" level="INFO">${output} = 2020-12-02 12:11:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2020-12-02 12:11:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201202 12:12:26.446" starttime="20201202 12:11:49.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201202 12:12:26.447" starttime="20201202 12:12:26.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 12:12:26.447" starttime="20201202 12:12:26.447"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 12:12:26.448" critical="yes" starttime="20201202 12:11:49.476"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201202 12:12:26.449" starttime="20201202 12:11:08.329"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:09:26.482" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:09:26.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:09:26.488" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:09:26.488" starttime="20201202 12:09:26.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:09:26.489" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:09:26.489" starttime="20201202 12:09:26.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:09:26.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:09:26.490" starttime="20201202 12:09:26.489"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:26.490" starttime="20201202 12:09:26.476"></status>
</kw>
<msg timestamp="20201202 12:09:26.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:09:26.490" starttime="20201202 12:09:26.476"></status>
</kw>
<msg timestamp="20201202 12:09:26.491" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:09:26.491" starttime="20201202 12:09:26.475"></status>
</kw>
<msg timestamp="20201202 12:09:26.491" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:09:26.491" starttime="20201202 12:09:26.475"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 12:09:26.497" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 12:09:26.497" starttime="20201202 12:09:26.496"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:09:26.497" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 12:09:26.497" starttime="20201202 12:09:26.497"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:26.498" starttime="20201202 12:09:26.494"></status>
</kw>
<msg timestamp="20201202 12:09:26.498" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 12:09:26.498" starttime="20201202 12:09:26.494"></status>
</kw>
<status status="PASS" endtime="20201202 12:09:26.498" starttime="20201202 12:09:26.493"></status>
</kw>
<msg timestamp="20201202 12:09:26.498" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 12:09:26.498" starttime="20201202 12:09:26.492"></status>
</kw>
<msg timestamp="20201202 12:09:26.499" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 12:09:26.499" starttime="20201202 12:09:26.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:09:26.503" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:10:11.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:10:11.818" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 12:09:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:09:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201202 12:10:11.818" starttime="20201202 12:09:26.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:10:11.820" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-02 12:09:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:09:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:09:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 12:09:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 12:09:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-993E1E3374F3-&gt;32ae8d06-fe2c-4b71-b42c-52726fc97d9c
2020-12-02 12:09:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-02 12:09:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2020-12-02 12:09:31 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-02 12:09:31 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606910971627, maxDate=1607515771627, sequenceNumber=1, masterKeyId=2))
2020-12-02 12:09:31 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 95 9b ee 9a e2 2e 38 95 a3 a0 bb e4 2e 40 01 48 01 5a 0d 33 30 36 34 35 39 30 33 35 32 33 39 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-02 12:09:31 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606910971627, maxDate=1607515771627, sequenceNumber=1, masterKeyId=2)
2020-12-02 12:09:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 12:09:34 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 12:09:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606910791585_0001
2020-12-02 12:09:35 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 95 9b ee 9a e2 2e 38 95 a3 a0 bb e4 2e 40 01 48 01 5a 0d 33 30 36 34 35 39 30 33 35 32 33 39 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606910971627, maxDate=1607515771627, sequenceNumber=1, masterKeyId=2)]
2020-12-02 12:09:35 INFO  Configuration:2795 - resource-types.xml not found
2020-12-02 12:09:35 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-02 12:09:35 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-02 12:09:37 INFO  YarnClientImpl:329 - Submitted application application_1606910791585_0001
2020-12-02 12:09:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606910791585_0001/
2020-12-02 12:09:37 INFO  Job:1619 - Running job: job_1606910791585_0001
2020-12-02 12:09:48 INFO  Job:1640 - Job job_1606910791585_0001 running in uber mode : false
2020-12-02 12:09:48 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 12:10:01 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 12:10:02 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 12:10:03 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 12:10:09 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 12:10:10 INFO  Job:1658 - Job job_1606910791585_0001 completed successfully
2020-12-02 12:10:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065265
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=58852
		Total time spent by all reduces in occupied slots (ms)=11462
		Total time spent by all map tasks (ms)=29426
		Total time spent by all reduce tasks (ms)=5731
		Total vcore-milliseconds taken by all map tasks=29426
		Total vcore-milliseconds taken by all reduce tasks=5731
		Total megabyte-milliseconds taken by all map tasks=60264448
		Total megabyte-milliseconds taken by all reduce tasks=11737088
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1236
		CPU time spent (ms)=9070
		Physical memory (bytes) snapshot=1452679168
		Virtual memory (bytes) snapshot=14054612992
		Total committed heap usage (bytes)=1367867392
		Peak Map Physical memory (bytes)=386228224
		Peak Map Virtual memory (bytes)=3511885824
		Peak Reduce Physical memory (bytes)=306065408
		Peak Reduce Virtual memory (bytes)=3524554752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.239 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201202 12:10:11.820" starttime="20201202 12:10:11.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:10:11.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:10:11.821" starttime="20201202 12:10:11.821"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:11.821" starttime="20201202 12:09:26.500"></status>
</kw>
<msg timestamp="20201202 12:10:11.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:10:11.822" starttime="20201202 12:09:26.500"></status>
</kw>
<msg timestamp="20201202 12:10:11.822" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 12:09:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:09:29 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201202 12:10:11.822" starttime="20201202 12:09:26.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 12:10:11.823" starttime="20201202 12:10:11.823"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 12:10:11.823" critical="yes" starttime="20201202 12:09:26.474"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:10:11.830" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:10:11.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:10:11.838" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:10:11.838" starttime="20201202 12:10:11.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:10:11.839" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:10:11.839" starttime="20201202 12:10:11.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:10:11.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:10:11.840" starttime="20201202 12:10:11.840"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:11.840" starttime="20201202 12:10:11.827"></status>
</kw>
<msg timestamp="20201202 12:10:11.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:10:11.841" starttime="20201202 12:10:11.827"></status>
</kw>
<msg timestamp="20201202 12:10:11.841" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:10:11.841" starttime="20201202 12:10:11.826"></status>
</kw>
<msg timestamp="20201202 12:10:11.841" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 12:10:11.841" starttime="20201202 12:10:11.825"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 12:10:11.842" level="INFO">${random} = 30</msg>
<status status="PASS" endtime="20201202 12:10:11.842" starttime="20201202 12:10:11.841"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 12:10:11.847" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 12:10:11.847" starttime="20201202 12:10:11.847"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:10:11.848" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 12:10:11.848" starttime="20201202 12:10:11.848"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:11.849" starttime="20201202 12:10:11.846"></status>
</kw>
<msg timestamp="20201202 12:10:11.849" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 12:10:11.849" starttime="20201202 12:10:11.845"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:11.849" starttime="20201202 12:10:11.844"></status>
</kw>
<msg timestamp="20201202 12:10:11.849" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 12:10:11.849" starttime="20201202 12:10:11.843"></status>
</kw>
<msg timestamp="20201202 12:10:11.850" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 12:10:11.850" starttime="20201202 12:10:11.842"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 12:10:11.854" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 12:10:11.854" starttime="20201202 12:10:11.853"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:10:11.855" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 12:10:11.855" starttime="20201202 12:10:11.854"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:11.855" starttime="20201202 12:10:11.853"></status>
</kw>
<msg timestamp="20201202 12:10:11.855" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 12:10:11.855" starttime="20201202 12:10:11.852"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:11.855" starttime="20201202 12:10:11.851"></status>
</kw>
<msg timestamp="20201202 12:10:11.855" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201202 12:10:11.856" starttime="20201202 12:10:11.851"></status>
</kw>
<msg timestamp="20201202 12:10:11.856" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201202 12:10:11.856" starttime="20201202 12:10:11.850"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 12:10:11.860" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 12:10:11.860" starttime="20201202 12:10:11.859"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:10:11.861" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 12:10:11.861" starttime="20201202 12:10:11.860"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:11.861" starttime="20201202 12:10:11.859"></status>
</kw>
<msg timestamp="20201202 12:10:11.861" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 12:10:11.861" starttime="20201202 12:10:11.858"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:11.862" starttime="20201202 12:10:11.858"></status>
</kw>
<msg timestamp="20201202 12:10:11.862" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-30.txt</msg>
<status status="PASS" endtime="20201202 12:10:11.862" starttime="20201202 12:10:11.857"></status>
</kw>
<msg timestamp="20201202 12:10:11.862" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-30.txt</msg>
<status status="PASS" endtime="20201202 12:10:11.862" starttime="20201202 12:10:11.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:10:11.866" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-30.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:10:48.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:10:48.714" level="INFO">${output} = 2020-12-02 12:10:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2020-12-02 12:10:14 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201202 12:10:48.714" starttime="20201202 12:10:11.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:10:48.716" level="INFO">2020-12-02 12:10:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2020-12-02 12:10:14 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-02 12:10:14 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606911014793, maxDate=1607515814793, sequenceNumber=2, masterKeyId=2))
2020-12-02 12:10:14 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff ed f0 9a e2 2e 38 ff f5 a2 bb e4 2e 40 02 48 01 5a 0d 33 30 36 34 35 39 30 33 35 32 33 39 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-02 12:10:14 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606911014793, maxDate=1607515814793, sequenceNumber=2, masterKeyId=2)
2020-12-02 12:10:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 12:10:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 12:10:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:10:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 12:10:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 12:10:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B05DAD70E135-&gt;32ae8d06-fe2c-4b71-b42c-52726fc97d9c
2020-12-02 12:10:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 12:10:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 12:10:17 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 12:10:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606910791585_0002
2020-12-02 12:10:17 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ff ed f0 9a e2 2e 38 ff f5 a2 bb e4 2e 40 02 48 01 5a 0d 33 30 36 34 35 39 30 33 35 32 33 39 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1606911014793, maxDate=1607515814793, sequenceNumber=2, masterKeyId=2)]
2020-12-02 12:10:17 INFO  Configuration:2795 - resource-types.xml not found
2020-12-02 12:10:17 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-02 12:10:17 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-02 12:10:19 INFO  YarnClientImpl:329 - Submitted application application_1606910791585_0002
2020-12-02 12:10:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606910791585_0002/
2020-12-02 12:10:19 INFO  Job:1619 - Running job: job_1606910791585_0002
2020-12-02 12:10:28 INFO  Job:1640 - Job job_1606910791585_0002 running in uber mode : false
2020-12-02 12:10:28 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 12:10:40 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 12:10:43 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 12:10:47 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 12:10:48 INFO  Job:1658 - Job job_1606910791585_0002 completed successfully
2020-12-02 12:10:48 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1127801
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39716
		O3FS: Number of bytes written=22202
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56276
		Total time spent by all reduces in occupied slots (ms)=9144
		Total time spent by all map tasks (ms)=28138
		Total time spent by all reduce tasks (ms)=4572
		Total vcore-milliseconds taken by all map tasks=28138
		Total vcore-milliseconds taken by all reduce tasks=4572
		Total megabyte-milliseconds taken by all map tasks=57626624
		Total megabyte-milliseconds taken by all reduce tasks=9363456
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1366
		CPU time spent (ms)=8660
		Physical memory (bytes) snapshot=1403207680
		Virtual memory (bytes) snapshot=14037811200
		Total committed heap usage (bytes)=1355808768
		Peak Map Physical memory (bytes)=385241088
		Peak Map Virtual memory (bytes)=3509972992
		Peak Reduce Physical memory (bytes)=275492864
		Peak Reduce Virtual memory (bytes)=3510681600
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201202 12:10:48.716" starttime="20201202 12:10:48.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:10:48.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:10:48.717" starttime="20201202 12:10:48.716"></status>
</kw>
<status status="PASS" endtime="20201202 12:10:48.717" starttime="20201202 12:10:11.863"></status>
</kw>
<msg timestamp="20201202 12:10:48.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:10:48.717" starttime="20201202 12:10:11.863"></status>
</kw>
<msg timestamp="20201202 12:10:48.718" level="INFO">${output} = 2020-12-02 12:10:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.5:8032
2020-12-02 12:10:14 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
202...</msg>
<status status="PASS" endtime="20201202 12:10:48.718" starttime="20201202 12:10:11.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201202 12:10:48.718" starttime="20201202 12:10:48.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 12:10:48.719" starttime="20201202 12:10:48.718"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 12:10:48.719" critical="yes" starttime="20201202 12:10:11.825"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201202 12:10:48.721" starttime="20201202 12:09:26.402"></status>
</suite>
<status status="PASS" elapsedtime="229798" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
