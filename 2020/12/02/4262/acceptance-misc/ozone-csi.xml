<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201202 11:19:03.927" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:48.284" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:48.285" level="INFO">${rc} = 1</msg>
<msg timestamp="20201202 11:18:48.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:18:48.285" starttime="20201202 11:18:48.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:48.286" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:18:48.286" starttime="20201202 11:18:48.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:48.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201202 11:18:48.287" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201202 11:18:48.287" starttime="20201202 11:18:48.287"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:48.288" starttime="20201202 11:18:48.276"></status>
</kw>
<msg timestamp="20201202 11:18:48.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201202 11:18:48.288" starttime="20201202 11:18:48.276"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:48.288" starttime="20201202 11:18:48.275"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:48.288" starttime="20201202 11:18:48.275"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:49.295" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:49.305" level="INFO">${rc} = 1</msg>
<msg timestamp="20201202 11:18:49.306" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:18:49.306" starttime="20201202 11:18:49.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:49.307" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:18:49.307" starttime="20201202 11:18:49.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:49.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201202 11:18:49.308" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201202 11:18:49.308" starttime="20201202 11:18:49.307"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:49.308" starttime="20201202 11:18:49.290"></status>
</kw>
<msg timestamp="20201202 11:18:49.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201202 11:18:49.308" starttime="20201202 11:18:49.290"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:49.309" starttime="20201202 11:18:49.289"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:49.309" starttime="20201202 11:18:49.289"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:50.321" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:50.325" level="INFO">${rc} = 1</msg>
<msg timestamp="20201202 11:18:50.325" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:18:50.325" starttime="20201202 11:18:50.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:50.326" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:18:50.326" starttime="20201202 11:18:50.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:50.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201202 11:18:50.328" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201202 11:18:50.328" starttime="20201202 11:18:50.327"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:50.328" starttime="20201202 11:18:50.311"></status>
</kw>
<msg timestamp="20201202 11:18:50.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201202 11:18:50.328" starttime="20201202 11:18:50.311"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:50.328" starttime="20201202 11:18:50.310"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:50.329" starttime="20201202 11:18:50.309"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:51.334" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:51.335" level="INFO">${rc} = 1</msg>
<msg timestamp="20201202 11:18:51.335" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:18:51.336" starttime="20201202 11:18:51.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:51.337" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:18:51.337" starttime="20201202 11:18:51.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:51.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201202 11:18:51.338" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201202 11:18:51.338" starttime="20201202 11:18:51.337"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:51.338" starttime="20201202 11:18:51.331"></status>
</kw>
<msg timestamp="20201202 11:18:51.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201202 11:18:51.339" starttime="20201202 11:18:51.330"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:51.339" starttime="20201202 11:18:51.330"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:51.339" starttime="20201202 11:18:51.329"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:52.346" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:52.347" level="INFO">${rc} = 1</msg>
<msg timestamp="20201202 11:18:52.347" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:18:52.347" starttime="20201202 11:18:52.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:52.349" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:18:52.349" starttime="20201202 11:18:52.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:52.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201202 11:18:52.350" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201202 11:18:52.350" starttime="20201202 11:18:52.349"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:52.350" starttime="20201202 11:18:52.342"></status>
</kw>
<msg timestamp="20201202 11:18:52.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201202 11:18:52.350" starttime="20201202 11:18:52.342"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:52.351" starttime="20201202 11:18:52.341"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:52.351" starttime="20201202 11:18:52.339"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:53.356" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:53.358" level="INFO">${rc} = 1</msg>
<msg timestamp="20201202 11:18:53.358" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:18:53.358" starttime="20201202 11:18:53.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:53.359" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:18:53.359" starttime="20201202 11:18:53.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:53.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201202 11:18:53.360" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201202 11:18:53.360" starttime="20201202 11:18:53.359"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:53.360" starttime="20201202 11:18:53.353"></status>
</kw>
<msg timestamp="20201202 11:18:53.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201202 11:18:53.361" starttime="20201202 11:18:53.353"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:53.361" starttime="20201202 11:18:53.352"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:53.361" starttime="20201202 11:18:53.351"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:54.367" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:54.368" level="INFO">${rc} = 1</msg>
<msg timestamp="20201202 11:18:54.368" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:18:54.368" starttime="20201202 11:18:54.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:54.369" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:18:54.370" starttime="20201202 11:18:54.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:54.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201202 11:18:54.370" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201202 11:18:54.371" starttime="20201202 11:18:54.370"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:54.371" starttime="20201202 11:18:54.364"></status>
</kw>
<msg timestamp="20201202 11:18:54.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201202 11:18:54.371" starttime="20201202 11:18:54.364"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:54.371" starttime="20201202 11:18:54.363"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:54.372" starttime="20201202 11:18:54.362"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:55.383" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:55.385" level="INFO">${rc} = 1</msg>
<msg timestamp="20201202 11:18:55.385" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:18:55.385" starttime="20201202 11:18:55.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:55.388" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:18:55.388" starttime="20201202 11:18:55.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:55.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201202 11:18:55.393" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201202 11:18:55.394" starttime="20201202 11:18:55.388"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:55.394" starttime="20201202 11:18:55.375"></status>
</kw>
<msg timestamp="20201202 11:18:55.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201202 11:18:55.394" starttime="20201202 11:18:55.374"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:55.395" starttime="20201202 11:18:55.373"></status>
</kw>
<status status="FAIL" endtime="20201202 11:18:55.396" starttime="20201202 11:18:55.372"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:56.403" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:56.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:18:56.405" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:18:56.405" starttime="20201202 11:18:56.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:56.407" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:18:56.407" starttime="20201202 11:18:56.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:56.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:18:56.408" starttime="20201202 11:18:56.407"></status>
</kw>
<status status="PASS" endtime="20201202 11:18:56.408" starttime="20201202 11:18:56.399"></status>
</kw>
<msg timestamp="20201202 11:18:56.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:18:56.408" starttime="20201202 11:18:56.398"></status>
</kw>
<status status="PASS" endtime="20201202 11:18:56.408" starttime="20201202 11:18:56.398"></status>
</kw>
<status status="PASS" endtime="20201202 11:18:56.409" starttime="20201202 11:18:56.397"></status>
</kw>
<status status="PASS" endtime="20201202 11:18:56.409" starttime="20201202 11:18:48.274"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201202 11:18:56.409" critical="yes" starttime="20201202 11:18:48.273"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:18:56.416" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:18:56.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:18:56.776" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201202 11:18:56.776" starttime="20201202 11:18:56.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:18:56.778" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201202 11:18:56.778" starttime="20201202 11:18:56.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:18:56.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:18:56.779" starttime="20201202 11:18:56.778"></status>
</kw>
<status status="PASS" endtime="20201202 11:18:56.779" starttime="20201202 11:18:56.412"></status>
</kw>
<msg timestamp="20201202 11:18:56.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:18:56.779" starttime="20201202 11:18:56.412"></status>
</kw>
<msg timestamp="20201202 11:18:56.780" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201202 11:18:56.780" starttime="20201202 11:18:56.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201202 11:18:56.780" starttime="20201202 11:18:56.780"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201202 11:18:56.781" critical="yes" starttime="20201202 11:18:56.410"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201202 11:18:56.782" starttime="20201202 11:18:48.204"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
