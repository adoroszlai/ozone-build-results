<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201202 11:39:00.137" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:23.538" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:27.129" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 11:24:27.129" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 11:24:27.130" starttime="20201202 11:24:23.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:27.131" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 11:24:27.131" starttime="20201202 11:24:27.130"></status>
</kw>
<msg timestamp="20201202 11:24:27.132" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 11:24:27.132" starttime="20201202 11:24:23.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:27.139" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:29.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:24:29.886" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:24:29.886" starttime="20201202 11:24:27.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:29.887" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:24:29.887" starttime="20201202 11:24:29.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:24:29.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:24:29.888" starttime="20201202 11:24:29.887"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:29.888" starttime="20201202 11:24:27.134"></status>
</kw>
<msg timestamp="20201202 11:24:29.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:24:29.889" starttime="20201202 11:24:27.134"></status>
</kw>
<msg timestamp="20201202 11:24:29.889" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201202 11:24:29.889" starttime="20201202 11:24:27.133"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201202 11:24:29.890" starttime="20201202 11:24:29.889"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:29.890" starttime="20201202 11:24:27.133"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:29.890" starttime="20201202 11:24:27.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:29.901" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:32.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:24:32.388" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:24:32.388" starttime="20201202 11:24:29.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:32.390" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:24:32.390" starttime="20201202 11:24:32.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:24:32.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:24:32.391" starttime="20201202 11:24:32.390"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:32.391" starttime="20201202 11:24:29.897"></status>
</kw>
<msg timestamp="20201202 11:24:32.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:24:32.391" starttime="20201202 11:24:29.893"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:32.391" starttime="20201202 11:24:29.892"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:32.392" starttime="20201202 11:24:29.891"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:32.392" starttime="20201202 11:24:29.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201202 11:24:32.392" starttime="20201202 11:24:32.392"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:32.397" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:35.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:24:35.099" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T11:24:32.239Z",
  "modificat...</msg>
<status status="PASS" endtime="20201202 11:24:35.099" starttime="20201202 11:24:32.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:35.101" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T11:24:32.239Z",
  "modificationTime" : "2020-12-02T11:24:32.239Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201202 11:24:35.101" starttime="20201202 11:24:35.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:24:35.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:24:35.102" starttime="20201202 11:24:35.101"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:35.102" starttime="20201202 11:24:32.394"></status>
</kw>
<msg timestamp="20201202 11:24:35.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:24:35.102" starttime="20201202 11:24:32.393"></status>
</kw>
<msg timestamp="20201202 11:24:35.103" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T11:24:32.239Z",
  "modificat...</msg>
<status status="PASS" endtime="20201202 11:24:35.103" starttime="20201202 11:24:32.392"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201202 11:24:35.103" starttime="20201202 11:24:35.103"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:24:35.108" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:24:35.108" starttime="20201202 11:24:35.108"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:24:35.109" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:24:35.109" starttime="20201202 11:24:35.109"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:35.109" starttime="20201202 11:24:35.107"></status>
</kw>
<msg timestamp="20201202 11:24:35.109" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:24:35.110" starttime="20201202 11:24:35.106"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:35.110" starttime="20201202 11:24:35.105"></status>
</kw>
<msg timestamp="20201202 11:24:35.110" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201202 11:24:35.110" starttime="20201202 11:24:35.105"></status>
</kw>
<msg timestamp="20201202 11:24:35.110" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201202 11:24:35.110" starttime="20201202 11:24:35.104"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:35.115" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:37.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:24:37.603" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:24:37.603" starttime="20201202 11:24:35.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:37.605" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:24:37.605" starttime="20201202 11:24:37.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:24:37.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:24:37.606" starttime="20201202 11:24:37.605"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:37.606" starttime="20201202 11:24:35.111"></status>
</kw>
<msg timestamp="20201202 11:24:37.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:24:37.606" starttime="20201202 11:24:35.111"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:37.606" starttime="20201202 11:24:35.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:37.611" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:43.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:24:43.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:24:43.363" starttime="20201202 11:24:37.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:43.364" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:24:43.364" starttime="20201202 11:24:43.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:24:43.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:24:43.365" starttime="20201202 11:24:43.364"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:43.365" starttime="20201202 11:24:37.608"></status>
</kw>
<msg timestamp="20201202 11:24:43.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:24:43.365" starttime="20201202 11:24:37.608"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:43.366" starttime="20201202 11:24:37.607"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:43.370" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:47.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:24:47.745" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:24:47.746" starttime="20201202 11:24:43.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:47.747" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:24:47.747" starttime="20201202 11:24:47.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:24:47.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:24:47.748" starttime="20201202 11:24:47.747"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:47.748" starttime="20201202 11:24:43.367"></status>
</kw>
<msg timestamp="20201202 11:24:47.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:24:47.749" starttime="20201202 11:24:43.367"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:47.749" starttime="20201202 11:24:43.366"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:47.754" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:52.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:24:52.160" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:24:52.160" starttime="20201202 11:24:47.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:52.161" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:24:52.161" starttime="20201202 11:24:52.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:24:52.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:24:52.162" starttime="20201202 11:24:52.162"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:52.163" starttime="20201202 11:24:47.750"></status>
</kw>
<msg timestamp="20201202 11:24:52.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:24:52.163" starttime="20201202 11:24:47.750"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:52.163" starttime="20201202 11:24:47.749"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 11:24:52.164" critical="yes" starttime="20201202 11:24:23.531"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:24:52.172" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:24:52.172" starttime="20201202 11:24:52.170"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:24:52.173" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:24:52.173" starttime="20201202 11:24:52.172"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:52.173" starttime="20201202 11:24:52.169"></status>
</kw>
<msg timestamp="20201202 11:24:52.173" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:24:52.173" starttime="20201202 11:24:52.168"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:52.174" starttime="20201202 11:24:52.167"></status>
</kw>
<msg timestamp="20201202 11:24:52.174" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 11:24:52.174" starttime="20201202 11:24:52.166"></status>
</kw>
<msg timestamp="20201202 11:24:52.174" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 11:24:52.174" starttime="20201202 11:24:52.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:52.178" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:54.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:24:54.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:24:54.558" starttime="20201202 11:24:52.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:54.559" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:24:54.559" starttime="20201202 11:24:54.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:24:54.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:24:54.560" starttime="20201202 11:24:54.559"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:54.560" starttime="20201202 11:24:52.175"></status>
</kw>
<msg timestamp="20201202 11:24:54.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:24:54.561" starttime="20201202 11:24:52.175"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:54.561" starttime="20201202 11:24:52.174"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:24:54.566" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:24:56.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:24:56.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:24:56.877" starttime="20201202 11:24:54.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:24:56.878" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:24:56.878" starttime="20201202 11:24:56.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:24:56.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:24:56.879" starttime="20201202 11:24:56.879"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:56.880" starttime="20201202 11:24:54.562"></status>
</kw>
<msg timestamp="20201202 11:24:56.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:24:56.880" starttime="20201202 11:24:54.562"></status>
</kw>
<status status="PASS" endtime="20201202 11:24:56.880" starttime="20201202 11:24:54.561"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 11:24:56.880" critical="yes" starttime="20201202 11:24:52.164"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201202 11:24:56.882" starttime="20201202 11:24:23.447"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:26:42.122" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:26:42.122" starttime="20201202 11:26:42.122"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:26:42.123" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:26:42.123" starttime="20201202 11:26:42.123"></status>
</kw>
<status status="PASS" endtime="20201202 11:26:42.123" starttime="20201202 11:26:42.121"></status>
</kw>
<msg timestamp="20201202 11:26:42.124" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:26:42.124" starttime="20201202 11:26:42.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:26:42.125" starttime="20201202 11:26:42.125"></status>
</kw>
<msg timestamp="20201202 11:26:42.125" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 11:26:42.125" starttime="20201202 11:26:42.124"></status>
</kw>
<status status="PASS" endtime="20201202 11:26:42.126" starttime="20201202 11:26:42.120"></status>
</kw>
<msg timestamp="20201202 11:26:42.126" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:26:42.126" starttime="20201202 11:26:42.119"></status>
</kw>
<msg timestamp="20201202 11:26:42.126" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:26:42.126" starttime="20201202 11:26:42.118"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:26:42.127" level="INFO">${random} = 46222</msg>
<status status="PASS" endtime="20201202 11:26:42.127" starttime="20201202 11:26:42.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:26:42.132" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-46222 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:26:45.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:26:45.810" level="INFO">${output} = 2020-12-02 11:26:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:26:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 ...</msg>
<status status="PASS" endtime="20201202 11:26:45.810" starttime="20201202 11:26:42.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:26:45.812" level="INFO">2020-12-02 11:26:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:26:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 11:26:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-02 11:26:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:26:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-64025CBB7930-&gt;a1546429-9468-4388-ac93-f7b11236cf72
2020-12-02 11:26:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201202 11:26:45.812" starttime="20201202 11:26:45.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:26:45.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:26:45.813" starttime="20201202 11:26:45.812"></status>
</kw>
<status status="PASS" endtime="20201202 11:26:45.813" starttime="20201202 11:26:42.128"></status>
</kw>
<msg timestamp="20201202 11:26:45.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:26:45.813" starttime="20201202 11:26:42.128"></status>
</kw>
<msg timestamp="20201202 11:26:45.814" level="INFO">${result} = 2020-12-02 11:26:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:26:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 ...</msg>
<status status="PASS" endtime="20201202 11:26:45.814" starttime="20201202 11:26:42.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:26:45.819" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:26:47.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:26:47.837" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-02 11:25 ofs://om/volume1/bucket1/ozone-06451
-rw-...</msg>
<status status="PASS" endtime="20201202 11:26:47.837" starttime="20201202 11:26:45.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:26:47.838" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-02 11:25 ofs://om/volume1/bucket1/ozone-06451
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-02 11:26 ofs://om/volume1/bucket1/ozone-46222
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:24 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:26 ofs://om/volume1/bucket1/wordcount-98.txt</msg>
<status status="PASS" endtime="20201202 11:26:47.838" starttime="20201202 11:26:47.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:26:47.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:26:47.839" starttime="20201202 11:26:47.839"></status>
</kw>
<status status="PASS" endtime="20201202 11:26:47.839" starttime="20201202 11:26:45.816"></status>
</kw>
<msg timestamp="20201202 11:26:47.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:26:47.840" starttime="20201202 11:26:45.815"></status>
</kw>
<msg timestamp="20201202 11:26:47.840" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-02 11:25 ofs://om/volume1/bucket1/ozone-06451
-rw-...</msg>
<status status="PASS" endtime="20201202 11:26:47.840" starttime="20201202 11:26:45.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:26:47.841" starttime="20201202 11:26:47.840"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 11:26:47.841" critical="yes" starttime="20201202 11:26:42.117"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201202 11:26:47.842" starttime="20201202 11:26:42.046"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:25:02.598" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:25:02.598" starttime="20201202 11:25:02.598"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:25:02.599" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:25:02.599" starttime="20201202 11:25:02.599"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:02.599" starttime="20201202 11:25:02.597"></status>
</kw>
<msg timestamp="20201202 11:25:02.599" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:25:02.600" starttime="20201202 11:25:02.597"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:02.600" starttime="20201202 11:25:02.596"></status>
</kw>
<msg timestamp="20201202 11:25:02.600" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:25:02.600" starttime="20201202 11:25:02.595"></status>
</kw>
<msg timestamp="20201202 11:25:02.600" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:25:02.600" starttime="20201202 11:25:02.594"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:25:02.601" level="INFO">${random} = 06451</msg>
<status status="PASS" endtime="20201202 11:25:02.601" starttime="20201202 11:25:02.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:25:02.607" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-06451 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:25:06.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:25:06.672" level="INFO">${output} = 2020-12-02 11:25:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:25:04 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 ...</msg>
<status status="PASS" endtime="20201202 11:25:06.672" starttime="20201202 11:25:02.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:25:06.674" level="INFO">2020-12-02 11:25:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:25:04 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 11:25:04 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-02 11:25:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:25:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8BDE17113B36-&gt;a1546429-9468-4388-ac93-f7b11236cf72
2020-12-02 11:25:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201202 11:25:06.674" starttime="20201202 11:25:06.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:25:06.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:25:06.675" starttime="20201202 11:25:06.674"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:06.675" starttime="20201202 11:25:02.602"></status>
</kw>
<msg timestamp="20201202 11:25:06.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:25:06.675" starttime="20201202 11:25:02.602"></status>
</kw>
<msg timestamp="20201202 11:25:06.676" level="INFO">${result} = 2020-12-02 11:25:04 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:25:04 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 ...</msg>
<status status="PASS" endtime="20201202 11:25:06.676" starttime="20201202 11:25:02.601"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:25:06.681" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:25:08.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:25:08.877" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-02 11:25 o3fs://bucket1.volume1.om/ozone-06451
dr...</msg>
<status status="PASS" endtime="20201202 11:25:08.877" starttime="20201202 11:25:06.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:25:08.878" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-02 11:25 o3fs://bucket1.volume1.om/ozone-06451
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:24 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 11:25:08.879" starttime="20201202 11:25:08.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:25:08.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:25:08.880" starttime="20201202 11:25:08.879"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:08.880" starttime="20201202 11:25:06.678"></status>
</kw>
<msg timestamp="20201202 11:25:08.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:25:08.880" starttime="20201202 11:25:06.677"></status>
</kw>
<msg timestamp="20201202 11:25:08.880" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-02 11:25 o3fs://bucket1.volume1.om/ozone-06451
dr...</msg>
<status status="PASS" endtime="20201202 11:25:08.880" starttime="20201202 11:25:06.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:25:08.881" starttime="20201202 11:25:08.881"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 11:25:08.881" critical="yes" starttime="20201202 11:25:02.593"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201202 11:25:08.883" starttime="20201202 11:25:02.519"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:26:53.075" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:26:53.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:26:53.080" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:26:53.080" starttime="20201202 11:26:53.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:26:53.081" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:26:53.081" starttime="20201202 11:26:53.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:26:53.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:26:53.082" starttime="20201202 11:26:53.082"></status>
</kw>
<status status="PASS" endtime="20201202 11:26:53.082" starttime="20201202 11:26:53.070"></status>
</kw>
<msg timestamp="20201202 11:26:53.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:26:53.083" starttime="20201202 11:26:53.069"></status>
</kw>
<msg timestamp="20201202 11:26:53.083" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:26:53.083" starttime="20201202 11:26:53.069"></status>
</kw>
<msg timestamp="20201202 11:26:53.083" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:26:53.083" starttime="20201202 11:26:53.068"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:26:53.088" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:26:53.089" starttime="20201202 11:26:53.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:26:53.089" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:26:53.089" starttime="20201202 11:26:53.089"></status>
</kw>
<status status="PASS" endtime="20201202 11:26:53.089" starttime="20201202 11:26:53.086"></status>
</kw>
<msg timestamp="20201202 11:26:53.090" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:26:53.090" starttime="20201202 11:26:53.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:26:53.091" starttime="20201202 11:26:53.090"></status>
</kw>
<msg timestamp="20201202 11:26:53.091" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 11:26:53.091" starttime="20201202 11:26:53.090"></status>
</kw>
<status status="PASS" endtime="20201202 11:26:53.091" starttime="20201202 11:26:53.085"></status>
</kw>
<msg timestamp="20201202 11:26:53.091" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:26:53.092" starttime="20201202 11:26:53.084"></status>
</kw>
<msg timestamp="20201202 11:26:53.092" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:26:53.092" starttime="20201202 11:26:53.084"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:26:53.097" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:27:29.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:27:29.649" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:26:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:26:55 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201202 11:27:29.649" starttime="20201202 11:26:53.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:27:29.650" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:26:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:26:55 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 11:26:55 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-02 11:26:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:26:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0983247B0D96-&gt;a1546429-9468-4388-ac93-f7b11236cf72
2020-12-02 11:26:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-02 11:26:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-02 11:26:56 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 11:26:56 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-02 11:26:57 INFO  JobSubmitter:198 - number of splits:3
2020-12-02 11:26:57 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606908226726_0003
2020-12-02 11:26:57 INFO  YarnClientImpl:273 - Submitted application application_1606908226726_0003
2020-12-02 11:26:57 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606908226726_0003/
2020-12-02 11:26:57 INFO  Job:1339 - Running job: job_1606908226726_0003
2020-12-02 11:27:05 INFO  Job:1360 - Job job_1606908226726_0003 running in uber mode : false
2020-12-02 11:27:05 INFO  Job:1367 -  map 0% reduce 0%
2020-12-02 11:27:12 INFO  Job:1367 -  map 33% reduce 0%
2020-12-02 11:27:17 INFO  Job:1367 -  map 67% reduce 0%
2020-12-02 11:27:22 INFO  Job:1367 -  map 100% reduce 0%
2020-12-02 11:27:27 INFO  Job:1367 -  map 100% reduce 100%
2020-12-02 11:27:28 INFO  Job:1378 - Job job_1606908226726_0003 completed successfully
2020-12-02 11:27:29 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610081
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45372
		Total time spent by all reduces in occupied slots (ms)=17124
		Total time spent by all map tasks (ms)=11343
		Total time spent by all reduce tasks (ms)=4281
		Total vcore-milliseconds taken by all map tasks=11343
		Total vcore-milliseconds taken by all reduce tasks=4281
		Total megabyte-milliseconds taken by all map tasks=46460928
		Total megabyte-milliseconds taken by all reduce tasks=17534976
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=7740
		Physical memory (bytes) snapshot=1145167872
		Virtual memory (bytes) snapshot=15775973376
		Total committed heap usage (bytes)=1053818880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.525 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201202 11:27:29.650" starttime="20201202 11:27:29.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:27:29.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:27:29.651" starttime="20201202 11:27:29.650"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.651" starttime="20201202 11:26:53.093"></status>
</kw>
<msg timestamp="20201202 11:27:29.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:27:29.652" starttime="20201202 11:26:53.093"></status>
</kw>
<msg timestamp="20201202 11:27:29.652" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:26:55 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:26:55 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201202 11:27:29.652" starttime="20201202 11:26:53.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:27:29.653" starttime="20201202 11:27:29.652"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:27:29.653" critical="yes" starttime="20201202 11:26:53.068"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:27:29.660" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:27:29.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:27:29.668" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:27:29.668" starttime="20201202 11:27:29.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:27:29.670" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:27:29.670" starttime="20201202 11:27:29.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:27:29.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:27:29.671" starttime="20201202 11:27:29.670"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.671" starttime="20201202 11:27:29.657"></status>
</kw>
<msg timestamp="20201202 11:27:29.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:27:29.671" starttime="20201202 11:27:29.656"></status>
</kw>
<msg timestamp="20201202 11:27:29.672" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:27:29.672" starttime="20201202 11:27:29.656"></status>
</kw>
<msg timestamp="20201202 11:27:29.672" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:27:29.672" starttime="20201202 11:27:29.655"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:27:29.673" level="INFO">${random} = 33</msg>
<status status="PASS" endtime="20201202 11:27:29.673" starttime="20201202 11:27:29.672"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:27:29.678" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:27:29.678" starttime="20201202 11:27:29.677"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:27:29.678" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:27:29.678" starttime="20201202 11:27:29.678"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.679" starttime="20201202 11:27:29.676"></status>
</kw>
<msg timestamp="20201202 11:27:29.679" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:27:29.679" starttime="20201202 11:27:29.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:27:29.680" starttime="20201202 11:27:29.680"></status>
</kw>
<msg timestamp="20201202 11:27:29.680" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 11:27:29.680" starttime="20201202 11:27:29.679"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.681" starttime="20201202 11:27:29.675"></status>
</kw>
<msg timestamp="20201202 11:27:29.681" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:27:29.681" starttime="20201202 11:27:29.674"></status>
</kw>
<msg timestamp="20201202 11:27:29.681" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:27:29.681" starttime="20201202 11:27:29.673"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:27:29.685" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:27:29.685" starttime="20201202 11:27:29.684"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:27:29.686" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:27:29.686" starttime="20201202 11:27:29.685"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.686" starttime="20201202 11:27:29.684"></status>
</kw>
<msg timestamp="20201202 11:27:29.686" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:27:29.686" starttime="20201202 11:27:29.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:27:29.688" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201202 11:27:29.688" starttime="20201202 11:27:29.687"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:27:29.689" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201202 11:27:29.689" starttime="20201202 11:27:29.688"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.689" starttime="20201202 11:27:29.687"></status>
</kw>
<msg timestamp="20201202 11:27:29.689" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201202 11:27:29.689" starttime="20201202 11:27:29.686"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.690" starttime="20201202 11:27:29.683"></status>
</kw>
<msg timestamp="20201202 11:27:29.690" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201202 11:27:29.690" starttime="20201202 11:27:29.682"></status>
</kw>
<msg timestamp="20201202 11:27:29.690" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201202 11:27:29.690" starttime="20201202 11:27:29.681"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:27:29.694" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:27:29.694" starttime="20201202 11:27:29.694"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:27:29.695" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:27:29.695" starttime="20201202 11:27:29.695"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.695" starttime="20201202 11:27:29.693"></status>
</kw>
<msg timestamp="20201202 11:27:29.696" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:27:29.696" starttime="20201202 11:27:29.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:27:29.699" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201202 11:27:29.699" starttime="20201202 11:27:29.698"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:27:29.700" level="INFO">${result} = /wordcount-33.txt</msg>
<status status="PASS" endtime="20201202 11:27:29.700" starttime="20201202 11:27:29.699"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.700" starttime="20201202 11:27:29.697"></status>
</kw>
<msg timestamp="20201202 11:27:29.700" level="INFO">${path_with_leading} = /wordcount-33.txt</msg>
<status status="PASS" endtime="20201202 11:27:29.700" starttime="20201202 11:27:29.696"></status>
</kw>
<status status="PASS" endtime="20201202 11:27:29.700" starttime="20201202 11:27:29.692"></status>
</kw>
<msg timestamp="20201202 11:27:29.701" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-33.txt</msg>
<status status="PASS" endtime="20201202 11:27:29.701" starttime="20201202 11:27:29.691"></status>
</kw>
<msg timestamp="20201202 11:27:29.701" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-33.txt</msg>
<status status="PASS" endtime="20201202 11:27:29.701" starttime="20201202 11:27:29.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:27:29.706" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-33.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:28:07.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:28:07.029" level="INFO">${output} = 2020-12-02 11:27:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-02 11:27:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201202 11:28:07.029" starttime="20201202 11:27:29.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:28:07.030" level="INFO">2020-12-02 11:27:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-02 11:27:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 11:27:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:27:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 11:27:32 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-02 11:27:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:27:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-41182A6DA0F3-&gt;a1546429-9468-4388-ac93-f7b11236cf72
2020-12-02 11:27:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 11:27:33 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-02 11:27:33 INFO  JobSubmitter:198 - number of splits:3
2020-12-02 11:27:33 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606908226726_0004
2020-12-02 11:27:34 INFO  YarnClientImpl:273 - Submitted application application_1606908226726_0004
2020-12-02 11:27:34 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606908226726_0004/
2020-12-02 11:27:34 INFO  Job:1339 - Running job: job_1606908226726_0004
2020-12-02 11:27:42 INFO  Job:1360 - Job job_1606908226726_0004 running in uber mode : false
2020-12-02 11:27:42 INFO  Job:1367 -  map 0% reduce 0%
2020-12-02 11:27:49 INFO  Job:1367 -  map 33% reduce 0%
2020-12-02 11:27:54 INFO  Job:1367 -  map 67% reduce 0%
2020-12-02 11:27:59 INFO  Job:1367 -  map 100% reduce 0%
2020-12-02 11:28:05 INFO  Job:1367 -  map 100% reduce 100%
2020-12-02 11:28:06 INFO  Job:1378 - Job job_1606908226726_0004 completed successfully
2020-12-02 11:28:06 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=672825
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39713
		OFS: Number of bytes written=22202
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45892
		Total time spent by all reduces in occupied slots (ms)=21088
		Total time spent by all map tasks (ms)=11473
		Total time spent by all reduce tasks (ms)=5272
		Total vcore-milliseconds taken by all map tasks=11473
		Total vcore-milliseconds taken by all reduce tasks=5272
		Total megabyte-milliseconds taken by all map tasks=46993408
		Total megabyte-milliseconds taken by all reduce tasks=21594112
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=648
		CPU time spent (ms)=8350
		Physical memory (bytes) snapshot=1142980608
		Virtual memory (bytes) snapshot=15796379648
		Total committed heap usage (bytes)=957874176
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201202 11:28:07.030" starttime="20201202 11:28:07.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:28:07.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:28:07.032" starttime="20201202 11:28:07.030"></status>
</kw>
<status status="PASS" endtime="20201202 11:28:07.032" starttime="20201202 11:27:29.702"></status>
</kw>
<msg timestamp="20201202 11:28:07.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:28:07.032" starttime="20201202 11:27:29.702"></status>
</kw>
<msg timestamp="20201202 11:28:07.033" level="INFO">${output} = 2020-12-02 11:27:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-02 11:27:32 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201202 11:28:07.033" starttime="20201202 11:27:29.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201202 11:28:07.033" starttime="20201202 11:28:07.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:28:07.034" starttime="20201202 11:28:07.033"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:28:07.034" critical="yes" starttime="20201202 11:27:29.654"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201202 11:28:07.036" starttime="20201202 11:26:52.998"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:25:14.258" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:25:14.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:25:14.262" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:25:14.262" starttime="20201202 11:25:14.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:25:14.263" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:25:14.263" starttime="20201202 11:25:14.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:25:14.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:25:14.264" starttime="20201202 11:25:14.263"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:14.264" starttime="20201202 11:25:14.251"></status>
</kw>
<msg timestamp="20201202 11:25:14.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:25:14.265" starttime="20201202 11:25:14.251"></status>
</kw>
<msg timestamp="20201202 11:25:14.265" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:25:14.265" starttime="20201202 11:25:14.251"></status>
</kw>
<msg timestamp="20201202 11:25:14.265" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:25:14.265" starttime="20201202 11:25:14.250"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:25:14.271" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:25:14.271" starttime="20201202 11:25:14.270"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:25:14.271" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:25:14.272" starttime="20201202 11:25:14.271"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:14.272" starttime="20201202 11:25:14.269"></status>
</kw>
<msg timestamp="20201202 11:25:14.272" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:25:14.272" starttime="20201202 11:25:14.268"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:14.272" starttime="20201202 11:25:14.267"></status>
</kw>
<msg timestamp="20201202 11:25:14.272" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:25:14.272" starttime="20201202 11:25:14.266"></status>
</kw>
<msg timestamp="20201202 11:25:14.273" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:25:14.273" starttime="20201202 11:25:14.266"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:25:14.277" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:25:59.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:25:59.851" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:25:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:25:16 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201202 11:25:59.852" starttime="20201202 11:25:14.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:25:59.853" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:25:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:25:16 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 11:25:16 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-02 11:25:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:25:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-89D9006C08A6-&gt;a1546429-9468-4388-ac93-f7b11236cf72
2020-12-02 11:25:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-02 11:25:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-02 11:25:18 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-02 11:25:18 INFO  JobSubmitter:198 - number of splits:3
2020-12-02 11:25:18 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606908226726_0001
2020-12-02 11:25:19 INFO  YarnClientImpl:273 - Submitted application application_1606908226726_0001
2020-12-02 11:25:19 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606908226726_0001/
2020-12-02 11:25:19 INFO  Job:1339 - Running job: job_1606908226726_0001
2020-12-02 11:25:29 INFO  Job:1360 - Job job_1606908226726_0001 running in uber mode : false
2020-12-02 11:25:29 INFO  Job:1367 -  map 0% reduce 0%
2020-12-02 11:25:36 INFO  Job:1367 -  map 33% reduce 0%
2020-12-02 11:25:43 INFO  Job:1367 -  map 67% reduce 0%
2020-12-02 11:25:49 INFO  Job:1367 -  map 100% reduce 0%
2020-12-02 11:25:53 INFO  Job:1367 -  map 100% reduce 100%
2020-12-02 11:25:59 INFO  Job:1378 - Job job_1606908226726_0001 completed successfully
2020-12-02 11:25:59 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610301
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46472
		Total time spent by all reduces in occupied slots (ms)=16888
		Total time spent by all map tasks (ms)=11618
		Total time spent by all reduce tasks (ms)=4222
		Total vcore-milliseconds taken by all map tasks=11618
		Total vcore-milliseconds taken by all reduce tasks=4222
		Total megabyte-milliseconds taken by all map tasks=47587328
		Total megabyte-milliseconds taken by all reduce tasks=17293312
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=7750
		Physical memory (bytes) snapshot=1174355968
		Virtual memory (bytes) snapshot=15800418304
		Total committed heap usage (bytes)=1051197440
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 41.235 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201202 11:25:59.853" starttime="20201202 11:25:59.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:25:59.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:25:59.854" starttime="20201202 11:25:59.853"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:59.854" starttime="20201202 11:25:14.274"></status>
</kw>
<msg timestamp="20201202 11:25:59.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:25:59.855" starttime="20201202 11:25:14.274"></status>
</kw>
<msg timestamp="20201202 11:25:59.855" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:25:16 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:25:16 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201202 11:25:59.855" starttime="20201202 11:25:14.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:25:59.856" starttime="20201202 11:25:59.855"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:25:59.856" critical="yes" starttime="20201202 11:25:14.249"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:25:59.863" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:25:59.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:25:59.869" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:25:59.869" starttime="20201202 11:25:59.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:25:59.870" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:25:59.870" starttime="20201202 11:25:59.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:25:59.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:25:59.871" starttime="20201202 11:25:59.870"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:59.871" starttime="20201202 11:25:59.860"></status>
</kw>
<msg timestamp="20201202 11:25:59.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:25:59.872" starttime="20201202 11:25:59.860"></status>
</kw>
<msg timestamp="20201202 11:25:59.872" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:25:59.872" starttime="20201202 11:25:59.859"></status>
</kw>
<msg timestamp="20201202 11:25:59.872" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201202 11:25:59.872" starttime="20201202 11:25:59.858"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:25:59.873" level="INFO">${random} = 98</msg>
<status status="PASS" endtime="20201202 11:25:59.873" starttime="20201202 11:25:59.872"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:25:59.878" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:25:59.878" starttime="20201202 11:25:59.877"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:25:59.878" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:25:59.879" starttime="20201202 11:25:59.878"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:59.879" starttime="20201202 11:25:59.876"></status>
</kw>
<msg timestamp="20201202 11:25:59.879" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:25:59.879" starttime="20201202 11:25:59.876"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:59.879" starttime="20201202 11:25:59.875"></status>
</kw>
<msg timestamp="20201202 11:25:59.879" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:25:59.879" starttime="20201202 11:25:59.874"></status>
</kw>
<msg timestamp="20201202 11:25:59.880" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:25:59.880" starttime="20201202 11:25:59.873"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:25:59.884" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:25:59.884" starttime="20201202 11:25:59.883"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:25:59.885" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:25:59.885" starttime="20201202 11:25:59.884"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:59.885" starttime="20201202 11:25:59.883"></status>
</kw>
<msg timestamp="20201202 11:25:59.885" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:25:59.885" starttime="20201202 11:25:59.882"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:59.885" starttime="20201202 11:25:59.881"></status>
</kw>
<msg timestamp="20201202 11:25:59.885" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201202 11:25:59.885" starttime="20201202 11:25:59.881"></status>
</kw>
<msg timestamp="20201202 11:25:59.886" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201202 11:25:59.886" starttime="20201202 11:25:59.880"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:25:59.890" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:25:59.890" starttime="20201202 11:25:59.890"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:25:59.891" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:25:59.891" starttime="20201202 11:25:59.890"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:59.891" starttime="20201202 11:25:59.889"></status>
</kw>
<msg timestamp="20201202 11:25:59.891" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:25:59.891" starttime="20201202 11:25:59.888"></status>
</kw>
<status status="PASS" endtime="20201202 11:25:59.891" starttime="20201202 11:25:59.887"></status>
</kw>
<msg timestamp="20201202 11:25:59.892" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-98.txt</msg>
<status status="PASS" endtime="20201202 11:25:59.892" starttime="20201202 11:25:59.887"></status>
</kw>
<msg timestamp="20201202 11:25:59.892" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-98.txt</msg>
<status status="PASS" endtime="20201202 11:25:59.892" starttime="20201202 11:25:59.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:25:59.897" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-98.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:26:36.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:26:36.821" level="INFO">${output} = 2020-12-02 11:26:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-02 11:26:02 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201202 11:26:36.821" starttime="20201202 11:25:59.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:26:36.822" level="INFO">2020-12-02 11:26:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-02 11:26:02 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 11:26:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:26:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-02 11:26:02 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-02 11:26:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:26:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C879FC084BC3-&gt;a1546429-9468-4388-ac93-f7b11236cf72
2020-12-02 11:26:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 11:26:04 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-02 11:26:04 INFO  JobSubmitter:198 - number of splits:3
2020-12-02 11:26:04 INFO  JobSubmitter:287 - Submitting tokens for job: job_1606908226726_0002
2020-12-02 11:26:04 INFO  YarnClientImpl:273 - Submitted application application_1606908226726_0002
2020-12-02 11:26:04 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1606908226726_0002/
2020-12-02 11:26:04 INFO  Job:1339 - Running job: job_1606908226726_0002
2020-12-02 11:26:13 INFO  Job:1360 - Job job_1606908226726_0002 running in uber mode : false
2020-12-02 11:26:13 INFO  Job:1367 -  map 0% reduce 0%
2020-12-02 11:26:20 INFO  Job:1367 -  map 33% reduce 0%
2020-12-02 11:26:26 INFO  Job:1367 -  map 67% reduce 0%
2020-12-02 11:26:31 INFO  Job:1367 -  map 100% reduce 0%
2020-12-02 11:26:35 INFO  Job:1367 -  map 100% reduce 100%
2020-12-02 11:26:36 INFO  Job:1378 - Job job_1606908226726_0002 completed successfully
2020-12-02 11:26:36 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=672909
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39716
		O3FS: Number of bytes written=22202
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46612
		Total time spent by all reduces in occupied slots (ms)=16780
		Total time spent by all map tasks (ms)=11653
		Total time spent by all reduce tasks (ms)=4195
		Total vcore-milliseconds taken by all map tasks=11653
		Total vcore-milliseconds taken by all reduce tasks=4195
		Total megabyte-milliseconds taken by all map tasks=47730688
		Total megabyte-milliseconds taken by all reduce tasks=17182720
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=600
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1124696064
		Virtual memory (bytes) snapshot=15777906688
		Total committed heap usage (bytes)=983564288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201202 11:26:36.823" starttime="20201202 11:26:36.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:26:36.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:26:36.823" starttime="20201202 11:26:36.823"></status>
</kw>
<status status="PASS" endtime="20201202 11:26:36.824" starttime="20201202 11:25:59.893"></status>
</kw>
<msg timestamp="20201202 11:26:36.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:26:36.824" starttime="20201202 11:25:59.893"></status>
</kw>
<msg timestamp="20201202 11:26:36.824" level="INFO">${output} = 2020-12-02 11:26:02 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.5:8032
2020-12-02 11:26:02 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201202 11:26:36.824" starttime="20201202 11:25:59.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201202 11:26:36.825" starttime="20201202 11:26:36.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:26:36.826" starttime="20201202 11:26:36.825"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:26:36.826" critical="yes" starttime="20201202 11:25:59.857"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201202 11:26:36.827" starttime="20201202 11:25:14.182"></status>
</suite>
<status status="PASS" elapsedtime="202278" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:18.426" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:21.321" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 11:29:21.321" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 11:29:21.321" starttime="20201202 11:29:18.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:21.322" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 11:29:21.322" starttime="20201202 11:29:21.321"></status>
</kw>
<msg timestamp="20201202 11:29:21.323" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 11:29:21.323" starttime="20201202 11:29:18.414"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:21.331" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:23.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:29:23.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:29:23.710" starttime="20201202 11:29:21.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:23.711" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:29:23.711" starttime="20201202 11:29:23.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:29:23.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:29:23.712" starttime="20201202 11:29:23.711"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:23.715" starttime="20201202 11:29:21.325"></status>
</kw>
<msg timestamp="20201202 11:29:23.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:29:23.715" starttime="20201202 11:29:21.325"></status>
</kw>
<msg timestamp="20201202 11:29:23.715" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201202 11:29:23.715" starttime="20201202 11:29:21.324"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201202 11:29:23.716" starttime="20201202 11:29:23.716"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:23.716" starttime="20201202 11:29:21.323"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:23.716" starttime="20201202 11:29:21.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:23.723" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:26.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:29:26.053" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:29:26.053" starttime="20201202 11:29:23.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:26.054" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:29:26.054" starttime="20201202 11:29:26.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:29:26.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:29:26.055" starttime="20201202 11:29:26.054"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:26.055" starttime="20201202 11:29:23.719"></status>
</kw>
<msg timestamp="20201202 11:29:26.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:29:26.056" starttime="20201202 11:29:23.718"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:26.056" starttime="20201202 11:29:23.718"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:26.056" starttime="20201202 11:29:23.717"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:26.056" starttime="20201202 11:29:23.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201202 11:29:26.057" starttime="20201202 11:29:26.056"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:26.062" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:28.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:29:28.545" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T11:29:25.927Z",
  "modificat...</msg>
<status status="PASS" endtime="20201202 11:29:28.545" starttime="20201202 11:29:26.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:28.546" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T11:29:25.927Z",
  "modificationTime" : "2020-12-02T11:29:25.927Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201202 11:29:28.546" starttime="20201202 11:29:28.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:29:28.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:29:28.553" starttime="20201202 11:29:28.547"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:28.553" starttime="20201202 11:29:26.058"></status>
</kw>
<msg timestamp="20201202 11:29:28.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:29:28.554" starttime="20201202 11:29:26.058"></status>
</kw>
<msg timestamp="20201202 11:29:28.554" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T11:29:25.927Z",
  "modificat...</msg>
<status status="PASS" endtime="20201202 11:29:28.554" starttime="20201202 11:29:26.057"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201202 11:29:28.555" starttime="20201202 11:29:28.554"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:29:28.560" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:29:28.560" starttime="20201202 11:29:28.559"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:29:28.560" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:29:28.560" starttime="20201202 11:29:28.560"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:28.561" starttime="20201202 11:29:28.558"></status>
</kw>
<msg timestamp="20201202 11:29:28.561" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:29:28.561" starttime="20201202 11:29:28.558"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:28.561" starttime="20201202 11:29:28.557"></status>
</kw>
<msg timestamp="20201202 11:29:28.561" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201202 11:29:28.561" starttime="20201202 11:29:28.556"></status>
</kw>
<msg timestamp="20201202 11:29:28.562" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201202 11:29:28.562" starttime="20201202 11:29:28.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:28.566" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:30.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:29:30.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:29:30.964" starttime="20201202 11:29:28.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:30.965" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:29:30.965" starttime="20201202 11:29:30.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:29:30.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:29:30.966" starttime="20201202 11:29:30.966"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:30.967" starttime="20201202 11:29:28.563"></status>
</kw>
<msg timestamp="20201202 11:29:30.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:29:30.967" starttime="20201202 11:29:28.562"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:30.967" starttime="20201202 11:29:28.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:30.973" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:36.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:29:36.708" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:29:36.708" starttime="20201202 11:29:30.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:36.709" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:29:36.710" starttime="20201202 11:29:36.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:29:36.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:29:36.710" starttime="20201202 11:29:36.710"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:36.711" starttime="20201202 11:29:30.969"></status>
</kw>
<msg timestamp="20201202 11:29:36.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:29:36.711" starttime="20201202 11:29:30.968"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:36.711" starttime="20201202 11:29:30.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:36.716" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:41.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:29:41.413" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:29:41.413" starttime="20201202 11:29:36.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:41.414" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:29:41.415" starttime="20201202 11:29:41.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:29:41.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:29:41.415" starttime="20201202 11:29:41.415"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:41.416" starttime="20201202 11:29:36.713"></status>
</kw>
<msg timestamp="20201202 11:29:41.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:29:41.416" starttime="20201202 11:29:36.712"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:41.416" starttime="20201202 11:29:36.711"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:41.420" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:45.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:29:45.928" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:29:45.928" starttime="20201202 11:29:41.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:45.930" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:29:45.930" starttime="20201202 11:29:45.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:29:45.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:29:45.930" starttime="20201202 11:29:45.930"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:45.931" starttime="20201202 11:29:41.417"></status>
</kw>
<msg timestamp="20201202 11:29:45.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:29:45.931" starttime="20201202 11:29:41.417"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:45.931" starttime="20201202 11:29:41.416"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 11:29:45.932" critical="yes" starttime="20201202 11:29:18.413"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:29:45.938" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:29:45.938" starttime="20201202 11:29:45.937"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:29:45.939" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:29:45.939" starttime="20201202 11:29:45.938"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:45.939" starttime="20201202 11:29:45.936"></status>
</kw>
<msg timestamp="20201202 11:29:45.939" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:29:45.940" starttime="20201202 11:29:45.936"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:45.940" starttime="20201202 11:29:45.935"></status>
</kw>
<msg timestamp="20201202 11:29:45.940" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 11:29:45.940" starttime="20201202 11:29:45.934"></status>
</kw>
<msg timestamp="20201202 11:29:45.940" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 11:29:45.941" starttime="20201202 11:29:45.933"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:45.944" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:48.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:29:48.368" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:29:48.368" starttime="20201202 11:29:45.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:48.369" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:29:48.369" starttime="20201202 11:29:48.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:29:48.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:29:48.370" starttime="20201202 11:29:48.369"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:48.370" starttime="20201202 11:29:45.942"></status>
</kw>
<msg timestamp="20201202 11:29:48.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:29:48.371" starttime="20201202 11:29:45.941"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:48.371" starttime="20201202 11:29:45.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:48.375" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:29:50.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:29:50.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:29:50.848" starttime="20201202 11:29:48.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:29:50.849" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:29:50.849" starttime="20201202 11:29:50.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:29:50.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:29:50.850" starttime="20201202 11:29:50.849"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:50.850" starttime="20201202 11:29:48.372"></status>
</kw>
<msg timestamp="20201202 11:29:50.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:29:50.850" starttime="20201202 11:29:48.372"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:50.851" starttime="20201202 11:29:48.371"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 11:29:50.851" critical="yes" starttime="20201202 11:29:45.933"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201202 11:29:50.852" starttime="20201202 11:29:18.345"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:31:43.882" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:31:43.882" starttime="20201202 11:31:43.881"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:31:43.883" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:31:43.883" starttime="20201202 11:31:43.882"></status>
</kw>
<status status="PASS" endtime="20201202 11:31:43.883" starttime="20201202 11:31:43.881"></status>
</kw>
<msg timestamp="20201202 11:31:43.883" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:31:43.883" starttime="20201202 11:31:43.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:31:43.884" starttime="20201202 11:31:43.884"></status>
</kw>
<msg timestamp="20201202 11:31:43.885" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 11:31:43.885" starttime="20201202 11:31:43.883"></status>
</kw>
<status status="PASS" endtime="20201202 11:31:43.885" starttime="20201202 11:31:43.879"></status>
</kw>
<msg timestamp="20201202 11:31:43.885" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:31:43.885" starttime="20201202 11:31:43.879"></status>
</kw>
<msg timestamp="20201202 11:31:43.886" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:31:43.886" starttime="20201202 11:31:43.877"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:31:43.886" level="INFO">${random} = 26932</msg>
<status status="PASS" endtime="20201202 11:31:43.886" starttime="20201202 11:31:43.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:31:43.894" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-26932 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:31:47.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:31:47.791" level="INFO">${output} = 2020-12-02 11:31:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:31:47.791" starttime="20201202 11:31:43.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:31:47.793" level="INFO">2020-12-02 11:31:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:46 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-02 11:31:46 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:31:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:31:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:31:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:31:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E11890FD4ABB-&gt;0cb29bbb-a737-4d89-ad14-861437a03f54
2020-12-02 11:31:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 11:31:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201202 11:31:47.793" starttime="20201202 11:31:47.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:31:47.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:31:47.794" starttime="20201202 11:31:47.793"></status>
</kw>
<status status="PASS" endtime="20201202 11:31:47.794" starttime="20201202 11:31:43.887"></status>
</kw>
<msg timestamp="20201202 11:31:47.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:31:47.794" starttime="20201202 11:31:43.887"></status>
</kw>
<msg timestamp="20201202 11:31:47.794" level="INFO">${result} = 2020-12-02 11:31:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:45 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:31:47.795" starttime="20201202 11:31:43.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:31:47.801" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:31:49.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:31:49.884" level="INFO">${output} = 2020-12-02 11:31:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:31:49.884" starttime="20201202 11:31:47.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:31:49.885" level="INFO">2020-12-02 11:31:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:49 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:29 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-02 11:31 ofs://om/volume1/bucket1/ozone-26932
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-02 11:29 ofs://om/volume1/bucket1/ozone-87470
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:29 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:31 ofs://om/volume1/bucket1/wordcount-71.txt
2020-12-02 11:31:49 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201202 11:31:49.886" starttime="20201202 11:31:49.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:31:49.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:31:49.886" starttime="20201202 11:31:49.886"></status>
</kw>
<status status="PASS" endtime="20201202 11:31:49.887" starttime="20201202 11:31:47.797"></status>
</kw>
<msg timestamp="20201202 11:31:49.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:31:49.887" starttime="20201202 11:31:47.797"></status>
</kw>
<msg timestamp="20201202 11:31:49.887" level="INFO">${result} = 2020-12-02 11:31:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:49 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:31:49.887" starttime="20201202 11:31:47.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:31:49.888" starttime="20201202 11:31:49.887"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 11:31:49.888" critical="yes" starttime="20201202 11:31:43.877"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201202 11:31:49.889" starttime="20201202 11:31:43.804"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:29:56.089" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:29:56.089" starttime="20201202 11:29:56.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:29:56.090" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:29:56.090" starttime="20201202 11:29:56.089"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:56.090" starttime="20201202 11:29:56.088"></status>
</kw>
<msg timestamp="20201202 11:29:56.090" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:29:56.091" starttime="20201202 11:29:56.087"></status>
</kw>
<status status="PASS" endtime="20201202 11:29:56.091" starttime="20201202 11:29:56.086"></status>
</kw>
<msg timestamp="20201202 11:29:56.091" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:29:56.091" starttime="20201202 11:29:56.085"></status>
</kw>
<msg timestamp="20201202 11:29:56.091" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:29:56.091" starttime="20201202 11:29:56.084"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:29:56.092" level="INFO">${random} = 87470</msg>
<status status="PASS" endtime="20201202 11:29:56.092" starttime="20201202 11:29:56.092"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:29:56.100" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-87470 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:30:00.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:30:00.185" level="INFO">${output} = 2020-12-02 11:29:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:29:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:29:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:30:00.185" starttime="20201202 11:29:56.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:30:00.186" level="INFO">2020-12-02 11:29:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:29:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:29:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:29:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-02 11:29:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:29:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:29:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:29:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:29:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9A53E98BA156-&gt;0cb29bbb-a737-4d89-ad14-861437a03f54
2020-12-02 11:29:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 11:29:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201202 11:30:00.186" starttime="20201202 11:30:00.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:30:00.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:30:00.187" starttime="20201202 11:30:00.186"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:00.187" starttime="20201202 11:29:56.093"></status>
</kw>
<msg timestamp="20201202 11:30:00.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:30:00.188" starttime="20201202 11:29:56.093"></status>
</kw>
<msg timestamp="20201202 11:30:00.188" level="INFO">${result} = 2020-12-02 11:29:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:29:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:29:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:30:00.188" starttime="20201202 11:29:56.092"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:30:00.193" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:30:02.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:30:02.440" level="INFO">${output} = 2020-12-02 11:30:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:30:02.440" starttime="20201202 11:30:00.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:30:02.441" level="INFO">2020-12-02 11:30:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:02 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:29 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-02 11:29 o3fs://bucket1.volume1.om/ozone-87470
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:29 o3fs://bucket1.volume1.om/user
2020-12-02 11:30:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201202 11:30:02.441" starttime="20201202 11:30:02.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:30:02.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:30:02.442" starttime="20201202 11:30:02.441"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:02.442" starttime="20201202 11:30:00.190"></status>
</kw>
<msg timestamp="20201202 11:30:02.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:30:02.443" starttime="20201202 11:30:00.189"></status>
</kw>
<msg timestamp="20201202 11:30:02.443" level="INFO">${result} = 2020-12-02 11:30:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:30:02.443" starttime="20201202 11:30:00.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:30:02.444" starttime="20201202 11:30:02.443"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 11:30:02.444" critical="yes" starttime="20201202 11:29:56.083"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201202 11:30:02.446" starttime="20201202 11:29:56.010"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:31:55.274" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:31:55.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:31:55.279" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:31:55.279" starttime="20201202 11:31:55.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:31:55.280" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:31:55.280" starttime="20201202 11:31:55.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:31:55.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:31:55.281" starttime="20201202 11:31:55.280"></status>
</kw>
<status status="PASS" endtime="20201202 11:31:55.281" starttime="20201202 11:31:55.267"></status>
</kw>
<msg timestamp="20201202 11:31:55.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:31:55.281" starttime="20201202 11:31:55.267"></status>
</kw>
<msg timestamp="20201202 11:31:55.282" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:31:55.282" starttime="20201202 11:31:55.266"></status>
</kw>
<msg timestamp="20201202 11:31:55.282" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:31:55.282" starttime="20201202 11:31:55.266"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:31:55.290" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:31:55.290" starttime="20201202 11:31:55.289"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:31:55.290" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:31:55.290" starttime="20201202 11:31:55.290"></status>
</kw>
<status status="PASS" endtime="20201202 11:31:55.291" starttime="20201202 11:31:55.288"></status>
</kw>
<msg timestamp="20201202 11:31:55.291" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:31:55.291" starttime="20201202 11:31:55.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:31:55.292" starttime="20201202 11:31:55.291"></status>
</kw>
<msg timestamp="20201202 11:31:55.292" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 11:31:55.292" starttime="20201202 11:31:55.291"></status>
</kw>
<status status="PASS" endtime="20201202 11:31:55.292" starttime="20201202 11:31:55.285"></status>
</kw>
<msg timestamp="20201202 11:31:55.293" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:31:55.293" starttime="20201202 11:31:55.284"></status>
</kw>
<msg timestamp="20201202 11:31:55.293" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:31:55.293" starttime="20201202 11:31:55.282"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:31:55.297" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:32:37.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:32:37.248" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:31:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31...</msg>
<status status="PASS" endtime="20201202 11:32:37.248" starttime="20201202 11:31:55.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:32:37.250" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:31:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-02 11:31:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:31:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:31:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:31:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:31:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0659105FA573-&gt;0cb29bbb-a737-4d89-ad14-861437a03f54
2020-12-02 11:31:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-02 11:32:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-12-02 11:32:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 11:32:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:02 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 11:32:02 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 11:32:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606908535181_0003
2020-12-02 11:32:02 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-02 11:32:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:02 INFO  Configuration:2752 - resource-types.xml not found
2020-12-02 11:32:02 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-02 11:32:02 INFO  YarnClientImpl:324 - Submitted application application_1606908535181_0003
2020-12-02 11:32:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606908535181_0003/
2020-12-02 11:32:02 INFO  Job:1619 - Running job: job_1606908535181_0003
2020-12-02 11:32:11 INFO  Job:1640 - Job job_1606908535181_0003 running in uber mode : false
2020-12-02 11:32:11 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 11:32:18 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 11:32:24 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 11:32:30 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 11:32:36 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 11:32:36 INFO  Job:1658 - Job job_1606908535181_0003 completed successfully
2020-12-02 11:32:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1015441
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45272
		Total time spent by all reduces in occupied slots (ms)=17776
		Total time spent by all map tasks (ms)=11318
		Total time spent by all reduce tasks (ms)=4444
		Total vcore-milliseconds taken by all map tasks=11318
		Total vcore-milliseconds taken by all reduce tasks=4444
		Total megabyte-milliseconds taken by all map tasks=46358528
		Total megabyte-milliseconds taken by all reduce tasks=18202624
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=652
		CPU time spent (ms)=7400
		Physical memory (bytes) snapshot=1173110784
		Virtual memory (bytes) snapshot=15769960448
		Total committed heap usage (bytes)=1026031616
		Peak Map Physical memory (bytes)=308965376
		Peak Map Virtual memory (bytes)=3944820736
		Peak Reduce Physical memory (bytes)=286486528
		Peak Reduce Virtual memory (bytes)=3965681664
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.276 seconds
2020-12-02 11:32:36 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-02 11:32:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201202 11:32:37.250" starttime="20201202 11:32:37.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:32:37.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:32:37.250" starttime="20201202 11:32:37.250"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.251" starttime="20201202 11:31:55.294"></status>
</kw>
<msg timestamp="20201202 11:32:37.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:32:37.251" starttime="20201202 11:31:55.294"></status>
</kw>
<msg timestamp="20201202 11:32:37.252" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:31:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31...</msg>
<status status="PASS" endtime="20201202 11:32:37.252" starttime="20201202 11:31:55.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:32:37.252" starttime="20201202 11:32:37.252"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:32:37.253" critical="yes" starttime="20201202 11:31:55.265"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:32:37.259" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:32:37.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:32:37.265" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:32:37.265" starttime="20201202 11:32:37.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:32:37.266" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:32:37.266" starttime="20201202 11:32:37.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:32:37.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:32:37.268" starttime="20201202 11:32:37.267"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.268" starttime="20201202 11:32:37.256"></status>
</kw>
<msg timestamp="20201202 11:32:37.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:32:37.268" starttime="20201202 11:32:37.255"></status>
</kw>
<msg timestamp="20201202 11:32:37.268" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:32:37.268" starttime="20201202 11:32:37.255"></status>
</kw>
<msg timestamp="20201202 11:32:37.269" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:32:37.269" starttime="20201202 11:32:37.254"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:32:37.270" level="INFO">${random} = 82</msg>
<status status="PASS" endtime="20201202 11:32:37.270" starttime="20201202 11:32:37.269"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:32:37.274" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:32:37.274" starttime="20201202 11:32:37.274"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:32:37.275" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:32:37.275" starttime="20201202 11:32:37.275"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.276" starttime="20201202 11:32:37.273"></status>
</kw>
<msg timestamp="20201202 11:32:37.276" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:32:37.276" starttime="20201202 11:32:37.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:32:37.277" starttime="20201202 11:32:37.277"></status>
</kw>
<msg timestamp="20201202 11:32:37.277" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 11:32:37.277" starttime="20201202 11:32:37.276"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.278" starttime="20201202 11:32:37.272"></status>
</kw>
<msg timestamp="20201202 11:32:37.278" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:32:37.278" starttime="20201202 11:32:37.271"></status>
</kw>
<msg timestamp="20201202 11:32:37.278" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:32:37.278" starttime="20201202 11:32:37.270"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:32:37.283" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:32:37.283" starttime="20201202 11:32:37.282"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:32:37.284" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:32:37.284" starttime="20201202 11:32:37.283"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.284" starttime="20201202 11:32:37.281"></status>
</kw>
<msg timestamp="20201202 11:32:37.284" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:32:37.285" starttime="20201202 11:32:37.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:32:37.286" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201202 11:32:37.286" starttime="20201202 11:32:37.286"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:32:37.287" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201202 11:32:37.287" starttime="20201202 11:32:37.287"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.287" starttime="20201202 11:32:37.285"></status>
</kw>
<msg timestamp="20201202 11:32:37.288" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201202 11:32:37.288" starttime="20201202 11:32:37.285"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.288" starttime="20201202 11:32:37.280"></status>
</kw>
<msg timestamp="20201202 11:32:37.288" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201202 11:32:37.288" starttime="20201202 11:32:37.279"></status>
</kw>
<msg timestamp="20201202 11:32:37.288" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201202 11:32:37.289" starttime="20201202 11:32:37.279"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:32:37.293" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:32:37.293" starttime="20201202 11:32:37.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:32:37.293" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:32:37.294" starttime="20201202 11:32:37.293"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.294" starttime="20201202 11:32:37.291"></status>
</kw>
<msg timestamp="20201202 11:32:37.294" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:32:37.294" starttime="20201202 11:32:37.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:32:37.296" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201202 11:32:37.296" starttime="20201202 11:32:37.295"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:32:37.297" level="INFO">${result} = /wordcount-82.txt</msg>
<status status="PASS" endtime="20201202 11:32:37.297" starttime="20201202 11:32:37.296"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.297" starttime="20201202 11:32:37.295"></status>
</kw>
<msg timestamp="20201202 11:32:37.297" level="INFO">${path_with_leading} = /wordcount-82.txt</msg>
<status status="PASS" endtime="20201202 11:32:37.297" starttime="20201202 11:32:37.294"></status>
</kw>
<status status="PASS" endtime="20201202 11:32:37.298" starttime="20201202 11:32:37.290"></status>
</kw>
<msg timestamp="20201202 11:32:37.298" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-82.txt</msg>
<status status="PASS" endtime="20201202 11:32:37.298" starttime="20201202 11:32:37.289"></status>
</kw>
<msg timestamp="20201202 11:32:37.298" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-82.txt</msg>
<status status="PASS" endtime="20201202 11:32:37.298" starttime="20201202 11:32:37.289"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:32:37.308" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-82.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:33:17.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:33:17.055" level="INFO">${output} = 2020-12-02 11:32:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:33:17.055" starttime="20201202 11:32:37.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:33:17.056" level="INFO">2020-12-02 11:32:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-12-02 11:32:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 11:32:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-02 11:32:39 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:32:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:32:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:32:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:32:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8B1B205597C4-&gt;0cb29bbb-a737-4d89-ad14-861437a03f54
2020-12-02 11:32:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 11:32:41 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 11:32:41 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 11:32:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606908535181_0004
2020-12-02 11:32:41 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-02 11:32:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:42 INFO  Configuration:2752 - resource-types.xml not found
2020-12-02 11:32:42 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-02 11:32:42 INFO  YarnClientImpl:324 - Submitted application application_1606908535181_0004
2020-12-02 11:32:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606908535181_0004/
2020-12-02 11:32:42 INFO  Job:1619 - Running job: job_1606908535181_0004
2020-12-02 11:32:51 INFO  Job:1640 - Job job_1606908535181_0004 running in uber mode : false
2020-12-02 11:32:51 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 11:32:58 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 11:33:04 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 11:33:10 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 11:33:15 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 11:33:16 INFO  Job:1658 - Job job_1606908535181_0004 completed successfully
2020-12-02 11:33:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:33:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1078097
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39713
		OFS: Number of bytes written=22202
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47916
		Total time spent by all reduces in occupied slots (ms)=16908
		Total time spent by all map tasks (ms)=11979
		Total time spent by all reduce tasks (ms)=4227
		Total vcore-milliseconds taken by all map tasks=11979
		Total vcore-milliseconds taken by all reduce tasks=4227
		Total megabyte-milliseconds taken by all map tasks=49065984
		Total megabyte-milliseconds taken by all reduce tasks=17313792
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=659
		CPU time spent (ms)=8260
		Physical memory (bytes) snapshot=1213636608
		Virtual memory (bytes) snapshot=15790551040
		Total committed heap usage (bytes)=1065353216
		Peak Map Physical memory (bytes)=311296000
		Peak Map Virtual memory (bytes)=3947884544
		Peak Reduce Physical memory (bytes)=301699072
		Peak Reduce Virtual memory (bytes)=3968139264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202
2020-12-02 11:33:16 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201202 11:33:17.056" starttime="20201202 11:33:17.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:33:17.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:33:17.057" starttime="20201202 11:33:17.056"></status>
</kw>
<status status="PASS" endtime="20201202 11:33:17.057" starttime="20201202 11:32:37.305"></status>
</kw>
<msg timestamp="20201202 11:33:17.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:33:17.058" starttime="20201202 11:32:37.305"></status>
</kw>
<msg timestamp="20201202 11:33:17.058" level="INFO">${output} = 2020-12-02 11:32:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:32:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:33:17.058" starttime="20201202 11:32:37.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201202 11:33:17.059" starttime="20201202 11:33:17.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:33:17.060" starttime="20201202 11:33:17.059"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:33:17.060" critical="yes" starttime="20201202 11:32:37.253"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201202 11:33:17.062" starttime="20201202 11:31:55.200"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:30:07.764" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:30:07.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:30:07.770" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:30:07.770" starttime="20201202 11:30:07.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:30:07.771" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:30:07.771" starttime="20201202 11:30:07.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:30:07.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:30:07.772" starttime="20201202 11:30:07.771"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:07.772" starttime="20201202 11:30:07.757"></status>
</kw>
<msg timestamp="20201202 11:30:07.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:30:07.772" starttime="20201202 11:30:07.756"></status>
</kw>
<msg timestamp="20201202 11:30:07.773" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:30:07.773" starttime="20201202 11:30:07.756"></status>
</kw>
<msg timestamp="20201202 11:30:07.773" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:30:07.773" starttime="20201202 11:30:07.755"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:30:07.779" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:30:07.779" starttime="20201202 11:30:07.778"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:30:07.779" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:30:07.779" starttime="20201202 11:30:07.779"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:07.780" starttime="20201202 11:30:07.776"></status>
</kw>
<msg timestamp="20201202 11:30:07.780" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:30:07.780" starttime="20201202 11:30:07.776"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:07.780" starttime="20201202 11:30:07.775"></status>
</kw>
<msg timestamp="20201202 11:30:07.780" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:30:07.780" starttime="20201202 11:30:07.774"></status>
</kw>
<msg timestamp="20201202 11:30:07.781" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:30:07.781" starttime="20201202 11:30:07.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:30:07.785" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:30:55.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:30:55.488" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:30:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30...</msg>
<status status="PASS" endtime="20201202 11:30:55.488" starttime="20201202 11:30:07.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:30:55.490" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:30:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-02 11:30:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:30:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:30:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:30:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:30:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8CEEFF6305D1-&gt;0cb29bbb-a737-4d89-ad14-861437a03f54
2020-12-02 11:30:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-02 11:30:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-12-02 11:30:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:12 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 11:30:12 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 11:30:12 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606908535181_0001
2020-12-02 11:30:12 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-02 11:30:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:12 INFO  Configuration:2752 - resource-types.xml not found
2020-12-02 11:30:12 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-02 11:30:13 INFO  YarnClientImpl:324 - Submitted application application_1606908535181_0001
2020-12-02 11:30:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606908535181_0001/
2020-12-02 11:30:13 INFO  Job:1619 - Running job: job_1606908535181_0001
2020-12-02 11:30:24 INFO  Job:1640 - Job job_1606908535181_0001 running in uber mode : false
2020-12-02 11:30:24 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 11:30:31 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 11:30:37 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 11:30:43 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 11:30:48 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 11:30:54 INFO  Job:1658 - Job job_1606908535181_0001 completed successfully
2020-12-02 11:30:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:54 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1015653
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48220
		Total time spent by all reduces in occupied slots (ms)=17356
		Total time spent by all map tasks (ms)=12055
		Total time spent by all reduce tasks (ms)=4339
		Total vcore-milliseconds taken by all map tasks=12055
		Total vcore-milliseconds taken by all reduce tasks=4339
		Total megabyte-milliseconds taken by all map tasks=49377280
		Total megabyte-milliseconds taken by all reduce tasks=17772544
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=744
		CPU time spent (ms)=7980
		Physical memory (bytes) snapshot=1412591616
		Virtual memory (bytes) snapshot=15802716160
		Total committed heap usage (bytes)=1140850688
		Peak Map Physical memory (bytes)=397938688
		Peak Map Virtual memory (bytes)=3949973504
		Peak Reduce Physical memory (bytes)=299790336
		Peak Reduce Virtual memory (bytes)=3962011648
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.552 seconds
2020-12-02 11:30:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:54 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-02 11:30:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201202 11:30:55.490" starttime="20201202 11:30:55.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:30:55.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:30:55.491" starttime="20201202 11:30:55.490"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:55.491" starttime="20201202 11:30:07.782"></status>
</kw>
<msg timestamp="20201202 11:30:55.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:30:55.491" starttime="20201202 11:30:07.781"></status>
</kw>
<msg timestamp="20201202 11:30:55.492" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:30:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30...</msg>
<status status="PASS" endtime="20201202 11:30:55.492" starttime="20201202 11:30:07.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:30:55.493" starttime="20201202 11:30:55.492"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:30:55.493" critical="yes" starttime="20201202 11:30:07.754"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:30:55.499" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:30:55.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:30:55.506" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:30:55.506" starttime="20201202 11:30:55.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:30:55.507" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:30:55.508" starttime="20201202 11:30:55.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:30:55.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:30:55.508" starttime="20201202 11:30:55.508"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:55.509" starttime="20201202 11:30:55.496"></status>
</kw>
<msg timestamp="20201202 11:30:55.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:30:55.509" starttime="20201202 11:30:55.496"></status>
</kw>
<msg timestamp="20201202 11:30:55.509" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:30:55.509" starttime="20201202 11:30:55.495"></status>
</kw>
<msg timestamp="20201202 11:30:55.510" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201202 11:30:55.510" starttime="20201202 11:30:55.495"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:30:55.510" level="INFO">${random} = 71</msg>
<status status="PASS" endtime="20201202 11:30:55.510" starttime="20201202 11:30:55.510"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:30:55.515" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:30:55.515" starttime="20201202 11:30:55.515"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:30:55.516" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:30:55.516" starttime="20201202 11:30:55.516"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:55.516" starttime="20201202 11:30:55.514"></status>
</kw>
<msg timestamp="20201202 11:30:55.517" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:30:55.517" starttime="20201202 11:30:55.513"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:55.517" starttime="20201202 11:30:55.512"></status>
</kw>
<msg timestamp="20201202 11:30:55.517" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:30:55.517" starttime="20201202 11:30:55.512"></status>
</kw>
<msg timestamp="20201202 11:30:55.518" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:30:55.518" starttime="20201202 11:30:55.511"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:30:55.522" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:30:55.522" starttime="20201202 11:30:55.521"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:30:55.523" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:30:55.523" starttime="20201202 11:30:55.522"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:55.523" starttime="20201202 11:30:55.521"></status>
</kw>
<msg timestamp="20201202 11:30:55.523" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:30:55.523" starttime="20201202 11:30:55.520"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:55.524" starttime="20201202 11:30:55.519"></status>
</kw>
<msg timestamp="20201202 11:30:55.524" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201202 11:30:55.524" starttime="20201202 11:30:55.519"></status>
</kw>
<msg timestamp="20201202 11:30:55.524" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201202 11:30:55.524" starttime="20201202 11:30:55.518"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:30:55.528" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:30:55.529" starttime="20201202 11:30:55.528"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:30:55.529" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:30:55.529" starttime="20201202 11:30:55.529"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:55.530" starttime="20201202 11:30:55.527"></status>
</kw>
<msg timestamp="20201202 11:30:55.530" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:30:55.530" starttime="20201202 11:30:55.527"></status>
</kw>
<status status="PASS" endtime="20201202 11:30:55.530" starttime="20201202 11:30:55.526"></status>
</kw>
<msg timestamp="20201202 11:30:55.530" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-71.txt</msg>
<status status="PASS" endtime="20201202 11:30:55.530" starttime="20201202 11:30:55.525"></status>
</kw>
<msg timestamp="20201202 11:30:55.531" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-71.txt</msg>
<status status="PASS" endtime="20201202 11:30:55.531" starttime="20201202 11:30:55.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:30:55.536" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-71.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:31:38.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:31:38.486" level="INFO">${output} = 2020-12-02 11:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:31:38.486" starttime="20201202 11:30:55.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:31:38.487" level="INFO">2020-12-02 11:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.5:8032
2020-12-02 11:30:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:57 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 11:30:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-02 11:30:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-02 11:30:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:30:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:30:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:30:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F532A9D14240-&gt;0cb29bbb-a737-4d89-ad14-861437a03f54
2020-12-02 11:30:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 11:31:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 11:31:02 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 11:31:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606908535181_0002
2020-12-02 11:31:03 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-02 11:31:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:03 INFO  Configuration:2752 - resource-types.xml not found
2020-12-02 11:31:03 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-02 11:31:03 INFO  YarnClientImpl:324 - Submitted application application_1606908535181_0002
2020-12-02 11:31:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606908535181_0002/
2020-12-02 11:31:03 INFO  Job:1619 - Running job: job_1606908535181_0002
2020-12-02 11:31:12 INFO  Job:1640 - Job job_1606908535181_0002 running in uber mode : false
2020-12-02 11:31:12 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 11:31:19 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 11:31:25 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 11:31:31 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 11:31:36 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 11:31:37 INFO  Job:1658 - Job job_1606908535181_0002 completed successfully
2020-12-02 11:31:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:31:38 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1078181
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39716
		O3FS: Number of bytes written=22202
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45860
		Total time spent by all reduces in occupied slots (ms)=16800
		Total time spent by all map tasks (ms)=11465
		Total time spent by all reduce tasks (ms)=4200
		Total vcore-milliseconds taken by all map tasks=11465
		Total vcore-milliseconds taken by all reduce tasks=4200
		Total megabyte-milliseconds taken by all map tasks=46960640
		Total megabyte-milliseconds taken by all reduce tasks=17203200
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=642
		CPU time spent (ms)=6940
		Physical memory (bytes) snapshot=1184931840
		Virtual memory (bytes) snapshot=15763951616
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=311242752
		Peak Map Virtual memory (bytes)=3942150144
		Peak Reduce Physical memory (bytes)=297185280
		Peak Reduce Virtual memory (bytes)=3967270912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202
2020-12-02 11:31:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201202 11:31:38.488" starttime="20201202 11:31:38.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:31:38.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:31:38.488" starttime="20201202 11:31:38.488"></status>
</kw>
<status status="PASS" endtime="20201202 11:31:38.489" starttime="20201202 11:30:55.532"></status>
</kw>
<msg timestamp="20201202 11:31:38.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:31:38.489" starttime="20201202 11:30:55.532"></status>
</kw>
<msg timestamp="20201202 11:31:38.489" level="INFO">${output} = 2020-12-02 11:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-02 11:30:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201202 11:31:38.490" starttime="20201202 11:30:55.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201202 11:31:38.490" starttime="20201202 11:31:38.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:31:38.491" starttime="20201202 11:31:38.490"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:31:38.491" critical="yes" starttime="20201202 11:30:55.494"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201202 11:31:38.493" starttime="20201202 11:30:07.692"></status>
</suite>
<status status="PASS" elapsedtime="217691" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:34:33.558" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:34:39.932" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 11:34:39.932" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 11:34:39.932" starttime="20201202 11:34:33.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:34:39.934" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 11:34:39.934" starttime="20201202 11:34:39.933"></status>
</kw>
<msg timestamp="20201202 11:34:39.934" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201202 11:34:39.934" starttime="20201202 11:34:33.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:34:39.942" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:34:43.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:34:43.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:34:43.668" starttime="20201202 11:34:39.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:34:43.669" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:34:43.670" starttime="20201202 11:34:43.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:34:43.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:34:43.670" starttime="20201202 11:34:43.670"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:43.671" starttime="20201202 11:34:39.937"></status>
</kw>
<msg timestamp="20201202 11:34:43.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:34:43.672" starttime="20201202 11:34:39.936"></status>
</kw>
<msg timestamp="20201202 11:34:43.673" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201202 11:34:43.673" starttime="20201202 11:34:39.936"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201202 11:34:43.674" starttime="20201202 11:34:43.673"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:43.675" starttime="20201202 11:34:39.935"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:43.675" starttime="20201202 11:34:39.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:34:43.683" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:34:47.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:34:47.502" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:34:47.502" starttime="20201202 11:34:43.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:34:47.503" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:34:47.503" starttime="20201202 11:34:47.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:34:47.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:34:47.504" starttime="20201202 11:34:47.503"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:47.504" starttime="20201202 11:34:43.680"></status>
</kw>
<msg timestamp="20201202 11:34:47.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:34:47.505" starttime="20201202 11:34:43.680"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:47.505" starttime="20201202 11:34:43.677"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:47.505" starttime="20201202 11:34:43.676"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:47.505" starttime="20201202 11:34:43.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201202 11:34:47.506" starttime="20201202 11:34:47.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:34:47.510" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:34:51.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:34:51.235" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T11:34:47.149Z",
  "modificat...</msg>
<status status="PASS" endtime="20201202 11:34:51.235" starttime="20201202 11:34:47.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:34:51.237" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T11:34:47.149Z",
  "modificationTime" : "2020-12-02T11:34:47.149Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201202 11:34:51.238" starttime="20201202 11:34:51.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:34:51.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:34:51.239" starttime="20201202 11:34:51.238"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:51.239" starttime="20201202 11:34:47.507"></status>
</kw>
<msg timestamp="20201202 11:34:51.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:34:51.239" starttime="20201202 11:34:47.507"></status>
</kw>
<msg timestamp="20201202 11:34:51.240" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T11:34:47.149Z",
  "modificat...</msg>
<status status="PASS" endtime="20201202 11:34:51.240" starttime="20201202 11:34:47.506"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201202 11:34:51.240" starttime="20201202 11:34:51.240"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:34:51.245" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:34:51.245" starttime="20201202 11:34:51.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:34:51.246" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:34:51.246" starttime="20201202 11:34:51.246"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:51.246" starttime="20201202 11:34:51.244"></status>
</kw>
<msg timestamp="20201202 11:34:51.247" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:34:51.247" starttime="20201202 11:34:51.244"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:51.247" starttime="20201202 11:34:51.242"></status>
</kw>
<msg timestamp="20201202 11:34:51.247" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201202 11:34:51.247" starttime="20201202 11:34:51.241"></status>
</kw>
<msg timestamp="20201202 11:34:51.247" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201202 11:34:51.247" starttime="20201202 11:34:51.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:34:51.252" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:34:55.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:34:55.091" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:34:55.091" starttime="20201202 11:34:51.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:34:55.093" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:34:55.093" starttime="20201202 11:34:55.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:34:55.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:34:55.094" starttime="20201202 11:34:55.093"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:55.094" starttime="20201202 11:34:51.248"></status>
</kw>
<msg timestamp="20201202 11:34:55.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:34:55.094" starttime="20201202 11:34:51.248"></status>
</kw>
<status status="PASS" endtime="20201202 11:34:55.095" starttime="20201202 11:34:51.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:34:55.099" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:35:03.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:35:03.087" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:35:03.087" starttime="20201202 11:34:55.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:35:03.088" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:35:03.088" starttime="20201202 11:35:03.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:35:03.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:35:03.089" starttime="20201202 11:35:03.088"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:03.089" starttime="20201202 11:34:55.096"></status>
</kw>
<msg timestamp="20201202 11:35:03.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:35:03.089" starttime="20201202 11:34:55.096"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:03.090" starttime="20201202 11:34:55.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:35:03.094" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:35:09.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:35:09.119" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:35:09.119" starttime="20201202 11:35:03.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:35:09.120" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:35:09.121" starttime="20201202 11:35:09.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:35:09.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:35:09.121" starttime="20201202 11:35:09.121"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:09.122" starttime="20201202 11:35:03.091"></status>
</kw>
<msg timestamp="20201202 11:35:09.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:35:09.122" starttime="20201202 11:35:03.090"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:09.122" starttime="20201202 11:35:03.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:35:09.127" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:35:14.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:35:14.983" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:35:14.983" starttime="20201202 11:35:09.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:35:14.984" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:35:14.985" starttime="20201202 11:35:14.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:35:14.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:35:14.985" starttime="20201202 11:35:14.985"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:14.986" starttime="20201202 11:35:09.124"></status>
</kw>
<msg timestamp="20201202 11:35:14.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:35:14.986" starttime="20201202 11:35:09.123"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:14.986" starttime="20201202 11:35:09.122"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 11:35:14.986" critical="yes" starttime="20201202 11:34:33.552"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:35:14.993" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:35:14.993" starttime="20201202 11:35:14.992"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:35:14.993" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:35:14.993" starttime="20201202 11:35:14.993"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:14.994" starttime="20201202 11:35:14.991"></status>
</kw>
<msg timestamp="20201202 11:35:14.994" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:35:14.994" starttime="20201202 11:35:14.991"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:14.994" starttime="20201202 11:35:14.990"></status>
</kw>
<msg timestamp="20201202 11:35:14.994" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 11:35:14.994" starttime="20201202 11:35:14.989"></status>
</kw>
<msg timestamp="20201202 11:35:14.995" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 11:35:14.995" starttime="20201202 11:35:14.988"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:35:14.999" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:35:18.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:35:18.666" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:35:18.666" starttime="20201202 11:35:14.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:35:18.668" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:35:18.668" starttime="20201202 11:35:18.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:35:18.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:35:18.669" starttime="20201202 11:35:18.668"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:18.669" starttime="20201202 11:35:14.996"></status>
</kw>
<msg timestamp="20201202 11:35:18.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:35:18.669" starttime="20201202 11:35:14.995"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:18.670" starttime="20201202 11:35:14.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:35:18.675" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:35:22.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:35:22.261" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 11:35:22.261" starttime="20201202 11:35:18.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:35:22.262" level="INFO"></msg>
<status status="PASS" endtime="20201202 11:35:22.262" starttime="20201202 11:35:22.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:35:22.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:35:22.263" starttime="20201202 11:35:22.262"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:22.263" starttime="20201202 11:35:18.671"></status>
</kw>
<msg timestamp="20201202 11:35:22.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:35:22.264" starttime="20201202 11:35:18.670"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:22.264" starttime="20201202 11:35:18.670"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 11:35:22.264" critical="yes" starttime="20201202 11:35:14.987"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201202 11:35:22.266" starttime="20201202 11:34:33.479"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:37:21.668" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:37:21.668" starttime="20201202 11:37:21.667"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:37:21.669" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:37:21.669" starttime="20201202 11:37:21.668"></status>
</kw>
<status status="PASS" endtime="20201202 11:37:21.669" starttime="20201202 11:37:21.667"></status>
</kw>
<msg timestamp="20201202 11:37:21.669" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:37:21.669" starttime="20201202 11:37:21.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:37:21.670" starttime="20201202 11:37:21.670"></status>
</kw>
<msg timestamp="20201202 11:37:21.670" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 11:37:21.670" starttime="20201202 11:37:21.669"></status>
</kw>
<status status="PASS" endtime="20201202 11:37:21.671" starttime="20201202 11:37:21.665"></status>
</kw>
<msg timestamp="20201202 11:37:21.671" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:37:21.671" starttime="20201202 11:37:21.665"></status>
</kw>
<msg timestamp="20201202 11:37:21.671" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:37:21.671" starttime="20201202 11:37:21.664"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:37:21.672" level="INFO">${random} = 74409</msg>
<status status="PASS" endtime="20201202 11:37:21.672" starttime="20201202 11:37:21.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:37:21.678" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-74409 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:37:25.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:37:25.616" level="INFO">${output} = 2020-12-02 11:37:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:37:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201202 11:37:25.616" starttime="20201202 11:37:21.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:37:25.617" level="INFO">2020-12-02 11:37:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:37:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:37:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:37:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:37:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-06A87407981F-&gt;a1020df8-82fc-4dd3-8ae3-42f0b505f5db
2020-12-02 11:37:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201202 11:37:25.617" starttime="20201202 11:37:25.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:37:25.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:37:25.618" starttime="20201202 11:37:25.617"></status>
</kw>
<status status="PASS" endtime="20201202 11:37:25.618" starttime="20201202 11:37:21.673"></status>
</kw>
<msg timestamp="20201202 11:37:25.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:37:25.619" starttime="20201202 11:37:21.673"></status>
</kw>
<msg timestamp="20201202 11:37:25.619" level="INFO">${result} = 2020-12-02 11:37:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:37:24 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201202 11:37:25.619" starttime="20201202 11:37:21.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:37:25.626" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:37:28.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:37:28.140" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 11:35 ofs://om/volume1/bucket1/ozone-12998
-rw-...</msg>
<status status="PASS" endtime="20201202 11:37:28.141" starttime="20201202 11:37:25.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:37:28.142" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 11:35 ofs://om/volume1/bucket1/ozone-12998
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 11:37 ofs://om/volume1/bucket1/ozone-74409
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:35 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:36 ofs://om/volume1/bucket1/wordcount-47.txt</msg>
<status status="PASS" endtime="20201202 11:37:28.142" starttime="20201202 11:37:28.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:37:28.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:37:28.143" starttime="20201202 11:37:28.142"></status>
</kw>
<status status="PASS" endtime="20201202 11:37:28.143" starttime="20201202 11:37:25.622"></status>
</kw>
<msg timestamp="20201202 11:37:28.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:37:28.143" starttime="20201202 11:37:25.621"></status>
</kw>
<msg timestamp="20201202 11:37:28.144" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 11:35 ofs://om/volume1/bucket1/ozone-12998
-rw-...</msg>
<status status="PASS" endtime="20201202 11:37:28.144" starttime="20201202 11:37:25.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:37:28.147" starttime="20201202 11:37:28.146"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 11:37:28.147" critical="yes" starttime="20201202 11:37:21.663"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201202 11:37:28.149" starttime="20201202 11:37:21.596"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:35:27.675" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:35:27.675" starttime="20201202 11:35:27.675"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:35:27.676" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:35:27.676" starttime="20201202 11:35:27.675"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:27.676" starttime="20201202 11:35:27.674"></status>
</kw>
<msg timestamp="20201202 11:35:27.676" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:35:27.676" starttime="20201202 11:35:27.673"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:27.677" starttime="20201202 11:35:27.672"></status>
</kw>
<msg timestamp="20201202 11:35:27.677" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:35:27.677" starttime="20201202 11:35:27.672"></status>
</kw>
<msg timestamp="20201202 11:35:27.677" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:35:27.677" starttime="20201202 11:35:27.671"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:35:27.678" level="INFO">${random} = 12998</msg>
<status status="PASS" endtime="20201202 11:35:27.678" starttime="20201202 11:35:27.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:35:27.685" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12998 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:35:31.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:35:31.714" level="INFO">${output} = 2020-12-02 11:35:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:35:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201202 11:35:31.714" starttime="20201202 11:35:27.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:35:31.716" level="INFO">2020-12-02 11:35:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:35:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:35:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:35:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:35:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D1749EE5003B-&gt;a1020df8-82fc-4dd3-8ae3-42f0b505f5db
2020-12-02 11:35:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201202 11:35:31.716" starttime="20201202 11:35:31.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:35:31.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:35:31.717" starttime="20201202 11:35:31.716"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:31.717" starttime="20201202 11:35:27.679"></status>
</kw>
<msg timestamp="20201202 11:35:31.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:35:31.717" starttime="20201202 11:35:27.679"></status>
</kw>
<msg timestamp="20201202 11:35:31.718" level="INFO">${result} = 2020-12-02 11:35:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:35:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201202 11:35:31.718" starttime="20201202 11:35:27.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:35:31.723" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:35:33.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:35:33.822" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 11:35 o3fs://bucket1.volume1.om/ozone-12998
dr...</msg>
<status status="PASS" endtime="20201202 11:35:33.823" starttime="20201202 11:35:31.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:35:33.824" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 11:35 o3fs://bucket1.volume1.om/ozone-12998
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:35 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201202 11:35:33.824" starttime="20201202 11:35:33.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:35:33.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:35:33.825" starttime="20201202 11:35:33.824"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:33.825" starttime="20201202 11:35:31.720"></status>
</kw>
<msg timestamp="20201202 11:35:33.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:35:33.825" starttime="20201202 11:35:31.718"></status>
</kw>
<msg timestamp="20201202 11:35:33.826" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-02 11:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-02 11:35 o3fs://bucket1.volume1.om/ozone-12998
dr...</msg>
<status status="PASS" endtime="20201202 11:35:33.826" starttime="20201202 11:35:31.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:35:33.826" starttime="20201202 11:35:33.826"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 11:35:33.827" critical="yes" starttime="20201202 11:35:27.670"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201202 11:35:33.828" starttime="20201202 11:35:27.599"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:37:33.618" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:37:33.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:37:33.624" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:37:33.624" starttime="20201202 11:37:33.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:37:33.625" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:37:33.625" starttime="20201202 11:37:33.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:37:33.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:37:33.626" starttime="20201202 11:37:33.625"></status>
</kw>
<status status="PASS" endtime="20201202 11:37:33.626" starttime="20201202 11:37:33.609"></status>
</kw>
<msg timestamp="20201202 11:37:33.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:37:33.626" starttime="20201202 11:37:33.609"></status>
</kw>
<msg timestamp="20201202 11:37:33.627" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:37:33.627" starttime="20201202 11:37:33.608"></status>
</kw>
<msg timestamp="20201202 11:37:33.627" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:37:33.627" starttime="20201202 11:37:33.608"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:37:33.634" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:37:33.634" starttime="20201202 11:37:33.633"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:37:33.634" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:37:33.635" starttime="20201202 11:37:33.634"></status>
</kw>
<status status="PASS" endtime="20201202 11:37:33.635" starttime="20201202 11:37:33.631"></status>
</kw>
<msg timestamp="20201202 11:37:33.635" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:37:33.635" starttime="20201202 11:37:33.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:37:33.636" starttime="20201202 11:37:33.636"></status>
</kw>
<msg timestamp="20201202 11:37:33.637" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 11:37:33.637" starttime="20201202 11:37:33.635"></status>
</kw>
<status status="PASS" endtime="20201202 11:37:33.637" starttime="20201202 11:37:33.630"></status>
</kw>
<msg timestamp="20201202 11:37:33.637" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:37:33.637" starttime="20201202 11:37:33.629"></status>
</kw>
<msg timestamp="20201202 11:37:33.637" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:37:33.637" starttime="20201202 11:37:33.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:37:33.642" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:38:13.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:38:13.140" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:37:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:37:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201202 11:38:13.140" starttime="20201202 11:37:33.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:38:13.141" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:37:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:37:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:37:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:37:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:37:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-75DC31B240D8-&gt;a1020df8-82fc-4dd3-8ae3-42f0b505f5db
2020-12-02 11:37:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-02 11:37:37 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-02 11:37:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 11:37:38 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 11:37:38 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 11:37:38 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606908844613_0003
2020-12-02 11:37:38 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-02 11:37:38 INFO  Configuration:2795 - resource-types.xml not found
2020-12-02 11:37:38 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-02 11:37:39 INFO  YarnClientImpl:329 - Submitted application application_1606908844613_0003
2020-12-02 11:37:39 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606908844613_0003/
2020-12-02 11:37:39 INFO  Job:1619 - Running job: job_1606908844613_0003
2020-12-02 11:37:47 INFO  Job:1640 - Job job_1606908844613_0003 running in uber mode : false
2020-12-02 11:37:47 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 11:37:54 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 11:38:00 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 11:38:06 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 11:38:11 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 11:38:12 INFO  Job:1658 - Job job_1606908844613_0003 completed successfully
2020-12-02 11:38:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1055545
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46356
		Total time spent by all reduces in occupied slots (ms)=17432
		Total time spent by all map tasks (ms)=11589
		Total time spent by all reduce tasks (ms)=4358
		Total vcore-milliseconds taken by all map tasks=11589
		Total vcore-milliseconds taken by all reduce tasks=4358
		Total megabyte-milliseconds taken by all map tasks=47468544
		Total megabyte-milliseconds taken by all reduce tasks=17850368
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=752
		CPU time spent (ms)=8270
		Physical memory (bytes) snapshot=1323061248
		Virtual memory (bytes) snapshot=15804358656
		Total committed heap usage (bytes)=1387266048
		Peak Map Physical memory (bytes)=364097536
		Peak Map Virtual memory (bytes)=3947319296
		Peak Reduce Physical memory (bytes)=300421120
		Peak Reduce Virtual memory (bytes)=3964690432
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.073 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201202 11:38:13.142" starttime="20201202 11:38:13.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:38:13.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:38:13.142" starttime="20201202 11:38:13.142"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.143" starttime="20201202 11:37:33.639"></status>
</kw>
<msg timestamp="20201202 11:38:13.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:38:13.143" starttime="20201202 11:37:33.638"></status>
</kw>
<msg timestamp="20201202 11:38:13.144" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:37:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:37:36 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201202 11:38:13.144" starttime="20201202 11:37:33.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:38:13.144" starttime="20201202 11:38:13.144"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:38:13.145" critical="yes" starttime="20201202 11:37:33.607"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:38:13.150" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:38:13.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:38:13.157" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:38:13.157" starttime="20201202 11:38:13.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:38:13.158" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:38:13.158" starttime="20201202 11:38:13.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:38:13.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:38:13.159" starttime="20201202 11:38:13.158"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.159" starttime="20201202 11:38:13.148"></status>
</kw>
<msg timestamp="20201202 11:38:13.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:38:13.160" starttime="20201202 11:38:13.147"></status>
</kw>
<msg timestamp="20201202 11:38:13.161" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:38:13.162" starttime="20201202 11:38:13.147"></status>
</kw>
<msg timestamp="20201202 11:38:13.162" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:38:13.162" starttime="20201202 11:38:13.146"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:38:13.163" level="INFO">${random} = 30</msg>
<status status="PASS" endtime="20201202 11:38:13.163" starttime="20201202 11:38:13.162"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:38:13.168" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:38:13.168" starttime="20201202 11:38:13.167"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:38:13.168" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:38:13.169" starttime="20201202 11:38:13.168"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.169" starttime="20201202 11:38:13.167"></status>
</kw>
<msg timestamp="20201202 11:38:13.169" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:38:13.169" starttime="20201202 11:38:13.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201202 11:38:13.170" starttime="20201202 11:38:13.170"></status>
</kw>
<msg timestamp="20201202 11:38:13.170" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201202 11:38:13.170" starttime="20201202 11:38:13.169"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.171" starttime="20201202 11:38:13.165"></status>
</kw>
<msg timestamp="20201202 11:38:13.171" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:38:13.171" starttime="20201202 11:38:13.164"></status>
</kw>
<msg timestamp="20201202 11:38:13.171" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201202 11:38:13.171" starttime="20201202 11:38:13.163"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:38:13.177" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:38:13.177" starttime="20201202 11:38:13.175"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:38:13.178" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:38:13.178" starttime="20201202 11:38:13.178"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.178" starttime="20201202 11:38:13.174"></status>
</kw>
<msg timestamp="20201202 11:38:13.179" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:38:13.179" starttime="20201202 11:38:13.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:38:13.182" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201202 11:38:13.182" starttime="20201202 11:38:13.180"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:38:13.183" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201202 11:38:13.183" starttime="20201202 11:38:13.182"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.183" starttime="20201202 11:38:13.180"></status>
</kw>
<msg timestamp="20201202 11:38:13.183" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201202 11:38:13.184" starttime="20201202 11:38:13.179"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.184" starttime="20201202 11:38:13.173"></status>
</kw>
<msg timestamp="20201202 11:38:13.184" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201202 11:38:13.184" starttime="20201202 11:38:13.172"></status>
</kw>
<msg timestamp="20201202 11:38:13.184" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201202 11:38:13.184" starttime="20201202 11:38:13.172"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201202 11:38:13.189" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201202 11:38:13.189" starttime="20201202 11:38:13.189"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:38:13.190" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201202 11:38:13.190" starttime="20201202 11:38:13.189"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.190" starttime="20201202 11:38:13.188"></status>
</kw>
<msg timestamp="20201202 11:38:13.190" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201202 11:38:13.191" starttime="20201202 11:38:13.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:38:13.193" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201202 11:38:13.194" starttime="20201202 11:38:13.193"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:38:13.194" level="INFO">${result} = /wordcount-30.txt</msg>
<status status="PASS" endtime="20201202 11:38:13.194" starttime="20201202 11:38:13.194"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.195" starttime="20201202 11:38:13.192"></status>
</kw>
<msg timestamp="20201202 11:38:13.195" level="INFO">${path_with_leading} = /wordcount-30.txt</msg>
<status status="PASS" endtime="20201202 11:38:13.195" starttime="20201202 11:38:13.191"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:13.196" starttime="20201202 11:38:13.186"></status>
</kw>
<msg timestamp="20201202 11:38:13.196" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-30.txt</msg>
<status status="PASS" endtime="20201202 11:38:13.196" starttime="20201202 11:38:13.186"></status>
</kw>
<msg timestamp="20201202 11:38:13.196" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-30.txt</msg>
<status status="PASS" endtime="20201202 11:38:13.196" starttime="20201202 11:38:13.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:38:13.202" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-30.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:38:52.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:38:52.013" level="INFO">${output} = 2020-12-02 11:38:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-02 11:38:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201202 11:38:52.013" starttime="20201202 11:38:13.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:38:52.017" level="INFO">2020-12-02 11:38:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-02 11:38:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 11:38:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:38:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:38:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:38:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:38:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-27FA8D03A73C-&gt;a1020df8-82fc-4dd3-8ae3-42f0b505f5db
2020-12-02 11:38:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 11:38:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 11:38:17 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 11:38:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606908844613_0004
2020-12-02 11:38:17 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-02 11:38:18 INFO  Configuration:2795 - resource-types.xml not found
2020-12-02 11:38:18 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-02 11:38:18 INFO  YarnClientImpl:329 - Submitted application application_1606908844613_0004
2020-12-02 11:38:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606908844613_0004/
2020-12-02 11:38:18 INFO  Job:1619 - Running job: job_1606908844613_0004
2020-12-02 11:38:26 INFO  Job:1640 - Job job_1606908844613_0004 running in uber mode : false
2020-12-02 11:38:26 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 11:38:33 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 11:38:39 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 11:38:45 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 11:38:50 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 11:38:51 INFO  Job:1658 - Job job_1606908844613_0004 completed successfully
2020-12-02 11:38:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1118201
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39713
		OFS: Number of bytes written=22202
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47388
		Total time spent by all reduces in occupied slots (ms)=17244
		Total time spent by all map tasks (ms)=11847
		Total time spent by all reduce tasks (ms)=4311
		Total vcore-milliseconds taken by all map tasks=11847
		Total vcore-milliseconds taken by all reduce tasks=4311
		Total megabyte-milliseconds taken by all map tasks=48525312
		Total megabyte-milliseconds taken by all reduce tasks=17657856
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=742
		CPU time spent (ms)=8680
		Physical memory (bytes) snapshot=1478078464
		Virtual memory (bytes) snapshot=15797096448
		Total committed heap usage (bytes)=1697120256
		Peak Map Physical memory (bytes)=372674560
		Peak Map Virtual memory (bytes)=3946942464
		Peak Reduce Physical memory (bytes)=380076032
		Peak Reduce Virtual memory (bytes)=3966947328
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201202 11:38:52.017" starttime="20201202 11:38:52.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:38:52.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:38:52.018" starttime="20201202 11:38:52.017"></status>
</kw>
<status status="PASS" endtime="20201202 11:38:52.018" starttime="20201202 11:38:13.198"></status>
</kw>
<msg timestamp="20201202 11:38:52.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:38:52.018" starttime="20201202 11:38:13.197"></status>
</kw>
<msg timestamp="20201202 11:38:52.019" level="INFO">${output} = 2020-12-02 11:38:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-02 11:38:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201202 11:38:52.019" starttime="20201202 11:38:13.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201202 11:38:52.021" starttime="20201202 11:38:52.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:38:52.021" starttime="20201202 11:38:52.021"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:38:52.022" critical="yes" starttime="20201202 11:38:13.145"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201202 11:38:52.023" starttime="20201202 11:37:33.537"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:35:39.146" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:35:39.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:35:39.151" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:35:39.151" starttime="20201202 11:35:39.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:35:39.152" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:35:39.152" starttime="20201202 11:35:39.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:35:39.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:35:39.153" starttime="20201202 11:35:39.152"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:39.154" starttime="20201202 11:35:39.141"></status>
</kw>
<msg timestamp="20201202 11:35:39.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:35:39.154" starttime="20201202 11:35:39.140"></status>
</kw>
<msg timestamp="20201202 11:35:39.154" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:35:39.154" starttime="20201202 11:35:39.140"></status>
</kw>
<msg timestamp="20201202 11:35:39.154" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:35:39.154" starttime="20201202 11:35:39.139"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:35:39.160" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:35:39.160" starttime="20201202 11:35:39.159"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:35:39.161" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:35:39.161" starttime="20201202 11:35:39.160"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:39.161" starttime="20201202 11:35:39.158"></status>
</kw>
<msg timestamp="20201202 11:35:39.161" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:35:39.161" starttime="20201202 11:35:39.157"></status>
</kw>
<status status="PASS" endtime="20201202 11:35:39.161" starttime="20201202 11:35:39.156"></status>
</kw>
<msg timestamp="20201202 11:35:39.162" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:35:39.162" starttime="20201202 11:35:39.156"></status>
</kw>
<msg timestamp="20201202 11:35:39.162" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:35:39.162" starttime="20201202 11:35:39.155"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:35:39.166" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:36:31.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:36:31.031" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:35:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:35:41 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201202 11:36:31.031" starttime="20201202 11:35:39.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:36:31.032" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:35:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:35:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:35:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:35:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:35:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4729F0161DCF-&gt;a1020df8-82fc-4dd3-8ae3-42f0b505f5db
2020-12-02 11:35:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-02 11:35:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-02 11:35:43 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 11:35:46 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 11:35:49 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606908844613_0001
2020-12-02 11:35:49 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-02 11:35:49 INFO  Configuration:2795 - resource-types.xml not found
2020-12-02 11:35:49 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-02 11:35:49 INFO  YarnClientImpl:329 - Submitted application application_1606908844613_0001
2020-12-02 11:35:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606908844613_0001/
2020-12-02 11:35:49 INFO  Job:1619 - Running job: job_1606908844613_0001
2020-12-02 11:36:01 INFO  Job:1640 - Job job_1606908844613_0001 running in uber mode : false
2020-12-02 11:36:01 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 11:36:09 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 11:36:14 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 11:36:20 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 11:36:26 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 11:36:30 INFO  Job:1658 - Job job_1606908844613_0001 completed successfully
2020-12-02 11:36:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1055757
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=804
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46516
		Total time spent by all reduces in occupied slots (ms)=18340
		Total time spent by all map tasks (ms)=11629
		Total time spent by all reduce tasks (ms)=4585
		Total vcore-milliseconds taken by all map tasks=11629
		Total vcore-milliseconds taken by all reduce tasks=4585
		Total megabyte-milliseconds taken by all map tasks=47632384
		Total megabyte-milliseconds taken by all reduce tasks=18780160
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=450
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=682
		CPU time spent (ms)=8450
		Physical memory (bytes) snapshot=1421746176
		Virtual memory (bytes) snapshot=15813922816
		Total committed heap usage (bytes)=1559756800
		Peak Map Physical memory (bytes)=371642368
		Peak Map Virtual memory (bytes)=3948654592
		Peak Reduce Physical memory (bytes)=385662976
		Peak Reduce Virtual memory (bytes)=3973214208
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 47.512 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201202 11:36:31.032" starttime="20201202 11:36:31.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:36:31.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:36:31.033" starttime="20201202 11:36:31.033"></status>
</kw>
<status status="PASS" endtime="20201202 11:36:31.033" starttime="20201202 11:35:39.163"></status>
</kw>
<msg timestamp="20201202 11:36:31.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:36:31.034" starttime="20201202 11:35:39.163"></status>
</kw>
<msg timestamp="20201202 11:36:31.034" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-02 11:35:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:35:41 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201202 11:36:31.034" starttime="20201202 11:35:39.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:36:31.035" starttime="20201202 11:36:31.034"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:36:31.035" critical="yes" starttime="20201202 11:35:39.139"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:36:31.042" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:36:31.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:36:31.048" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:36:31.048" starttime="20201202 11:36:31.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:36:31.049" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:36:31.049" starttime="20201202 11:36:31.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:36:31.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:36:31.050" starttime="20201202 11:36:31.049"></status>
</kw>
<status status="PASS" endtime="20201202 11:36:31.050" starttime="20201202 11:36:31.039"></status>
</kw>
<msg timestamp="20201202 11:36:31.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:36:31.051" starttime="20201202 11:36:31.038"></status>
</kw>
<msg timestamp="20201202 11:36:31.051" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:36:31.051" starttime="20201202 11:36:31.038"></status>
</kw>
<msg timestamp="20201202 11:36:31.051" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201202 11:36:31.051" starttime="20201202 11:36:31.037"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 11:36:31.052" level="INFO">${random} = 47</msg>
<status status="PASS" endtime="20201202 11:36:31.052" starttime="20201202 11:36:31.052"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:36:31.057" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:36:31.057" starttime="20201202 11:36:31.056"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:36:31.058" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:36:31.058" starttime="20201202 11:36:31.057"></status>
</kw>
<status status="PASS" endtime="20201202 11:36:31.058" starttime="20201202 11:36:31.055"></status>
</kw>
<msg timestamp="20201202 11:36:31.058" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:36:31.058" starttime="20201202 11:36:31.055"></status>
</kw>
<status status="PASS" endtime="20201202 11:36:31.058" starttime="20201202 11:36:31.054"></status>
</kw>
<msg timestamp="20201202 11:36:31.059" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:36:31.059" starttime="20201202 11:36:31.053"></status>
</kw>
<msg timestamp="20201202 11:36:31.059" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201202 11:36:31.059" starttime="20201202 11:36:31.052"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:36:31.063" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:36:31.063" starttime="20201202 11:36:31.062"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:36:31.064" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:36:31.064" starttime="20201202 11:36:31.063"></status>
</kw>
<status status="PASS" endtime="20201202 11:36:31.064" starttime="20201202 11:36:31.062"></status>
</kw>
<msg timestamp="20201202 11:36:31.064" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:36:31.064" starttime="20201202 11:36:31.061"></status>
</kw>
<status status="PASS" endtime="20201202 11:36:31.064" starttime="20201202 11:36:31.061"></status>
</kw>
<msg timestamp="20201202 11:36:31.064" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201202 11:36:31.065" starttime="20201202 11:36:31.060"></status>
</kw>
<msg timestamp="20201202 11:36:31.065" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201202 11:36:31.065" starttime="20201202 11:36:31.059"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201202 11:36:31.069" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201202 11:36:31.070" starttime="20201202 11:36:31.069"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 11:36:31.070" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201202 11:36:31.070" starttime="20201202 11:36:31.070"></status>
</kw>
<status status="PASS" endtime="20201202 11:36:31.071" starttime="20201202 11:36:31.068"></status>
</kw>
<msg timestamp="20201202 11:36:31.071" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201202 11:36:31.071" starttime="20201202 11:36:31.068"></status>
</kw>
<status status="PASS" endtime="20201202 11:36:31.071" starttime="20201202 11:36:31.067"></status>
</kw>
<msg timestamp="20201202 11:36:31.071" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-47.txt</msg>
<status status="PASS" endtime="20201202 11:36:31.071" starttime="20201202 11:36:31.066"></status>
</kw>
<msg timestamp="20201202 11:36:31.071" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-47.txt</msg>
<status status="PASS" endtime="20201202 11:36:31.072" starttime="20201202 11:36:31.065"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 11:36:31.076" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-47.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 11:37:16.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 11:37:16.234" level="INFO">${output} = 2020-12-02 11:36:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-02 11:36:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201202 11:37:16.234" starttime="20201202 11:36:31.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 11:37:16.235" level="INFO">2020-12-02 11:36:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-02 11:36:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-02 11:36:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-02 11:36:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-02 11:36:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-02 11:36:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 11:36:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E9D807AEFFE9-&gt;a1020df8-82fc-4dd3-8ae3-42f0b505f5db
2020-12-02 11:36:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 11:36:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-02 11:36:35 INFO  JobSubmitter:202 - number of splits:3
2020-12-02 11:36:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1606908844613_0002
2020-12-02 11:36:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-02 11:36:36 INFO  Configuration:2795 - resource-types.xml not found
2020-12-02 11:36:36 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-02 11:36:36 INFO  YarnClientImpl:329 - Submitted application application_1606908844613_0002
2020-12-02 11:36:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1606908844613_0002/
2020-12-02 11:36:36 INFO  Job:1619 - Running job: job_1606908844613_0002
2020-12-02 11:36:44 INFO  Job:1640 - Job job_1606908844613_0002 running in uber mode : false
2020-12-02 11:36:44 INFO  Job:1647 -  map 0% reduce 0%
2020-12-02 11:36:52 INFO  Job:1647 -  map 33% reduce 0%
2020-12-02 11:36:57 INFO  Job:1647 -  map 67% reduce 0%
2020-12-02 11:37:03 INFO  Job:1647 -  map 100% reduce 0%
2020-12-02 11:37:09 INFO  Job:1647 -  map 100% reduce 100%
2020-12-02 11:37:15 INFO  Job:1658 - Job job_1606908844613_0002 completed successfully
2020-12-02 11:37:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32022
		FILE: Number of bytes written=1118285
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39716
		O3FS: Number of bytes written=22202
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47172
		Total time spent by all reduces in occupied slots (ms)=17752
		Total time spent by all map tasks (ms)=11793
		Total time spent by all reduce tasks (ms)=4438
		Total vcore-milliseconds taken by all map tasks=11793
		Total vcore-milliseconds taken by all reduce tasks=4438
		Total megabyte-milliseconds taken by all map tasks=48304128
		Total megabyte-milliseconds taken by all reduce tasks=18178048
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55078
		Map output materialized bytes=32034
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32034
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=716
		CPU time spent (ms)=7950
		Physical memory (bytes) snapshot=1284505600
		Virtual memory (bytes) snapshot=15760187392
		Total committed heap usage (bytes)=1408237568
		Peak Map Physical memory (bytes)=344322048
		Peak Map Virtual memory (bytes)=3941986304
		Peak Reduce Physical memory (bytes)=302411776
		Peak Reduce Virtual memory (bytes)=3968057344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39413
	File Output Format Counters 
		Bytes Written=22202</msg>
<status status="PASS" endtime="20201202 11:37:16.236" starttime="20201202 11:37:16.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 11:37:16.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 11:37:16.236" starttime="20201202 11:37:16.236"></status>
</kw>
<status status="PASS" endtime="20201202 11:37:16.237" starttime="20201202 11:36:31.073"></status>
</kw>
<msg timestamp="20201202 11:37:16.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 11:37:16.237" starttime="20201202 11:36:31.072"></status>
</kw>
<msg timestamp="20201202 11:37:16.238" level="INFO">${output} = 2020-12-02 11:36:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-02 11:36:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201202 11:37:16.238" starttime="20201202 11:36:31.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201202 11:37:16.239" starttime="20201202 11:37:16.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201202 11:37:16.239" starttime="20201202 11:37:16.239"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201202 11:37:16.240" critical="yes" starttime="20201202 11:36:31.036"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201202 11:37:16.241" starttime="20201202 11:35:39.073"></status>
</suite>
<status status="PASS" elapsedtime="237223" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="657192" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
