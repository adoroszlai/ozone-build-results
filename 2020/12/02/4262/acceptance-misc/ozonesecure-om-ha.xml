<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201202 12:20:01.680" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:15:16.838" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:15:29.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:15:29.191" level="INFO">${output} = 2020-12-02 12:15:19,038 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:19,264 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201202 12:15:29.191" starttime="20201202 12:15:16.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:15:29.192" level="INFO">2020-12-02 12:15:19,038 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:19,264 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:15:19,265 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-02 12:15:22,224 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-12-02 12:15:22,225 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-12-02 12:15:22,225 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-12-02 12:15:22,225 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-12-02 12:15:22,225 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-12-02 12:15:22,225 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-12-02 12:15:22,225 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-12-02 12:15:22,228 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-12-02 12:15:22,238 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:22,284 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-12665, with testuser/scm@EXAMPLE.COM as owner.
2020-12-02 12:15:22,904 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-12665/bucket-0-38838, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-02 12:15:23,242 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:24,242 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:25,245 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:25,892 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-02 12:15:26,246 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:27,246 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,582
Average Time spent in bucket creation: 00:00:00,264
Average Time spent in key creation: 00:00:01,296
Average Time spent in key write: 00:00:02,159
Total bytes written: 10240
Total Execution time: 00:00:09,138
***************************************************</msg>
<status status="PASS" endtime="20201202 12:15:29.192" starttime="20201202 12:15:29.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:15:29.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:15:29.193" starttime="20201202 12:15:29.192"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:29.193" starttime="20201202 12:15:16.833"></status>
</kw>
<msg timestamp="20201202 12:15:29.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:15:29.193" starttime="20201202 12:15:16.833"></status>
</kw>
<msg timestamp="20201202 12:15:29.194" level="INFO">${result} = 2020-12-02 12:15:19,038 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:19,264 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201202 12:15:29.194" starttime="20201202 12:15:16.832"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201202 12:15:29.195" starttime="20201202 12:15:29.195"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:29.195" starttime="20201202 12:15:29.194"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 12:15:29.195" critical="yes" starttime="20201202 12:15:16.831"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:15:29.203" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:15:38.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:15:38.263" level="INFO">${output} = 2020-12-02 12:15:31,138 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:31,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201202 12:15:38.264" starttime="20201202 12:15:29.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:15:38.266" level="INFO">2020-12-02 12:15:31,138 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:31,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:15:31,419 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-02 12:15:31,680 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ve7nekyj90
2020-12-02 12:15:31,696 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-02 12:15:32,712 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:33,535 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-12-02 12:15:33,635 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-02 12:15:33,714 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:34,363 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-02 12:15:34,714 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:34,740 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-02 12:15:34,741 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-88DD5770D7F4-&gt;58500585-380f-47db-ab34-0ca9469ca7df
2020-12-02 12:15:34,742 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-02 12:15:35,715 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:36,716 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:37,716 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-02 12:15:37,885 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3685.058779, max=3685.058779, mean=3685.058779, stddev=0.0, median=3685.058779, p75=3685.058779, p95=3685.058779, p98=3685.058779, p99=3685.058779, p999=3685.058779, mean_rate=0.2397898937930755, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-02 12:15:37,886 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-12-02 12:15:37,888 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-02 12:15:37,888 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201202 12:15:38.266" starttime="20201202 12:15:38.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:15:38.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:15:38.267" starttime="20201202 12:15:38.267"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:38.268" starttime="20201202 12:15:29.199"></status>
</kw>
<msg timestamp="20201202 12:15:38.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:15:38.268" starttime="20201202 12:15:29.198"></status>
</kw>
<msg timestamp="20201202 12:15:38.268" level="INFO">${result} = 2020-12-02 12:15:31,138 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:31,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201202 12:15:38.268" starttime="20201202 12:15:29.198"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201202 12:15:38.269" starttime="20201202 12:15:38.269"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:38.269" starttime="20201202 12:15:38.268"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 12:15:38.270" critical="yes" starttime="20201202 12:15:29.196"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:15:38.276" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:15:43.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:15:43.707" level="INFO">${output} = 2020-12-02 12:15:40,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:40,631 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201202 12:15:43.707" starttime="20201202 12:15:38.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:15:43.709" level="INFO">2020-12-02 12:15:40,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:40,631 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:15:40,631 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-02 12:15:40,821 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ghxczqlr1k
2020-12-02 12:15:40,835 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-02 12:15:41,839 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:42,839 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-02 12:15:43,653 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=231.479858, max=231.479858, mean=231.479858, stddev=0.0, median=231.479858, p75=231.479858, p95=231.479858, p98=231.479858, p99=231.479858, p999=231.479858, mean_rate=0.8869450514417974, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-02 12:15:43,654 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-02 12:15:43,658 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-02 12:15:43,658 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201202 12:15:43.709" starttime="20201202 12:15:43.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:15:43.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:15:43.710" starttime="20201202 12:15:43.709"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:43.710" starttime="20201202 12:15:38.273"></status>
</kw>
<msg timestamp="20201202 12:15:43.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:15:43.710" starttime="20201202 12:15:38.272"></status>
</kw>
<msg timestamp="20201202 12:15:43.711" level="INFO">${result} = 2020-12-02 12:15:40,339 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:40,631 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201202 12:15:43.711" starttime="20201202 12:15:38.271"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201202 12:15:43.712" starttime="20201202 12:15:43.712"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:43.712" starttime="20201202 12:15:43.711"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 12:15:43.712" critical="yes" starttime="20201202 12:15:38.270"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:15:43.718" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:15:49.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:15:49.052" level="INFO">${output} = 2020-12-02 12:15:45,657 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:45,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201202 12:15:49.052" starttime="20201202 12:15:43.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:15:49.053" level="INFO">2020-12-02 12:15:45,657 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:45,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-02 12:15:45,967 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-02 12:15:46,152 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 5988wjm96h
2020-12-02 12:15:46,169 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-02 12:15:47,170 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-02 12:15:48,171 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-02 12:15:48,857 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=80.324826, max=80.324826, mean=80.324826, stddev=0.0, median=80.324826, p75=80.324826, p95=80.324826, p98=80.324826, p99=80.324826, p999=80.324826, mean_rate=0.8814267775827915, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-02 12:15:48,868 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-02 12:15:48,868 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-02 12:15:48,871 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201202 12:15:49.053" starttime="20201202 12:15:49.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:15:49.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:15:49.055" starttime="20201202 12:15:49.054"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:49.055" starttime="20201202 12:15:43.716"></status>
</kw>
<msg timestamp="20201202 12:15:49.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:15:49.055" starttime="20201202 12:15:43.715"></status>
</kw>
<msg timestamp="20201202 12:15:49.056" level="INFO">${result} = 2020-12-02 12:15:45,657 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-02 12:15:45,967 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201202 12:15:49.056" starttime="20201202 12:15:43.715"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201202 12:15:49.057" starttime="20201202 12:15:49.056"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:49.057" starttime="20201202 12:15:49.056"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201202 12:15:49.057" critical="yes" starttime="20201202 12:15:43.714"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201202 12:15:49.065" starttime="20201202 12:15:16.798"></status>
</suite>
<status status="PASS" endtime="20201202 12:15:49.074" starttime="20201202 12:15:16.761"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:15:07.539" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:15:07.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:15:07.547" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:15:07.547" starttime="20201202 12:15:07.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:15:07.548" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:15:07.548" starttime="20201202 12:15:07.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:15:07.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:15:07.549" starttime="20201202 12:15:07.548"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:07.550" starttime="20201202 12:15:07.527"></status>
</kw>
<msg timestamp="20201202 12:15:07.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:15:07.550" starttime="20201202 12:15:07.526"></status>
</kw>
<msg timestamp="20201202 12:15:07.550" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:15:07.550" starttime="20201202 12:15:07.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:15:07.551" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:15:07.551" starttime="20201202 12:15:07.550"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:15:07.568" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:15:07.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:15:07.961" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:15:07.961" starttime="20201202 12:15:07.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:15:07.962" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:15:07.962" starttime="20201202 12:15:07.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:15:07.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:15:07.963" starttime="20201202 12:15:07.962"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:07.964" starttime="20201202 12:15:07.560"></status>
</kw>
<msg timestamp="20201202 12:15:07.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:15:07.964" starttime="20201202 12:15:07.560"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:07.964" starttime="20201202 12:15:07.559"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:07.965" starttime="20201202 12:15:07.551"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:07.965" starttime="20201202 12:15:07.523"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:15:07.965" critical="yes" starttime="20201202 12:15:07.522"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201202 12:15:07.967" starttime="20201202 12:15:07.345"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201202 12:15:55.410" level="INFO">${random} = 88598</msg>
<status status="PASS" endtime="20201202 12:15:55.410" starttime="20201202 12:15:55.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201202 12:15:55.411" level="INFO">${source} = 88598-source</msg>
<status status="PASS" endtime="20201202 12:15:55.411" starttime="20201202 12:15:55.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201202 12:15:55.412" level="INFO">${target} = 88598-target</msg>
<status status="PASS" endtime="20201202 12:15:55.412" starttime="20201202 12:15:55.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:15:55.419" level="INFO">Running command 'ozone sh volume create 88598-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:15:59.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:15:59.430" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:15:59.430" starttime="20201202 12:15:55.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:15:59.432" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:15:59.432" starttime="20201202 12:15:59.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:15:59.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:15:59.433" starttime="20201202 12:15:59.432"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:59.433" starttime="20201202 12:15:55.413"></status>
</kw>
<msg timestamp="20201202 12:15:59.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:15:59.433" starttime="20201202 12:15:55.413"></status>
</kw>
<status status="PASS" endtime="20201202 12:15:59.434" starttime="20201202 12:15:55.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:15:59.439" level="INFO">Running command 'ozone sh volume create 88598-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:03.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:03.476" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:03.476" starttime="20201202 12:15:59.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:03.477" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:16:03.477" starttime="20201202 12:16:03.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:03.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:03.478" starttime="20201202 12:16:03.478"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:03.479" starttime="20201202 12:15:59.435"></status>
</kw>
<msg timestamp="20201202 12:16:03.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:03.479" starttime="20201202 12:15:59.434"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:03.479" starttime="20201202 12:15:59.434"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:03.486" level="INFO">Running command 'ozone sh bucket create 88598-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:07.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:07.833" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:07.833" starttime="20201202 12:16:03.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:07.834" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:16:07.834" starttime="20201202 12:16:07.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:07.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:07.835" starttime="20201202 12:16:07.834"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:07.835" starttime="20201202 12:16:03.481"></status>
</kw>
<msg timestamp="20201202 12:16:07.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:07.835" starttime="20201202 12:16:03.481"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:07.836" starttime="20201202 12:16:03.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:07.839" level="INFO">Running command 'ozone sh key put 88598-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:17.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:17.214" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:17.214" starttime="20201202 12:16:07.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:17.215" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:16:17.216" starttime="20201202 12:16:17.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:17.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:17.216" starttime="20201202 12:16:17.216"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:17.217" starttime="20201202 12:16:07.837"></status>
</kw>
<msg timestamp="20201202 12:16:17.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:17.217" starttime="20201202 12:16:07.836"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:17.217" starttime="20201202 12:16:07.836"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:17.223" level="INFO">Running command 'ozone sh bucket create 88598-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:21.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:21.565" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:21.565" starttime="20201202 12:16:17.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:21.566" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:16:21.566" starttime="20201202 12:16:21.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:21.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:21.566" starttime="20201202 12:16:21.566"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:21.567" starttime="20201202 12:16:17.218"></status>
</kw>
<msg timestamp="20201202 12:16:21.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:21.568" starttime="20201202 12:16:17.218"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:21.568" starttime="20201202 12:16:17.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:21.573" level="INFO">Running command 'ozone sh bucket link 88598-source/readable-bucket 88598-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:25.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:25.730" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:25.730" starttime="20201202 12:16:21.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:25.732" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:16:25.732" starttime="20201202 12:16:25.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:25.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:25.733" starttime="20201202 12:16:25.732"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:25.733" starttime="20201202 12:16:21.569"></status>
</kw>
<msg timestamp="20201202 12:16:25.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:25.734" starttime="20201202 12:16:21.569"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:25.734" starttime="20201202 12:16:21.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:25.739" level="INFO">Running command 'ozone sh bucket link 88598-source/readable-bucket 88598-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:29.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:29.980" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:29.980" starttime="20201202 12:16:25.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:29.981" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:16:29.981" starttime="20201202 12:16:29.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:29.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:29.982" starttime="20201202 12:16:29.982"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:29.982" starttime="20201202 12:16:25.735"></status>
</kw>
<msg timestamp="20201202 12:16:29.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:29.983" starttime="20201202 12:16:25.735"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:29.983" starttime="20201202 12:16:25.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:29.988" level="INFO">Running command 'ozone sh bucket link 88598-source/unreadable-bucket 88598-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:34.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:34.088" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:34.088" starttime="20201202 12:16:29.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:34.089" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:16:34.090" starttime="20201202 12:16:34.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:34.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:34.090" starttime="20201202 12:16:34.090"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:34.091" starttime="20201202 12:16:29.984"></status>
</kw>
<msg timestamp="20201202 12:16:34.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:34.091" starttime="20201202 12:16:29.984"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:34.091" starttime="20201202 12:16:29.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:34.096" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 88598-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:38.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:38.426" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:38.426" starttime="20201202 12:16:34.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:38.427" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201202 12:16:38.427" starttime="20201202 12:16:38.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:38.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:38.428" starttime="20201202 12:16:38.427"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:38.428" starttime="20201202 12:16:34.092"></status>
</kw>
<msg timestamp="20201202 12:16:38.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:38.428" starttime="20201202 12:16:34.092"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:38.434" starttime="20201202 12:16:34.091"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:38.445" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 88598-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:42.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:42.849" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:42.849" starttime="20201202 12:16:38.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:42.851" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201202 12:16:42.851" starttime="20201202 12:16:42.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:42.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:42.851" starttime="20201202 12:16:42.851"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:42.852" starttime="20201202 12:16:38.436"></status>
</kw>
<msg timestamp="20201202 12:16:42.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:42.852" starttime="20201202 12:16:38.436"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:42.852" starttime="20201202 12:16:38.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:42.857" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 88598-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:46.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:46.908" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:46.908" starttime="20201202 12:16:42.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:46.909" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201202 12:16:46.910" starttime="20201202 12:16:46.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:46.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:46.910" starttime="20201202 12:16:46.910"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:46.911" starttime="20201202 12:16:42.854"></status>
</kw>
<msg timestamp="20201202 12:16:46.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:46.911" starttime="20201202 12:16:42.853"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:46.911" starttime="20201202 12:16:42.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:46.915" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 88598-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:51.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:51.569" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:51.569" starttime="20201202 12:16:46.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:51.570" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201202 12:16:51.570" starttime="20201202 12:16:51.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:51.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:51.571" starttime="20201202 12:16:51.571"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:51.572" starttime="20201202 12:16:46.912"></status>
</kw>
<msg timestamp="20201202 12:16:51.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:51.572" starttime="20201202 12:16:46.912"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:51.572" starttime="20201202 12:16:46.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:51.577" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 88598-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:55.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:55.610" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:55.610" starttime="20201202 12:16:51.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:55.611" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201202 12:16:55.612" starttime="20201202 12:16:55.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:55.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:55.612" starttime="20201202 12:16:55.612"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.612" starttime="20201202 12:16:51.574"></status>
</kw>
<msg timestamp="20201202 12:16:55.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:55.613" starttime="20201202 12:16:51.573"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.613" starttime="20201202 12:16:51.572"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.613" starttime="20201202 12:16:03.480"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.613" starttime="20201202 12:16:03.479"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.614" starttime="20201202 12:15:55.409"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:55.621" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:55.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:55.624" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:16:55.624" starttime="20201202 12:16:55.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:55.625" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:16:55.625" starttime="20201202 12:16:55.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:55.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:55.626" starttime="20201202 12:16:55.625"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.626" starttime="20201202 12:16:55.617"></status>
</kw>
<msg timestamp="20201202 12:16:55.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:55.626" starttime="20201202 12:16:55.617"></status>
</kw>
<msg timestamp="20201202 12:16:55.627" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:16:55.627" starttime="20201202 12:16:55.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:16:55.628" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:16:55.628" starttime="20201202 12:16:55.627"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:55.634" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:55.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:55.649" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:16:55.649" starttime="20201202 12:16:55.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:55.650" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:16:55.650" starttime="20201202 12:16:55.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:55.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:55.652" starttime="20201202 12:16:55.651"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.652" starttime="20201202 12:16:55.630"></status>
</kw>
<msg timestamp="20201202 12:16:55.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:55.652" starttime="20201202 12:16:55.630"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.652" starttime="20201202 12:16:55.629"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.652" starttime="20201202 12:16:55.629"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.653" starttime="20201202 12:16:55.616"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:55.653" starttime="20201202 12:16:55.615"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:55.657" level="INFO">Running command 'ozone sh bucket link 88598-source/no-such-bucket 88598-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:16:59.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:16:59.612" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:16:59.612" starttime="20201202 12:16:55.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:16:59.614" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:16:59.614" starttime="20201202 12:16:59.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:16:59.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:16:59.615" starttime="20201202 12:16:59.614"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:59.616" starttime="20201202 12:16:55.654"></status>
</kw>
<msg timestamp="20201202 12:16:59.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:16:59.616" starttime="20201202 12:16:55.654"></status>
</kw>
<status status="PASS" endtime="20201202 12:16:59.616" starttime="20201202 12:16:55.653"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:16:59.619" level="INFO">Running command 'ozone sh key list 88598-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:03.878" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 12:17:03.878" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:17:03.878" starttime="20201202 12:16:59.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:03.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201202 12:17:03.880" starttime="20201202 12:17:03.879"></status>
</kw>
<msg timestamp="20201202 12:17:03.880" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:17:03.880" starttime="20201202 12:16:59.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201202 12:17:03.881" starttime="20201202 12:17:03.881"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:17:03.881" critical="yes" starttime="20201202 12:16:55.614"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:03.889" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:03.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:03.893" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:17:03.893" starttime="20201202 12:17:03.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:03.895" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:17:03.895" starttime="20201202 12:17:03.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:03.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:03.896" starttime="20201202 12:17:03.895"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:03.897" starttime="20201202 12:17:03.886"></status>
</kw>
<msg timestamp="20201202 12:17:03.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:03.897" starttime="20201202 12:17:03.885"></status>
</kw>
<msg timestamp="20201202 12:17:03.897" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:17:03.897" starttime="20201202 12:17:03.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:17:03.899" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:17:03.899" starttime="20201202 12:17:03.898"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:03.911" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:03.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:03.928" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:17:03.928" starttime="20201202 12:17:03.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:03.930" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:17:03.930" starttime="20201202 12:17:03.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:03.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:03.931" starttime="20201202 12:17:03.930"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:03.931" starttime="20201202 12:17:03.902"></status>
</kw>
<msg timestamp="20201202 12:17:03.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:03.931" starttime="20201202 12:17:03.901"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:03.932" starttime="20201202 12:17:03.900"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:03.932" starttime="20201202 12:17:03.899"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:03.932" starttime="20201202 12:17:03.884"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:03.932" starttime="20201202 12:17:03.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:03.938" level="INFO">Running command 'ozone sh bucket link 88598-source/bucket1 88598-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:08.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:08.260" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:17:08.260" starttime="20201202 12:17:03.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:08.262" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:17:08.262" starttime="20201202 12:17:08.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:08.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:08.263" starttime="20201202 12:17:08.262"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:08.263" starttime="20201202 12:17:03.934"></status>
</kw>
<msg timestamp="20201202 12:17:08.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:08.263" starttime="20201202 12:17:03.933"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:08.263" starttime="20201202 12:17:03.932"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:08.269" level="INFO">Running command 'ozone sh bucket create 88598-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:12.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:12.642" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:17:12.642" starttime="20201202 12:17:08.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:12.644" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:17:12.644" starttime="20201202 12:17:12.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:12.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:12.644" starttime="20201202 12:17:12.644"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:12.645" starttime="20201202 12:17:08.265"></status>
</kw>
<msg timestamp="20201202 12:17:12.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:12.645" starttime="20201202 12:17:08.264"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:12.645" starttime="20201202 12:17:08.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:12.649" level="INFO">Running command 'ozone sh key put 88598-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:19.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:19.540" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:17:19.540" starttime="20201202 12:17:12.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:19.542" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:17:19.542" starttime="20201202 12:17:19.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:19.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:19.543" starttime="20201202 12:17:19.542"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:19.543" starttime="20201202 12:17:12.646"></status>
</kw>
<msg timestamp="20201202 12:17:19.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:19.543" starttime="20201202 12:17:12.646"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:19.543" starttime="20201202 12:17:12.645"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201202 12:17:19.545" level="INFO">${postfix} = 76662</msg>
<status status="PASS" endtime="20201202 12:17:19.546" starttime="20201202 12:17:19.545"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201202 12:17:19.546" level="INFO">${tmpfile} = /tmp/tempkey-76662</msg>
<status status="PASS" endtime="20201202 12:17:19.546" starttime="20201202 12:17:19.546"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:19.553" level="INFO">Running command 'ozone sh key get -f 88598-target/link1/key1 /tmp/tempkey-76662 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:26.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:26.081" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:17:26.081" starttime="20201202 12:17:19.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:26.082" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:17:26.082" starttime="20201202 12:17:26.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:26.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:26.083" starttime="20201202 12:17:26.082"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.084" starttime="20201202 12:17:19.547"></status>
</kw>
<msg timestamp="20201202 12:17:26.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:26.084" starttime="20201202 12:17:19.547"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.084" starttime="20201202 12:17:19.546"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201202 12:17:26.087" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-76662 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:26.093" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201202 12:17:26.093" starttime="20201202 12:17:26.084"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:26.099" level="INFO">Running command 'rm -f /tmp/tempkey-76662 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:26.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:26.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:17:26.103" starttime="20201202 12:17:26.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:26.104" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:17:26.104" starttime="20201202 12:17:26.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:26.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:26.105" starttime="20201202 12:17:26.104"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.105" starttime="20201202 12:17:26.096"></status>
</kw>
<msg timestamp="20201202 12:17:26.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:26.106" starttime="20201202 12:17:26.095"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.106" starttime="20201202 12:17:26.094"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:17:26.106" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201202 12:17:26.107" starttime="20201202 12:17:26.106"></status>
</kw>
<msg timestamp="20201202 12:17:26.107" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201202 12:17:26.107" starttime="20201202 12:17:19.544"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:17:26.108" starttime="20201202 12:17:26.107"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.108" starttime="20201202 12:17:19.544"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:17:26.108" critical="yes" starttime="20201202 12:17:03.882"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:26.115" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:26.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:26.118" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:17:26.118" starttime="20201202 12:17:26.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:26.119" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:17:26.120" starttime="20201202 12:17:26.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:26.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:26.121" starttime="20201202 12:17:26.120"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.121" starttime="20201202 12:17:26.112"></status>
</kw>
<msg timestamp="20201202 12:17:26.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:26.121" starttime="20201202 12:17:26.112"></status>
</kw>
<msg timestamp="20201202 12:17:26.122" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:17:26.122" starttime="20201202 12:17:26.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:17:26.123" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:17:26.123" starttime="20201202 12:17:26.122"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:26.127" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:26.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:26.147" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:17:26.147" starttime="20201202 12:17:26.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:26.148" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:17:26.148" starttime="20201202 12:17:26.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:26.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:26.149" starttime="20201202 12:17:26.148"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.149" starttime="20201202 12:17:26.124"></status>
</kw>
<msg timestamp="20201202 12:17:26.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:26.150" starttime="20201202 12:17:26.124"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.150" starttime="20201202 12:17:26.123"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.150" starttime="20201202 12:17:26.123"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.150" starttime="20201202 12:17:26.111"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:26.150" starttime="20201202 12:17:26.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:26.156" level="INFO">Running command 'ozone sh key put 88598-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:32.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:32.610" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:17:32.610" starttime="20201202 12:17:26.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:32.611" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:17:32.611" starttime="20201202 12:17:32.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:32.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:32.612" starttime="20201202 12:17:32.611"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:32.612" starttime="20201202 12:17:26.153"></status>
</kw>
<msg timestamp="20201202 12:17:32.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:32.612" starttime="20201202 12:17:26.152"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:32.613" starttime="20201202 12:17:26.151"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201202 12:17:32.615" level="INFO">${postfix} = 19325</msg>
<status status="PASS" endtime="20201202 12:17:32.615" starttime="20201202 12:17:32.614"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201202 12:17:32.615" level="INFO">${tmpfile} = /tmp/tempkey-19325</msg>
<status status="PASS" endtime="20201202 12:17:32.615" starttime="20201202 12:17:32.615"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:32.620" level="INFO">Running command 'ozone sh key get -f 88598-source/bucket1/key2 /tmp/tempkey-19325 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:38.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:38.839" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:17:38.839" starttime="20201202 12:17:32.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:38.840" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:17:38.841" starttime="20201202 12:17:38.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:38.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:38.842" starttime="20201202 12:17:38.841"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.842" starttime="20201202 12:17:32.617"></status>
</kw>
<msg timestamp="20201202 12:17:38.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:38.842" starttime="20201202 12:17:32.616"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.842" starttime="20201202 12:17:32.616"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201202 12:17:38.845" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-19325 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:38.847" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201202 12:17:38.848" starttime="20201202 12:17:38.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:38.853" level="INFO">Running command 'rm -f /tmp/tempkey-19325 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:38.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:38.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:17:38.854" starttime="20201202 12:17:38.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:38.856" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:17:38.856" starttime="20201202 12:17:38.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:38.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:38.857" starttime="20201202 12:17:38.856"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.857" starttime="20201202 12:17:38.849"></status>
</kw>
<msg timestamp="20201202 12:17:38.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:38.858" starttime="20201202 12:17:38.849"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.858" starttime="20201202 12:17:38.848"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:17:38.858" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201202 12:17:38.858" starttime="20201202 12:17:38.858"></status>
</kw>
<msg timestamp="20201202 12:17:38.859" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201202 12:17:38.859" starttime="20201202 12:17:32.614"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:17:38.860" starttime="20201202 12:17:38.859"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.860" starttime="20201202 12:17:32.613"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:17:38.860" critical="yes" starttime="20201202 12:17:26.109"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:38.868" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:38.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:38.870" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:17:38.870" starttime="20201202 12:17:38.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:38.872" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:17:38.872" starttime="20201202 12:17:38.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:38.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:38.873" starttime="20201202 12:17:38.872"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.873" starttime="20201202 12:17:38.864"></status>
</kw>
<msg timestamp="20201202 12:17:38.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:38.873" starttime="20201202 12:17:38.864"></status>
</kw>
<msg timestamp="20201202 12:17:38.873" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:17:38.873" starttime="20201202 12:17:38.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:17:38.874" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:17:38.874" starttime="20201202 12:17:38.874"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:38.880" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:38.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:38.898" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:17:38.898" starttime="20201202 12:17:38.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:38.899" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:17:38.899" starttime="20201202 12:17:38.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:38.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:38.900" starttime="20201202 12:17:38.899"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.900" starttime="20201202 12:17:38.876"></status>
</kw>
<msg timestamp="20201202 12:17:38.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:38.901" starttime="20201202 12:17:38.876"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.901" starttime="20201202 12:17:38.875"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.901" starttime="20201202 12:17:38.874"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.901" starttime="20201202 12:17:38.863"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:38.901" starttime="20201202 12:17:38.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:38.907" level="INFO">Running command 'ozone sh key list 88598-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:43.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:43.226" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201202 12:17:43.226" starttime="20201202 12:17:38.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:43.227" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201202 12:17:43.227" starttime="20201202 12:17:43.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:43.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:43.229" starttime="20201202 12:17:43.228"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:43.229" starttime="20201202 12:17:38.903"></status>
</kw>
<msg timestamp="20201202 12:17:43.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:43.229" starttime="20201202 12:17:38.903"></status>
</kw>
<msg timestamp="20201202 12:17:43.230" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201202 12:17:43.230" starttime="20201202 12:17:38.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:43.236" level="INFO">Running command 'ozone sh key list 88598-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:47.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:47.643" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201202 12:17:47.643" starttime="20201202 12:17:43.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:47.645" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201202 12:17:47.645" starttime="20201202 12:17:47.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:47.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:47.646" starttime="20201202 12:17:47.645"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:47.646" starttime="20201202 12:17:43.232"></status>
</kw>
<msg timestamp="20201202 12:17:47.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:47.646" starttime="20201202 12:17:43.231"></status>
</kw>
<msg timestamp="20201202 12:17:47.647" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201202 12:17:47.647" starttime="20201202 12:17:43.230"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:17:47.647" starttime="20201202 12:17:47.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201202 12:17:47.648" starttime="20201202 12:17:47.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201202 12:17:47.649" starttime="20201202 12:17:47.648"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:17:47.649" critical="yes" starttime="20201202 12:17:38.861"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:47.656" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:47.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:47.659" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:17:47.659" starttime="20201202 12:17:47.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:47.660" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:17:47.661" starttime="20201202 12:17:47.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:47.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:47.662" starttime="20201202 12:17:47.661"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:47.662" starttime="20201202 12:17:47.653"></status>
</kw>
<msg timestamp="20201202 12:17:47.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:47.662" starttime="20201202 12:17:47.653"></status>
</kw>
<msg timestamp="20201202 12:17:47.663" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:17:47.663" starttime="20201202 12:17:47.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:17:47.663" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:17:47.664" starttime="20201202 12:17:47.663"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:47.670" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:47.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:47.685" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:17:47.685" starttime="20201202 12:17:47.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:47.686" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:17:47.686" starttime="20201202 12:17:47.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:47.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:47.687" starttime="20201202 12:17:47.687"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:47.687" starttime="20201202 12:17:47.665"></status>
</kw>
<msg timestamp="20201202 12:17:47.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:47.688" starttime="20201202 12:17:47.665"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:47.688" starttime="20201202 12:17:47.664"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:47.688" starttime="20201202 12:17:47.664"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:47.688" starttime="20201202 12:17:47.652"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:47.688" starttime="20201202 12:17:47.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:47.695" level="INFO">Running command 'ozone sh key delete 88598-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:51.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:51.911" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:17:51.911" starttime="20201202 12:17:47.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:51.913" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:17:51.913" starttime="20201202 12:17:51.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:51.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:51.914" starttime="20201202 12:17:51.913"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:51.914" starttime="20201202 12:17:47.690"></status>
</kw>
<msg timestamp="20201202 12:17:51.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:51.914" starttime="20201202 12:17:47.689"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:51.915" starttime="20201202 12:17:47.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:51.924" level="INFO">Running command 'ozone sh key list 88598-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:56.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:56.478" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201202 12:17:56.478" starttime="20201202 12:17:51.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:56.479" level="INFO">key1</msg>
<status status="PASS" endtime="20201202 12:17:56.479" starttime="20201202 12:17:56.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:56.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:56.480" starttime="20201202 12:17:56.480"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:56.481" starttime="20201202 12:17:51.916"></status>
</kw>
<msg timestamp="20201202 12:17:56.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:56.481" starttime="20201202 12:17:51.915"></status>
</kw>
<msg timestamp="20201202 12:17:56.482" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201202 12:17:56.482" starttime="20201202 12:17:51.915"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201202 12:17:56.482" starttime="20201202 12:17:56.482"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:17:56.483" critical="yes" starttime="20201202 12:17:47.650"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:56.491" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:56.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:56.494" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:17:56.494" starttime="20201202 12:17:56.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:56.495" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:17:56.495" starttime="20201202 12:17:56.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:56.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:56.496" starttime="20201202 12:17:56.495"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:56.496" starttime="20201202 12:17:56.488"></status>
</kw>
<msg timestamp="20201202 12:17:56.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:56.497" starttime="20201202 12:17:56.488"></status>
</kw>
<msg timestamp="20201202 12:17:56.497" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:17:56.497" starttime="20201202 12:17:56.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:17:56.498" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:17:56.498" starttime="20201202 12:17:56.498"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:56.503" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:17:56.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:17:56.521" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:17:56.521" starttime="20201202 12:17:56.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:17:56.522" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:17:56.522" starttime="20201202 12:17:56.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:17:56.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:17:56.523" starttime="20201202 12:17:56.522"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:56.523" starttime="20201202 12:17:56.500"></status>
</kw>
<msg timestamp="20201202 12:17:56.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:17:56.523" starttime="20201202 12:17:56.500"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:56.524" starttime="20201202 12:17:56.499"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:56.524" starttime="20201202 12:17:56.498"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:56.524" starttime="20201202 12:17:56.485"></status>
</kw>
<status status="PASS" endtime="20201202 12:17:56.524" starttime="20201202 12:17:56.484"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:17:56.530" level="INFO">Running command 'ozone sh bucket list 88598-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:00.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:00.879" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:00.879" starttime="20201202 12:17:56.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:00.881" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:16:59.394Z",
  "modificationTime" : "2020-12-02T12:16:59.394Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:16:33.913Z",
  "modificationTime" : "2020-12-02T12:16:55.394Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:17:08.168Z",
  "modificationTime" : "2020-12-02T12:17:08.168Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:16:25.543Z",
  "modificationTime" : "2020-12-02T12:16:51.363Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:16:29.776Z",
  "modificationTime" : "2020-12-02T12:16:29.776Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201202 12:18:00.881" starttime="20201202 12:18:00.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:00.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:00.882" starttime="20201202 12:18:00.881"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:00.882" starttime="20201202 12:17:56.525"></status>
</kw>
<msg timestamp="20201202 12:18:00.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:00.882" starttime="20201202 12:17:56.525"></status>
</kw>
<msg timestamp="20201202 12:18:00.882" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:00.883" starttime="20201202 12:17:56.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:00.883" starttime="20201202 12:18:00.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:00.884" starttime="20201202 12:18:00.883"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:18:00.884" critical="yes" starttime="20201202 12:17:56.483"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:00.896" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:00.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:00.897" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:18:00.897" starttime="20201202 12:18:00.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:00.900" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:18:00.900" starttime="20201202 12:18:00.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:00.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:00.901" starttime="20201202 12:18:00.900"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:00.901" starttime="20201202 12:18:00.889"></status>
</kw>
<msg timestamp="20201202 12:18:00.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:00.901" starttime="20201202 12:18:00.888"></status>
</kw>
<msg timestamp="20201202 12:18:00.902" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:18:00.902" starttime="20201202 12:18:00.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:18:00.903" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:18:00.903" starttime="20201202 12:18:00.902"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:00.910" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:00.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:00.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:00.926" starttime="20201202 12:18:00.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:00.928" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:00.928" starttime="20201202 12:18:00.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:00.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:00.928" starttime="20201202 12:18:00.928"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:00.929" starttime="20201202 12:18:00.905"></status>
</kw>
<msg timestamp="20201202 12:18:00.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:00.929" starttime="20201202 12:18:00.905"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:00.929" starttime="20201202 12:18:00.904"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:00.929" starttime="20201202 12:18:00.903"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:00.930" starttime="20201202 12:18:00.886"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:00.930" starttime="20201202 12:18:00.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:00.934" level="INFO">Running command 'ozone sh bucket info 88598-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:05.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:05.046" level="INFO">${output} = 88598-source bucket1</msg>
<status status="PASS" endtime="20201202 12:18:05.046" starttime="20201202 12:18:00.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:05.048" level="INFO">88598-source bucket1</msg>
<status status="PASS" endtime="20201202 12:18:05.048" starttime="20201202 12:18:05.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:05.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:05.049" starttime="20201202 12:18:05.048"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:05.049" starttime="20201202 12:18:00.931"></status>
</kw>
<msg timestamp="20201202 12:18:05.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:05.050" starttime="20201202 12:18:00.931"></status>
</kw>
<msg timestamp="20201202 12:18:05.050" level="INFO">${result} = 88598-source bucket1</msg>
<status status="PASS" endtime="20201202 12:18:05.050" starttime="20201202 12:18:00.930"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:05.051" starttime="20201202 12:18:05.051"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:18:05.052" critical="yes" starttime="20201202 12:18:00.885"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:05.060" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:05.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:05.062" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:18:05.062" starttime="20201202 12:18:05.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:05.063" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:18:05.064" starttime="20201202 12:18:05.063"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:05.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:05.065" starttime="20201202 12:18:05.064"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:05.065" starttime="20201202 12:18:05.056"></status>
</kw>
<msg timestamp="20201202 12:18:05.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:05.065" starttime="20201202 12:18:05.055"></status>
</kw>
<msg timestamp="20201202 12:18:05.065" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:18:05.065" starttime="20201202 12:18:05.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:18:05.066" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:18:05.066" starttime="20201202 12:18:05.066"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:05.071" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:05.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:05.091" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:05.091" starttime="20201202 12:18:05.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:05.093" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:05.093" starttime="20201202 12:18:05.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:05.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:05.094" starttime="20201202 12:18:05.093"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:05.094" starttime="20201202 12:18:05.068"></status>
</kw>
<msg timestamp="20201202 12:18:05.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:05.094" starttime="20201202 12:18:05.068"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:05.095" starttime="20201202 12:18:05.067"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:05.095" starttime="20201202 12:18:05.066"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:05.095" starttime="20201202 12:18:05.054"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:05.095" starttime="20201202 12:18:05.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:05.100" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 88598-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:09.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:09.530" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:09.530" starttime="20201202 12:18:05.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:09.532" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201202 12:18:09.532" starttime="20201202 12:18:09.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:09.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:09.533" starttime="20201202 12:18:09.532"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:09.533" starttime="20201202 12:18:05.096"></status>
</kw>
<msg timestamp="20201202 12:18:09.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:09.533" starttime="20201202 12:18:05.096"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:09.533" starttime="20201202 12:18:05.095"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:09.546" level="INFO">Running command 'ozone sh bucket getacl 88598-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:14.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:14.181" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201202 12:18:14.182" starttime="20201202 12:18:09.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:14.183" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201202 12:18:14.183" starttime="20201202 12:18:14.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:14.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:14.184" starttime="20201202 12:18:14.183"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:14.184" starttime="20201202 12:18:09.536"></status>
</kw>
<msg timestamp="20201202 12:18:14.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:14.185" starttime="20201202 12:18:09.535"></status>
</kw>
<msg timestamp="20201202 12:18:14.185" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201202 12:18:14.185" starttime="20201202 12:18:09.534"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:14.186" starttime="20201202 12:18:14.185"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:14.186" starttime="20201202 12:18:09.534"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:14.192" level="INFO">Running command 'ozone sh bucket getacl 88598-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:18.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:18.494" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:18.494" starttime="20201202 12:18:14.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:18.495" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:18.495" starttime="20201202 12:18:18.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:18.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:18.496" starttime="20201202 12:18:18.495"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:18.496" starttime="20201202 12:18:14.188"></status>
</kw>
<msg timestamp="20201202 12:18:18.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:18.497" starttime="20201202 12:18:14.188"></status>
</kw>
<msg timestamp="20201202 12:18:18.497" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201202 12:18:18.497" starttime="20201202 12:18:14.187"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:18.498" starttime="20201202 12:18:18.497"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:18.498" starttime="20201202 12:18:14.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:18.502" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 88598-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:22.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:22.763" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:22.763" starttime="20201202 12:18:18.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:22.765" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201202 12:18:22.765" starttime="20201202 12:18:22.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:22.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:22.767" starttime="20201202 12:18:22.765"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:22.767" starttime="20201202 12:18:18.499"></status>
</kw>
<msg timestamp="20201202 12:18:22.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:22.768" starttime="20201202 12:18:18.499"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:22.768" starttime="20201202 12:18:18.498"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:22.776" level="INFO">Running command 'ozone sh bucket getacl 88598-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:26.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:26.962" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:26.962" starttime="20201202 12:18:22.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:26.963" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:26.964" starttime="20201202 12:18:26.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:26.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:26.964" starttime="20201202 12:18:26.964"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:26.965" starttime="20201202 12:18:22.772"></status>
</kw>
<msg timestamp="20201202 12:18:26.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:26.965" starttime="20201202 12:18:22.771"></status>
</kw>
<msg timestamp="20201202 12:18:26.965" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201202 12:18:26.966" starttime="20201202 12:18:22.770"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:26.966" starttime="20201202 12:18:26.966"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:26.966" starttime="20201202 12:18:22.768"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:26.972" level="INFO">Running command 'ozone sh bucket getacl 88598-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:31.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:31.576" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201202 12:18:31.576" starttime="20201202 12:18:26.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:31.578" level="INFO">READ</msg>
<status status="PASS" endtime="20201202 12:18:31.578" starttime="20201202 12:18:31.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:31.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:31.579" starttime="20201202 12:18:31.578"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:31.580" starttime="20201202 12:18:26.969"></status>
</kw>
<msg timestamp="20201202 12:18:31.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:31.580" starttime="20201202 12:18:26.968"></status>
</kw>
<msg timestamp="20201202 12:18:31.580" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201202 12:18:31.580" starttime="20201202 12:18:26.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:31.581" starttime="20201202 12:18:31.580"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:31.581" starttime="20201202 12:18:26.967"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:18:31.581" critical="yes" starttime="20201202 12:18:05.053"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:31.589" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:31.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:31.592" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:18:31.592" starttime="20201202 12:18:31.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:31.594" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:18:31.594" starttime="20201202 12:18:31.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:31.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:31.595" starttime="20201202 12:18:31.594"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:31.595" starttime="20201202 12:18:31.586"></status>
</kw>
<msg timestamp="20201202 12:18:31.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:31.596" starttime="20201202 12:18:31.585"></status>
</kw>
<msg timestamp="20201202 12:18:31.596" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:18:31.596" starttime="20201202 12:18:31.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:18:31.597" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:18:31.597" starttime="20201202 12:18:31.596"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:31.605" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:31.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:31.622" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:31.622" starttime="20201202 12:18:31.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:31.623" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:31.623" starttime="20201202 12:18:31.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:31.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:31.624" starttime="20201202 12:18:31.623"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:31.624" starttime="20201202 12:18:31.600"></status>
</kw>
<msg timestamp="20201202 12:18:31.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:31.625" starttime="20201202 12:18:31.599"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:31.625" starttime="20201202 12:18:31.598"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:31.625" starttime="20201202 12:18:31.597"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:31.625" starttime="20201202 12:18:31.584"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:31.625" starttime="20201202 12:18:31.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:31.632" level="INFO">Running command 'ozone sh bucket link 88598-source/bucket2 88598-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:35.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:35.847" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:35.847" starttime="20201202 12:18:31.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:35.849" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:18:35.849" starttime="20201202 12:18:35.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:35.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:35.850" starttime="20201202 12:18:35.849"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:35.850" starttime="20201202 12:18:31.627"></status>
</kw>
<msg timestamp="20201202 12:18:35.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:35.850" starttime="20201202 12:18:31.626"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:35.850" starttime="20201202 12:18:31.626"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:35.854" level="INFO">Running command 'ozone sh bucket create 88598-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:40.399" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 12:18:40.399" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:40.399" starttime="20201202 12:18:35.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:40.400" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201202 12:18:40.400" starttime="20201202 12:18:40.399"></status>
</kw>
<msg timestamp="20201202 12:18:40.401" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:40.401" starttime="20201202 12:18:35.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:40.402" starttime="20201202 12:18:40.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:40.407" level="INFO">Running command 'ozone sh bucket create 88598-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:44.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:44.395" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:44.395" starttime="20201202 12:18:40.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:44.396" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:18:44.396" starttime="20201202 12:18:44.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:44.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:44.397" starttime="20201202 12:18:44.396"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:44.398" starttime="20201202 12:18:40.403"></status>
</kw>
<msg timestamp="20201202 12:18:44.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:44.398" starttime="20201202 12:18:40.403"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:44.398" starttime="20201202 12:18:40.402"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:44.403" level="INFO">Running command 'ozone sh bucket link 88598-source/bucket1 88598-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:48.664" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 12:18:48.664" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:48.664" starttime="20201202 12:18:44.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.665" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201202 12:18:48.665" starttime="20201202 12:18:48.664"></status>
</kw>
<msg timestamp="20201202 12:18:48.666" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:48.666" starttime="20201202 12:18:44.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:48.666" starttime="20201202 12:18:48.666"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:18:48.667" critical="yes" starttime="20201202 12:18:31.583"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:48.673" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:48.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:48.676" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:18:48.676" starttime="20201202 12:18:48.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.677" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:18:48.677" starttime="20201202 12:18:48.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:48.678" starttime="20201202 12:18:48.678"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.679" starttime="20201202 12:18:48.671"></status>
</kw>
<msg timestamp="20201202 12:18:48.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:48.679" starttime="20201202 12:18:48.670"></status>
</kw>
<msg timestamp="20201202 12:18:48.679" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:18:48.679" starttime="20201202 12:18:48.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:18:48.680" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:18:48.680" starttime="20201202 12:18:48.679"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:48.686" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:48.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:48.705" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:48.706" starttime="20201202 12:18:48.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.707" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:48.707" starttime="20201202 12:18:48.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:48.708" starttime="20201202 12:18:48.707"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.708" starttime="20201202 12:18:48.682"></status>
</kw>
<msg timestamp="20201202 12:18:48.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:48.708" starttime="20201202 12:18:48.681"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.709" starttime="20201202 12:18:48.681"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.709" starttime="20201202 12:18:48.680"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.709" starttime="20201202 12:18:48.669"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.709" starttime="20201202 12:18:48.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:48.716" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:48.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:48.719" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:48.719" starttime="20201202 12:18:48.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.720" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:48.720" starttime="20201202 12:18:48.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:48.721" starttime="20201202 12:18:48.720"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.721" starttime="20201202 12:18:48.711"></status>
</kw>
<msg timestamp="20201202 12:18:48.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:48.722" starttime="20201202 12:18:48.711"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.722" starttime="20201202 12:18:48.711"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:48.727" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:48.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:48.730" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:18:48.730" starttime="20201202 12:18:48.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.731" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:18:48.732" starttime="20201202 12:18:48.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:48.732" starttime="20201202 12:18:48.732"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.733" starttime="20201202 12:18:48.724"></status>
</kw>
<msg timestamp="20201202 12:18:48.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:48.733" starttime="20201202 12:18:48.723"></status>
</kw>
<msg timestamp="20201202 12:18:48.733" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:18:48.733" starttime="20201202 12:18:48.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:18:48.734" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:18:48.734" starttime="20201202 12:18:48.733"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:48.740" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:48.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:48.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:48.758" starttime="20201202 12:18:48.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.760" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:48.760" starttime="20201202 12:18:48.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:48.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:48.762" starttime="20201202 12:18:48.761"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.763" starttime="20201202 12:18:48.736"></status>
</kw>
<msg timestamp="20201202 12:18:48.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:48.763" starttime="20201202 12:18:48.736"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.763" starttime="20201202 12:18:48.735"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.763" starttime="20201202 12:18:48.734"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.763" starttime="20201202 12:18:48.722"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:48.764" starttime="20201202 12:18:48.722"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:48.767" level="INFO">Running command 'ozone sh key list 88598-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:53.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:53.032" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:53.032" starttime="20201202 12:18:48.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.033" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "88598-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-12-02T12:16:11.978Z",
  "modificationTime" : "2020-12-02T12:16:16.519Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201202 12:18:53.033" starttime="20201202 12:18:53.032"></status>
</kw>
<msg timestamp="20201202 12:18:53.033" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:53.033" starttime="20201202 12:18:48.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:53.034" starttime="20201202 12:18:53.034"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.034" starttime="20201202 12:18:48.710"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.034" starttime="20201202 12:18:48.709"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:18:53.035" critical="yes" starttime="20201202 12:18:48.667"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:53.042" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:53.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:53.045" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:18:53.045" starttime="20201202 12:18:53.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.046" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:18:53.046" starttime="20201202 12:18:53.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:53.047" starttime="20201202 12:18:53.046"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.047" starttime="20201202 12:18:53.039"></status>
</kw>
<msg timestamp="20201202 12:18:53.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:53.048" starttime="20201202 12:18:53.038"></status>
</kw>
<msg timestamp="20201202 12:18:53.048" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:18:53.048" starttime="20201202 12:18:53.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:18:53.049" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:18:53.049" starttime="20201202 12:18:53.048"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:53.053" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:53.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:53.116" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:53.116" starttime="20201202 12:18:53.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.118" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:53.118" starttime="20201202 12:18:53.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:53.119" starttime="20201202 12:18:53.119"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.120" starttime="20201202 12:18:53.051"></status>
</kw>
<msg timestamp="20201202 12:18:53.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:53.120" starttime="20201202 12:18:53.050"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.120" starttime="20201202 12:18:53.050"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.120" starttime="20201202 12:18:53.049"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.120" starttime="20201202 12:18:53.037"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.121" starttime="20201202 12:18:53.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:53.128" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:53.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:53.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:53.132" starttime="20201202 12:18:53.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.133" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:53.133" starttime="20201202 12:18:53.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:53.134" starttime="20201202 12:18:53.133"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.134" starttime="20201202 12:18:53.125"></status>
</kw>
<msg timestamp="20201202 12:18:53.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:53.134" starttime="20201202 12:18:53.124"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.135" starttime="20201202 12:18:53.123"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:53.141" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:53.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:53.142" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:18:53.142" starttime="20201202 12:18:53.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.143" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:18:53.144" starttime="20201202 12:18:53.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:53.144" starttime="20201202 12:18:53.144"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.145" starttime="20201202 12:18:53.137"></status>
</kw>
<msg timestamp="20201202 12:18:53.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:53.145" starttime="20201202 12:18:53.136"></status>
</kw>
<msg timestamp="20201202 12:18:53.145" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:18:53.145" starttime="20201202 12:18:53.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:18:53.146" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:18:53.146" starttime="20201202 12:18:53.146"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:53.152" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:53.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:53.170" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:53.170" starttime="20201202 12:18:53.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.172" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:53.172" starttime="20201202 12:18:53.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:53.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:53.173" starttime="20201202 12:18:53.172"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.173" starttime="20201202 12:18:53.148"></status>
</kw>
<msg timestamp="20201202 12:18:53.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:53.173" starttime="20201202 12:18:53.148"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.174" starttime="20201202 12:18:53.147"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.174" starttime="20201202 12:18:53.146"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.174" starttime="20201202 12:18:53.135"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:53.174" starttime="20201202 12:18:53.135"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:53.178" level="INFO">Running command 'ozone sh key list 88598-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:56.996" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 12:18:56.996" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:56.996" starttime="20201202 12:18:53.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:56.998" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201202 12:18:56.998" starttime="20201202 12:18:56.997"></status>
</kw>
<msg timestamp="20201202 12:18:56.998" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:18:56.998" starttime="20201202 12:18:53.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201202 12:18:56.999" starttime="20201202 12:18:56.998"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:56.999" starttime="20201202 12:18:53.123"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:56.999" starttime="20201202 12:18:53.121"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:18:57.000" critical="yes" starttime="20201202 12:18:53.036"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:57.006" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:57.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:57.010" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:18:57.010" starttime="20201202 12:18:57.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.011" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:18:57.011" starttime="20201202 12:18:57.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:57.012" starttime="20201202 12:18:57.011"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.012" starttime="20201202 12:18:57.003"></status>
</kw>
<msg timestamp="20201202 12:18:57.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:57.013" starttime="20201202 12:18:57.003"></status>
</kw>
<msg timestamp="20201202 12:18:57.013" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:18:57.013" starttime="20201202 12:18:57.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:18:57.014" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:18:57.014" starttime="20201202 12:18:57.013"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:57.019" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:57.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:57.040" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:57.040" starttime="20201202 12:18:57.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.041" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:57.041" starttime="20201202 12:18:57.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:57.042" starttime="20201202 12:18:57.041"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.042" starttime="20201202 12:18:57.016"></status>
</kw>
<msg timestamp="20201202 12:18:57.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:57.043" starttime="20201202 12:18:57.015"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.043" starttime="20201202 12:18:57.014"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.043" starttime="20201202 12:18:57.014"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.043" starttime="20201202 12:18:57.002"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.043" starttime="20201202 12:18:57.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:57.049" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:57.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:57.053" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:57.054" starttime="20201202 12:18:57.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.055" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:57.055" starttime="20201202 12:18:57.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:57.056" starttime="20201202 12:18:57.055"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.056" starttime="20201202 12:18:57.046"></status>
</kw>
<msg timestamp="20201202 12:18:57.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:57.057" starttime="20201202 12:18:57.045"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.057" starttime="20201202 12:18:57.045"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:57.065" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:57.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:57.068" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:18:57.068" starttime="20201202 12:18:57.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.069" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:18:57.069" starttime="20201202 12:18:57.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:57.070" starttime="20201202 12:18:57.069"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.070" starttime="20201202 12:18:57.061"></status>
</kw>
<msg timestamp="20201202 12:18:57.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:57.071" starttime="20201202 12:18:57.058"></status>
</kw>
<msg timestamp="20201202 12:18:57.071" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:18:57.071" starttime="20201202 12:18:57.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:18:57.072" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:18:57.072" starttime="20201202 12:18:57.071"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:57.077" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:18:57.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:18:57.096" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:18:57.096" starttime="20201202 12:18:57.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.098" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:18:57.098" starttime="20201202 12:18:57.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:18:57.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:18:57.099" starttime="20201202 12:18:57.098"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.099" starttime="20201202 12:18:57.074"></status>
</kw>
<msg timestamp="20201202 12:18:57.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:18:57.099" starttime="20201202 12:18:57.073"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.100" starttime="20201202 12:18:57.073"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.100" starttime="20201202 12:18:57.072"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.100" starttime="20201202 12:18:57.057"></status>
</kw>
<status status="PASS" endtime="20201202 12:18:57.100" starttime="20201202 12:18:57.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:18:57.106" level="INFO">Running command 'ozone sh bucket info 88598-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:01.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:01.249" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:01.249" starttime="20201202 12:18:57.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:01.250" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:16:33.913Z",
  "modificationTime" : "2020-12-02T12:16:55.394Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201202 12:19:01.250" starttime="20201202 12:19:01.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:01.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:01.251" starttime="20201202 12:19:01.251"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:01.252" starttime="20201202 12:18:57.101"></status>
</kw>
<msg timestamp="20201202 12:19:01.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:01.252" starttime="20201202 12:18:57.101"></status>
</kw>
<msg timestamp="20201202 12:19:01.252" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:01.252" starttime="20201202 12:18:57.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201202 12:19:01.253" starttime="20201202 12:19:01.252"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201202 12:19:01.253" starttime="20201202 12:19:01.253"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:01.257" level="INFO">Running command 'ozone sh key list 88598-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:05.470" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 12:19:05.470" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:05.470" starttime="20201202 12:19:01.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:05.472" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201202 12:19:05.472" starttime="20201202 12:19:05.471"></status>
</kw>
<msg timestamp="20201202 12:19:05.472" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:05.472" starttime="20201202 12:19:01.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201202 12:19:05.473" starttime="20201202 12:19:05.473"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:05.474" starttime="20201202 12:18:57.044"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:05.474" starttime="20201202 12:18:57.044"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:19:05.474" critical="yes" starttime="20201202 12:18:57.001"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:05.483" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:05.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:05.486" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:19:05.486" starttime="20201202 12:19:05.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:05.488" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:19:05.488" starttime="20201202 12:19:05.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:05.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:05.489" starttime="20201202 12:19:05.488"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:05.489" starttime="20201202 12:19:05.478"></status>
</kw>
<msg timestamp="20201202 12:19:05.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:05.489" starttime="20201202 12:19:05.478"></status>
</kw>
<msg timestamp="20201202 12:19:05.490" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:19:05.490" starttime="20201202 12:19:05.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:19:05.491" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:19:05.491" starttime="20201202 12:19:05.490"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:05.496" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:05.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:05.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:19:05.512" starttime="20201202 12:19:05.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:05.514" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:19:05.514" starttime="20201202 12:19:05.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:05.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:05.515" starttime="20201202 12:19:05.514"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:05.515" starttime="20201202 12:19:05.493"></status>
</kw>
<msg timestamp="20201202 12:19:05.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:05.515" starttime="20201202 12:19:05.492"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:05.515" starttime="20201202 12:19:05.492"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:05.516" starttime="20201202 12:19:05.491"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:05.516" starttime="20201202 12:19:05.477"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:05.516" starttime="20201202 12:19:05.476"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:05.521" level="INFO">Running command 'ozone sh bucket link 88598-target/loop1 88598-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:10.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:10.110" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:10.110" starttime="20201202 12:19:05.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:10.111" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:19:10.111" starttime="20201202 12:19:10.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:10.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:10.112" starttime="20201202 12:19:10.111"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:10.112" starttime="20201202 12:19:05.517"></status>
</kw>
<msg timestamp="20201202 12:19:10.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:10.112" starttime="20201202 12:19:05.517"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:10.113" starttime="20201202 12:19:05.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:10.117" level="INFO">Running command 'ozone sh bucket link 88598-target/loop2 88598-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:14.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:14.256" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:14.256" starttime="20201202 12:19:10.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:14.257" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:19:14.258" starttime="20201202 12:19:14.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:14.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:14.259" starttime="20201202 12:19:14.258"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:14.259" starttime="20201202 12:19:10.114"></status>
</kw>
<msg timestamp="20201202 12:19:14.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:14.259" starttime="20201202 12:19:10.114"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:14.260" starttime="20201202 12:19:10.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:14.265" level="INFO">Running command 'ozone sh bucket link 88598-target/loop3 88598-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:18.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:18.603" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:18.603" starttime="20201202 12:19:14.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:18.604" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:19:18.604" starttime="20201202 12:19:18.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:18.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:18.605" starttime="20201202 12:19:18.605"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:18.606" starttime="20201202 12:19:14.261"></status>
</kw>
<msg timestamp="20201202 12:19:18.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:18.606" starttime="20201202 12:19:14.261"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:18.606" starttime="20201202 12:19:14.260"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:18.611" level="INFO">Running command 'ozone sh key list 88598-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:22.663" level="INFO">${rc} = 255</msg>
<msg timestamp="20201202 12:19:22.663" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:22.663" starttime="20201202 12:19:18.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:22.664" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201202 12:19:22.664" starttime="20201202 12:19:22.663"></status>
</kw>
<msg timestamp="20201202 12:19:22.665" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:22.665" starttime="20201202 12:19:18.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201202 12:19:22.665" starttime="20201202 12:19:22.665"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:19:22.666" critical="yes" starttime="20201202 12:19:05.475"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:22.676" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:22.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:22.680" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:19:22.680" starttime="20201202 12:19:22.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:22.682" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:19:22.682" starttime="20201202 12:19:22.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:22.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:22.683" starttime="20201202 12:19:22.682"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:22.683" starttime="20201202 12:19:22.672"></status>
</kw>
<msg timestamp="20201202 12:19:22.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:22.684" starttime="20201202 12:19:22.671"></status>
</kw>
<msg timestamp="20201202 12:19:22.684" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:19:22.684" starttime="20201202 12:19:22.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:19:22.685" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:19:22.685" starttime="20201202 12:19:22.684"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:22.691" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:22.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:22.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:19:22.710" starttime="20201202 12:19:22.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:22.711" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:19:22.711" starttime="20201202 12:19:22.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:22.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:22.712" starttime="20201202 12:19:22.711"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:22.712" starttime="20201202 12:19:22.687"></status>
</kw>
<msg timestamp="20201202 12:19:22.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:22.713" starttime="20201202 12:19:22.686"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:22.713" starttime="20201202 12:19:22.686"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:22.713" starttime="20201202 12:19:22.685"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:22.713" starttime="20201202 12:19:22.668"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:22.713" starttime="20201202 12:19:22.668"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:22.718" level="INFO">Running command 'ozone sh bucket link 88598-source/bucket1 88598-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:26.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:26.683" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:26.683" starttime="20201202 12:19:22.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:26.684" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:19:26.685" starttime="20201202 12:19:26.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:26.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:26.685" starttime="20201202 12:19:26.685"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:26.686" starttime="20201202 12:19:22.715"></status>
</kw>
<msg timestamp="20201202 12:19:26.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:26.686" starttime="20201202 12:19:22.714"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:26.686" starttime="20201202 12:19:22.714"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:26.691" level="INFO">Running command 'ozone sh key put 88598-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:33.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:33.068" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:33.068" starttime="20201202 12:19:26.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:33.069" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:19:33.069" starttime="20201202 12:19:33.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:33.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:33.070" starttime="20201202 12:19:33.069"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:33.070" starttime="20201202 12:19:26.688"></status>
</kw>
<msg timestamp="20201202 12:19:33.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:33.071" starttime="20201202 12:19:26.687"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:33.071" starttime="20201202 12:19:26.687"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201202 12:19:33.073" level="INFO">${postfix} = 05201</msg>
<status status="PASS" endtime="20201202 12:19:33.073" starttime="20201202 12:19:33.072"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201202 12:19:33.074" level="INFO">${tmpfile} = /tmp/tempkey-05201</msg>
<status status="PASS" endtime="20201202 12:19:33.074" starttime="20201202 12:19:33.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:33.078" level="INFO">Running command 'ozone sh key get -f 88598-target/link1/key3 /tmp/tempkey-05201 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:39.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:39.417" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:39.417" starttime="20201202 12:19:33.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:39.419" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:19:39.419" starttime="20201202 12:19:39.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:39.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:39.420" starttime="20201202 12:19:39.419"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.420" starttime="20201202 12:19:33.075"></status>
</kw>
<msg timestamp="20201202 12:19:39.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:39.421" starttime="20201202 12:19:33.075"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.421" starttime="20201202 12:19:33.074"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201202 12:19:39.424" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-05201 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:39.427" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201202 12:19:39.427" starttime="20201202 12:19:39.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:39.433" level="INFO">Running command 'rm -f /tmp/tempkey-05201 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:39.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:39.436" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:19:39.436" starttime="20201202 12:19:39.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:39.437" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:19:39.437" starttime="20201202 12:19:39.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:39.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:39.438" starttime="20201202 12:19:39.438"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.439" starttime="20201202 12:19:39.429"></status>
</kw>
<msg timestamp="20201202 12:19:39.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:39.439" starttime="20201202 12:19:39.429"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.439" starttime="20201202 12:19:39.428"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201202 12:19:39.440" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201202 12:19:39.440" starttime="20201202 12:19:39.439"></status>
</kw>
<msg timestamp="20201202 12:19:39.440" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201202 12:19:39.440" starttime="20201202 12:19:33.072"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201202 12:19:39.441" starttime="20201202 12:19:39.441"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.441" starttime="20201202 12:19:33.071"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:19:39.442" critical="yes" starttime="20201202 12:19:22.667"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:39.451" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:39.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:39.453" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201202 12:19:39.453" starttime="20201202 12:19:39.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:39.454" level="INFO">scm</msg>
<status status="PASS" endtime="20201202 12:19:39.454" starttime="20201202 12:19:39.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:39.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:39.456" starttime="20201202 12:19:39.454"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.456" starttime="20201202 12:19:39.446"></status>
</kw>
<msg timestamp="20201202 12:19:39.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:39.456" starttime="20201202 12:19:39.446"></status>
</kw>
<msg timestamp="20201202 12:19:39.456" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201202 12:19:39.456" starttime="20201202 12:19:39.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201202 12:19:39.457" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201202 12:19:39.457" starttime="20201202 12:19:39.457"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:39.462" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:39.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:39.478" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201202 12:19:39.478" starttime="20201202 12:19:39.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:39.480" level="INFO"></msg>
<status status="PASS" endtime="20201202 12:19:39.480" starttime="20201202 12:19:39.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:39.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:39.481" starttime="20201202 12:19:39.480"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.481" starttime="20201202 12:19:39.459"></status>
</kw>
<msg timestamp="20201202 12:19:39.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:39.481" starttime="20201202 12:19:39.459"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.482" starttime="20201202 12:19:39.458"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.482" starttime="20201202 12:19:39.457"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.482" starttime="20201202 12:19:39.444"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:39.482" starttime="20201202 12:19:39.444"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:39.487" level="INFO">Running command 'ozone sh bucket delete 88598-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:43.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:43.655" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:43.655" starttime="20201202 12:19:39.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:43.656" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201202 12:19:43.656" starttime="20201202 12:19:43.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:43.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:43.657" starttime="20201202 12:19:43.656"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:43.657" starttime="20201202 12:19:39.483"></status>
</kw>
<msg timestamp="20201202 12:19:43.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:43.658" starttime="20201202 12:19:39.483"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:43.658" starttime="20201202 12:19:39.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:43.662" level="INFO">Running command 'ozone sh bucket list 88598-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:47.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:47.631" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:47.631" starttime="20201202 12:19:43.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:47.632" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:18:44.292Z",
  "modificationTime" : "2020-12-02T12:18:44.292Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:16:59.394Z",
  "modificationTime" : "2020-12-02T12:16:59.394Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:16:33.913Z",
  "modificationTime" : "2020-12-02T12:16:55.394Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:18:35.594Z",
  "modificationTime" : "2020-12-02T12:18:35.594Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:19:26.338Z",
  "modificationTime" : "2020-12-02T12:19:26.338Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:19:18.372Z",
  "modificationTime" : "2020-12-02T12:19:18.372Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:19:09.973Z",
  "modificationTime" : "2020-12-02T12:19:09.973Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:19:13.954Z",
  "modificationTime" : "2020-12-02T12:19:13.954Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:16:25.543Z",
  "modificationTime" : "2020-12-02T12:16:51.363Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "88598-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-02T12:16:29.776Z",
  "modificationTime" : "2020-12-02T12:16:29.776Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "88598-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201202 12:19:47.633" starttime="20201202 12:19:47.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:47.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:47.633" starttime="20201202 12:19:47.633"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:47.634" starttime="20201202 12:19:43.659"></status>
</kw>
<msg timestamp="20201202 12:19:47.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:47.634" starttime="20201202 12:19:43.659"></status>
</kw>
<msg timestamp="20201202 12:19:47.634" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201202 12:19:47.635" starttime="20201202 12:19:43.658"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201202 12:19:47.635" starttime="20201202 12:19:47.635"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201202 12:19:47.641" level="INFO">Running command 'ozone sh key list 88598-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201202 12:19:51.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20201202 12:19:51.975" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201202 12:19:51.975" starttime="20201202 12:19:47.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201202 12:19:51.976" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201202 12:19:51.976" starttime="20201202 12:19:51.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201202 12:19:51.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201202 12:19:51.977" starttime="20201202 12:19:51.977"></status>
</kw>
<status status="PASS" endtime="20201202 12:19:51.978" starttime="20201202 12:19:47.636"></status>
</kw>
<msg timestamp="20201202 12:19:51.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201202 12:19:51.978" starttime="20201202 12:19:47.636"></status>
</kw>
<msg timestamp="20201202 12:19:51.978" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201202 12:19:51.978" starttime="20201202 12:19:47.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201202 12:19:51.979" starttime="20201202 12:19:51.979"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201202 12:19:51.979" critical="yes" starttime="20201202 12:19:39.442"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201202 12:19:51.984" starttime="20201202 12:15:55.341"></status>
</suite>
<status status="PASS" elapsedtime="269578" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
