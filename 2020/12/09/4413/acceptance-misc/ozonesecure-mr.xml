<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201209 02:27:33.027" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:11.728" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:16.494" level="INFO">${rc} = 255</msg>
<msg timestamp="20201209 02:23:16.494" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:16.494" starttime="20201209 02:23:11.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:16.495" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 02:23:16.495" starttime="20201209 02:23:16.494"></status>
</kw>
<msg timestamp="20201209 02:23:16.495" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:16.496" starttime="20201209 02:23:11.724"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:16.502" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:20.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:20.310" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:20.310" starttime="20201209 02:23:16.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:20.311" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201209 02:23:20.311" starttime="20201209 02:23:20.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:20.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:20.312" starttime="20201209 02:23:20.312"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:20.312" starttime="20201209 02:23:16.498"></status>
</kw>
<msg timestamp="20201209 02:23:20.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:20.313" starttime="20201209 02:23:16.498"></status>
</kw>
<msg timestamp="20201209 02:23:20.313" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:20.313" starttime="20201209 02:23:16.497"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201209 02:23:20.314" starttime="20201209 02:23:20.313"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:20.314" starttime="20201209 02:23:16.496"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:20.314" starttime="20201209 02:23:16.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:20.319" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:24.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:24.010" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:24.010" starttime="20201209 02:23:20.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:24.012" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201209 02:23:24.012" starttime="20201209 02:23:24.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:24.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:24.013" starttime="20201209 02:23:24.012"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:24.013" starttime="20201209 02:23:20.316"></status>
</kw>
<msg timestamp="20201209 02:23:24.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:24.013" starttime="20201209 02:23:20.316"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:24.013" starttime="20201209 02:23:20.315"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:24.014" starttime="20201209 02:23:20.315"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:24.014" starttime="20201209 02:23:20.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201209 02:23:24.014" starttime="20201209 02:23:24.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:24.018" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:27.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:27.819" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:27.819" starttime="20201209 02:23:24.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:27.820" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T02:23:23.811Z",
  "modificationTime" : "2020-12-09T02:23:23.811Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201209 02:23:27.820" starttime="20201209 02:23:27.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:27.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:27.821" starttime="20201209 02:23:27.820"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:27.821" starttime="20201209 02:23:24.015"></status>
</kw>
<msg timestamp="20201209 02:23:27.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:27.822" starttime="20201209 02:23:24.015"></status>
</kw>
<msg timestamp="20201209 02:23:27.822" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:27.822" starttime="20201209 02:23:24.014"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201209 02:23:27.823" starttime="20201209 02:23:27.822"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 02:23:27.827" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 02:23:27.827" starttime="20201209 02:23:27.827"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:23:27.828" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 02:23:27.828" starttime="20201209 02:23:27.827"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:27.828" starttime="20201209 02:23:27.826"></status>
</kw>
<msg timestamp="20201209 02:23:27.829" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 02:23:27.829" starttime="20201209 02:23:27.825"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:27.829" starttime="20201209 02:23:27.825"></status>
</kw>
<msg timestamp="20201209 02:23:27.829" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201209 02:23:27.829" starttime="20201209 02:23:27.824"></status>
</kw>
<msg timestamp="20201209 02:23:27.829" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201209 02:23:27.830" starttime="20201209 02:23:27.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:27.836" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:31.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:31.769" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:31.769" starttime="20201209 02:23:27.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:31.771" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201209 02:23:31.771" starttime="20201209 02:23:31.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:31.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:31.772" starttime="20201209 02:23:31.771"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:31.772" starttime="20201209 02:23:27.831"></status>
</kw>
<msg timestamp="20201209 02:23:31.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:31.772" starttime="20201209 02:23:27.830"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:31.772" starttime="20201209 02:23:27.830"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:31.777" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:40.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:40.041" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:40.041" starttime="20201209 02:23:31.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:40.042" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201209 02:23:40.042" starttime="20201209 02:23:40.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:40.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:40.043" starttime="20201209 02:23:40.042"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:40.043" starttime="20201209 02:23:31.774"></status>
</kw>
<msg timestamp="20201209 02:23:40.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:40.044" starttime="20201209 02:23:31.773"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:40.044" starttime="20201209 02:23:31.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:40.048" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:45.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:45.837" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:45.837" starttime="20201209 02:23:40.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:45.839" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201209 02:23:45.839" starttime="20201209 02:23:45.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:45.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:45.840" starttime="20201209 02:23:45.839"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:45.840" starttime="20201209 02:23:40.045"></status>
</kw>
<msg timestamp="20201209 02:23:45.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:45.840" starttime="20201209 02:23:40.045"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:45.840" starttime="20201209 02:23:40.044"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:45.845" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:51.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:51.504" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:51.505" starttime="20201209 02:23:45.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:51.506" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201209 02:23:51.506" starttime="20201209 02:23:51.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:51.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:51.507" starttime="20201209 02:23:51.506"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:51.507" starttime="20201209 02:23:45.842"></status>
</kw>
<msg timestamp="20201209 02:23:51.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:51.507" starttime="20201209 02:23:45.841"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:51.508" starttime="20201209 02:23:45.841"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 02:23:51.508" critical="yes" starttime="20201209 02:23:11.722"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 02:23:51.513" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 02:23:51.513" starttime="20201209 02:23:51.513"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:23:51.514" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 02:23:51.514" starttime="20201209 02:23:51.513"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:51.514" starttime="20201209 02:23:51.512"></status>
</kw>
<msg timestamp="20201209 02:23:51.514" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 02:23:51.514" starttime="20201209 02:23:51.512"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:51.515" starttime="20201209 02:23:51.511"></status>
</kw>
<msg timestamp="20201209 02:23:51.515" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 02:23:51.515" starttime="20201209 02:23:51.510"></status>
</kw>
<msg timestamp="20201209 02:23:51.515" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 02:23:51.515" starttime="20201209 02:23:51.509"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:51.519" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:55.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:55.072" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:55.072" starttime="20201209 02:23:51.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:55.073" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201209 02:23:55.073" starttime="20201209 02:23:55.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:55.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:55.074" starttime="20201209 02:23:55.073"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:55.074" starttime="20201209 02:23:51.516"></status>
</kw>
<msg timestamp="20201209 02:23:55.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:55.074" starttime="20201209 02:23:51.516"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:55.075" starttime="20201209 02:23:51.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:55.079" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:58.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:58.948" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201209 02:23:58.948" starttime="20201209 02:23:55.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:58.949" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201209 02:23:58.950" starttime="20201209 02:23:58.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:58.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:58.950" starttime="20201209 02:23:58.950"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:58.951" starttime="20201209 02:23:55.076"></status>
</kw>
<msg timestamp="20201209 02:23:58.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:58.951" starttime="20201209 02:23:55.075"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:58.951" starttime="20201209 02:23:55.075"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 02:23:58.952" critical="yes" starttime="20201209 02:23:51.509"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201209 02:23:58.953" starttime="20201209 02:23:11.660"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 02:26:02.069" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 02:26:02.069" starttime="20201209 02:26:02.069"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:26:02.070" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 02:26:02.070" starttime="20201209 02:26:02.069"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:02.070" starttime="20201209 02:26:02.068"></status>
</kw>
<msg timestamp="20201209 02:26:02.070" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 02:26:02.070" starttime="20201209 02:26:02.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 02:26:02.071" starttime="20201209 02:26:02.071"></status>
</kw>
<msg timestamp="20201209 02:26:02.072" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 02:26:02.072" starttime="20201209 02:26:02.071"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:02.072" starttime="20201209 02:26:02.067"></status>
</kw>
<msg timestamp="20201209 02:26:02.072" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 02:26:02.072" starttime="20201209 02:26:02.066"></status>
</kw>
<msg timestamp="20201209 02:26:02.072" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 02:26:02.072" starttime="20201209 02:26:02.065"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 02:26:02.073" level="INFO">${random} = 17824</msg>
<status status="PASS" endtime="20201209 02:26:02.073" starttime="20201209 02:26:02.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:26:02.079" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-17824 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:26:05.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:26:05.858" level="INFO">${output} = 2020-12-09 02:26:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:26:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201209 02:26:05.858" starttime="20201209 02:26:02.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:26:05.859" level="INFO">2020-12-09 02:26:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:26:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 02:26:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 02:26:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 02:26:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-05253DCF543B-&gt;ca2305b6-64df-4465-9721-9f7853f2d4da
2020-12-09 02:26:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201209 02:26:05.859" starttime="20201209 02:26:05.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:26:05.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:26:05.860" starttime="20201209 02:26:05.859"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:05.860" starttime="20201209 02:26:02.074"></status>
</kw>
<msg timestamp="20201209 02:26:05.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:26:05.860" starttime="20201209 02:26:02.074"></status>
</kw>
<msg timestamp="20201209 02:26:05.861" level="INFO">${result} = 2020-12-09 02:26:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:26:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201209 02:26:05.861" starttime="20201209 02:26:02.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:26:05.866" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:26:07.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:26:07.995" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 02:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 02:26 ofs://om/volume1/bucket1/ozone-17824
-rw-...</msg>
<status status="PASS" endtime="20201209 02:26:07.995" starttime="20201209 02:26:05.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:26:07.996" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 02:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 02:26 ofs://om/volume1/bucket1/ozone-17824
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 02:24 ofs://om/volume1/bucket1/ozone-50699
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 02:23 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 02:25 ofs://om/volume1/bucket1/wordcount-02.txt</msg>
<status status="PASS" endtime="20201209 02:26:07.996" starttime="20201209 02:26:07.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:26:07.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:26:07.997" starttime="20201209 02:26:07.997"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:07.998" starttime="20201209 02:26:05.863"></status>
</kw>
<msg timestamp="20201209 02:26:07.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:26:07.998" starttime="20201209 02:26:05.863"></status>
</kw>
<msg timestamp="20201209 02:26:07.998" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 02:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 02:26 ofs://om/volume1/bucket1/ozone-17824
-rw-...</msg>
<status status="PASS" endtime="20201209 02:26:07.998" starttime="20201209 02:26:05.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201209 02:26:07.999" starttime="20201209 02:26:07.998"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201209 02:26:07.999" critical="yes" starttime="20201209 02:26:02.064"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201209 02:26:08.000" starttime="20201209 02:26:02.001"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 02:24:28.699" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 02:24:28.699" starttime="20201209 02:24:28.698"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:24:28.699" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 02:24:28.699" starttime="20201209 02:24:28.699"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:28.700" starttime="20201209 02:24:28.698"></status>
</kw>
<msg timestamp="20201209 02:24:28.700" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 02:24:28.700" starttime="20201209 02:24:28.697"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:28.700" starttime="20201209 02:24:28.696"></status>
</kw>
<msg timestamp="20201209 02:24:28.700" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 02:24:28.700" starttime="20201209 02:24:28.696"></status>
</kw>
<msg timestamp="20201209 02:24:28.700" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 02:24:28.701" starttime="20201209 02:24:28.695"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 02:24:28.701" level="INFO">${random} = 50699</msg>
<status status="PASS" endtime="20201209 02:24:28.701" starttime="20201209 02:24:28.701"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:24:28.706" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-50699 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:24:32.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:24:32.861" level="INFO">${output} = 2020-12-09 02:24:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:24:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201209 02:24:32.861" starttime="20201209 02:24:28.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:24:32.863" level="INFO">2020-12-09 02:24:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:24:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 02:24:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 02:24:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 02:24:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EE12372D75B4-&gt;ca2305b6-64df-4465-9721-9f7853f2d4da
2020-12-09 02:24:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201209 02:24:32.863" starttime="20201209 02:24:32.862"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:24:32.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:24:32.865" starttime="20201209 02:24:32.864"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:32.865" starttime="20201209 02:24:28.702"></status>
</kw>
<msg timestamp="20201209 02:24:32.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:24:32.865" starttime="20201209 02:24:28.702"></status>
</kw>
<msg timestamp="20201209 02:24:32.865" level="INFO">${result} = 2020-12-09 02:24:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:24:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201209 02:24:32.865" starttime="20201209 02:24:28.701"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:24:32.871" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:24:35.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:24:35.196" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 02:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 02:24 o3fs://bucket1.volume1.om/ozone-50699
dr...</msg>
<status status="PASS" endtime="20201209 02:24:35.196" starttime="20201209 02:24:32.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:24:35.197" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 02:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 02:24 o3fs://bucket1.volume1.om/ozone-50699
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 02:23 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 02:24:35.197" starttime="20201209 02:24:35.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:24:35.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:24:35.198" starttime="20201209 02:24:35.198"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:35.198" starttime="20201209 02:24:32.868"></status>
</kw>
<msg timestamp="20201209 02:24:35.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:24:35.199" starttime="20201209 02:24:32.866"></status>
</kw>
<msg timestamp="20201209 02:24:35.199" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 02:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 02:24 o3fs://bucket1.volume1.om/ozone-50699
dr...</msg>
<status status="PASS" endtime="20201209 02:24:35.199" starttime="20201209 02:24:32.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201209 02:24:35.200" starttime="20201209 02:24:35.199"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201209 02:24:35.200" critical="yes" starttime="20201209 02:24:28.694"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201209 02:24:35.201" starttime="20201209 02:24:28.631"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:24:23.229" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:24:23.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:24:23.231" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201209 02:24:23.231" starttime="20201209 02:24:23.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:24:23.232" level="INFO">rm</msg>
<status status="PASS" endtime="20201209 02:24:23.232" starttime="20201209 02:24:23.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:24:23.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:24:23.233" starttime="20201209 02:24:23.232"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:23.233" starttime="20201209 02:24:23.223"></status>
</kw>
<msg timestamp="20201209 02:24:23.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:24:23.234" starttime="20201209 02:24:23.223"></status>
</kw>
<msg timestamp="20201209 02:24:23.234" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201209 02:24:23.234" starttime="20201209 02:24:23.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201209 02:24:23.235" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201209 02:24:23.235" starttime="20201209 02:24:23.234"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:24:23.242" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:24:23.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:24:23.255" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 02:24:23.255" starttime="20201209 02:24:23.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:24:23.256" level="INFO"></msg>
<status status="PASS" endtime="20201209 02:24:23.256" starttime="20201209 02:24:23.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:24:23.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:24:23.257" starttime="20201209 02:24:23.257"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:23.257" starttime="20201209 02:24:23.237"></status>
</kw>
<msg timestamp="20201209 02:24:23.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:24:23.258" starttime="20201209 02:24:23.237"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:23.258" starttime="20201209 02:24:23.236"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:23.258" starttime="20201209 02:24:23.235"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:23.258" starttime="20201209 02:24:23.220"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 02:24:23.258" critical="yes" starttime="20201209 02:24:23.220"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201209 02:24:23.259" starttime="20201209 02:24:23.157"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:06.255" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:06.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:06.258" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201209 02:23:06.258" starttime="20201209 02:23:06.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:06.260" level="INFO">om</msg>
<status status="PASS" endtime="20201209 02:23:06.260" starttime="20201209 02:23:06.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:06.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:06.261" starttime="20201209 02:23:06.260"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:06.261" starttime="20201209 02:23:06.250"></status>
</kw>
<msg timestamp="20201209 02:23:06.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:06.261" starttime="20201209 02:23:06.250"></status>
</kw>
<msg timestamp="20201209 02:23:06.261" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201209 02:23:06.262" starttime="20201209 02:23:06.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201209 02:23:06.262" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201209 02:23:06.262" starttime="20201209 02:23:06.262"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:23:06.268" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:23:06.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:23:06.279" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 02:23:06.279" starttime="20201209 02:23:06.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:23:06.280" level="INFO"></msg>
<status status="PASS" endtime="20201209 02:23:06.280" starttime="20201209 02:23:06.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:23:06.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:23:06.281" starttime="20201209 02:23:06.280"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:06.281" starttime="20201209 02:23:06.264"></status>
</kw>
<msg timestamp="20201209 02:23:06.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:23:06.281" starttime="20201209 02:23:06.264"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:06.281" starttime="20201209 02:23:06.263"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:06.281" starttime="20201209 02:23:06.263"></status>
</kw>
<status status="PASS" endtime="20201209 02:23:06.282" starttime="20201209 02:23:06.248"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 02:23:06.282" critical="yes" starttime="20201209 02:23:06.247"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201209 02:23:06.283" starttime="20201209 02:23:06.188"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:26:13.419" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:26:13.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:26:13.425" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:26:13.425" starttime="20201209 02:26:13.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:26:13.426" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:26:13.426" starttime="20201209 02:26:13.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:26:13.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:26:13.426" starttime="20201209 02:26:13.426"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:13.427" starttime="20201209 02:26:13.413"></status>
</kw>
<msg timestamp="20201209 02:26:13.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:26:13.427" starttime="20201209 02:26:13.413"></status>
</kw>
<msg timestamp="20201209 02:26:13.427" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:26:13.427" starttime="20201209 02:26:13.412"></status>
</kw>
<msg timestamp="20201209 02:26:13.427" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:26:13.427" starttime="20201209 02:26:13.412"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 02:26:13.432" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 02:26:13.432" starttime="20201209 02:26:13.432"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:26:13.433" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 02:26:13.433" starttime="20201209 02:26:13.433"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:13.433" starttime="20201209 02:26:13.430"></status>
</kw>
<msg timestamp="20201209 02:26:13.433" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 02:26:13.433" starttime="20201209 02:26:13.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 02:26:13.434" starttime="20201209 02:26:13.434"></status>
</kw>
<msg timestamp="20201209 02:26:13.434" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 02:26:13.435" starttime="20201209 02:26:13.434"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:13.435" starttime="20201209 02:26:13.429"></status>
</kw>
<msg timestamp="20201209 02:26:13.435" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 02:26:13.435" starttime="20201209 02:26:13.428"></status>
</kw>
<msg timestamp="20201209 02:26:13.435" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 02:26:13.435" starttime="20201209 02:26:13.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:26:13.440" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:26:50.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:26:50.106" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 02:26:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:26:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201209 02:26:50.106" starttime="20201209 02:26:13.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:26:50.108" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-09 02:26:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:26:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 02:26:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 02:26:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 02:26:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-64B681C163F9-&gt;ca2305b6-64df-4465-9721-9f7853f2d4da
2020-12-09 02:26:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-09 02:26:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-12-09 02:26:17 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2020-12-09 02:26:17 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480777721, maxDate=1608085577721, sequenceNumber=3, masterKeyId=2))
2020-12-09 02:26:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fe b6 c8 aa e4 2e 38 fe be fa ca e6 2e 40 03 48 01 5a 0d 33 30 39 34 33 35 30 38 33 33 31 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-09 02:26:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480777721, maxDate=1608085577721, sequenceNumber=3, masterKeyId=2)
2020-12-09 02:26:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 02:26:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 02:26:20 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 02:26:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607480536114_0003
2020-12-09 02:26:21 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fe b6 c8 aa e4 2e 38 fe be fa ca e6 2e 40 03 48 01 5a 0d 33 30 39 34 33 35 30 38 33 33 31 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480777721, maxDate=1608085577721, sequenceNumber=3, masterKeyId=2)]
2020-12-09 02:26:21 INFO  Configuration:2795 - resource-types.xml not found
2020-12-09 02:26:21 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-09 02:26:21 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-09 02:26:21 INFO  YarnClientImpl:329 - Submitted application application_1607480536114_0003
2020-12-09 02:26:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607480536114_0003/
2020-12-09 02:26:21 INFO  Job:1619 - Running job: job_1607480536114_0003
2020-12-09 02:26:30 INFO  Job:1640 - Job job_1607480536114_0003 running in uber mode : false
2020-12-09 02:26:30 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 02:26:42 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 02:26:44 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 02:26:48 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 02:26:49 INFO  Job:1658 - Job job_1607480536114_0003 completed successfully
2020-12-09 02:26:49 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065765
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53114
		Total time spent by all reduces in occupied slots (ms)=8204
		Total time spent by all map tasks (ms)=26557
		Total time spent by all reduce tasks (ms)=4102
		Total vcore-milliseconds taken by all map tasks=26557
		Total vcore-milliseconds taken by all reduce tasks=4102
		Total megabyte-milliseconds taken by all map tasks=54388736
		Total megabyte-milliseconds taken by all reduce tasks=8400896
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1527
		CPU time spent (ms)=8230
		Physical memory (bytes) snapshot=1584828416
		Virtual memory (bytes) snapshot=14036848640
		Total committed heap usage (bytes)=1372585984
		Peak Map Physical memory (bytes)=543657984
		Peak Map Virtual memory (bytes)=3510874112
		Peak Reduce Physical memory (bytes)=274116608
		Peak Reduce Virtual memory (bytes)=3506987008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.458 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201209 02:26:50.108" starttime="20201209 02:26:50.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:26:50.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:26:50.108" starttime="20201209 02:26:50.108"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.109" starttime="20201209 02:26:13.436"></status>
</kw>
<msg timestamp="20201209 02:26:50.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:26:50.109" starttime="20201209 02:26:13.436"></status>
</kw>
<msg timestamp="20201209 02:26:50.110" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 02:26:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:26:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201209 02:26:50.110" starttime="20201209 02:26:13.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 02:26:50.110" starttime="20201209 02:26:50.110"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 02:26:50.110" critical="yes" starttime="20201209 02:26:13.411"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:26:50.116" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:26:50.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:26:50.123" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:26:50.123" starttime="20201209 02:26:50.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:26:50.124" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:26:50.124" starttime="20201209 02:26:50.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:26:50.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:26:50.125" starttime="20201209 02:26:50.124"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.125" starttime="20201209 02:26:50.114"></status>
</kw>
<msg timestamp="20201209 02:26:50.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:26:50.125" starttime="20201209 02:26:50.113"></status>
</kw>
<msg timestamp="20201209 02:26:50.125" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:26:50.125" starttime="20201209 02:26:50.113"></status>
</kw>
<msg timestamp="20201209 02:26:50.126" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:26:50.126" starttime="20201209 02:26:50.112"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 02:26:50.127" level="INFO">${random} = 08</msg>
<status status="PASS" endtime="20201209 02:26:50.127" starttime="20201209 02:26:50.126"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 02:26:50.131" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 02:26:50.132" starttime="20201209 02:26:50.131"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:26:50.132" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 02:26:50.132" starttime="20201209 02:26:50.132"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.132" starttime="20201209 02:26:50.130"></status>
</kw>
<msg timestamp="20201209 02:26:50.133" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 02:26:50.133" starttime="20201209 02:26:50.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 02:26:50.134" starttime="20201209 02:26:50.133"></status>
</kw>
<msg timestamp="20201209 02:26:50.134" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 02:26:50.134" starttime="20201209 02:26:50.133"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.134" starttime="20201209 02:26:50.129"></status>
</kw>
<msg timestamp="20201209 02:26:50.134" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 02:26:50.134" starttime="20201209 02:26:50.128"></status>
</kw>
<msg timestamp="20201209 02:26:50.135" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 02:26:50.135" starttime="20201209 02:26:50.127"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 02:26:50.138" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 02:26:50.138" starttime="20201209 02:26:50.138"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:26:50.139" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 02:26:50.139" starttime="20201209 02:26:50.138"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.139" starttime="20201209 02:26:50.137"></status>
</kw>
<msg timestamp="20201209 02:26:50.139" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 02:26:50.140" starttime="20201209 02:26:50.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 02:26:50.141" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201209 02:26:50.141" starttime="20201209 02:26:50.141"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:26:50.142" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201209 02:26:50.142" starttime="20201209 02:26:50.141"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.142" starttime="20201209 02:26:50.140"></status>
</kw>
<msg timestamp="20201209 02:26:50.142" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201209 02:26:50.142" starttime="20201209 02:26:50.140"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.143" starttime="20201209 02:26:50.136"></status>
</kw>
<msg timestamp="20201209 02:26:50.143" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201209 02:26:50.143" starttime="20201209 02:26:50.135"></status>
</kw>
<msg timestamp="20201209 02:26:50.143" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201209 02:26:50.143" starttime="20201209 02:26:50.135"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 02:26:50.147" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 02:26:50.147" starttime="20201209 02:26:50.147"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:26:50.148" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 02:26:50.148" starttime="20201209 02:26:50.147"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.148" starttime="20201209 02:26:50.146"></status>
</kw>
<msg timestamp="20201209 02:26:50.148" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 02:26:50.148" starttime="20201209 02:26:50.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 02:26:50.150" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201209 02:26:50.150" starttime="20201209 02:26:50.150"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:26:50.151" level="INFO">${result} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201209 02:26:50.151" starttime="20201209 02:26:50.150"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.151" starttime="20201209 02:26:50.149"></status>
</kw>
<msg timestamp="20201209 02:26:50.151" level="INFO">${path_with_leading} = /wordcount-08.txt</msg>
<status status="PASS" endtime="20201209 02:26:50.151" starttime="20201209 02:26:50.149"></status>
</kw>
<status status="PASS" endtime="20201209 02:26:50.152" starttime="20201209 02:26:50.145"></status>
</kw>
<msg timestamp="20201209 02:26:50.152" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201209 02:26:50.152" starttime="20201209 02:26:50.144"></status>
</kw>
<msg timestamp="20201209 02:26:50.152" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-08.txt</msg>
<status status="PASS" endtime="20201209 02:26:50.152" starttime="20201209 02:26:50.143"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:26:50.158" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-08.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:27:24.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:27:24.502" level="INFO">${output} = 2020-12-09 02:26:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-12-09 02:26:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20201209 02:27:24.502" starttime="20201209 02:26:50.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:27:24.503" level="INFO">2020-12-09 02:26:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-12-09 02:26:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2020-12-09 02:26:52 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480812745, maxDate=1608085612745, sequenceNumber=4, masterKeyId=2))
2020-12-09 02:26:52 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e3 c8 ca aa e4 2e 38 e3 d0 fc ca e6 2e 40 04 48 01 5a 0d 33 30 39 34 33 35 30 38 33 33 31 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-09 02:26:52 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480812745, maxDate=1608085612745, sequenceNumber=4, masterKeyId=2)
2020-12-09 02:26:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 02:26:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:26:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 02:26:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 02:26:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 02:26:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F64E1D2EA04F-&gt;ca2305b6-64df-4465-9721-9f7853f2d4da
2020-12-09 02:26:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 02:26:54 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 02:26:54 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 02:26:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607480536114_0004
2020-12-09 02:26:55 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e3 c8 ca aa e4 2e 38 e3 d0 fc ca e6 2e 40 04 48 01 5a 0d 33 30 39 34 33 35 30 38 33 33 31 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480812745, maxDate=1608085612745, sequenceNumber=4, masterKeyId=2)]
2020-12-09 02:26:55 INFO  Configuration:2795 - resource-types.xml not found
2020-12-09 02:26:55 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-09 02:26:55 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-09 02:26:56 INFO  YarnClientImpl:329 - Submitted application application_1607480536114_0004
2020-12-09 02:26:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607480536114_0004/
2020-12-09 02:26:56 INFO  Job:1619 - Running job: job_1607480536114_0004
2020-12-09 02:27:04 INFO  Job:1640 - Job job_1607480536114_0004 running in uber mode : false
2020-12-09 02:27:04 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 02:27:15 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 02:27:17 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 02:27:23 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 02:27:24 INFO  Job:1658 - Job job_1607480536114_0004 completed successfully
2020-12-09 02:27:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128407
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51398
		Total time spent by all reduces in occupied slots (ms)=8394
		Total time spent by all map tasks (ms)=25699
		Total time spent by all reduce tasks (ms)=4197
		Total vcore-milliseconds taken by all map tasks=25699
		Total vcore-milliseconds taken by all reduce tasks=4197
		Total megabyte-milliseconds taken by all map tasks=52631552
		Total megabyte-milliseconds taken by all reduce tasks=8595456
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1226
		CPU time spent (ms)=8800
		Physical memory (bytes) snapshot=1447628800
		Virtual memory (bytes) snapshot=14055555072
		Total committed heap usage (bytes)=1165492224
		Peak Map Physical memory (bytes)=385511424
		Peak Map Virtual memory (bytes)=3509342208
		Peak Reduce Physical memory (bytes)=299311104
		Peak Reduce Virtual memory (bytes)=3529543680
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201209 02:27:24.503" starttime="20201209 02:27:24.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:27:24.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:27:24.504" starttime="20201209 02:27:24.504"></status>
</kw>
<status status="PASS" endtime="20201209 02:27:24.504" starttime="20201209 02:26:50.154"></status>
</kw>
<msg timestamp="20201209 02:27:24.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:27:24.505" starttime="20201209 02:26:50.153"></status>
</kw>
<msg timestamp="20201209 02:27:24.505" level="INFO">${output} = 2020-12-09 02:26:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-12-09 02:26:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20201209 02:27:24.505" starttime="20201209 02:26:50.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201209 02:27:24.506" starttime="20201209 02:27:24.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 02:27:24.507" starttime="20201209 02:27:24.506"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 02:27:24.507" critical="yes" starttime="20201209 02:26:50.111"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201209 02:27:24.508" starttime="20201209 02:26:13.349"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:24:40.763" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:24:40.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:24:40.772" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:24:40.772" starttime="20201209 02:24:40.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:24:40.773" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:24:40.773" starttime="20201209 02:24:40.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:24:40.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:24:40.774" starttime="20201209 02:24:40.774"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:40.774" starttime="20201209 02:24:40.756"></status>
</kw>
<msg timestamp="20201209 02:24:40.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:24:40.775" starttime="20201209 02:24:40.756"></status>
</kw>
<msg timestamp="20201209 02:24:40.775" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:24:40.775" starttime="20201209 02:24:40.756"></status>
</kw>
<msg timestamp="20201209 02:24:40.775" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:24:40.775" starttime="20201209 02:24:40.755"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 02:24:40.781" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 02:24:40.781" starttime="20201209 02:24:40.780"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:24:40.781" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 02:24:40.781" starttime="20201209 02:24:40.781"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:40.782" starttime="20201209 02:24:40.778"></status>
</kw>
<msg timestamp="20201209 02:24:40.782" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 02:24:40.782" starttime="20201209 02:24:40.778"></status>
</kw>
<status status="PASS" endtime="20201209 02:24:40.782" starttime="20201209 02:24:40.777"></status>
</kw>
<msg timestamp="20201209 02:24:40.782" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 02:24:40.782" starttime="20201209 02:24:40.776"></status>
</kw>
<msg timestamp="20201209 02:24:40.783" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 02:24:40.783" starttime="20201209 02:24:40.776"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:24:40.787" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:25:20.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:25:20.716" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 02:24:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:24:43 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201209 02:25:20.716" starttime="20201209 02:24:40.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:25:20.718" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-09 02:24:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:24:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 02:24:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 02:24:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 02:24:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0468B9399299-&gt;ca2305b6-64df-4465-9721-9f7853f2d4da
2020-12-09 02:24:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-09 02:24:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-12-09 02:24:44 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2020-12-09 02:24:45 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480685389, maxDate=1608085485389, sequenceNumber=1, masterKeyId=2))
2020-12-09 02:24:45 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f2 e3 c2 aa e4 2e 38 f2 eb f4 ca e6 2e 40 01 48 01 5a 0d 33 30 39 34 33 35 30 38 33 33 31 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-09 02:24:45 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480685389, maxDate=1608085485389, sequenceNumber=1, masterKeyId=2)
2020-12-09 02:24:45 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 02:24:46 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 02:24:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607480536114_0001
2020-12-09 02:24:46 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f2 e3 c2 aa e4 2e 38 f2 eb f4 ca e6 2e 40 01 48 01 5a 0d 33 30 39 34 33 35 30 38 33 33 31 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480685389, maxDate=1608085485389, sequenceNumber=1, masterKeyId=2)]
2020-12-09 02:24:46 INFO  Configuration:2795 - resource-types.xml not found
2020-12-09 02:24:46 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-09 02:24:46 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-09 02:24:48 INFO  YarnClientImpl:329 - Submitted application application_1607480536114_0001
2020-12-09 02:24:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607480536114_0001/
2020-12-09 02:24:48 INFO  Job:1619 - Running job: job_1607480536114_0001
2020-12-09 02:24:59 INFO  Job:1640 - Job job_1607480536114_0001 running in uber mode : false
2020-12-09 02:24:59 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 02:25:11 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 02:25:13 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 02:25:18 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 02:25:19 INFO  Job:1658 - Job job_1607480536114_0001 completed successfully
2020-12-09 02:25:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065977
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=55184
		Total time spent by all reduces in occupied slots (ms)=8914
		Total time spent by all map tasks (ms)=27592
		Total time spent by all reduce tasks (ms)=4457
		Total vcore-milliseconds taken by all map tasks=27592
		Total vcore-milliseconds taken by all reduce tasks=4457
		Total megabyte-milliseconds taken by all map tasks=56508416
		Total megabyte-milliseconds taken by all reduce tasks=9127936
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=2134
		CPU time spent (ms)=8670
		Physical memory (bytes) snapshot=1799553024
		Virtual memory (bytes) snapshot=14058180608
		Total committed heap usage (bytes)=1611661312
		Peak Map Physical memory (bytes)=560771072
		Peak Map Virtual memory (bytes)=3510702080
		Peak Reduce Physical memory (bytes)=302788608
		Peak Reduce Virtual memory (bytes)=3529322496
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.489 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201209 02:25:20.718" starttime="20201209 02:25:20.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:25:20.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:25:20.719" starttime="20201209 02:25:20.718"></status>
</kw>
<status status="PASS" endtime="20201209 02:25:20.719" starttime="20201209 02:24:40.784"></status>
</kw>
<msg timestamp="20201209 02:25:20.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:25:20.719" starttime="20201209 02:24:40.784"></status>
</kw>
<msg timestamp="20201209 02:25:20.720" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 02:24:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:24:43 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201209 02:25:20.720" starttime="20201209 02:24:40.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 02:25:20.720" starttime="20201209 02:25:20.720"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 02:25:20.720" critical="yes" starttime="20201209 02:24:40.754"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:25:20.728" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:25:20.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:25:20.736" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:25:20.736" starttime="20201209 02:25:20.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:25:20.737" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:25:20.737" starttime="20201209 02:25:20.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:25:20.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:25:20.738" starttime="20201209 02:25:20.737"></status>
</kw>
<status status="PASS" endtime="20201209 02:25:20.738" starttime="20201209 02:25:20.725"></status>
</kw>
<msg timestamp="20201209 02:25:20.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:25:20.738" starttime="20201209 02:25:20.724"></status>
</kw>
<msg timestamp="20201209 02:25:20.739" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:25:20.739" starttime="20201209 02:25:20.723"></status>
</kw>
<msg timestamp="20201209 02:25:20.739" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 02:25:20.739" starttime="20201209 02:25:20.722"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 02:25:20.740" level="INFO">${random} = 02</msg>
<status status="PASS" endtime="20201209 02:25:20.740" starttime="20201209 02:25:20.739"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 02:25:20.744" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 02:25:20.744" starttime="20201209 02:25:20.744"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:25:20.745" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 02:25:20.745" starttime="20201209 02:25:20.744"></status>
</kw>
<status status="PASS" endtime="20201209 02:25:20.745" starttime="20201209 02:25:20.743"></status>
</kw>
<msg timestamp="20201209 02:25:20.745" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 02:25:20.745" starttime="20201209 02:25:20.742"></status>
</kw>
<status status="PASS" endtime="20201209 02:25:20.745" starttime="20201209 02:25:20.741"></status>
</kw>
<msg timestamp="20201209 02:25:20.746" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 02:25:20.746" starttime="20201209 02:25:20.741"></status>
</kw>
<msg timestamp="20201209 02:25:20.746" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 02:25:20.746" starttime="20201209 02:25:20.740"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 02:25:20.750" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 02:25:20.750" starttime="20201209 02:25:20.749"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:25:20.750" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 02:25:20.750" starttime="20201209 02:25:20.750"></status>
</kw>
<status status="PASS" endtime="20201209 02:25:20.751" starttime="20201209 02:25:20.749"></status>
</kw>
<msg timestamp="20201209 02:25:20.751" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 02:25:20.751" starttime="20201209 02:25:20.748"></status>
</kw>
<status status="PASS" endtime="20201209 02:25:20.751" starttime="20201209 02:25:20.748"></status>
</kw>
<msg timestamp="20201209 02:25:20.751" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201209 02:25:20.751" starttime="20201209 02:25:20.747"></status>
</kw>
<msg timestamp="20201209 02:25:20.751" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201209 02:25:20.751" starttime="20201209 02:25:20.746"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 02:25:20.755" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 02:25:20.755" starttime="20201209 02:25:20.755"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 02:25:20.756" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 02:25:20.756" starttime="20201209 02:25:20.755"></status>
</kw>
<status status="PASS" endtime="20201209 02:25:20.756" starttime="20201209 02:25:20.754"></status>
</kw>
<msg timestamp="20201209 02:25:20.756" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 02:25:20.756" starttime="20201209 02:25:20.754"></status>
</kw>
<status status="PASS" endtime="20201209 02:25:20.757" starttime="20201209 02:25:20.753"></status>
</kw>
<msg timestamp="20201209 02:25:20.757" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-02.txt</msg>
<status status="PASS" endtime="20201209 02:25:20.757" starttime="20201209 02:25:20.752"></status>
</kw>
<msg timestamp="20201209 02:25:20.757" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-02.txt</msg>
<status status="PASS" endtime="20201209 02:25:20.757" starttime="20201209 02:25:20.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 02:25:20.761" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-02.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 02:25:55.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 02:25:55.744" level="INFO">${output} = 2020-12-09 02:25:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-12-09 02:25:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20201209 02:25:55.744" starttime="20201209 02:25:20.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 02:25:55.745" level="INFO">2020-12-09 02:25:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-12-09 02:25:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
2020-12-09 02:25:23 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480723414, maxDate=1608085523414, sequenceNumber=2, masterKeyId=2))
2020-12-09 02:25:23 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e0 8e c5 aa e4 2e 38 e0 96 f7 ca e6 2e 40 02 48 01 5a 0d 33 30 39 34 33 35 30 38 33 33 31 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-09 02:25:23 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480723414, maxDate=1608085523414, sequenceNumber=2, masterKeyId=2)
2020-12-09 02:25:23 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 02:25:23 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 02:25:23 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 02:25:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 02:25:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 02:25:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4F9588FB0F63-&gt;ca2305b6-64df-4465-9721-9f7853f2d4da
2020-12-09 02:25:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 02:25:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 02:25:25 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 02:25:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607480536114_0002
2020-12-09 02:25:25 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.10:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e0 8e c5 aa e4 2e 38 e0 96 f7 ca e6 2e 40 02 48 01 5a 0d 33 30 39 34 33 35 30 38 33 33 31 32 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607480723414, maxDate=1608085523414, sequenceNumber=2, masterKeyId=2)]
2020-12-09 02:25:26 INFO  Configuration:2795 - resource-types.xml not found
2020-12-09 02:25:26 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-09 02:25:26 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-09 02:25:27 INFO  YarnClientImpl:329 - Submitted application application_1607480536114_0002
2020-12-09 02:25:27 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607480536114_0002/
2020-12-09 02:25:27 INFO  Job:1619 - Running job: job_1607480536114_0002
2020-12-09 02:25:36 INFO  Job:1640 - Job job_1607480536114_0002 running in uber mode : false
2020-12-09 02:25:36 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 02:25:47 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 02:25:48 INFO  Job:1647 -  map 67% reduce 0%
2020-12-09 02:25:49 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 02:25:54 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 02:25:55 INFO  Job:1658 - Job job_1607480536114_0002 completed successfully
2020-12-09 02:25:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128491
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49726
		Total time spent by all reduces in occupied slots (ms)=8148
		Total time spent by all map tasks (ms)=24863
		Total time spent by all reduce tasks (ms)=4074
		Total vcore-milliseconds taken by all map tasks=24863
		Total vcore-milliseconds taken by all reduce tasks=4074
		Total megabyte-milliseconds taken by all map tasks=50919424
		Total megabyte-milliseconds taken by all reduce tasks=8343552
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1115
		CPU time spent (ms)=7880
		Physical memory (bytes) snapshot=1441337344
		Virtual memory (bytes) snapshot=14048768000
		Total committed heap usage (bytes)=1205862400
		Peak Map Physical memory (bytes)=385617920
		Peak Map Virtual memory (bytes)=3509977088
		Peak Reduce Physical memory (bytes)=304406528
		Peak Reduce Virtual memory (bytes)=3532509184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201209 02:25:55.746" starttime="20201209 02:25:55.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 02:25:55.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 02:25:55.746" starttime="20201209 02:25:55.746"></status>
</kw>
<status status="PASS" endtime="20201209 02:25:55.747" starttime="20201209 02:25:20.759"></status>
</kw>
<msg timestamp="20201209 02:25:55.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 02:25:55.747" starttime="20201209 02:25:20.758"></status>
</kw>
<msg timestamp="20201209 02:25:55.747" level="INFO">${output} = 2020-12-09 02:25:22 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.2:8032
2020-12-09 02:25:23 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.11:10200
20...</msg>
<status status="PASS" endtime="20201209 02:25:55.748" starttime="20201209 02:25:20.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201209 02:25:55.748" starttime="20201209 02:25:55.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 02:25:55.749" starttime="20201209 02:25:55.748"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 02:25:55.749" critical="yes" starttime="20201209 02:25:20.721"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201209 02:25:55.752" starttime="20201209 02:24:40.692"></status>
</suite>
<status status="PASS" elapsedtime="206278" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
