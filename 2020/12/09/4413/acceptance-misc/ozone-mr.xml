<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201209 01:52:50.949" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:38:56.384" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:38:58.811" level="INFO">${rc} = 255</msg>
<msg timestamp="20201209 01:38:58.811" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 01:38:58.811" starttime="20201209 01:38:56.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:38:58.812" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 01:38:58.812" starttime="20201209 01:38:58.811"></status>
</kw>
<msg timestamp="20201209 01:38:58.812" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 01:38:58.813" starttime="20201209 01:38:56.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:38:58.819" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:01.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:01.243" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:39:01.243" starttime="20201209 01:38:58.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:01.246" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:39:01.246" starttime="20201209 01:39:01.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:01.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:01.247" starttime="20201209 01:39:01.247"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:01.248" starttime="20201209 01:38:58.815"></status>
</kw>
<msg timestamp="20201209 01:39:01.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:01.248" starttime="20201209 01:38:58.814"></status>
</kw>
<msg timestamp="20201209 01:39:01.248" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201209 01:39:01.248" starttime="20201209 01:38:58.814"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201209 01:39:01.249" starttime="20201209 01:39:01.248"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:01.249" starttime="20201209 01:38:58.813"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:01.249" starttime="20201209 01:38:58.813"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:01.257" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:03.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:03.510" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:39:03.510" starttime="20201209 01:39:01.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:03.511" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:39:03.512" starttime="20201209 01:39:03.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:03.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:03.512" starttime="20201209 01:39:03.512"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:03.513" starttime="20201209 01:39:01.255"></status>
</kw>
<msg timestamp="20201209 01:39:03.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:03.513" starttime="20201209 01:39:01.255"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:03.513" starttime="20201209 01:39:01.250"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:03.514" starttime="20201209 01:39:01.250"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:03.514" starttime="20201209 01:39:01.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201209 01:39:03.514" starttime="20201209 01:39:03.514"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:03.518" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:05.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:05.980" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T01:39:03.464Z",
  "modificat...</msg>
<status status="PASS" endtime="20201209 01:39:05.980" starttime="20201209 01:39:03.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:05.981" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T01:39:03.464Z",
  "modificationTime" : "2020-12-09T01:39:03.464Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201209 01:39:05.981" starttime="20201209 01:39:05.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:05.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:05.982" starttime="20201209 01:39:05.982"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:05.983" starttime="20201209 01:39:03.515"></status>
</kw>
<msg timestamp="20201209 01:39:05.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:05.983" starttime="20201209 01:39:03.515"></status>
</kw>
<msg timestamp="20201209 01:39:05.983" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T01:39:03.464Z",
  "modificat...</msg>
<status status="PASS" endtime="20201209 01:39:05.983" starttime="20201209 01:39:03.514"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201209 01:39:05.984" starttime="20201209 01:39:05.983"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:39:05.988" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:39:05.989" starttime="20201209 01:39:05.988"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:39:05.989" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:39:05.989" starttime="20201209 01:39:05.989"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:05.989" starttime="20201209 01:39:05.987"></status>
</kw>
<msg timestamp="20201209 01:39:05.990" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:39:05.990" starttime="20201209 01:39:05.987"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:05.990" starttime="20201209 01:39:05.986"></status>
</kw>
<msg timestamp="20201209 01:39:05.990" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201209 01:39:05.990" starttime="20201209 01:39:05.985"></status>
</kw>
<msg timestamp="20201209 01:39:05.991" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201209 01:39:05.991" starttime="20201209 01:39:05.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:05.996" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:08.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:08.609" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:39:08.609" starttime="20201209 01:39:05.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:08.610" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:39:08.610" starttime="20201209 01:39:08.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:08.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:08.611" starttime="20201209 01:39:08.610"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:08.611" starttime="20201209 01:39:05.992"></status>
</kw>
<msg timestamp="20201209 01:39:08.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:08.611" starttime="20201209 01:39:05.992"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:08.612" starttime="20201209 01:39:05.991"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:08.616" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:14.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:14.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:39:14.172" starttime="20201209 01:39:08.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:14.173" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:39:14.173" starttime="20201209 01:39:14.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:14.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:14.174" starttime="20201209 01:39:14.173"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:14.174" starttime="20201209 01:39:08.613"></status>
</kw>
<msg timestamp="20201209 01:39:14.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:14.175" starttime="20201209 01:39:08.613"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:14.175" starttime="20201209 01:39:08.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:14.179" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:20.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:20.892" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:39:20.892" starttime="20201209 01:39:14.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:20.893" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:39:20.893" starttime="20201209 01:39:20.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:20.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:20.894" starttime="20201209 01:39:20.893"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:20.894" starttime="20201209 01:39:14.176"></status>
</kw>
<msg timestamp="20201209 01:39:20.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:20.894" starttime="20201209 01:39:14.176"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:20.895" starttime="20201209 01:39:14.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:20.903" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:25.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:25.053" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:39:25.053" starttime="20201209 01:39:20.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:25.055" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:39:25.055" starttime="20201209 01:39:25.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:25.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:25.057" starttime="20201209 01:39:25.056"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:25.057" starttime="20201209 01:39:20.896"></status>
</kw>
<msg timestamp="20201209 01:39:25.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:25.058" starttime="20201209 01:39:20.896"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:25.058" starttime="20201209 01:39:20.895"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 01:39:25.058" critical="yes" starttime="20201209 01:38:56.375"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:39:25.065" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:39:25.065" starttime="20201209 01:39:25.064"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:39:25.065" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:39:25.065" starttime="20201209 01:39:25.065"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:25.066" starttime="20201209 01:39:25.063"></status>
</kw>
<msg timestamp="20201209 01:39:25.066" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:39:25.066" starttime="20201209 01:39:25.063"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:25.066" starttime="20201209 01:39:25.062"></status>
</kw>
<msg timestamp="20201209 01:39:25.066" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 01:39:25.066" starttime="20201209 01:39:25.061"></status>
</kw>
<msg timestamp="20201209 01:39:25.067" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 01:39:25.067" starttime="20201209 01:39:25.060"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:25.071" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:27.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:27.266" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:39:27.266" starttime="20201209 01:39:25.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:27.268" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:39:27.268" starttime="20201209 01:39:27.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:27.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:27.268" starttime="20201209 01:39:27.268"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:27.269" starttime="20201209 01:39:25.068"></status>
</kw>
<msg timestamp="20201209 01:39:27.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:27.269" starttime="20201209 01:39:25.067"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:27.269" starttime="20201209 01:39:25.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:27.273" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:29.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:29.569" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:39:29.569" starttime="20201209 01:39:27.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:29.570" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:39:29.570" starttime="20201209 01:39:29.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:29.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:29.571" starttime="20201209 01:39:29.570"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:29.571" starttime="20201209 01:39:27.270"></status>
</kw>
<msg timestamp="20201209 01:39:29.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:29.571" starttime="20201209 01:39:27.270"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:29.572" starttime="20201209 01:39:27.269"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 01:39:29.572" critical="yes" starttime="20201209 01:39:25.059"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201209 01:39:29.573" starttime="20201209 01:38:56.307"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:41:10.590" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:41:10.590" starttime="20201209 01:41:10.589"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:41:10.591" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:41:10.591" starttime="20201209 01:41:10.590"></status>
</kw>
<status status="PASS" endtime="20201209 01:41:10.591" starttime="20201209 01:41:10.589"></status>
</kw>
<msg timestamp="20201209 01:41:10.591" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:41:10.591" starttime="20201209 01:41:10.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:41:10.592" starttime="20201209 01:41:10.592"></status>
</kw>
<msg timestamp="20201209 01:41:10.592" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 01:41:10.592" starttime="20201209 01:41:10.591"></status>
</kw>
<status status="PASS" endtime="20201209 01:41:10.593" starttime="20201209 01:41:10.587"></status>
</kw>
<msg timestamp="20201209 01:41:10.593" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:41:10.593" starttime="20201209 01:41:10.587"></status>
</kw>
<msg timestamp="20201209 01:41:10.593" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:41:10.593" starttime="20201209 01:41:10.585"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:41:10.594" level="INFO">${random} = 83369</msg>
<status status="PASS" endtime="20201209 01:41:10.594" starttime="20201209 01:41:10.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:41:10.600" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-83369 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:41:16.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:41:16.619" level="INFO">${output} = 2020-12-09 01:41:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:41:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 ...</msg>
<status status="PASS" endtime="20201209 01:41:16.619" starttime="20201209 01:41:10.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:41:16.621" level="INFO">2020-12-09 01:41:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:41:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 01:41:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-09 01:41:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:41:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7BBE09425A4F-&gt;0ade3503-69be-40f9-bb6b-1327497715b6
2020-12-09 01:41:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201209 01:41:16.621" starttime="20201209 01:41:16.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:41:16.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:41:16.622" starttime="20201209 01:41:16.621"></status>
</kw>
<status status="PASS" endtime="20201209 01:41:16.622" starttime="20201209 01:41:10.595"></status>
</kw>
<msg timestamp="20201209 01:41:16.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:41:16.622" starttime="20201209 01:41:10.594"></status>
</kw>
<msg timestamp="20201209 01:41:16.623" level="INFO">${result} = 2020-12-09 01:41:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:41:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 ...</msg>
<status status="PASS" endtime="20201209 01:41:16.623" starttime="20201209 01:41:10.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:41:16.628" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:41:18.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:41:18.772" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:39 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-09 01:41 ofs://om/volume1/bucket1/ozone-83369
-rw-...</msg>
<status status="PASS" endtime="20201209 01:41:18.772" starttime="20201209 01:41:16.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:41:18.773" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:39 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-09 01:41 ofs://om/volume1/bucket1/ozone-83369
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-09 01:39 ofs://om/volume1/bucket1/ozone-84724
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:39 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:40 ofs://om/volume1/bucket1/wordcount-07.txt</msg>
<status status="PASS" endtime="20201209 01:41:18.773" starttime="20201209 01:41:18.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:41:18.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:41:18.774" starttime="20201209 01:41:18.773"></status>
</kw>
<status status="PASS" endtime="20201209 01:41:18.775" starttime="20201209 01:41:16.625"></status>
</kw>
<msg timestamp="20201209 01:41:18.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:41:18.775" starttime="20201209 01:41:16.625"></status>
</kw>
<msg timestamp="20201209 01:41:18.775" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:39 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-09 01:41 ofs://om/volume1/bucket1/ozone-83369
-rw-...</msg>
<status status="PASS" endtime="20201209 01:41:18.775" starttime="20201209 01:41:16.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:41:18.776" starttime="20201209 01:41:18.776"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201209 01:41:18.776" critical="yes" starttime="20201209 01:41:10.585"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201209 01:41:18.779" starttime="20201209 01:41:10.519"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:39:34.748" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:39:34.748" starttime="20201209 01:39:34.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:39:34.749" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:39:34.749" starttime="20201209 01:39:34.749"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:34.749" starttime="20201209 01:39:34.747"></status>
</kw>
<msg timestamp="20201209 01:39:34.749" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:39:34.749" starttime="20201209 01:39:34.747"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:34.750" starttime="20201209 01:39:34.746"></status>
</kw>
<msg timestamp="20201209 01:39:34.750" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:39:34.750" starttime="20201209 01:39:34.745"></status>
</kw>
<msg timestamp="20201209 01:39:34.750" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:39:34.750" starttime="20201209 01:39:34.745"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:39:34.751" level="INFO">${random} = 84724</msg>
<status status="PASS" endtime="20201209 01:39:34.751" starttime="20201209 01:39:34.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:34.756" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-84724 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:38.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:38.315" level="INFO">${output} = 2020-12-09 01:39:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:39:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 ...</msg>
<status status="PASS" endtime="20201209 01:39:38.315" starttime="20201209 01:39:34.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:38.316" level="INFO">2020-12-09 01:39:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:39:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 01:39:36 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-09 01:39:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:39:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7B405CD08B1B-&gt;0ade3503-69be-40f9-bb6b-1327497715b6
2020-12-09 01:39:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201209 01:39:38.316" starttime="20201209 01:39:38.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:38.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:38.317" starttime="20201209 01:39:38.317"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:38.317" starttime="20201209 01:39:34.752"></status>
</kw>
<msg timestamp="20201209 01:39:38.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:38.318" starttime="20201209 01:39:34.751"></status>
</kw>
<msg timestamp="20201209 01:39:38.318" level="INFO">${result} = 2020-12-09 01:39:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:39:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 ...</msg>
<status status="PASS" endtime="20201209 01:39:38.318" starttime="20201209 01:39:34.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:38.323" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:40.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:40.235" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:39 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-09 01:39 o3fs://bucket1.volume1.om/ozone-84724
dr...</msg>
<status status="PASS" endtime="20201209 01:39:40.235" starttime="20201209 01:39:38.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:40.236" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:39 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-09 01:39 o3fs://bucket1.volume1.om/ozone-84724
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:39 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 01:39:40.236" starttime="20201209 01:39:40.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:40.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:40.237" starttime="20201209 01:39:40.236"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:40.237" starttime="20201209 01:39:38.320"></status>
</kw>
<msg timestamp="20201209 01:39:40.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:40.237" starttime="20201209 01:39:38.319"></status>
</kw>
<msg timestamp="20201209 01:39:40.237" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:39 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-09 01:39 o3fs://bucket1.volume1.om/ozone-84724
dr...</msg>
<status status="PASS" endtime="20201209 01:39:40.237" starttime="20201209 01:39:38.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:39:40.238" starttime="20201209 01:39:40.238"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201209 01:39:40.238" critical="yes" starttime="20201209 01:39:34.744"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201209 01:39:40.239" starttime="20201209 01:39:34.681"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:41:23.872" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:41:23.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:41:23.876" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:41:23.876" starttime="20201209 01:41:23.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:41:23.877" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:41:23.877" starttime="20201209 01:41:23.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:41:23.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:41:23.878" starttime="20201209 01:41:23.877"></status>
</kw>
<status status="PASS" endtime="20201209 01:41:23.878" starttime="20201209 01:41:23.867"></status>
</kw>
<msg timestamp="20201209 01:41:23.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:41:23.878" starttime="20201209 01:41:23.867"></status>
</kw>
<msg timestamp="20201209 01:41:23.879" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:41:23.879" starttime="20201209 01:41:23.866"></status>
</kw>
<msg timestamp="20201209 01:41:23.879" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:41:23.879" starttime="20201209 01:41:23.866"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:41:23.884" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:41:23.884" starttime="20201209 01:41:23.883"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:41:23.885" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:41:23.885" starttime="20201209 01:41:23.884"></status>
</kw>
<status status="PASS" endtime="20201209 01:41:23.885" starttime="20201209 01:41:23.882"></status>
</kw>
<msg timestamp="20201209 01:41:23.885" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:41:23.885" starttime="20201209 01:41:23.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:41:23.887" starttime="20201209 01:41:23.886"></status>
</kw>
<msg timestamp="20201209 01:41:23.887" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 01:41:23.887" starttime="20201209 01:41:23.886"></status>
</kw>
<status status="PASS" endtime="20201209 01:41:23.887" starttime="20201209 01:41:23.880"></status>
</kw>
<msg timestamp="20201209 01:41:23.887" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:41:23.887" starttime="20201209 01:41:23.880"></status>
</kw>
<msg timestamp="20201209 01:41:23.888" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:41:23.888" starttime="20201209 01:41:23.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:41:23.892" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:42:02.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:42:02.658" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:41:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:41:26 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201209 01:42:02.659" starttime="20201209 01:41:23.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:42:02.660" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:41:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:41:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 01:41:26 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-09 01:41:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:41:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-698B771B5A7D-&gt;0ade3503-69be-40f9-bb6b-1327497715b6
2020-12-09 01:41:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-09 01:41:29 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-09 01:41:29 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 01:41:30 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-09 01:41:30 INFO  JobSubmitter:198 - number of splits:3
2020-12-09 01:41:30 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607477898298_0003
2020-12-09 01:41:30 INFO  YarnClientImpl:273 - Submitted application application_1607477898298_0003
2020-12-09 01:41:30 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607477898298_0003/
2020-12-09 01:41:30 INFO  Job:1339 - Running job: job_1607477898298_0003
2020-12-09 01:41:37 INFO  Job:1360 - Job job_1607477898298_0003 running in uber mode : false
2020-12-09 01:41:37 INFO  Job:1367 -  map 0% reduce 0%
2020-12-09 01:41:44 INFO  Job:1367 -  map 33% reduce 0%
2020-12-09 01:41:49 INFO  Job:1367 -  map 67% reduce 0%
2020-12-09 01:41:54 INFO  Job:1367 -  map 100% reduce 0%
2020-12-09 01:42:00 INFO  Job:1367 -  map 100% reduce 100%
2020-12-09 01:42:02 INFO  Job:1378 - Job job_1607477898298_0003 completed successfully
2020-12-09 01:42:02 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610689
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40868
		Total time spent by all reduces in occupied slots (ms)=25112
		Total time spent by all map tasks (ms)=10217
		Total time spent by all reduce tasks (ms)=6278
		Total vcore-milliseconds taken by all map tasks=10217
		Total vcore-milliseconds taken by all reduce tasks=6278
		Total megabyte-milliseconds taken by all map tasks=41848832
		Total megabyte-milliseconds taken by all reduce tasks=25714688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=576
		CPU time spent (ms)=7080
		Physical memory (bytes) snapshot=1143451648
		Virtual memory (bytes) snapshot=15778344960
		Total committed heap usage (bytes)=1054343168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.526 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201209 01:42:02.660" starttime="20201209 01:42:02.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:42:02.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:42:02.661" starttime="20201209 01:42:02.660"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.661" starttime="20201209 01:41:23.889"></status>
</kw>
<msg timestamp="20201209 01:42:02.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:42:02.661" starttime="20201209 01:41:23.888"></status>
</kw>
<msg timestamp="20201209 01:42:02.662" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:41:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:41:26 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201209 01:42:02.662" starttime="20201209 01:41:23.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:42:02.663" starttime="20201209 01:42:02.662"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:42:02.663" critical="yes" starttime="20201209 01:41:23.865"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:42:02.668" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:42:02.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:42:02.675" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:42:02.675" starttime="20201209 01:42:02.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:42:02.675" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:42:02.676" starttime="20201209 01:42:02.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:42:02.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:42:02.676" starttime="20201209 01:42:02.676"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.677" starttime="20201209 01:42:02.666"></status>
</kw>
<msg timestamp="20201209 01:42:02.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:42:02.677" starttime="20201209 01:42:02.665"></status>
</kw>
<msg timestamp="20201209 01:42:02.677" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:42:02.677" starttime="20201209 01:42:02.665"></status>
</kw>
<msg timestamp="20201209 01:42:02.677" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:42:02.677" starttime="20201209 01:42:02.664"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:42:02.678" level="INFO">${random} = 11</msg>
<status status="PASS" endtime="20201209 01:42:02.678" starttime="20201209 01:42:02.678"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:42:02.684" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:42:02.684" starttime="20201209 01:42:02.683"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:42:02.684" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:42:02.684" starttime="20201209 01:42:02.684"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.685" starttime="20201209 01:42:02.682"></status>
</kw>
<msg timestamp="20201209 01:42:02.685" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:42:02.685" starttime="20201209 01:42:02.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:42:02.686" starttime="20201209 01:42:02.686"></status>
</kw>
<msg timestamp="20201209 01:42:02.687" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 01:42:02.687" starttime="20201209 01:42:02.685"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.687" starttime="20201209 01:42:02.680"></status>
</kw>
<msg timestamp="20201209 01:42:02.687" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:42:02.687" starttime="20201209 01:42:02.679"></status>
</kw>
<msg timestamp="20201209 01:42:02.687" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:42:02.688" starttime="20201209 01:42:02.678"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:42:02.691" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:42:02.691" starttime="20201209 01:42:02.691"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:42:02.692" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:42:02.692" starttime="20201209 01:42:02.691"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.692" starttime="20201209 01:42:02.690"></status>
</kw>
<msg timestamp="20201209 01:42:02.692" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:42:02.692" starttime="20201209 01:42:02.690"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:42:02.694" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201209 01:42:02.694" starttime="20201209 01:42:02.693"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:42:02.695" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201209 01:42:02.695" starttime="20201209 01:42:02.694"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.695" starttime="20201209 01:42:02.693"></status>
</kw>
<msg timestamp="20201209 01:42:02.695" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201209 01:42:02.695" starttime="20201209 01:42:02.692"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.696" starttime="20201209 01:42:02.689"></status>
</kw>
<msg timestamp="20201209 01:42:02.696" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201209 01:42:02.696" starttime="20201209 01:42:02.688"></status>
</kw>
<msg timestamp="20201209 01:42:02.696" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201209 01:42:02.696" starttime="20201209 01:42:02.688"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:42:02.700" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:42:02.700" starttime="20201209 01:42:02.700"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:42:02.701" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:42:02.701" starttime="20201209 01:42:02.701"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.701" starttime="20201209 01:42:02.699"></status>
</kw>
<msg timestamp="20201209 01:42:02.701" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:42:02.701" starttime="20201209 01:42:02.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:42:02.703" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201209 01:42:02.703" starttime="20201209 01:42:02.703"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:42:02.704" level="INFO">${result} = /wordcount-11.txt</msg>
<status status="PASS" endtime="20201209 01:42:02.704" starttime="20201209 01:42:02.703"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.704" starttime="20201209 01:42:02.702"></status>
</kw>
<msg timestamp="20201209 01:42:02.704" level="INFO">${path_with_leading} = /wordcount-11.txt</msg>
<status status="PASS" endtime="20201209 01:42:02.704" starttime="20201209 01:42:02.702"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:02.705" starttime="20201209 01:42:02.698"></status>
</kw>
<msg timestamp="20201209 01:42:02.705" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-11.txt</msg>
<status status="PASS" endtime="20201209 01:42:02.705" starttime="20201209 01:42:02.697"></status>
</kw>
<msg timestamp="20201209 01:42:02.705" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-11.txt</msg>
<status status="PASS" endtime="20201209 01:42:02.705" starttime="20201209 01:42:02.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:42:02.710" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-11.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:42:37.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:42:37.672" level="INFO">${output} = 2020-12-09 01:42:04 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-09 01:42:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201209 01:42:37.672" starttime="20201209 01:42:02.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:42:37.673" level="INFO">2020-12-09 01:42:04 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-09 01:42:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 01:42:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:42:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 01:42:05 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-09 01:42:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:42:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7A13F0C6E449-&gt;0ade3503-69be-40f9-bb6b-1327497715b6
2020-12-09 01:42:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 01:42:06 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-09 01:42:06 INFO  JobSubmitter:198 - number of splits:3
2020-12-09 01:42:06 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607477898298_0004
2020-12-09 01:42:06 INFO  YarnClientImpl:273 - Submitted application application_1607477898298_0004
2020-12-09 01:42:06 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607477898298_0004/
2020-12-09 01:42:06 INFO  Job:1339 - Running job: job_1607477898298_0004
2020-12-09 01:42:15 INFO  Job:1360 - Job job_1607477898298_0004 running in uber mode : false
2020-12-09 01:42:15 INFO  Job:1367 -  map 0% reduce 0%
2020-12-09 01:42:22 INFO  Job:1367 -  map 33% reduce 0%
2020-12-09 01:42:27 INFO  Job:1367 -  map 67% reduce 0%
2020-12-09 01:42:32 INFO  Job:1367 -  map 100% reduce 0%
2020-12-09 01:42:36 INFO  Job:1367 -  map 100% reduce 100%
2020-12-09 01:42:37 INFO  Job:1378 - Job job_1607477898298_0004 completed successfully
2020-12-09 01:42:37 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673451
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42644
		Total time spent by all reduces in occupied slots (ms)=15420
		Total time spent by all map tasks (ms)=10661
		Total time spent by all reduce tasks (ms)=3855
		Total vcore-milliseconds taken by all map tasks=10661
		Total vcore-milliseconds taken by all reduce tasks=3855
		Total megabyte-milliseconds taken by all map tasks=43667456
		Total megabyte-milliseconds taken by all reduce tasks=15790080
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=610
		CPU time spent (ms)=7490
		Physical memory (bytes) snapshot=1106767872
		Virtual memory (bytes) snapshot=15772774400
		Total committed heap usage (bytes)=1031798784
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201209 01:42:37.674" starttime="20201209 01:42:37.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:42:37.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:42:37.674" starttime="20201209 01:42:37.674"></status>
</kw>
<status status="PASS" endtime="20201209 01:42:37.675" starttime="20201209 01:42:02.707"></status>
</kw>
<msg timestamp="20201209 01:42:37.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:42:37.675" starttime="20201209 01:42:02.706"></status>
</kw>
<msg timestamp="20201209 01:42:37.675" level="INFO">${output} = 2020-12-09 01:42:04 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-09 01:42:04 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201209 01:42:37.676" starttime="20201209 01:42:02.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201209 01:42:37.676" starttime="20201209 01:42:37.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:42:37.677" starttime="20201209 01:42:37.676"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:42:37.677" critical="yes" starttime="20201209 01:42:02.663"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201209 01:42:37.678" starttime="20201209 01:41:23.806"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:45.211" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:39:45.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:39:45.220" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:39:45.220" starttime="20201209 01:39:45.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:39:45.221" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:39:45.221" starttime="20201209 01:39:45.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:39:45.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:39:45.222" starttime="20201209 01:39:45.221"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:45.222" starttime="20201209 01:39:45.206"></status>
</kw>
<msg timestamp="20201209 01:39:45.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:39:45.224" starttime="20201209 01:39:45.205"></status>
</kw>
<msg timestamp="20201209 01:39:45.224" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:39:45.224" starttime="20201209 01:39:45.205"></status>
</kw>
<msg timestamp="20201209 01:39:45.225" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:39:45.225" starttime="20201209 01:39:45.204"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:39:45.231" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:39:45.231" starttime="20201209 01:39:45.231"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:39:45.232" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:39:45.232" starttime="20201209 01:39:45.231"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:45.232" starttime="20201209 01:39:45.228"></status>
</kw>
<msg timestamp="20201209 01:39:45.232" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:39:45.232" starttime="20201209 01:39:45.228"></status>
</kw>
<status status="PASS" endtime="20201209 01:39:45.233" starttime="20201209 01:39:45.227"></status>
</kw>
<msg timestamp="20201209 01:39:45.233" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:39:45.233" starttime="20201209 01:39:45.226"></status>
</kw>
<msg timestamp="20201209 01:39:45.233" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:39:45.233" starttime="20201209 01:39:45.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:39:45.238" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:40:28.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:40:28.111" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:39:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:39:47 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201209 01:40:28.111" starttime="20201209 01:39:45.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:40:28.113" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:39:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:39:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 01:39:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-09 01:39:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:39:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-80CB3DFBED89-&gt;0ade3503-69be-40f9-bb6b-1327497715b6
2020-12-09 01:39:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-09 01:39:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-09 01:39:49 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-09 01:39:49 INFO  JobSubmitter:198 - number of splits:3
2020-12-09 01:39:52 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607477898298_0001
2020-12-09 01:39:52 INFO  YarnClientImpl:273 - Submitted application application_1607477898298_0001
2020-12-09 01:39:52 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607477898298_0001/
2020-12-09 01:39:52 INFO  Job:1339 - Running job: job_1607477898298_0001
2020-12-09 01:40:02 INFO  Job:1360 - Job job_1607477898298_0001 running in uber mode : false
2020-12-09 01:40:02 INFO  Job:1367 -  map 0% reduce 0%
2020-12-09 01:40:10 INFO  Job:1367 -  map 33% reduce 0%
2020-12-09 01:40:15 INFO  Job:1367 -  map 67% reduce 0%
2020-12-09 01:40:20 INFO  Job:1367 -  map 100% reduce 0%
2020-12-09 01:40:24 INFO  Job:1367 -  map 100% reduce 100%
2020-12-09 01:40:27 INFO  Job:1378 - Job job_1607477898298_0001 completed successfully
2020-12-09 01:40:27 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610901
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43792
		Total time spent by all reduces in occupied slots (ms)=15512
		Total time spent by all map tasks (ms)=10948
		Total time spent by all reduce tasks (ms)=3878
		Total vcore-milliseconds taken by all map tasks=10948
		Total vcore-milliseconds taken by all reduce tasks=3878
		Total megabyte-milliseconds taken by all map tasks=44843008
		Total megabyte-milliseconds taken by all reduce tasks=15884288
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=619
		CPU time spent (ms)=7150
		Physical memory (bytes) snapshot=1164558336
		Virtual memory (bytes) snapshot=15792492544
		Total committed heap usage (bytes)=1047003136
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.971 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201209 01:40:28.113" starttime="20201209 01:40:28.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:40:28.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:40:28.114" starttime="20201209 01:40:28.113"></status>
</kw>
<status status="PASS" endtime="20201209 01:40:28.114" starttime="20201209 01:39:45.234"></status>
</kw>
<msg timestamp="20201209 01:40:28.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:40:28.114" starttime="20201209 01:39:45.234"></status>
</kw>
<msg timestamp="20201209 01:40:28.115" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:39:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:39:47 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201209 01:40:28.115" starttime="20201209 01:39:45.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:40:28.116" starttime="20201209 01:40:28.115"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:40:28.116" critical="yes" starttime="20201209 01:39:45.203"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:40:28.121" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:40:28.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:40:28.128" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:40:28.128" starttime="20201209 01:40:28.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:40:28.129" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:40:28.129" starttime="20201209 01:40:28.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:40:28.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:40:28.130" starttime="20201209 01:40:28.129"></status>
</kw>
<status status="PASS" endtime="20201209 01:40:28.130" starttime="20201209 01:40:28.119"></status>
</kw>
<msg timestamp="20201209 01:40:28.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:40:28.130" starttime="20201209 01:40:28.118"></status>
</kw>
<msg timestamp="20201209 01:40:28.130" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:40:28.130" starttime="20201209 01:40:28.118"></status>
</kw>
<msg timestamp="20201209 01:40:28.131" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201209 01:40:28.131" starttime="20201209 01:40:28.118"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:40:28.131" level="INFO">${random} = 07</msg>
<status status="PASS" endtime="20201209 01:40:28.131" starttime="20201209 01:40:28.131"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:40:28.136" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:40:28.136" starttime="20201209 01:40:28.135"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:40:28.137" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:40:28.137" starttime="20201209 01:40:28.136"></status>
</kw>
<status status="PASS" endtime="20201209 01:40:28.137" starttime="20201209 01:40:28.135"></status>
</kw>
<msg timestamp="20201209 01:40:28.137" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:40:28.137" starttime="20201209 01:40:28.134"></status>
</kw>
<status status="PASS" endtime="20201209 01:40:28.137" starttime="20201209 01:40:28.133"></status>
</kw>
<msg timestamp="20201209 01:40:28.138" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:40:28.138" starttime="20201209 01:40:28.132"></status>
</kw>
<msg timestamp="20201209 01:40:28.138" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:40:28.138" starttime="20201209 01:40:28.132"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:40:28.141" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:40:28.141" starttime="20201209 01:40:28.141"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:40:28.142" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:40:28.142" starttime="20201209 01:40:28.142"></status>
</kw>
<status status="PASS" endtime="20201209 01:40:28.143" starttime="20201209 01:40:28.141"></status>
</kw>
<msg timestamp="20201209 01:40:28.143" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:40:28.143" starttime="20201209 01:40:28.140"></status>
</kw>
<status status="PASS" endtime="20201209 01:40:28.143" starttime="20201209 01:40:28.139"></status>
</kw>
<msg timestamp="20201209 01:40:28.143" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201209 01:40:28.143" starttime="20201209 01:40:28.139"></status>
</kw>
<msg timestamp="20201209 01:40:28.144" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201209 01:40:28.144" starttime="20201209 01:40:28.138"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:40:28.147" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:40:28.147" starttime="20201209 01:40:28.147"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:40:28.148" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:40:28.148" starttime="20201209 01:40:28.148"></status>
</kw>
<status status="PASS" endtime="20201209 01:40:28.148" starttime="20201209 01:40:28.146"></status>
</kw>
<msg timestamp="20201209 01:40:28.148" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:40:28.148" starttime="20201209 01:40:28.146"></status>
</kw>
<status status="PASS" endtime="20201209 01:40:28.149" starttime="20201209 01:40:28.145"></status>
</kw>
<msg timestamp="20201209 01:40:28.149" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-07.txt</msg>
<status status="PASS" endtime="20201209 01:40:28.149" starttime="20201209 01:40:28.144"></status>
</kw>
<msg timestamp="20201209 01:40:28.149" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-07.txt</msg>
<status status="PASS" endtime="20201209 01:40:28.149" starttime="20201209 01:40:28.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:40:28.155" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-07.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:41:05.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:41:05.606" level="INFO">${output} = 2020-12-09 01:40:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-09 01:40:30 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201209 01:41:05.606" starttime="20201209 01:40:28.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:41:05.607" level="INFO">2020-12-09 01:40:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-09 01:40:30 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 01:40:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:40:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-09 01:40:30 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-09 01:40:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:40:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FB0E325FCC16-&gt;0ade3503-69be-40f9-bb6b-1327497715b6
2020-12-09 01:40:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 01:40:32 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-09 01:40:32 INFO  JobSubmitter:198 - number of splits:3
2020-12-09 01:40:32 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607477898298_0002
2020-12-09 01:40:32 INFO  YarnClientImpl:273 - Submitted application application_1607477898298_0002
2020-12-09 01:40:32 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607477898298_0002/
2020-12-09 01:40:32 INFO  Job:1339 - Running job: job_1607477898298_0002
2020-12-09 01:40:40 INFO  Job:1360 - Job job_1607477898298_0002 running in uber mode : false
2020-12-09 01:40:40 INFO  Job:1367 -  map 0% reduce 0%
2020-12-09 01:40:47 INFO  Job:1367 -  map 33% reduce 0%
2020-12-09 01:40:53 INFO  Job:1367 -  map 67% reduce 0%
2020-12-09 01:40:57 INFO  Job:1367 -  map 100% reduce 0%
2020-12-09 01:41:02 INFO  Job:1367 -  map 100% reduce 100%
2020-12-09 01:41:05 INFO  Job:1378 - Job job_1607477898298_0002 completed successfully
2020-12-09 01:41:05 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673535
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42696
		Total time spent by all reduces in occupied slots (ms)=15300
		Total time spent by all map tasks (ms)=10674
		Total time spent by all reduce tasks (ms)=3825
		Total vcore-milliseconds taken by all map tasks=10674
		Total vcore-milliseconds taken by all reduce tasks=3825
		Total megabyte-milliseconds taken by all map tasks=43720704
		Total megabyte-milliseconds taken by all reduce tasks=15667200
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=551
		CPU time spent (ms)=7060
		Physical memory (bytes) snapshot=1145237504
		Virtual memory (bytes) snapshot=15776772096
		Total committed heap usage (bytes)=1056440320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201209 01:41:05.607" starttime="20201209 01:41:05.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:41:05.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:41:05.608" starttime="20201209 01:41:05.607"></status>
</kw>
<status status="PASS" endtime="20201209 01:41:05.608" starttime="20201209 01:40:28.151"></status>
</kw>
<msg timestamp="20201209 01:41:05.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:41:05.609" starttime="20201209 01:40:28.150"></status>
</kw>
<msg timestamp="20201209 01:41:05.609" level="INFO">${output} = 2020-12-09 01:40:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-09 01:40:30 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201209 01:41:05.609" starttime="20201209 01:40:28.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201209 01:41:05.610" starttime="20201209 01:41:05.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:41:05.610" starttime="20201209 01:41:05.610"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:41:05.611" critical="yes" starttime="20201209 01:40:28.116"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201209 01:41:05.612" starttime="20201209 01:39:45.136"></status>
</suite>
<status status="PASS" elapsedtime="201432" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:43:49.451" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:43:51.932" level="INFO">${rc} = 255</msg>
<msg timestamp="20201209 01:43:51.932" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 01:43:51.932" starttime="20201209 01:43:49.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:43:51.934" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 01:43:51.934" starttime="20201209 01:43:51.933"></status>
</kw>
<msg timestamp="20201209 01:43:51.934" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 01:43:51.935" starttime="20201209 01:43:49.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:43:51.940" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:43:54.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:43:54.076" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:43:54.076" starttime="20201209 01:43:51.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:43:54.077" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:43:54.077" starttime="20201209 01:43:54.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:43:54.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:43:54.078" starttime="20201209 01:43:54.077"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:54.079" starttime="20201209 01:43:51.937"></status>
</kw>
<msg timestamp="20201209 01:43:54.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:43:54.079" starttime="20201209 01:43:51.936"></status>
</kw>
<msg timestamp="20201209 01:43:54.079" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201209 01:43:54.079" starttime="20201209 01:43:51.936"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201209 01:43:54.080" starttime="20201209 01:43:54.080"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:54.080" starttime="20201209 01:43:51.935"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:54.080" starttime="20201209 01:43:51.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:43:54.086" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:43:56.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:43:56.308" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:43:56.308" starttime="20201209 01:43:54.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:43:56.309" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:43:56.309" starttime="20201209 01:43:56.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:43:56.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:43:56.310" starttime="20201209 01:43:56.309"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:56.310" starttime="20201209 01:43:54.082"></status>
</kw>
<msg timestamp="20201209 01:43:56.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:43:56.310" starttime="20201209 01:43:54.082"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:56.311" starttime="20201209 01:43:54.081"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:56.311" starttime="20201209 01:43:54.081"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:56.311" starttime="20201209 01:43:54.081"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201209 01:43:56.312" starttime="20201209 01:43:56.311"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:43:56.317" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:43:58.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:43:58.544" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T01:43:56.276Z",
  "modificat...</msg>
<status status="PASS" endtime="20201209 01:43:58.544" starttime="20201209 01:43:56.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:43:58.546" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T01:43:56.276Z",
  "modificationTime" : "2020-12-09T01:43:56.276Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201209 01:43:58.546" starttime="20201209 01:43:58.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:43:58.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:43:58.547" starttime="20201209 01:43:58.546"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:58.547" starttime="20201209 01:43:56.313"></status>
</kw>
<msg timestamp="20201209 01:43:58.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:43:58.547" starttime="20201209 01:43:56.313"></status>
</kw>
<msg timestamp="20201209 01:43:58.548" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T01:43:56.276Z",
  "modificat...</msg>
<status status="PASS" endtime="20201209 01:43:58.548" starttime="20201209 01:43:56.312"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201209 01:43:58.548" starttime="20201209 01:43:58.548"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:43:58.553" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:43:58.553" starttime="20201209 01:43:58.552"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:43:58.553" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:43:58.554" starttime="20201209 01:43:58.553"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:58.554" starttime="20201209 01:43:58.552"></status>
</kw>
<msg timestamp="20201209 01:43:58.554" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:43:58.554" starttime="20201209 01:43:58.551"></status>
</kw>
<status status="PASS" endtime="20201209 01:43:58.554" starttime="20201209 01:43:58.550"></status>
</kw>
<msg timestamp="20201209 01:43:58.554" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201209 01:43:58.555" starttime="20201209 01:43:58.549"></status>
</kw>
<msg timestamp="20201209 01:43:58.555" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201209 01:43:58.555" starttime="20201209 01:43:58.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:43:58.560" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:44:00.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:44:00.875" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:44:00.875" starttime="20201209 01:43:58.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:44:00.877" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:44:00.877" starttime="20201209 01:44:00.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:44:00.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:44:00.878" starttime="20201209 01:44:00.877"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:00.878" starttime="20201209 01:43:58.556"></status>
</kw>
<msg timestamp="20201209 01:44:00.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:44:00.878" starttime="20201209 01:43:58.556"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:00.878" starttime="20201209 01:43:58.555"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:44:00.882" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:44:06.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:44:06.387" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:44:06.387" starttime="20201209 01:44:00.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:44:06.388" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:44:06.388" starttime="20201209 01:44:06.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:44:06.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:44:06.389" starttime="20201209 01:44:06.388"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:06.389" starttime="20201209 01:44:00.880"></status>
</kw>
<msg timestamp="20201209 01:44:06.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:44:06.389" starttime="20201209 01:44:00.879"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:06.390" starttime="20201209 01:44:00.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:44:06.395" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:44:10.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:44:10.678" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:44:10.678" starttime="20201209 01:44:06.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:44:10.679" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:44:10.679" starttime="20201209 01:44:10.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:44:10.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:44:10.680" starttime="20201209 01:44:10.680"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:10.681" starttime="20201209 01:44:06.391"></status>
</kw>
<msg timestamp="20201209 01:44:10.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:44:10.681" starttime="20201209 01:44:06.390"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:10.681" starttime="20201209 01:44:06.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:44:10.687" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:44:14.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:44:14.788" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:44:14.788" starttime="20201209 01:44:10.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:44:14.789" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:44:14.789" starttime="20201209 01:44:14.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:44:14.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:44:14.791" starttime="20201209 01:44:14.790"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:14.791" starttime="20201209 01:44:10.682"></status>
</kw>
<msg timestamp="20201209 01:44:14.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:44:14.791" starttime="20201209 01:44:10.682"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:14.791" starttime="20201209 01:44:10.681"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 01:44:14.792" critical="yes" starttime="20201209 01:43:49.444"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:44:14.798" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:44:14.798" starttime="20201209 01:44:14.797"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:44:14.799" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:44:14.799" starttime="20201209 01:44:14.799"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:14.800" starttime="20201209 01:44:14.796"></status>
</kw>
<msg timestamp="20201209 01:44:14.800" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:44:14.800" starttime="20201209 01:44:14.796"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:14.800" starttime="20201209 01:44:14.795"></status>
</kw>
<msg timestamp="20201209 01:44:14.801" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 01:44:14.801" starttime="20201209 01:44:14.794"></status>
</kw>
<msg timestamp="20201209 01:44:14.801" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 01:44:14.801" starttime="20201209 01:44:14.794"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:44:14.805" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:44:17.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:44:17.057" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:44:17.057" starttime="20201209 01:44:14.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:44:17.058" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:44:17.058" starttime="20201209 01:44:17.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:44:17.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:44:17.059" starttime="20201209 01:44:17.058"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:17.059" starttime="20201209 01:44:14.802"></status>
</kw>
<msg timestamp="20201209 01:44:17.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:44:17.060" starttime="20201209 01:44:14.802"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:17.060" starttime="20201209 01:44:14.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:44:17.064" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:44:19.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:44:19.317" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:44:19.317" starttime="20201209 01:44:17.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:44:19.318" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:44:19.318" starttime="20201209 01:44:19.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:44:19.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:44:19.319" starttime="20201209 01:44:19.318"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:19.319" starttime="20201209 01:44:17.061"></status>
</kw>
<msg timestamp="20201209 01:44:19.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:44:19.319" starttime="20201209 01:44:17.061"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:19.319" starttime="20201209 01:44:17.060"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 01:44:19.320" critical="yes" starttime="20201209 01:44:14.793"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201209 01:44:19.322" starttime="20201209 01:43:49.375"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:46:02.204" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:46:02.204" starttime="20201209 01:46:02.203"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:46:02.204" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:46:02.204" starttime="20201209 01:46:02.204"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:02.205" starttime="20201209 01:46:02.203"></status>
</kw>
<msg timestamp="20201209 01:46:02.205" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:46:02.205" starttime="20201209 01:46:02.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:46:02.206" starttime="20201209 01:46:02.205"></status>
</kw>
<msg timestamp="20201209 01:46:02.206" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 01:46:02.206" starttime="20201209 01:46:02.205"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:02.206" starttime="20201209 01:46:02.201"></status>
</kw>
<msg timestamp="20201209 01:46:02.206" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:46:02.206" starttime="20201209 01:46:02.200"></status>
</kw>
<msg timestamp="20201209 01:46:02.207" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:46:02.207" starttime="20201209 01:46:02.199"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:46:02.207" level="INFO">${random} = 93974</msg>
<status status="PASS" endtime="20201209 01:46:02.207" starttime="20201209 01:46:02.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:46:02.214" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-93974 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:46:05.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:46:05.757" level="INFO">${output} = 2020-12-09 01:46:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:46:05.757" starttime="20201209 01:46:02.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:46:05.759" level="INFO">2020-12-09 01:46:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:04 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-09 01:46:04 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:46:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:46:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:46:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:46:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3DF0F7625D2E-&gt;60290b64-8454-4037-9ee9-c97710e07e2c
2020-12-09 01:46:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 01:46:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201209 01:46:05.765" starttime="20201209 01:46:05.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:46:05.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:46:05.766" starttime="20201209 01:46:05.765"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:05.766" starttime="20201209 01:46:02.208"></status>
</kw>
<msg timestamp="20201209 01:46:05.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:46:05.766" starttime="20201209 01:46:02.208"></status>
</kw>
<msg timestamp="20201209 01:46:05.767" level="INFO">${result} = 2020-12-09 01:46:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:46:05.767" starttime="20201209 01:46:02.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:46:05.773" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:46:07.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:46:07.653" level="INFO">${output} = 2020-12-09 01:46:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:46:07.653" starttime="20201209 01:46:05.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:46:07.655" level="INFO">2020-12-09 01:46:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:07 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:44 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-09 01:44 ofs://om/volume1/bucket1/ozone-06157
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-09 01:46 ofs://om/volume1/bucket1/ozone-93974
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:44 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:45 ofs://om/volume1/bucket1/wordcount-90.txt
2020-12-09 01:46:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201209 01:46:07.655" starttime="20201209 01:46:07.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:46:07.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:46:07.655" starttime="20201209 01:46:07.655"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:07.656" starttime="20201209 01:46:05.769"></status>
</kw>
<msg timestamp="20201209 01:46:07.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:46:07.656" starttime="20201209 01:46:05.769"></status>
</kw>
<msg timestamp="20201209 01:46:07.656" level="INFO">${result} = 2020-12-09 01:46:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:06 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:07 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:46:07.656" starttime="20201209 01:46:05.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:46:07.657" starttime="20201209 01:46:07.656"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201209 01:46:07.657" critical="yes" starttime="20201209 01:46:02.195"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201209 01:46:07.658" starttime="20201209 01:46:02.128"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:44:24.393" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:44:24.393" starttime="20201209 01:44:24.393"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:44:24.394" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:44:24.394" starttime="20201209 01:44:24.393"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:24.394" starttime="20201209 01:44:24.392"></status>
</kw>
<msg timestamp="20201209 01:44:24.394" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:44:24.394" starttime="20201209 01:44:24.391"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:24.395" starttime="20201209 01:44:24.391"></status>
</kw>
<msg timestamp="20201209 01:44:24.395" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:44:24.395" starttime="20201209 01:44:24.390"></status>
</kw>
<msg timestamp="20201209 01:44:24.395" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:44:24.395" starttime="20201209 01:44:24.389"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:44:24.396" level="INFO">${random} = 06157</msg>
<status status="PASS" endtime="20201209 01:44:24.396" starttime="20201209 01:44:24.395"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:44:24.403" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-06157 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:44:28.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:44:28.300" level="INFO">${output} = 2020-12-09 01:44:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:44:28.300" starttime="20201209 01:44:24.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:44:28.302" level="INFO">2020-12-09 01:44:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:26 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-09 01:44:26 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:44:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:44:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:44:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:44:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-78C23E95F991-&gt;60290b64-8454-4037-9ee9-c97710e07e2c
2020-12-09 01:44:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 01:44:27 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201209 01:44:28.302" starttime="20201209 01:44:28.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:44:28.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:44:28.303" starttime="20201209 01:44:28.302"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:28.303" starttime="20201209 01:44:24.397"></status>
</kw>
<msg timestamp="20201209 01:44:28.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:44:28.303" starttime="20201209 01:44:24.397"></status>
</kw>
<msg timestamp="20201209 01:44:28.304" level="INFO">${result} = 2020-12-09 01:44:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:44:28.304" starttime="20201209 01:44:24.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:44:28.308" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:44:30.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:44:30.202" level="INFO">${output} = 2020-12-09 01:44:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:44:30.203" starttime="20201209 01:44:28.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:44:30.204" level="INFO">2020-12-09 01:44:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:30 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:44 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-09 01:44 o3fs://bucket1.volume1.om/ozone-06157
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:44 o3fs://bucket1.volume1.om/user
2020-12-09 01:44:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201209 01:44:30.204" starttime="20201209 01:44:30.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:44:30.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:44:30.205" starttime="20201209 01:44:30.204"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:30.205" starttime="20201209 01:44:28.306"></status>
</kw>
<msg timestamp="20201209 01:44:30.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:44:30.205" starttime="20201209 01:44:28.304"></status>
</kw>
<msg timestamp="20201209 01:44:30.206" level="INFO">${result} = 2020-12-09 01:44:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:44:30.206" starttime="20201209 01:44:28.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:44:30.207" starttime="20201209 01:44:30.206"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201209 01:44:30.207" critical="yes" starttime="20201209 01:44:24.388"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201209 01:44:30.208" starttime="20201209 01:44:24.324"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:46:12.727" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:46:12.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:46:12.730" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:46:12.730" starttime="20201209 01:46:12.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:46:12.731" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:46:12.731" starttime="20201209 01:46:12.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:46:12.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:46:12.732" starttime="20201209 01:46:12.732"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:12.732" starttime="20201209 01:46:12.717"></status>
</kw>
<msg timestamp="20201209 01:46:12.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:46:12.733" starttime="20201209 01:46:12.717"></status>
</kw>
<msg timestamp="20201209 01:46:12.733" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:46:12.733" starttime="20201209 01:46:12.716"></status>
</kw>
<msg timestamp="20201209 01:46:12.733" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:46:12.733" starttime="20201209 01:46:12.716"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:46:12.739" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:46:12.739" starttime="20201209 01:46:12.738"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:46:12.739" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:46:12.739" starttime="20201209 01:46:12.739"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:12.740" starttime="20201209 01:46:12.736"></status>
</kw>
<msg timestamp="20201209 01:46:12.740" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:46:12.740" starttime="20201209 01:46:12.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:46:12.741" starttime="20201209 01:46:12.741"></status>
</kw>
<msg timestamp="20201209 01:46:12.741" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 01:46:12.741" starttime="20201209 01:46:12.740"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:12.742" starttime="20201209 01:46:12.735"></status>
</kw>
<msg timestamp="20201209 01:46:12.742" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:46:12.742" starttime="20201209 01:46:12.734"></status>
</kw>
<msg timestamp="20201209 01:46:12.742" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:46:12.742" starttime="20201209 01:46:12.733"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:46:12.747" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:46:51.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:46:51.474" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:46:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46...</msg>
<status status="PASS" endtime="20201209 01:46:51.474" starttime="20201209 01:46:12.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:46:51.475" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:46:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:14 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-09 01:46:14 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:46:14 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:46:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:46:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:46:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A1E1E97B55A6-&gt;60290b64-8454-4037-9ee9-c97710e07e2c
2020-12-09 01:46:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-09 01:46:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-12-09 01:46:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 01:46:16 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 01:46:16 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 01:46:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607478202339_0003
2020-12-09 01:46:17 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-09 01:46:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:17 INFO  Configuration:2752 - resource-types.xml not found
2020-12-09 01:46:17 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-09 01:46:17 INFO  YarnClientImpl:324 - Submitted application application_1607478202339_0003
2020-12-09 01:46:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607478202339_0003/
2020-12-09 01:46:17 INFO  Job:1619 - Running job: job_1607478202339_0003
2020-12-09 01:46:25 INFO  Job:1640 - Job job_1607478202339_0003 running in uber mode : false
2020-12-09 01:46:25 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 01:46:32 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 01:46:38 INFO  Job:1647 -  map 67% reduce 0%
2020-12-09 01:46:43 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 01:46:50 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 01:46:50 INFO  Job:1658 - Job job_1607478202339_0003 completed successfully
2020-12-09 01:46:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016145
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42420
		Total time spent by all reduces in occupied slots (ms)=25716
		Total time spent by all map tasks (ms)=10605
		Total time spent by all reduce tasks (ms)=6429
		Total vcore-milliseconds taken by all map tasks=10605
		Total vcore-milliseconds taken by all reduce tasks=6429
		Total megabyte-milliseconds taken by all map tasks=43438080
		Total megabyte-milliseconds taken by all reduce tasks=26333184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=609
		CPU time spent (ms)=7130
		Physical memory (bytes) snapshot=1195847680
		Virtual memory (bytes) snapshot=15780216832
		Total committed heap usage (bytes)=1062207488
		Peak Map Physical memory (bytes)=307122176
		Peak Map Virtual memory (bytes)=3944198144
		Peak Reduce Physical memory (bytes)=297328640
		Peak Reduce Virtual memory (bytes)=3963064320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.871 seconds
2020-12-09 01:46:50 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-09 01:46:51 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201209 01:46:51.476" starttime="20201209 01:46:51.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:46:51.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:46:51.476" starttime="20201209 01:46:51.476"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.477" starttime="20201209 01:46:12.744"></status>
</kw>
<msg timestamp="20201209 01:46:51.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:46:51.477" starttime="20201209 01:46:12.743"></status>
</kw>
<msg timestamp="20201209 01:46:51.478" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:46:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46...</msg>
<status status="PASS" endtime="20201209 01:46:51.478" starttime="20201209 01:46:12.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:46:51.478" starttime="20201209 01:46:51.478"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:46:51.479" critical="yes" starttime="20201209 01:46:12.715"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:46:51.485" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:46:51.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:46:51.491" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:46:51.491" starttime="20201209 01:46:51.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:46:51.492" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:46:51.493" starttime="20201209 01:46:51.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:46:51.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:46:51.495" starttime="20201209 01:46:51.493"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.495" starttime="20201209 01:46:51.482"></status>
</kw>
<msg timestamp="20201209 01:46:51.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:46:51.495" starttime="20201209 01:46:51.482"></status>
</kw>
<msg timestamp="20201209 01:46:51.495" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:46:51.495" starttime="20201209 01:46:51.481"></status>
</kw>
<msg timestamp="20201209 01:46:51.496" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:46:51.496" starttime="20201209 01:46:51.481"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:46:51.497" level="INFO">${random} = 57</msg>
<status status="PASS" endtime="20201209 01:46:51.497" starttime="20201209 01:46:51.496"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:46:51.501" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:46:51.501" starttime="20201209 01:46:51.501"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:46:51.502" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:46:51.502" starttime="20201209 01:46:51.502"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.502" starttime="20201209 01:46:51.500"></status>
</kw>
<msg timestamp="20201209 01:46:51.503" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:46:51.503" starttime="20201209 01:46:51.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:46:51.504" starttime="20201209 01:46:51.503"></status>
</kw>
<msg timestamp="20201209 01:46:51.504" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 01:46:51.504" starttime="20201209 01:46:51.503"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.504" starttime="20201209 01:46:51.499"></status>
</kw>
<msg timestamp="20201209 01:46:51.504" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:46:51.504" starttime="20201209 01:46:51.498"></status>
</kw>
<msg timestamp="20201209 01:46:51.505" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:46:51.505" starttime="20201209 01:46:51.497"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:46:51.509" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:46:51.509" starttime="20201209 01:46:51.508"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:46:51.510" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:46:51.510" starttime="20201209 01:46:51.509"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.510" starttime="20201209 01:46:51.508"></status>
</kw>
<msg timestamp="20201209 01:46:51.510" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:46:51.510" starttime="20201209 01:46:51.507"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:46:51.512" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201209 01:46:51.512" starttime="20201209 01:46:51.511"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:46:51.513" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201209 01:46:51.513" starttime="20201209 01:46:51.512"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.513" starttime="20201209 01:46:51.511"></status>
</kw>
<msg timestamp="20201209 01:46:51.513" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201209 01:46:51.513" starttime="20201209 01:46:51.510"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.514" starttime="20201209 01:46:51.506"></status>
</kw>
<msg timestamp="20201209 01:46:51.514" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201209 01:46:51.514" starttime="20201209 01:46:51.506"></status>
</kw>
<msg timestamp="20201209 01:46:51.514" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201209 01:46:51.514" starttime="20201209 01:46:51.505"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:46:51.518" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:46:51.518" starttime="20201209 01:46:51.518"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:46:51.519" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:46:51.519" starttime="20201209 01:46:51.518"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.519" starttime="20201209 01:46:51.517"></status>
</kw>
<msg timestamp="20201209 01:46:51.519" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:46:51.519" starttime="20201209 01:46:51.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:46:51.521" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201209 01:46:51.521" starttime="20201209 01:46:51.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:46:51.522" level="INFO">${result} = /wordcount-57.txt</msg>
<status status="PASS" endtime="20201209 01:46:51.522" starttime="20201209 01:46:51.521"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.522" starttime="20201209 01:46:51.520"></status>
</kw>
<msg timestamp="20201209 01:46:51.522" level="INFO">${path_with_leading} = /wordcount-57.txt</msg>
<status status="PASS" endtime="20201209 01:46:51.522" starttime="20201209 01:46:51.520"></status>
</kw>
<status status="PASS" endtime="20201209 01:46:51.523" starttime="20201209 01:46:51.516"></status>
</kw>
<msg timestamp="20201209 01:46:51.523" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-57.txt</msg>
<status status="PASS" endtime="20201209 01:46:51.523" starttime="20201209 01:46:51.515"></status>
</kw>
<msg timestamp="20201209 01:46:51.523" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-57.txt</msg>
<status status="PASS" endtime="20201209 01:46:51.523" starttime="20201209 01:46:51.514"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:46:51.528" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-57.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:47:31.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:47:31.846" level="INFO">${output} = 2020-12-09 01:46:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:47:31.847" starttime="20201209 01:46:51.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:47:31.848" level="INFO">2020-12-09 01:46:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-12-09 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-09 01:46:53 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:46:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:46:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:46:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:46:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-098112B9A729-&gt;60290b64-8454-4037-9ee9-c97710e07e2c
2020-12-09 01:46:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 01:46:55 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 01:46:55 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 01:46:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607478202339_0004
2020-12-09 01:46:55 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-09 01:46:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:55 INFO  Configuration:2752 - resource-types.xml not found
2020-12-09 01:46:55 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-09 01:46:55 INFO  YarnClientImpl:324 - Submitted application application_1607478202339_0004
2020-12-09 01:46:55 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607478202339_0004/
2020-12-09 01:46:55 INFO  Job:1619 - Running job: job_1607478202339_0004
2020-12-09 01:47:04 INFO  Job:1640 - Job job_1607478202339_0004 running in uber mode : false
2020-12-09 01:47:04 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 01:47:11 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 01:47:17 INFO  Job:1647 -  map 67% reduce 0%
2020-12-09 01:47:23 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 01:47:30 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 01:47:31 INFO  Job:1658 - Job job_1607478202339_0004 completed successfully
2020-12-09 01:47:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:47:31 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078787
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42572
		Total time spent by all reduces in occupied slots (ms)=26128
		Total time spent by all map tasks (ms)=10643
		Total time spent by all reduce tasks (ms)=6532
		Total vcore-milliseconds taken by all map tasks=10643
		Total vcore-milliseconds taken by all reduce tasks=6532
		Total megabyte-milliseconds taken by all map tasks=43593728
		Total megabyte-milliseconds taken by all reduce tasks=26755072
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=596
		CPU time spent (ms)=7880
		Physical memory (bytes) snapshot=1222217728
		Virtual memory (bytes) snapshot=15803330560
		Total committed heap usage (bytes)=1070596096
		Peak Map Physical memory (bytes)=309960704
		Peak Map Virtual memory (bytes)=3948081152
		Peak Reduce Physical memory (bytes)=302075904
		Peak Reduce Virtual memory (bytes)=3967954944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-09 01:47:31 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201209 01:47:31.848" starttime="20201209 01:47:31.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:47:31.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:47:31.848" starttime="20201209 01:47:31.848"></status>
</kw>
<status status="PASS" endtime="20201209 01:47:31.849" starttime="20201209 01:46:51.524"></status>
</kw>
<msg timestamp="20201209 01:47:31.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:47:31.849" starttime="20201209 01:46:51.524"></status>
</kw>
<msg timestamp="20201209 01:47:31.849" level="INFO">${output} = 2020-12-09 01:46:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:46:53 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:47:31.850" starttime="20201209 01:46:51.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201209 01:47:31.850" starttime="20201209 01:47:31.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:47:31.851" starttime="20201209 01:47:31.850"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:47:31.851" critical="yes" starttime="20201209 01:46:51.480"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201209 01:47:31.853" starttime="20201209 01:46:12.652"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:44:35.281" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:44:35.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:44:35.288" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:44:35.288" starttime="20201209 01:44:35.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:44:35.290" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:44:35.290" starttime="20201209 01:44:35.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:44:35.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:44:35.291" starttime="20201209 01:44:35.290"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:35.291" starttime="20201209 01:44:35.277"></status>
</kw>
<msg timestamp="20201209 01:44:35.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:44:35.291" starttime="20201209 01:44:35.277"></status>
</kw>
<msg timestamp="20201209 01:44:35.291" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:44:35.291" starttime="20201209 01:44:35.276"></status>
</kw>
<msg timestamp="20201209 01:44:35.292" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:44:35.292" starttime="20201209 01:44:35.276"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:44:35.297" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:44:35.297" starttime="20201209 01:44:35.296"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:44:35.298" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:44:35.298" starttime="20201209 01:44:35.297"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:35.298" starttime="20201209 01:44:35.295"></status>
</kw>
<msg timestamp="20201209 01:44:35.298" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:44:35.298" starttime="20201209 01:44:35.294"></status>
</kw>
<status status="PASS" endtime="20201209 01:44:35.298" starttime="20201209 01:44:35.293"></status>
</kw>
<msg timestamp="20201209 01:44:35.298" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:44:35.298" starttime="20201209 01:44:35.293"></status>
</kw>
<msg timestamp="20201209 01:44:35.299" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:44:35.299" starttime="20201209 01:44:35.292"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:44:35.303" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:45:18.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:45:18.298" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:44:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44...</msg>
<status status="PASS" endtime="20201209 01:45:18.298" starttime="20201209 01:44:35.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:45:18.299" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:44:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:37 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-09 01:44:37 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:44:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:44:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:44:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:44:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-392793F87F4A-&gt;60290b64-8454-4037-9ee9-c97710e07e2c
2020-12-09 01:44:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-09 01:44:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-12-09 01:44:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 01:44:39 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 01:44:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607478202339_0001
2020-12-09 01:44:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-09 01:44:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:42 INFO  Configuration:2752 - resource-types.xml not found
2020-12-09 01:44:42 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-09 01:44:43 INFO  YarnClientImpl:324 - Submitted application application_1607478202339_0001
2020-12-09 01:44:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607478202339_0001/
2020-12-09 01:44:43 INFO  Job:1619 - Running job: job_1607478202339_0001
2020-12-09 01:44:54 INFO  Job:1640 - Job job_1607478202339_0001 running in uber mode : false
2020-12-09 01:44:54 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 01:45:01 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 01:45:06 INFO  Job:1647 -  map 67% reduce 0%
2020-12-09 01:45:11 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 01:45:16 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 01:45:17 INFO  Job:1658 - Job job_1607478202339_0001 completed successfully
2020-12-09 01:45:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43508
		Total time spent by all reduces in occupied slots (ms)=15152
		Total time spent by all map tasks (ms)=10877
		Total time spent by all reduce tasks (ms)=3788
		Total vcore-milliseconds taken by all map tasks=10877
		Total vcore-milliseconds taken by all reduce tasks=3788
		Total megabyte-milliseconds taken by all map tasks=44552192
		Total megabyte-milliseconds taken by all reduce tasks=15515648
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=657
		CPU time spent (ms)=6820
		Physical memory (bytes) snapshot=1283334144
		Virtual memory (bytes) snapshot=15784255488
		Total committed heap usage (bytes)=1086324736
		Peak Map Physical memory (bytes)=385183744
		Peak Map Virtual memory (bytes)=3946143744
		Peak Reduce Physical memory (bytes)=272633856
		Peak Reduce Virtual memory (bytes)=3950546944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.955 seconds
2020-12-09 01:45:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:17 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-09 01:45:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201209 01:45:18.300" starttime="20201209 01:45:18.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:45:18.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:45:18.300" starttime="20201209 01:45:18.300"></status>
</kw>
<status status="PASS" endtime="20201209 01:45:18.301" starttime="20201209 01:44:35.300"></status>
</kw>
<msg timestamp="20201209 01:45:18.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:45:18.301" starttime="20201209 01:44:35.300"></status>
</kw>
<msg timestamp="20201209 01:45:18.302" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:44:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:44...</msg>
<status status="PASS" endtime="20201209 01:45:18.302" starttime="20201209 01:44:35.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:45:18.302" starttime="20201209 01:45:18.302"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:45:18.302" critical="yes" starttime="20201209 01:44:35.275"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:45:18.308" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:45:18.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:45:18.315" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:45:18.315" starttime="20201209 01:45:18.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:45:18.316" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:45:18.316" starttime="20201209 01:45:18.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:45:18.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:45:18.317" starttime="20201209 01:45:18.316"></status>
</kw>
<status status="PASS" endtime="20201209 01:45:18.317" starttime="20201209 01:45:18.306"></status>
</kw>
<msg timestamp="20201209 01:45:18.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:45:18.317" starttime="20201209 01:45:18.305"></status>
</kw>
<msg timestamp="20201209 01:45:18.317" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:45:18.317" starttime="20201209 01:45:18.305"></status>
</kw>
<msg timestamp="20201209 01:45:18.318" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201209 01:45:18.318" starttime="20201209 01:45:18.304"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:45:18.319" level="INFO">${random} = 90</msg>
<status status="PASS" endtime="20201209 01:45:18.319" starttime="20201209 01:45:18.318"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:45:18.323" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:45:18.323" starttime="20201209 01:45:18.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:45:18.324" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:45:18.324" starttime="20201209 01:45:18.323"></status>
</kw>
<status status="PASS" endtime="20201209 01:45:18.324" starttime="20201209 01:45:18.322"></status>
</kw>
<msg timestamp="20201209 01:45:18.324" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:45:18.324" starttime="20201209 01:45:18.321"></status>
</kw>
<status status="PASS" endtime="20201209 01:45:18.325" starttime="20201209 01:45:18.320"></status>
</kw>
<msg timestamp="20201209 01:45:18.325" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:45:18.325" starttime="20201209 01:45:18.320"></status>
</kw>
<msg timestamp="20201209 01:45:18.325" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:45:18.325" starttime="20201209 01:45:18.319"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:45:18.329" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:45:18.329" starttime="20201209 01:45:18.329"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:45:18.330" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:45:18.330" starttime="20201209 01:45:18.329"></status>
</kw>
<status status="PASS" endtime="20201209 01:45:18.330" starttime="20201209 01:45:18.328"></status>
</kw>
<msg timestamp="20201209 01:45:18.330" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:45:18.330" starttime="20201209 01:45:18.327"></status>
</kw>
<status status="PASS" endtime="20201209 01:45:18.330" starttime="20201209 01:45:18.327"></status>
</kw>
<msg timestamp="20201209 01:45:18.331" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201209 01:45:18.331" starttime="20201209 01:45:18.326"></status>
</kw>
<msg timestamp="20201209 01:45:18.331" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201209 01:45:18.331" starttime="20201209 01:45:18.325"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:45:18.334" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:45:18.334" starttime="20201209 01:45:18.334"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:45:18.335" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:45:18.335" starttime="20201209 01:45:18.335"></status>
</kw>
<status status="PASS" endtime="20201209 01:45:18.335" starttime="20201209 01:45:18.334"></status>
</kw>
<msg timestamp="20201209 01:45:18.336" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:45:18.336" starttime="20201209 01:45:18.333"></status>
</kw>
<status status="PASS" endtime="20201209 01:45:18.336" starttime="20201209 01:45:18.332"></status>
</kw>
<msg timestamp="20201209 01:45:18.336" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-90.txt</msg>
<status status="PASS" endtime="20201209 01:45:18.336" starttime="20201209 01:45:18.332"></status>
</kw>
<msg timestamp="20201209 01:45:18.338" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-90.txt</msg>
<status status="PASS" endtime="20201209 01:45:18.338" starttime="20201209 01:45:18.331"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:45:18.343" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-90.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:45:57.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:45:57.260" level="INFO">${output} = 2020-12-09 01:45:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:45:57.260" starttime="20201209 01:45:18.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:45:57.262" level="INFO">2020-12-09 01:45:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.8:8032
2020-12-09 01:45:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 01:45:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:21 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-09 01:45:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-09 01:45:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:45:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:45:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:45:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2F89484E551A-&gt;60290b64-8454-4037-9ee9-c97710e07e2c
2020-12-09 01:45:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 01:45:22 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 01:45:22 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 01:45:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607478202339_0002
2020-12-09 01:45:22 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-09 01:45:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:23 INFO  Configuration:2752 - resource-types.xml not found
2020-12-09 01:45:23 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-09 01:45:23 INFO  YarnClientImpl:324 - Submitted application application_1607478202339_0002
2020-12-09 01:45:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607478202339_0002/
2020-12-09 01:45:23 INFO  Job:1619 - Running job: job_1607478202339_0002
2020-12-09 01:45:31 INFO  Job:1640 - Job job_1607478202339_0002 running in uber mode : false
2020-12-09 01:45:31 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 01:45:38 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 01:45:44 INFO  Job:1647 -  map 67% reduce 0%
2020-12-09 01:45:49 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 01:45:55 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 01:45:56 INFO  Job:1658 - Job job_1607478202339_0002 completed successfully
2020-12-09 01:45:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078871
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43716
		Total time spent by all reduces in occupied slots (ms)=15308
		Total time spent by all map tasks (ms)=10929
		Total time spent by all reduce tasks (ms)=3827
		Total vcore-milliseconds taken by all map tasks=10929
		Total vcore-milliseconds taken by all reduce tasks=3827
		Total megabyte-milliseconds taken by all map tasks=44765184
		Total megabyte-milliseconds taken by all reduce tasks=15675392
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=623
		CPU time spent (ms)=6810
		Physical memory (bytes) snapshot=1233092608
		Virtual memory (bytes) snapshot=15788023808
		Total committed heap usage (bytes)=1062731776
		Peak Map Physical memory (bytes)=321736704
		Peak Map Virtual memory (bytes)=3945713664
		Peak Reduce Physical memory (bytes)=275849216
		Peak Reduce Virtual memory (bytes)=3954454528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-09 01:45:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201209 01:45:57.262" starttime="20201209 01:45:57.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:45:57.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:45:57.263" starttime="20201209 01:45:57.262"></status>
</kw>
<status status="PASS" endtime="20201209 01:45:57.263" starttime="20201209 01:45:18.339"></status>
</kw>
<msg timestamp="20201209 01:45:57.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:45:57.263" starttime="20201209 01:45:18.339"></status>
</kw>
<msg timestamp="20201209 01:45:57.264" level="INFO">${output} = 2020-12-09 01:45:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-09 01:45:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201209 01:45:57.264" starttime="20201209 01:45:18.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201209 01:45:57.265" starttime="20201209 01:45:57.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:45:57.265" starttime="20201209 01:45:57.265"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:45:57.265" critical="yes" starttime="20201209 01:45:18.304"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201209 01:45:57.267" starttime="20201209 01:44:35.208"></status>
</suite>
<status status="PASS" elapsedtime="202621" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:48:43.526" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:48:48.680" level="INFO">${rc} = 255</msg>
<msg timestamp="20201209 01:48:48.680" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 01:48:48.680" starttime="20201209 01:48:43.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:48:48.682" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 01:48:48.682" starttime="20201209 01:48:48.681"></status>
</kw>
<msg timestamp="20201209 01:48:48.682" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201209 01:48:48.683" starttime="20201209 01:48:43.520"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:48:48.689" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:48:52.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:48:52.721" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:48:52.721" starttime="20201209 01:48:48.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:48:52.722" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:48:52.722" starttime="20201209 01:48:52.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:48:52.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:48:52.723" starttime="20201209 01:48:52.722"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:52.723" starttime="20201209 01:48:48.685"></status>
</kw>
<msg timestamp="20201209 01:48:52.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:48:52.723" starttime="20201209 01:48:48.685"></status>
</kw>
<msg timestamp="20201209 01:48:52.724" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201209 01:48:52.724" starttime="20201209 01:48:48.684"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201209 01:48:52.724" starttime="20201209 01:48:52.724"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:52.724" starttime="20201209 01:48:48.683"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:52.725" starttime="20201209 01:48:48.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:48:52.730" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:48:55.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:48:55.818" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:48:55.818" starttime="20201209 01:48:52.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:48:55.819" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:48:55.819" starttime="20201209 01:48:55.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:48:55.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:48:55.820" starttime="20201209 01:48:55.819"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:55.820" starttime="20201209 01:48:52.727"></status>
</kw>
<msg timestamp="20201209 01:48:55.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:48:55.821" starttime="20201209 01:48:52.726"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:55.821" starttime="20201209 01:48:52.726"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:55.821" starttime="20201209 01:48:52.725"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:55.821" starttime="20201209 01:48:52.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201209 01:48:55.822" starttime="20201209 01:48:55.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:48:55.826" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:48:59.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:48:59.170" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T01:48:55.712Z",
  "modificat...</msg>
<status status="PASS" endtime="20201209 01:48:59.170" starttime="20201209 01:48:55.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:48:59.172" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T01:48:55.712Z",
  "modificationTime" : "2020-12-09T01:48:55.712Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201209 01:48:59.172" starttime="20201209 01:48:59.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:48:59.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:48:59.173" starttime="20201209 01:48:59.172"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:59.173" starttime="20201209 01:48:55.823"></status>
</kw>
<msg timestamp="20201209 01:48:59.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:48:59.173" starttime="20201209 01:48:55.823"></status>
</kw>
<msg timestamp="20201209 01:48:59.174" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-09T01:48:55.712Z",
  "modificat...</msg>
<status status="PASS" endtime="20201209 01:48:59.174" starttime="20201209 01:48:55.822"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201209 01:48:59.174" starttime="20201209 01:48:59.174"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:48:59.179" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:48:59.179" starttime="20201209 01:48:59.178"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:48:59.179" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:48:59.179" starttime="20201209 01:48:59.179"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:59.180" starttime="20201209 01:48:59.177"></status>
</kw>
<msg timestamp="20201209 01:48:59.180" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:48:59.180" starttime="20201209 01:48:59.177"></status>
</kw>
<status status="PASS" endtime="20201209 01:48:59.180" starttime="20201209 01:48:59.176"></status>
</kw>
<msg timestamp="20201209 01:48:59.180" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201209 01:48:59.180" starttime="20201209 01:48:59.175"></status>
</kw>
<msg timestamp="20201209 01:48:59.180" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201209 01:48:59.181" starttime="20201209 01:48:59.175"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:48:59.185" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:49:02.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:49:02.833" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:49:02.833" starttime="20201209 01:48:59.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:49:02.834" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:49:02.834" starttime="20201209 01:49:02.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:49:02.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:49:02.835" starttime="20201209 01:49:02.834"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:02.835" starttime="20201209 01:48:59.183"></status>
</kw>
<msg timestamp="20201209 01:49:02.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:49:02.835" starttime="20201209 01:48:59.182"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:02.835" starttime="20201209 01:48:59.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:49:02.840" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:49:09.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:49:09.967" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:49:09.967" starttime="20201209 01:49:02.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:49:09.969" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:49:09.969" starttime="20201209 01:49:09.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:49:09.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:49:09.970" starttime="20201209 01:49:09.969"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:09.970" starttime="20201209 01:49:02.837"></status>
</kw>
<msg timestamp="20201209 01:49:09.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:49:09.970" starttime="20201209 01:49:02.836"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:09.970" starttime="20201209 01:49:02.836"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:49:09.974" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:49:15.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:49:15.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:49:15.511" starttime="20201209 01:49:09.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:49:15.512" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:49:15.512" starttime="20201209 01:49:15.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:49:15.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:49:15.513" starttime="20201209 01:49:15.513"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:15.514" starttime="20201209 01:49:09.972"></status>
</kw>
<msg timestamp="20201209 01:49:15.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:49:15.514" starttime="20201209 01:49:09.971"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:15.514" starttime="20201209 01:49:09.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:49:15.518" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:49:20.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:49:20.786" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:49:20.787" starttime="20201209 01:49:15.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:49:20.788" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:49:20.788" starttime="20201209 01:49:20.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:49:20.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:49:20.789" starttime="20201209 01:49:20.788"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:20.789" starttime="20201209 01:49:15.515"></status>
</kw>
<msg timestamp="20201209 01:49:20.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:49:20.789" starttime="20201209 01:49:15.515"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:20.789" starttime="20201209 01:49:15.514"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 01:49:20.790" critical="yes" starttime="20201209 01:48:43.519"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:49:20.796" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:49:20.796" starttime="20201209 01:49:20.795"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:49:20.796" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:49:20.796" starttime="20201209 01:49:20.796"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:20.797" starttime="20201209 01:49:20.794"></status>
</kw>
<msg timestamp="20201209 01:49:20.797" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:49:20.797" starttime="20201209 01:49:20.794"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:20.797" starttime="20201209 01:49:20.793"></status>
</kw>
<msg timestamp="20201209 01:49:20.797" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 01:49:20.797" starttime="20201209 01:49:20.792"></status>
</kw>
<msg timestamp="20201209 01:49:20.798" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 01:49:20.798" starttime="20201209 01:49:20.791"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:49:20.801" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:49:24.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:49:24.027" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:49:24.027" starttime="20201209 01:49:20.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:49:24.029" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:49:24.029" starttime="20201209 01:49:24.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:49:24.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:49:24.029" starttime="20201209 01:49:24.029"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:24.030" starttime="20201209 01:49:20.799"></status>
</kw>
<msg timestamp="20201209 01:49:24.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:49:24.030" starttime="20201209 01:49:20.798"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:24.030" starttime="20201209 01:49:20.798"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:49:24.034" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:49:27.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:49:27.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201209 01:49:27.511" starttime="20201209 01:49:24.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:49:27.512" level="INFO"></msg>
<status status="PASS" endtime="20201209 01:49:27.512" starttime="20201209 01:49:27.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:49:27.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:49:27.513" starttime="20201209 01:49:27.513"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:27.513" starttime="20201209 01:49:24.031"></status>
</kw>
<msg timestamp="20201209 01:49:27.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:49:27.514" starttime="20201209 01:49:24.031"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:27.514" starttime="20201209 01:49:24.030"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201209 01:49:27.514" critical="yes" starttime="20201209 01:49:20.791"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201209 01:49:27.515" starttime="20201209 01:48:43.444"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:51:15.604" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:51:15.604" starttime="20201209 01:51:15.604"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:51:15.605" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:51:15.605" starttime="20201209 01:51:15.604"></status>
</kw>
<status status="PASS" endtime="20201209 01:51:15.605" starttime="20201209 01:51:15.603"></status>
</kw>
<msg timestamp="20201209 01:51:15.605" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:51:15.605" starttime="20201209 01:51:15.603"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:51:15.606" starttime="20201209 01:51:15.606"></status>
</kw>
<msg timestamp="20201209 01:51:15.606" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 01:51:15.606" starttime="20201209 01:51:15.605"></status>
</kw>
<status status="PASS" endtime="20201209 01:51:15.607" starttime="20201209 01:51:15.602"></status>
</kw>
<msg timestamp="20201209 01:51:15.607" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:51:15.607" starttime="20201209 01:51:15.601"></status>
</kw>
<msg timestamp="20201209 01:51:15.607" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:51:15.607" starttime="20201209 01:51:15.600"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:51:15.608" level="INFO">${random} = 74465</msg>
<status status="PASS" endtime="20201209 01:51:15.608" starttime="20201209 01:51:15.607"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:51:15.613" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-74465 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:51:19.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:51:19.439" level="INFO">${output} = 2020-12-09 01:51:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:51:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201209 01:51:19.439" starttime="20201209 01:51:15.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:51:19.440" level="INFO">2020-12-09 01:51:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:51:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:51:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:51:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:51:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-72128D8C049C-&gt;cb314464-4b7a-4310-991d-6f94bc207024
2020-12-09 01:51:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201209 01:51:19.440" starttime="20201209 01:51:19.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:51:19.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:51:19.441" starttime="20201209 01:51:19.440"></status>
</kw>
<status status="PASS" endtime="20201209 01:51:19.441" starttime="20201209 01:51:15.609"></status>
</kw>
<msg timestamp="20201209 01:51:19.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:51:19.441" starttime="20201209 01:51:15.609"></status>
</kw>
<msg timestamp="20201209 01:51:19.442" level="INFO">${result} = 2020-12-09 01:51:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:51:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201209 01:51:19.442" starttime="20201209 01:51:15.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:51:19.449" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:51:21.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:51:21.468" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:49 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 01:49 ofs://om/volume1/bucket1/ozone-43581
-rw-...</msg>
<status status="PASS" endtime="20201209 01:51:21.468" starttime="20201209 01:51:19.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:51:21.469" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:49 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 01:49 ofs://om/volume1/bucket1/ozone-43581
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 01:51 ofs://om/volume1/bucket1/ozone-74465
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:49 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:50 ofs://om/volume1/bucket1/wordcount-63.txt</msg>
<status status="PASS" endtime="20201209 01:51:21.469" starttime="20201209 01:51:21.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:51:21.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:51:21.470" starttime="20201209 01:51:21.469"></status>
</kw>
<status status="PASS" endtime="20201209 01:51:21.470" starttime="20201209 01:51:19.444"></status>
</kw>
<msg timestamp="20201209 01:51:21.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:51:21.471" starttime="20201209 01:51:19.444"></status>
</kw>
<msg timestamp="20201209 01:51:21.471" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:49 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 01:49 ofs://om/volume1/bucket1/ozone-43581
-rw-...</msg>
<status status="PASS" endtime="20201209 01:51:21.471" starttime="20201209 01:51:19.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:51:21.472" starttime="20201209 01:51:21.471"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201209 01:51:21.472" critical="yes" starttime="20201209 01:51:15.599"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201209 01:51:21.473" starttime="20201209 01:51:15.540"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:49:32.525" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:49:32.525" starttime="20201209 01:49:32.524"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:49:32.525" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:49:32.525" starttime="20201209 01:49:32.525"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:32.526" starttime="20201209 01:49:32.524"></status>
</kw>
<msg timestamp="20201209 01:49:32.526" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:49:32.526" starttime="20201209 01:49:32.523"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:32.526" starttime="20201209 01:49:32.522"></status>
</kw>
<msg timestamp="20201209 01:49:32.526" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:49:32.526" starttime="20201209 01:49:32.521"></status>
</kw>
<msg timestamp="20201209 01:49:32.527" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:49:32.527" starttime="20201209 01:49:32.520"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:49:32.527" level="INFO">${random} = 43581</msg>
<status status="PASS" endtime="20201209 01:49:32.527" starttime="20201209 01:49:32.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:49:32.533" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-43581 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:49:36.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:49:36.362" level="INFO">${output} = 2020-12-09 01:49:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:49:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201209 01:49:36.362" starttime="20201209 01:49:32.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:49:36.363" level="INFO">2020-12-09 01:49:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:49:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:49:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:49:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:49:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9643AD2CA319-&gt;cb314464-4b7a-4310-991d-6f94bc207024
2020-12-09 01:49:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201209 01:49:36.364" starttime="20201209 01:49:36.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:49:36.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:49:36.364" starttime="20201209 01:49:36.364"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:36.365" starttime="20201209 01:49:32.528"></status>
</kw>
<msg timestamp="20201209 01:49:36.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:49:36.365" starttime="20201209 01:49:32.528"></status>
</kw>
<msg timestamp="20201209 01:49:36.365" level="INFO">${result} = 2020-12-09 01:49:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:49:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201209 01:49:36.365" starttime="20201209 01:49:32.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:49:36.372" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:49:38.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:49:38.436" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:49 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 01:49 o3fs://bucket1.volume1.om/ozone-43581
dr...</msg>
<status status="PASS" endtime="20201209 01:49:38.437" starttime="20201209 01:49:36.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:49:38.438" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:49 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 01:49 o3fs://bucket1.volume1.om/ozone-43581
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:49 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201209 01:49:38.438" starttime="20201209 01:49:38.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:49:38.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:49:38.439" starttime="20201209 01:49:38.438"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:38.439" starttime="20201209 01:49:36.368"></status>
</kw>
<msg timestamp="20201209 01:49:38.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:49:38.439" starttime="20201209 01:49:36.366"></status>
</kw>
<msg timestamp="20201209 01:49:38.440" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-09 01:49 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-09 01:49 o3fs://bucket1.volume1.om/ozone-43581
dr...</msg>
<status status="PASS" endtime="20201209 01:49:38.440" starttime="20201209 01:49:36.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:49:38.441" starttime="20201209 01:49:38.440"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201209 01:49:38.441" critical="yes" starttime="20201209 01:49:32.520"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201209 01:49:38.442" starttime="20201209 01:49:32.456"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:51:26.464" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:51:26.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:51:26.471" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:51:26.471" starttime="20201209 01:51:26.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:51:26.473" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:51:26.473" starttime="20201209 01:51:26.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:51:26.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:51:26.474" starttime="20201209 01:51:26.473"></status>
</kw>
<status status="PASS" endtime="20201209 01:51:26.474" starttime="20201209 01:51:26.457"></status>
</kw>
<msg timestamp="20201209 01:51:26.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:51:26.474" starttime="20201209 01:51:26.456"></status>
</kw>
<msg timestamp="20201209 01:51:26.474" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:51:26.474" starttime="20201209 01:51:26.456"></status>
</kw>
<msg timestamp="20201209 01:51:26.475" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:51:26.475" starttime="20201209 01:51:26.455"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:51:26.480" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:51:26.480" starttime="20201209 01:51:26.480"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:51:26.481" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:51:26.481" starttime="20201209 01:51:26.480"></status>
</kw>
<status status="PASS" endtime="20201209 01:51:26.481" starttime="20201209 01:51:26.478"></status>
</kw>
<msg timestamp="20201209 01:51:26.481" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:51:26.481" starttime="20201209 01:51:26.477"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:51:26.483" starttime="20201209 01:51:26.482"></status>
</kw>
<msg timestamp="20201209 01:51:26.483" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 01:51:26.483" starttime="20201209 01:51:26.482"></status>
</kw>
<status status="PASS" endtime="20201209 01:51:26.483" starttime="20201209 01:51:26.477"></status>
</kw>
<msg timestamp="20201209 01:51:26.483" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:51:26.483" starttime="20201209 01:51:26.476"></status>
</kw>
<msg timestamp="20201209 01:51:26.484" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:51:26.484" starttime="20201209 01:51:26.475"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:51:26.487" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:52:05.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:52:05.953" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:51:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:51:28 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201209 01:52:05.953" starttime="20201209 01:51:26.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:52:05.954" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:51:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:51:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:51:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:51:29 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:51:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-05DF4152A69D-&gt;cb314464-4b7a-4310-991d-6f94bc207024
2020-12-09 01:51:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-09 01:51:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-09 01:51:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 01:51:33 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 01:51:33 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 01:51:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607478495119_0003
2020-12-09 01:51:33 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-09 01:51:33 INFO  Configuration:2795 - resource-types.xml not found
2020-12-09 01:51:33 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-09 01:51:33 INFO  YarnClientImpl:329 - Submitted application application_1607478495119_0003
2020-12-09 01:51:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607478495119_0003/
2020-12-09 01:51:33 INFO  Job:1619 - Running job: job_1607478495119_0003
2020-12-09 01:51:42 INFO  Job:1640 - Job job_1607478495119_0003 running in uber mode : false
2020-12-09 01:51:42 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 01:51:48 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 01:51:54 INFO  Job:1647 -  map 67% reduce 0%
2020-12-09 01:52:00 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 01:52:05 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 01:52:05 INFO  Job:1658 - Job job_1607478495119_0003 completed successfully
2020-12-09 01:52:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056249
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42648
		Total time spent by all reduces in occupied slots (ms)=15440
		Total time spent by all map tasks (ms)=10662
		Total time spent by all reduce tasks (ms)=3860
		Total vcore-milliseconds taken by all map tasks=10662
		Total vcore-milliseconds taken by all reduce tasks=3860
		Total megabyte-milliseconds taken by all map tasks=43671552
		Total megabyte-milliseconds taken by all reduce tasks=15810560
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=638
		CPU time spent (ms)=7750
		Physical memory (bytes) snapshot=1354489856
		Virtual memory (bytes) snapshot=15809531904
		Total committed heap usage (bytes)=1549795328
		Peak Map Physical memory (bytes)=376999936
		Peak Map Virtual memory (bytes)=3949162496
		Peak Reduce Physical memory (bytes)=314892288
		Peak Reduce Virtual memory (bytes)=3966480384
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.019 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201209 01:52:05.954" starttime="20201209 01:52:05.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:52:05.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:52:05.955" starttime="20201209 01:52:05.955"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.955" starttime="20201209 01:51:26.485"></status>
</kw>
<msg timestamp="20201209 01:52:05.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:52:05.956" starttime="20201209 01:51:26.485"></status>
</kw>
<msg timestamp="20201209 01:52:05.956" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:51:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:51:28 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201209 01:52:05.956" starttime="20201209 01:51:26.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:52:05.957" starttime="20201209 01:52:05.956"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:52:05.957" critical="yes" starttime="20201209 01:51:26.455"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:52:05.963" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:52:05.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:52:05.969" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:52:05.969" starttime="20201209 01:52:05.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:52:05.970" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:52:05.970" starttime="20201209 01:52:05.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:52:05.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:52:05.971" starttime="20201209 01:52:05.970"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.971" starttime="20201209 01:52:05.960"></status>
</kw>
<msg timestamp="20201209 01:52:05.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:52:05.971" starttime="20201209 01:52:05.960"></status>
</kw>
<msg timestamp="20201209 01:52:05.971" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:52:05.971" starttime="20201209 01:52:05.959"></status>
</kw>
<msg timestamp="20201209 01:52:05.972" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:52:05.972" starttime="20201209 01:52:05.959"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:52:05.972" level="INFO">${random} = 39</msg>
<status status="PASS" endtime="20201209 01:52:05.973" starttime="20201209 01:52:05.972"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:52:05.977" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:52:05.977" starttime="20201209 01:52:05.976"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:52:05.979" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:52:05.979" starttime="20201209 01:52:05.977"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.979" starttime="20201209 01:52:05.976"></status>
</kw>
<msg timestamp="20201209 01:52:05.979" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:52:05.979" starttime="20201209 01:52:05.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201209 01:52:05.980" starttime="20201209 01:52:05.980"></status>
</kw>
<msg timestamp="20201209 01:52:05.981" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201209 01:52:05.981" starttime="20201209 01:52:05.979"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.981" starttime="20201209 01:52:05.974"></status>
</kw>
<msg timestamp="20201209 01:52:05.981" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:52:05.981" starttime="20201209 01:52:05.973"></status>
</kw>
<msg timestamp="20201209 01:52:05.982" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201209 01:52:05.982" starttime="20201209 01:52:05.973"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:52:05.985" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:52:05.985" starttime="20201209 01:52:05.985"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:52:05.986" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:52:05.986" starttime="20201209 01:52:05.985"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.986" starttime="20201209 01:52:05.984"></status>
</kw>
<msg timestamp="20201209 01:52:05.986" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:52:05.986" starttime="20201209 01:52:05.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:52:05.988" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201209 01:52:05.988" starttime="20201209 01:52:05.987"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:52:05.988" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201209 01:52:05.989" starttime="20201209 01:52:05.988"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.989" starttime="20201209 01:52:05.987"></status>
</kw>
<msg timestamp="20201209 01:52:05.989" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201209 01:52:05.989" starttime="20201209 01:52:05.986"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.990" starttime="20201209 01:52:05.983"></status>
</kw>
<msg timestamp="20201209 01:52:05.990" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201209 01:52:05.990" starttime="20201209 01:52:05.983"></status>
</kw>
<msg timestamp="20201209 01:52:05.990" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201209 01:52:05.990" starttime="20201209 01:52:05.982"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201209 01:52:05.994" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201209 01:52:05.994" starttime="20201209 01:52:05.994"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:52:05.995" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201209 01:52:05.995" starttime="20201209 01:52:05.994"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.995" starttime="20201209 01:52:05.993"></status>
</kw>
<msg timestamp="20201209 01:52:05.995" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201209 01:52:05.995" starttime="20201209 01:52:05.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:52:05.997" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201209 01:52:05.997" starttime="20201209 01:52:05.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:52:05.998" level="INFO">${result} = /wordcount-39.txt</msg>
<status status="PASS" endtime="20201209 01:52:05.998" starttime="20201209 01:52:05.997"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.998" starttime="20201209 01:52:05.996"></status>
</kw>
<msg timestamp="20201209 01:52:05.998" level="INFO">${path_with_leading} = /wordcount-39.txt</msg>
<status status="PASS" endtime="20201209 01:52:05.998" starttime="20201209 01:52:05.996"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:05.999" starttime="20201209 01:52:05.992"></status>
</kw>
<msg timestamp="20201209 01:52:05.999" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-39.txt</msg>
<status status="PASS" endtime="20201209 01:52:05.999" starttime="20201209 01:52:05.991"></status>
</kw>
<msg timestamp="20201209 01:52:05.999" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-39.txt</msg>
<status status="PASS" endtime="20201209 01:52:05.999" starttime="20201209 01:52:05.990"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:52:06.003" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-39.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:52:43.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:52:43.403" level="INFO">${output} = 2020-12-09 01:52:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-09 01:52:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201209 01:52:43.403" starttime="20201209 01:52:06.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:52:43.405" level="INFO">2020-12-09 01:52:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-09 01:52:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 01:52:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:52:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:52:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:52:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:52:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-04E0F936207A-&gt;cb314464-4b7a-4310-991d-6f94bc207024
2020-12-09 01:52:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 01:52:09 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 01:52:09 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 01:52:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607478495119_0004
2020-12-09 01:52:10 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-09 01:52:10 INFO  Configuration:2795 - resource-types.xml not found
2020-12-09 01:52:10 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-09 01:52:10 INFO  YarnClientImpl:329 - Submitted application application_1607478495119_0004
2020-12-09 01:52:10 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607478495119_0004/
2020-12-09 01:52:10 INFO  Job:1619 - Running job: job_1607478495119_0004
2020-12-09 01:52:18 INFO  Job:1640 - Job job_1607478495119_0004 running in uber mode : false
2020-12-09 01:52:18 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 01:52:25 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 01:52:31 INFO  Job:1647 -  map 67% reduce 0%
2020-12-09 01:52:37 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 01:52:41 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 01:52:42 INFO  Job:1658 - Job job_1607478495119_0004 completed successfully
2020-12-09 01:52:43 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118903
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43256
		Total time spent by all reduces in occupied slots (ms)=15808
		Total time spent by all map tasks (ms)=10814
		Total time spent by all reduce tasks (ms)=3952
		Total vcore-milliseconds taken by all map tasks=10814
		Total vcore-milliseconds taken by all reduce tasks=3952
		Total megabyte-milliseconds taken by all map tasks=44294144
		Total megabyte-milliseconds taken by all reduce tasks=16187392
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=607
		CPU time spent (ms)=8050
		Physical memory (bytes) snapshot=1502781440
		Virtual memory (bytes) snapshot=15810457600
		Total committed heap usage (bytes)=1788870656
		Peak Map Physical memory (bytes)=375857152
		Peak Map Virtual memory (bytes)=3948535808
		Peak Reduce Physical memory (bytes)=380383232
		Peak Reduce Virtual memory (bytes)=3966951424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201209 01:52:43.405" starttime="20201209 01:52:43.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:52:43.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:52:43.406" starttime="20201209 01:52:43.405"></status>
</kw>
<status status="PASS" endtime="20201209 01:52:43.406" starttime="20201209 01:52:06.000"></status>
</kw>
<msg timestamp="20201209 01:52:43.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:52:43.406" starttime="20201209 01:52:06.000"></status>
</kw>
<msg timestamp="20201209 01:52:43.407" level="INFO">${output} = 2020-12-09 01:52:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-09 01:52:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201209 01:52:43.407" starttime="20201209 01:52:05.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201209 01:52:43.407" starttime="20201209 01:52:43.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:52:43.408" starttime="20201209 01:52:43.408"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:52:43.408" critical="yes" starttime="20201209 01:52:05.958"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201209 01:52:43.409" starttime="20201209 01:51:26.393"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:49:43.468" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:49:43.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:49:43.472" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:49:43.473" starttime="20201209 01:49:43.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:49:43.474" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:49:43.474" starttime="20201209 01:49:43.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:49:43.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:49:43.475" starttime="20201209 01:49:43.474"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:43.475" starttime="20201209 01:49:43.463"></status>
</kw>
<msg timestamp="20201209 01:49:43.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:49:43.475" starttime="20201209 01:49:43.462"></status>
</kw>
<msg timestamp="20201209 01:49:43.475" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:49:43.475" starttime="20201209 01:49:43.462"></status>
</kw>
<msg timestamp="20201209 01:49:43.476" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:49:43.476" starttime="20201209 01:49:43.461"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:49:43.481" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:49:43.481" starttime="20201209 01:49:43.480"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:49:43.482" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:49:43.482" starttime="20201209 01:49:43.481"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:43.482" starttime="20201209 01:49:43.479"></status>
</kw>
<msg timestamp="20201209 01:49:43.482" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:49:43.482" starttime="20201209 01:49:43.478"></status>
</kw>
<status status="PASS" endtime="20201209 01:49:43.482" starttime="20201209 01:49:43.477"></status>
</kw>
<msg timestamp="20201209 01:49:43.482" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:49:43.482" starttime="20201209 01:49:43.477"></status>
</kw>
<msg timestamp="20201209 01:49:43.483" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:49:43.483" starttime="20201209 01:49:43.476"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:49:43.487" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:50:30.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:50:30.808" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:49:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:49:45 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201209 01:50:30.808" starttime="20201209 01:49:43.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:50:30.809" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:49:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:49:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:49:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:49:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:49:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-802254B141AD-&gt;cb314464-4b7a-4310-991d-6f94bc207024
2020-12-09 01:49:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-09 01:49:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-09 01:49:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 01:49:50 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 01:49:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607478495119_0001
2020-12-09 01:49:50 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-09 01:49:51 INFO  Configuration:2795 - resource-types.xml not found
2020-12-09 01:49:51 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-09 01:49:51 INFO  YarnClientImpl:329 - Submitted application application_1607478495119_0001
2020-12-09 01:49:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607478495119_0001/
2020-12-09 01:49:51 INFO  Job:1619 - Running job: job_1607478495119_0001
2020-12-09 01:50:02 INFO  Job:1640 - Job job_1607478495119_0001 running in uber mode : false
2020-12-09 01:50:02 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 01:50:08 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 01:50:14 INFO  Job:1647 -  map 67% reduce 0%
2020-12-09 01:50:20 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 01:50:27 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 01:50:30 INFO  Job:1658 - Job job_1607478495119_0001 completed successfully
2020-12-09 01:50:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056453
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43284
		Total time spent by all reduces in occupied slots (ms)=16700
		Total time spent by all map tasks (ms)=10821
		Total time spent by all reduce tasks (ms)=4175
		Total vcore-milliseconds taken by all map tasks=10821
		Total vcore-milliseconds taken by all reduce tasks=4175
		Total megabyte-milliseconds taken by all map tasks=44322816
		Total megabyte-milliseconds taken by all reduce tasks=17100800
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=687
		CPU time spent (ms)=7570
		Physical memory (bytes) snapshot=1350529024
		Virtual memory (bytes) snapshot=15813312512
		Total committed heap usage (bytes)=1440743424
		Peak Map Physical memory (bytes)=374837248
		Peak Map Virtual memory (bytes)=3947999232
		Peak Reduce Physical memory (bytes)=303038464
		Peak Reduce Virtual memory (bytes)=3970719744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.336 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201209 01:50:30.810" starttime="20201209 01:50:30.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:50:30.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:50:30.810" starttime="20201209 01:50:30.810"></status>
</kw>
<status status="PASS" endtime="20201209 01:50:30.811" starttime="20201209 01:49:43.484"></status>
</kw>
<msg timestamp="20201209 01:50:30.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:50:30.811" starttime="20201209 01:49:43.484"></status>
</kw>
<msg timestamp="20201209 01:50:30.811" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-09 01:49:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:49:45 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201209 01:50:30.811" starttime="20201209 01:49:43.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:50:30.812" starttime="20201209 01:50:30.812"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:50:30.812" critical="yes" starttime="20201209 01:49:43.461"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:50:30.818" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:50:30.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:50:30.823" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:50:30.824" starttime="20201209 01:50:30.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:50:30.825" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:50:30.825" starttime="20201209 01:50:30.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:50:30.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:50:30.825" starttime="20201209 01:50:30.825"></status>
</kw>
<status status="PASS" endtime="20201209 01:50:30.826" starttime="20201209 01:50:30.815"></status>
</kw>
<msg timestamp="20201209 01:50:30.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:50:30.826" starttime="20201209 01:50:30.815"></status>
</kw>
<msg timestamp="20201209 01:50:30.826" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:50:30.826" starttime="20201209 01:50:30.814"></status>
</kw>
<msg timestamp="20201209 01:50:30.826" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201209 01:50:30.827" starttime="20201209 01:50:30.814"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201209 01:50:30.827" level="INFO">${random} = 63</msg>
<status status="PASS" endtime="20201209 01:50:30.827" starttime="20201209 01:50:30.827"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:50:30.832" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:50:30.832" starttime="20201209 01:50:30.831"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:50:30.833" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:50:30.833" starttime="20201209 01:50:30.832"></status>
</kw>
<status status="PASS" endtime="20201209 01:50:30.833" starttime="20201209 01:50:30.831"></status>
</kw>
<msg timestamp="20201209 01:50:30.833" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:50:30.833" starttime="20201209 01:50:30.830"></status>
</kw>
<status status="PASS" endtime="20201209 01:50:30.833" starttime="20201209 01:50:30.829"></status>
</kw>
<msg timestamp="20201209 01:50:30.833" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:50:30.833" starttime="20201209 01:50:30.829"></status>
</kw>
<msg timestamp="20201209 01:50:30.834" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201209 01:50:30.834" starttime="20201209 01:50:30.828"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:50:30.838" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:50:30.838" starttime="20201209 01:50:30.837"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:50:30.840" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:50:30.840" starttime="20201209 01:50:30.840"></status>
</kw>
<status status="PASS" endtime="20201209 01:50:30.840" starttime="20201209 01:50:30.837"></status>
</kw>
<msg timestamp="20201209 01:50:30.841" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:50:30.841" starttime="20201209 01:50:30.836"></status>
</kw>
<status status="PASS" endtime="20201209 01:50:30.841" starttime="20201209 01:50:30.835"></status>
</kw>
<msg timestamp="20201209 01:50:30.841" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201209 01:50:30.841" starttime="20201209 01:50:30.835"></status>
</kw>
<msg timestamp="20201209 01:50:30.841" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201209 01:50:30.841" starttime="20201209 01:50:30.834"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201209 01:50:30.845" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201209 01:50:30.845" starttime="20201209 01:50:30.845"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201209 01:50:30.846" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201209 01:50:30.846" starttime="20201209 01:50:30.845"></status>
</kw>
<status status="PASS" endtime="20201209 01:50:30.846" starttime="20201209 01:50:30.844"></status>
</kw>
<msg timestamp="20201209 01:50:30.846" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201209 01:50:30.846" starttime="20201209 01:50:30.844"></status>
</kw>
<status status="PASS" endtime="20201209 01:50:30.847" starttime="20201209 01:50:30.843"></status>
</kw>
<msg timestamp="20201209 01:50:30.847" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-63.txt</msg>
<status status="PASS" endtime="20201209 01:50:30.847" starttime="20201209 01:50:30.842"></status>
</kw>
<msg timestamp="20201209 01:50:30.847" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-63.txt</msg>
<status status="PASS" endtime="20201209 01:50:30.847" starttime="20201209 01:50:30.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201209 01:50:30.851" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-63.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201209 01:51:10.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20201209 01:51:10.658" level="INFO">${output} = 2020-12-09 01:50:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-09 01:50:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201209 01:51:10.659" starttime="20201209 01:50:30.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201209 01:51:10.660" level="INFO">2020-12-09 01:50:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-09 01:50:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-09 01:50:33 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-09 01:50:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-09 01:50:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-09 01:50:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-09 01:50:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6EC6B5E4507C-&gt;cb314464-4b7a-4310-991d-6f94bc207024
2020-12-09 01:50:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-09 01:50:34 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-09 01:50:34 INFO  JobSubmitter:202 - number of splits:3
2020-12-09 01:50:37 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607478495119_0002
2020-12-09 01:50:37 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-09 01:50:37 INFO  Configuration:2795 - resource-types.xml not found
2020-12-09 01:50:37 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-09 01:50:37 INFO  YarnClientImpl:329 - Submitted application application_1607478495119_0002
2020-12-09 01:50:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607478495119_0002/
2020-12-09 01:50:37 INFO  Job:1619 - Running job: job_1607478495119_0002
2020-12-09 01:50:44 INFO  Job:1640 - Job job_1607478495119_0002 running in uber mode : false
2020-12-09 01:50:44 INFO  Job:1647 -  map 0% reduce 0%
2020-12-09 01:50:52 INFO  Job:1647 -  map 33% reduce 0%
2020-12-09 01:50:58 INFO  Job:1647 -  map 67% reduce 0%
2020-12-09 01:51:04 INFO  Job:1647 -  map 100% reduce 0%
2020-12-09 01:51:09 INFO  Job:1647 -  map 100% reduce 100%
2020-12-09 01:51:10 INFO  Job:1658 - Job job_1607478495119_0002 completed successfully
2020-12-09 01:51:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118991
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42844
		Total time spent by all reduces in occupied slots (ms)=16028
		Total time spent by all map tasks (ms)=10711
		Total time spent by all reduce tasks (ms)=4007
		Total vcore-milliseconds taken by all map tasks=10711
		Total vcore-milliseconds taken by all reduce tasks=4007
		Total megabyte-milliseconds taken by all map tasks=43872256
		Total megabyte-milliseconds taken by all reduce tasks=16412672
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=618
		CPU time spent (ms)=7480
		Physical memory (bytes) snapshot=1414717440
		Virtual memory (bytes) snapshot=15784165376
		Total committed heap usage (bytes)=1671430144
		Peak Map Physical memory (bytes)=382504960
		Peak Map Virtual memory (bytes)=3949264896
		Peak Reduce Physical memory (bytes)=300457984
		Peak Reduce Virtual memory (bytes)=3965935616
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201209 01:51:10.660" starttime="20201209 01:51:10.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201209 01:51:10.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201209 01:51:10.661" starttime="20201209 01:51:10.660"></status>
</kw>
<status status="PASS" endtime="20201209 01:51:10.661" starttime="20201209 01:50:30.848"></status>
</kw>
<msg timestamp="20201209 01:51:10.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201209 01:51:10.661" starttime="20201209 01:50:30.848"></status>
</kw>
<msg timestamp="20201209 01:51:10.662" level="INFO">${output} = 2020-12-09 01:50:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-09 01:50:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201209 01:51:10.662" starttime="20201209 01:50:30.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201209 01:51:10.663" starttime="20201209 01:51:10.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201209 01:51:10.663" starttime="20201209 01:51:10.663"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201209 01:51:10.663" critical="yes" starttime="20201209 01:50:30.813"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201209 01:51:10.665" starttime="20201209 01:49:43.389"></status>
</suite>
<status status="PASS" elapsedtime="220282" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="624335" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
