<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201225 14:16:38.073" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:12:50.588" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:03.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:03.160" level="INFO">${output} = 2020-12-25 14:12:52,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:12:52,401 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201225 14:13:03.160" starttime="20201225 14:12:50.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:03.162" level="INFO">2020-12-25 14:12:52,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:12:52,401 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:12:52,401 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-25 14:12:52,610 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2020-12-25 14:12:52,629 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-25 14:12:53,640 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:12:54,641 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:12:55,418 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-12-25 14:12:55,641 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:12:55,977 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-25 14:12:56,643 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:12:57,670 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:12:58,671 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:12:58,869 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-25 14:12:59,326 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 14:12:59,327 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-C6B445F6549E-&gt;149ccf0c-7031-4977-b930-ecd94711e4b2
2020-12-25 14:12:59,328 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 14:12:59,671 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:13:00,672 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:13:01,672 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:13:02,673 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-25 14:13:02,809 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5705.853312, max=5705.853312, mean=5705.853312, stddev=0.0, median=5705.853312, p75=5705.853312, p95=5705.853312, p98=5705.853312, p99=5705.853312, p999=5705.853312, mean_rate=0.15192037746186815, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-25 14:13:02,809 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2020-12-25 14:13:02,809 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-25 14:13:02,809 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201225 14:13:03.162" starttime="20201225 14:13:03.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:03.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:03.163" starttime="20201225 14:13:03.162"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:03.163" starttime="20201225 14:12:50.584"></status>
</kw>
<msg timestamp="20201225 14:13:03.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:03.163" starttime="20201225 14:12:50.584"></status>
</kw>
<msg timestamp="20201225 14:13:03.163" level="INFO">${result} = 2020-12-25 14:12:52,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:12:52,401 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201225 14:13:03.163" starttime="20201225 14:12:50.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201225 14:13:03.164" starttime="20201225 14:13:03.164"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 14:13:03.164" critical="yes" starttime="20201225 14:12:50.582"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:03.170" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:07.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:07.589" level="INFO">${output} = 2020-12-25 14:13:04,671 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:13:04,817 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201225 14:13:07.589" starttime="20201225 14:13:03.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:07.590" level="INFO">2020-12-25 14:13:04,671 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:13:04,817 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:13:04,818 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-25 14:13:04,978 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2020-12-25 14:13:04,992 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-25 14:13:05,996 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:13:06,996 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-25 14:13:07,568 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=273.83105, max=273.83105, mean=273.83105, stddev=0.0, median=273.83105, p75=273.83105, p95=273.83105, p98=273.83105, p99=273.83105, p999=273.83105, mean_rate=0.8676494903219092, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-25 14:13:07,569 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-25 14:13:07,569 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-25 14:13:07,569 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201225 14:13:07.590" starttime="20201225 14:13:07.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:07.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:07.591" starttime="20201225 14:13:07.591"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:07.591" starttime="20201225 14:13:03.167"></status>
</kw>
<msg timestamp="20201225 14:13:07.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:07.591" starttime="20201225 14:13:03.167"></status>
</kw>
<msg timestamp="20201225 14:13:07.592" level="INFO">${result} = 2020-12-25 14:13:04,671 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:13:04,817 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201225 14:13:07.592" starttime="20201225 14:13:03.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201225 14:13:07.592" starttime="20201225 14:13:07.592"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 14:13:07.592" critical="yes" starttime="20201225 14:13:03.165"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:07.598" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:12.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:12.898" level="INFO">${output} = 2020-12-25 14:13:09,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:13:09,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201225 14:13:12.898" starttime="20201225 14:13:07.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:12.900" level="INFO">2020-12-25 14:13:09,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:13:09,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:13:09,529 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-25 14:13:09,680 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2020-12-25 14:13:09,703 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-25 14:13:10,721 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:13:11,725 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:13:12,726 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-25 14:13:12,851 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=149.991669, max=149.991669, mean=149.991669, stddev=0.0, median=149.991669, p75=149.991669, p95=149.991669, p98=149.991669, p99=149.991669, p999=149.991669, mean_rate=0.8471005139499437, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-25 14:13:12,851 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-25 14:13:12,857 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-25 14:13:12,857 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201225 14:13:12.901" starttime="20201225 14:13:12.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:12.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:12.901" starttime="20201225 14:13:12.901"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:12.902" starttime="20201225 14:13:07.595"></status>
</kw>
<msg timestamp="20201225 14:13:12.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:12.902" starttime="20201225 14:13:07.595"></status>
</kw>
<msg timestamp="20201225 14:13:12.902" level="INFO">${result} = 2020-12-25 14:13:09,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:13:09,529 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201225 14:13:12.902" starttime="20201225 14:13:07.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201225 14:13:12.903" starttime="20201225 14:13:12.902"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 14:13:12.903" critical="yes" starttime="20201225 14:13:07.593"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20201225 14:13:12.905" starttime="20201225 14:12:50.567"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:12.917" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:19.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:19.237" level="INFO">${output} = 2020-12-25 14:13:14,416 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:13:14,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201225 14:13:19.237" starttime="20201225 14:13:12.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:19.238" level="INFO">2020-12-25 14:13:14,416 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:13:14,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:13:14,553 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-25 14:13:14,670 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2020-12-25 14:13:14,682 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-25 14:13:15,688 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:13:16,689 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:13:17,104 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-25 14:13:17,694 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-25 14:13:18,695 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-25 14:13:18,862 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=61.326476, max=61.326476, mean=61.326476, stddev=0.0, median=61.326476, p75=61.326476, p95=61.326476, p98=61.326476, p99=61.326476, p999=61.326476, mean_rate=0.9706237188707203, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-25 14:13:18,865 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2020-12-25 14:13:18,866 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-25 14:13:18,866 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201225 14:13:19.239" starttime="20201225 14:13:19.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:19.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:19.239" starttime="20201225 14:13:19.239"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:19.239" starttime="20201225 14:13:12.915"></status>
</kw>
<msg timestamp="20201225 14:13:19.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:19.240" starttime="20201225 14:13:12.914"></status>
</kw>
<msg timestamp="20201225 14:13:19.240" level="INFO">${result} = 2020-12-25 14:13:14,416 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-25 14:13:14,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201225 14:13:19.240" starttime="20201225 14:13:12.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201225 14:13:19.240" starttime="20201225 14:13:19.240"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 14:13:19.241" critical="yes" starttime="20201225 14:13:12.913"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20201225 14:13:19.242" starttime="20201225 14:13:12.908"></status>
</suite>
<status status="PASS" endtime="20201225 14:13:19.244" starttime="20201225 14:12:50.541"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:12:45.370" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:12:45.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:12:45.373" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:12:45.373" starttime="20201225 14:12:45.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:12:45.374" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:12:45.374" starttime="20201225 14:12:45.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:12:45.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:12:45.375" starttime="20201225 14:12:45.374"></status>
</kw>
<status status="PASS" endtime="20201225 14:12:45.375" starttime="20201225 14:12:45.366"></status>
</kw>
<msg timestamp="20201225 14:12:45.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:12:45.375" starttime="20201225 14:12:45.366"></status>
</kw>
<msg timestamp="20201225 14:12:45.376" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:12:45.376" starttime="20201225 14:12:45.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:12:45.376" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:12:45.376" starttime="20201225 14:12:45.376"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:12:45.380" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:12:45.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:12:45.392" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:12:45.392" starttime="20201225 14:12:45.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:12:45.393" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:12:45.394" starttime="20201225 14:12:45.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:12:45.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:12:45.394" starttime="20201225 14:12:45.394"></status>
</kw>
<status status="PASS" endtime="20201225 14:12:45.395" starttime="20201225 14:12:45.378"></status>
</kw>
<msg timestamp="20201225 14:12:45.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:12:45.395" starttime="20201225 14:12:45.378"></status>
</kw>
<status status="PASS" endtime="20201225 14:12:45.395" starttime="20201225 14:12:45.377"></status>
</kw>
<status status="PASS" endtime="20201225 14:12:45.395" starttime="20201225 14:12:45.376"></status>
</kw>
<status status="PASS" endtime="20201225 14:12:45.395" starttime="20201225 14:12:45.365"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:12:45.395" critical="yes" starttime="20201225 14:12:45.364"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201225 14:12:45.396" starttime="20201225 14:12:45.320"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 14:13:24.395" level="INFO">${random} = 70847</msg>
<status status="PASS" endtime="20201225 14:13:24.395" starttime="20201225 14:13:24.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201225 14:13:24.396" level="INFO">${source} = 70847-source</msg>
<status status="PASS" endtime="20201225 14:13:24.397" starttime="20201225 14:13:24.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201225 14:13:24.397" level="INFO">${target} = 70847-target</msg>
<status status="PASS" endtime="20201225 14:13:24.397" starttime="20201225 14:13:24.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:24.402" level="INFO">Running command 'ozone sh volume create 70847-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:27.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:27.335" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:27.335" starttime="20201225 14:13:24.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:27.336" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:13:27.336" starttime="20201225 14:13:27.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:27.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:27.336" starttime="20201225 14:13:27.336"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:27.337" starttime="20201225 14:13:24.398"></status>
</kw>
<msg timestamp="20201225 14:13:27.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:27.337" starttime="20201225 14:13:24.398"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:27.337" starttime="20201225 14:13:24.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:27.341" level="INFO">Running command 'ozone sh volume create 70847-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:30.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:30.626" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:30.626" starttime="20201225 14:13:27.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:30.627" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:13:30.627" starttime="20201225 14:13:30.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:30.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:30.627" starttime="20201225 14:13:30.627"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:30.628" starttime="20201225 14:13:27.338"></status>
</kw>
<msg timestamp="20201225 14:13:30.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:30.628" starttime="20201225 14:13:27.338"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:30.628" starttime="20201225 14:13:27.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:30.633" level="INFO">Running command 'ozone sh bucket create 70847-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:34.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:34.246" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:34.246" starttime="20201225 14:13:30.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:34.247" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:13:34.247" starttime="20201225 14:13:34.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:34.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:34.247" starttime="20201225 14:13:34.247"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:34.247" starttime="20201225 14:13:30.630"></status>
</kw>
<msg timestamp="20201225 14:13:34.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:34.248" starttime="20201225 14:13:30.629"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:34.248" starttime="20201225 14:13:30.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:34.251" level="INFO">Running command 'ozone sh key put 70847-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:39.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:39.529" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:39.529" starttime="20201225 14:13:34.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:39.529" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:13:39.530" starttime="20201225 14:13:39.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:39.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:39.530" starttime="20201225 14:13:39.530"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:39.530" starttime="20201225 14:13:34.249"></status>
</kw>
<msg timestamp="20201225 14:13:39.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:39.531" starttime="20201225 14:13:34.249"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:39.531" starttime="20201225 14:13:34.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:39.534" level="INFO">Running command 'ozone sh bucket create 70847-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:43.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:43.010" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:43.010" starttime="20201225 14:13:39.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:43.011" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:13:43.011" starttime="20201225 14:13:43.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:43.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:43.011" starttime="20201225 14:13:43.011"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:43.012" starttime="20201225 14:13:39.532"></status>
</kw>
<msg timestamp="20201225 14:13:43.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:43.012" starttime="20201225 14:13:39.531"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:43.012" starttime="20201225 14:13:39.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:43.016" level="INFO">Running command 'ozone sh bucket link 70847-source/readable-bucket 70847-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:46.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:46.216" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:46.216" starttime="20201225 14:13:43.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:46.217" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:13:46.217" starttime="20201225 14:13:46.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:46.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:46.218" starttime="20201225 14:13:46.218"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:46.218" starttime="20201225 14:13:43.013"></status>
</kw>
<msg timestamp="20201225 14:13:46.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:46.219" starttime="20201225 14:13:43.013"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:46.219" starttime="20201225 14:13:43.012"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:46.223" level="INFO">Running command 'ozone sh bucket link 70847-source/readable-bucket 70847-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:49.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:49.427" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:49.427" starttime="20201225 14:13:46.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:49.428" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:13:49.428" starttime="20201225 14:13:49.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:49.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:49.428" starttime="20201225 14:13:49.428"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:49.429" starttime="20201225 14:13:46.220"></status>
</kw>
<msg timestamp="20201225 14:13:49.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:49.429" starttime="20201225 14:13:46.219"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:49.429" starttime="20201225 14:13:46.219"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:49.432" level="INFO">Running command 'ozone sh bucket link 70847-source/unreadable-bucket 70847-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:52.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:52.709" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:52.709" starttime="20201225 14:13:49.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:52.710" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:13:52.711" starttime="20201225 14:13:52.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:52.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:52.711" starttime="20201225 14:13:52.711"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:52.711" starttime="20201225 14:13:49.430"></status>
</kw>
<msg timestamp="20201225 14:13:52.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:52.712" starttime="20201225 14:13:49.430"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:52.712" starttime="20201225 14:13:49.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:52.715" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 70847-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:56.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:56.113" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:56.113" starttime="20201225 14:13:52.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:56.114" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201225 14:13:56.114" starttime="20201225 14:13:56.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:56.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:56.115" starttime="20201225 14:13:56.114"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:56.115" starttime="20201225 14:13:52.713"></status>
</kw>
<msg timestamp="20201225 14:13:56.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:56.115" starttime="20201225 14:13:52.712"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:56.116" starttime="20201225 14:13:52.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:56.122" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 70847-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:13:59.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:13:59.303" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:13:59.303" starttime="20201225 14:13:56.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:13:59.304" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201225 14:13:59.304" starttime="20201225 14:13:59.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:13:59.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:13:59.304" starttime="20201225 14:13:59.304"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:59.305" starttime="20201225 14:13:56.116"></status>
</kw>
<msg timestamp="20201225 14:13:59.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:13:59.305" starttime="20201225 14:13:56.116"></status>
</kw>
<status status="PASS" endtime="20201225 14:13:59.305" starttime="20201225 14:13:56.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:13:59.308" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 70847-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:02.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:02.677" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:02.677" starttime="20201225 14:13:59.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:02.678" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201225 14:14:02.678" starttime="20201225 14:14:02.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:02.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:02.678" starttime="20201225 14:14:02.678"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:02.679" starttime="20201225 14:13:59.306"></status>
</kw>
<msg timestamp="20201225 14:14:02.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:02.679" starttime="20201225 14:13:59.306"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:02.679" starttime="20201225 14:13:59.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:02.683" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 70847-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:05.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:05.882" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:05.882" starttime="20201225 14:14:02.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:05.883" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201225 14:14:05.883" starttime="20201225 14:14:05.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:05.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:05.883" starttime="20201225 14:14:05.883"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:05.884" starttime="20201225 14:14:02.680"></status>
</kw>
<msg timestamp="20201225 14:14:05.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:05.884" starttime="20201225 14:14:02.680"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:05.884" starttime="20201225 14:14:02.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:05.888" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 70847-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:09.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:09.228" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:09.228" starttime="20201225 14:14:05.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:09.229" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201225 14:14:09.230" starttime="20201225 14:14:09.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:09.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:09.230" starttime="20201225 14:14:09.230"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.231" starttime="20201225 14:14:05.885"></status>
</kw>
<msg timestamp="20201225 14:14:09.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:09.231" starttime="20201225 14:14:05.885"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.231" starttime="20201225 14:14:05.884"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.231" starttime="20201225 14:13:30.629"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.231" starttime="20201225 14:13:30.628"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.231" starttime="20201225 14:13:24.395"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:09.237" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:09.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:09.239" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:14:09.239" starttime="20201225 14:14:09.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:09.240" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:14:09.241" starttime="20201225 14:14:09.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:09.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:09.241" starttime="20201225 14:14:09.241"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.241" starttime="20201225 14:14:09.234"></status>
</kw>
<msg timestamp="20201225 14:14:09.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:09.242" starttime="20201225 14:14:09.234"></status>
</kw>
<msg timestamp="20201225 14:14:09.242" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:14:09.242" starttime="20201225 14:14:09.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:14:09.243" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:14:09.243" starttime="20201225 14:14:09.242"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:09.247" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:09.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:09.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:14:09.259" starttime="20201225 14:14:09.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:09.260" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:14:09.260" starttime="20201225 14:14:09.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:09.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:09.261" starttime="20201225 14:14:09.260"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.261" starttime="20201225 14:14:09.245"></status>
</kw>
<msg timestamp="20201225 14:14:09.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:09.261" starttime="20201225 14:14:09.244"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.261" starttime="20201225 14:14:09.244"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.261" starttime="20201225 14:14:09.243"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.262" starttime="20201225 14:14:09.233"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:09.262" starttime="20201225 14:14:09.233"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:09.265" level="INFO">Running command 'ozone sh bucket link 70847-source/no-such-bucket 70847-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:12.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:12.772" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:12.772" starttime="20201225 14:14:09.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:12.773" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:14:12.774" starttime="20201225 14:14:12.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:12.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:12.774" starttime="20201225 14:14:12.774"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:12.775" starttime="20201225 14:14:09.263"></status>
</kw>
<msg timestamp="20201225 14:14:12.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:12.775" starttime="20201225 14:14:09.262"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:12.775" starttime="20201225 14:14:09.262"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:12.778" level="INFO">Running command 'ozone sh key list 70847-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:16.226" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 14:14:16.226" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:16.226" starttime="20201225 14:14:12.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:16.227" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201225 14:14:16.227" starttime="20201225 14:14:16.227"></status>
</kw>
<msg timestamp="20201225 14:14:16.228" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:16.228" starttime="20201225 14:14:12.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201225 14:14:16.228" starttime="20201225 14:14:16.228"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:14:16.229" critical="yes" starttime="20201225 14:14:09.232"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:16.236" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:16.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:16.239" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:14:16.239" starttime="20201225 14:14:16.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:16.240" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:14:16.240" starttime="20201225 14:14:16.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:16.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:16.241" starttime="20201225 14:14:16.240"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:16.241" starttime="20201225 14:14:16.233"></status>
</kw>
<msg timestamp="20201225 14:14:16.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:16.241" starttime="20201225 14:14:16.233"></status>
</kw>
<msg timestamp="20201225 14:14:16.241" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:14:16.241" starttime="20201225 14:14:16.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:14:16.242" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:14:16.242" starttime="20201225 14:14:16.242"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:16.246" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:16.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:16.262" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:14:16.262" starttime="20201225 14:14:16.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:16.263" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:14:16.263" starttime="20201225 14:14:16.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:16.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:16.263" starttime="20201225 14:14:16.263"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:16.264" starttime="20201225 14:14:16.243"></status>
</kw>
<msg timestamp="20201225 14:14:16.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:16.264" starttime="20201225 14:14:16.243"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:16.264" starttime="20201225 14:14:16.242"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:16.264" starttime="20201225 14:14:16.242"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:16.264" starttime="20201225 14:14:16.232"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:16.264" starttime="20201225 14:14:16.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:16.267" level="INFO">Running command 'ozone sh bucket link 70847-source/bucket1 70847-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:19.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:19.675" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:19.675" starttime="20201225 14:14:16.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:19.676" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:14:19.676" starttime="20201225 14:14:19.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:19.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:19.677" starttime="20201225 14:14:19.676"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:19.677" starttime="20201225 14:14:16.265"></status>
</kw>
<msg timestamp="20201225 14:14:19.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:19.677" starttime="20201225 14:14:16.265"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:19.678" starttime="20201225 14:14:16.264"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:19.682" level="INFO">Running command 'ozone sh bucket create 70847-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:22.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:22.925" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:22.926" starttime="20201225 14:14:19.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:22.927" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:14:22.927" starttime="20201225 14:14:22.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:22.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:22.927" starttime="20201225 14:14:22.927"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:22.928" starttime="20201225 14:14:19.679"></status>
</kw>
<msg timestamp="20201225 14:14:22.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:22.928" starttime="20201225 14:14:19.678"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:22.928" starttime="20201225 14:14:19.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:22.932" level="INFO">Running command 'ozone sh key put 70847-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:28.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:28.274" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:28.274" starttime="20201225 14:14:22.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:28.275" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:14:28.275" starttime="20201225 14:14:28.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:28.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:28.276" starttime="20201225 14:14:28.275"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:28.276" starttime="20201225 14:14:22.929"></status>
</kw>
<msg timestamp="20201225 14:14:28.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:28.276" starttime="20201225 14:14:22.929"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:28.276" starttime="20201225 14:14:22.928"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201225 14:14:28.278" level="INFO">${postfix} = 55127</msg>
<status status="PASS" endtime="20201225 14:14:28.278" starttime="20201225 14:14:28.278"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201225 14:14:28.278" level="INFO">${tmpfile} = /tmp/tempkey-55127</msg>
<status status="PASS" endtime="20201225 14:14:28.278" starttime="20201225 14:14:28.278"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:28.283" level="INFO">Running command 'ozone sh key get -f 70847-target/link1/key1 /tmp/tempkey-55127 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:33.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:33.328" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:33.328" starttime="20201225 14:14:28.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:33.329" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:14:33.329" starttime="20201225 14:14:33.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:33.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:33.330" starttime="20201225 14:14:33.329"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.330" starttime="20201225 14:14:28.279"></status>
</kw>
<msg timestamp="20201225 14:14:33.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:33.330" starttime="20201225 14:14:28.279"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.331" starttime="20201225 14:14:28.279"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201225 14:14:33.333" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-55127 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:33.337" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201225 14:14:33.337" starttime="20201225 14:14:33.331"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:33.343" level="INFO">Running command 'rm -f /tmp/tempkey-55127 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:33.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:33.354" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:14:33.354" starttime="20201225 14:14:33.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:33.355" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:14:33.355" starttime="20201225 14:14:33.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:33.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:33.356" starttime="20201225 14:14:33.355"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.356" starttime="20201225 14:14:33.338"></status>
</kw>
<msg timestamp="20201225 14:14:33.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:33.356" starttime="20201225 14:14:33.338"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.356" starttime="20201225 14:14:33.337"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:14:33.357" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201225 14:14:33.357" starttime="20201225 14:14:33.356"></status>
</kw>
<msg timestamp="20201225 14:14:33.357" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201225 14:14:33.357" starttime="20201225 14:14:28.277"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:14:33.357" starttime="20201225 14:14:33.357"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.357" starttime="20201225 14:14:28.277"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:14:33.358" critical="yes" starttime="20201225 14:14:16.230"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:33.363" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:33.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:33.367" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:14:33.367" starttime="20201225 14:14:33.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:33.368" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:14:33.368" starttime="20201225 14:14:33.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:33.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:33.368" starttime="20201225 14:14:33.368"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.369" starttime="20201225 14:14:33.361"></status>
</kw>
<msg timestamp="20201225 14:14:33.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:33.369" starttime="20201225 14:14:33.361"></status>
</kw>
<msg timestamp="20201225 14:14:33.369" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:14:33.369" starttime="20201225 14:14:33.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:14:33.370" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:14:33.370" starttime="20201225 14:14:33.369"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:33.373" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:33.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:33.390" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:14:33.391" starttime="20201225 14:14:33.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:33.391" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:14:33.391" starttime="20201225 14:14:33.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:33.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:33.392" starttime="20201225 14:14:33.392"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.392" starttime="20201225 14:14:33.371"></status>
</kw>
<msg timestamp="20201225 14:14:33.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:33.392" starttime="20201225 14:14:33.371"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.393" starttime="20201225 14:14:33.370"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.393" starttime="20201225 14:14:33.370"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.393" starttime="20201225 14:14:33.360"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:33.393" starttime="20201225 14:14:33.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:33.397" level="INFO">Running command 'ozone sh key put 70847-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:38.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:38.661" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:38.661" starttime="20201225 14:14:33.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:38.662" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:14:38.662" starttime="20201225 14:14:38.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:38.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:38.663" starttime="20201225 14:14:38.662"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:38.663" starttime="20201225 14:14:33.394"></status>
</kw>
<msg timestamp="20201225 14:14:38.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:38.663" starttime="20201225 14:14:33.394"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:38.663" starttime="20201225 14:14:33.393"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201225 14:14:38.665" level="INFO">${postfix} = 96822</msg>
<status status="PASS" endtime="20201225 14:14:38.665" starttime="20201225 14:14:38.665"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201225 14:14:38.666" level="INFO">${tmpfile} = /tmp/tempkey-96822</msg>
<status status="PASS" endtime="20201225 14:14:38.666" starttime="20201225 14:14:38.665"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:38.669" level="INFO">Running command 'ozone sh key get -f 70847-source/bucket1/key2 /tmp/tempkey-96822 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:43.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:43.879" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:43.879" starttime="20201225 14:14:38.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:43.880" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:14:43.880" starttime="20201225 14:14:43.879"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:43.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:43.881" starttime="20201225 14:14:43.880"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.881" starttime="20201225 14:14:38.667"></status>
</kw>
<msg timestamp="20201225 14:14:43.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:43.881" starttime="20201225 14:14:38.666"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.881" starttime="20201225 14:14:38.666"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201225 14:14:43.884" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-96822 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:43.886" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201225 14:14:43.886" starttime="20201225 14:14:43.881"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:43.890" level="INFO">Running command 'rm -f /tmp/tempkey-96822 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:43.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:43.893" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:14:43.893" starttime="20201225 14:14:43.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:43.894" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:14:43.894" starttime="20201225 14:14:43.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:43.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:43.899" starttime="20201225 14:14:43.895"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.900" starttime="20201225 14:14:43.888"></status>
</kw>
<msg timestamp="20201225 14:14:43.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:43.900" starttime="20201225 14:14:43.888"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.900" starttime="20201225 14:14:43.887"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:14:43.901" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201225 14:14:43.901" starttime="20201225 14:14:43.900"></status>
</kw>
<msg timestamp="20201225 14:14:43.901" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201225 14:14:43.901" starttime="20201225 14:14:38.664"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:14:43.902" starttime="20201225 14:14:43.902"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.902" starttime="20201225 14:14:38.664"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:14:43.902" critical="yes" starttime="20201225 14:14:33.358"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:43.908" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:43.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:43.910" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:14:43.910" starttime="20201225 14:14:43.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:43.911" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:14:43.911" starttime="20201225 14:14:43.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:43.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:43.912" starttime="20201225 14:14:43.911"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.912" starttime="20201225 14:14:43.906"></status>
</kw>
<msg timestamp="20201225 14:14:43.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:43.912" starttime="20201225 14:14:43.905"></status>
</kw>
<msg timestamp="20201225 14:14:43.912" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:14:43.912" starttime="20201225 14:14:43.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:14:43.913" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:14:43.913" starttime="20201225 14:14:43.913"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:43.917" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:43.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:43.935" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:14:43.935" starttime="20201225 14:14:43.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:43.936" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:14:43.936" starttime="20201225 14:14:43.935"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:43.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:43.936" starttime="20201225 14:14:43.936"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.937" starttime="20201225 14:14:43.914"></status>
</kw>
<msg timestamp="20201225 14:14:43.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:43.937" starttime="20201225 14:14:43.914"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.937" starttime="20201225 14:14:43.914"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.937" starttime="20201225 14:14:43.913"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.937" starttime="20201225 14:14:43.904"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:43.938" starttime="20201225 14:14:43.904"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:43.941" level="INFO">Running command 'ozone sh key list 70847-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:47.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:47.260" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201225 14:14:47.260" starttime="20201225 14:14:43.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:47.261" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201225 14:14:47.261" starttime="20201225 14:14:47.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:47.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:47.262" starttime="20201225 14:14:47.261"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:47.262" starttime="20201225 14:14:43.938"></status>
</kw>
<msg timestamp="20201225 14:14:47.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:47.262" starttime="20201225 14:14:43.938"></status>
</kw>
<msg timestamp="20201225 14:14:47.262" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201225 14:14:47.263" starttime="20201225 14:14:43.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:47.268" level="INFO">Running command 'ozone sh key list 70847-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:50.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:50.569" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201225 14:14:50.570" starttime="20201225 14:14:47.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:50.572" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201225 14:14:50.572" starttime="20201225 14:14:50.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:50.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:50.573" starttime="20201225 14:14:50.572"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:50.573" starttime="20201225 14:14:47.264"></status>
</kw>
<msg timestamp="20201225 14:14:50.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:50.573" starttime="20201225 14:14:47.263"></status>
</kw>
<msg timestamp="20201225 14:14:50.574" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201225 14:14:50.574" starttime="20201225 14:14:47.263"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:14:50.574" starttime="20201225 14:14:50.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201225 14:14:50.575" starttime="20201225 14:14:50.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201225 14:14:50.575" starttime="20201225 14:14:50.575"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:14:50.575" critical="yes" starttime="20201225 14:14:43.903"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:50.582" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:50.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:50.585" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:14:50.585" starttime="20201225 14:14:50.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:50.586" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:14:50.586" starttime="20201225 14:14:50.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:50.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:50.586" starttime="20201225 14:14:50.586"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:50.587" starttime="20201225 14:14:50.579"></status>
</kw>
<msg timestamp="20201225 14:14:50.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:50.587" starttime="20201225 14:14:50.579"></status>
</kw>
<msg timestamp="20201225 14:14:50.587" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:14:50.587" starttime="20201225 14:14:50.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:14:50.588" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:14:50.588" starttime="20201225 14:14:50.587"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:50.592" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:50.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:50.610" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:14:50.610" starttime="20201225 14:14:50.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:50.611" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:14:50.611" starttime="20201225 14:14:50.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:50.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:50.612" starttime="20201225 14:14:50.611"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:50.612" starttime="20201225 14:14:50.590"></status>
</kw>
<msg timestamp="20201225 14:14:50.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:50.612" starttime="20201225 14:14:50.589"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:50.612" starttime="20201225 14:14:50.589"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:50.612" starttime="20201225 14:14:50.588"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:50.612" starttime="20201225 14:14:50.578"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:50.613" starttime="20201225 14:14:50.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:50.617" level="INFO">Running command 'ozone sh key delete 70847-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:54.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:54.237" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:14:54.237" starttime="20201225 14:14:50.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:54.238" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:14:54.238" starttime="20201225 14:14:54.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:54.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:54.239" starttime="20201225 14:14:54.238"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:54.239" starttime="20201225 14:14:50.614"></status>
</kw>
<msg timestamp="20201225 14:14:54.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:54.239" starttime="20201225 14:14:50.613"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:54.239" starttime="20201225 14:14:50.613"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:54.244" level="INFO">Running command 'ozone sh key list 70847-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:57.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:57.834" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201225 14:14:57.835" starttime="20201225 14:14:54.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:57.836" level="INFO">key1</msg>
<status status="PASS" endtime="20201225 14:14:57.836" starttime="20201225 14:14:57.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:57.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:57.837" starttime="20201225 14:14:57.836"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:57.837" starttime="20201225 14:14:54.240"></status>
</kw>
<msg timestamp="20201225 14:14:57.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:57.837" starttime="20201225 14:14:54.240"></status>
</kw>
<msg timestamp="20201225 14:14:57.837" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201225 14:14:57.837" starttime="20201225 14:14:54.239"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201225 14:14:57.838" starttime="20201225 14:14:57.837"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:14:57.838" critical="yes" starttime="20201225 14:14:50.576"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:57.844" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:57.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:57.846" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:14:57.846" starttime="20201225 14:14:57.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:57.847" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:14:57.847" starttime="20201225 14:14:57.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:57.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:57.848" starttime="20201225 14:14:57.847"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:57.848" starttime="20201225 14:14:57.840"></status>
</kw>
<msg timestamp="20201225 14:14:57.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:57.848" starttime="20201225 14:14:57.840"></status>
</kw>
<msg timestamp="20201225 14:14:57.849" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:14:57.849" starttime="20201225 14:14:57.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:14:57.849" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:14:57.849" starttime="20201225 14:14:57.849"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:57.855" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:14:57.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:14:57.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:14:57.867" starttime="20201225 14:14:57.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:14:57.868" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:14:57.868" starttime="20201225 14:14:57.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:14:57.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:14:57.868" starttime="20201225 14:14:57.868"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:57.869" starttime="20201225 14:14:57.852"></status>
</kw>
<msg timestamp="20201225 14:14:57.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:14:57.869" starttime="20201225 14:14:57.851"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:57.869" starttime="20201225 14:14:57.851"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:57.869" starttime="20201225 14:14:57.849"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:57.869" starttime="20201225 14:14:57.839"></status>
</kw>
<status status="PASS" endtime="20201225 14:14:57.869" starttime="20201225 14:14:57.839"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:14:57.873" level="INFO">Running command 'ozone sh bucket list 70847-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:01.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:01.546" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:01.547" starttime="20201225 14:14:57.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:01.548" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:14:12.501Z",
  "modificationTime" : "2020-12-25T14:14:12.501Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:13:52.533Z",
  "modificationTime" : "2020-12-25T14:14:09.086Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:14:19.336Z",
  "modificationTime" : "2020-12-25T14:14:19.336Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:13:46.040Z",
  "modificationTime" : "2020-12-25T14:14:05.757Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:13:49.357Z",
  "modificationTime" : "2020-12-25T14:13:49.357Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201225 14:15:01.548" starttime="20201225 14:15:01.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:01.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:01.549" starttime="20201225 14:15:01.548"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:01.549" starttime="20201225 14:14:57.870"></status>
</kw>
<msg timestamp="20201225 14:15:01.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:01.549" starttime="20201225 14:14:57.870"></status>
</kw>
<msg timestamp="20201225 14:15:01.550" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:01.550" starttime="20201225 14:14:57.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:01.550" starttime="20201225 14:15:01.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:01.551" starttime="20201225 14:15:01.550"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:15:01.551" critical="yes" starttime="20201225 14:14:57.838"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:01.557" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:01.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:01.559" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:01.560" starttime="20201225 14:15:01.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:01.560" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:01.560" starttime="20201225 14:15:01.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:01.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:01.561" starttime="20201225 14:15:01.561"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:01.561" starttime="20201225 14:15:01.554"></status>
</kw>
<msg timestamp="20201225 14:15:01.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:01.561" starttime="20201225 14:15:01.554"></status>
</kw>
<msg timestamp="20201225 14:15:01.562" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:01.562" starttime="20201225 14:15:01.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:01.562" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:01.563" starttime="20201225 14:15:01.562"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:01.567" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:01.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:01.585" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:01.585" starttime="20201225 14:15:01.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:01.586" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:01.586" starttime="20201225 14:15:01.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:01.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:01.587" starttime="20201225 14:15:01.587"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:01.587" starttime="20201225 14:15:01.564"></status>
</kw>
<msg timestamp="20201225 14:15:01.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:01.588" starttime="20201225 14:15:01.564"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:01.588" starttime="20201225 14:15:01.563"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:01.588" starttime="20201225 14:15:01.563"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:01.588" starttime="20201225 14:15:01.553"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:01.588" starttime="20201225 14:15:01.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:01.591" level="INFO">Running command 'ozone sh bucket info 70847-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:04.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:04.864" level="INFO">${output} = 70847-source bucket1</msg>
<status status="PASS" endtime="20201225 14:15:04.864" starttime="20201225 14:15:01.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:04.865" level="INFO">70847-source bucket1</msg>
<status status="PASS" endtime="20201225 14:15:04.865" starttime="20201225 14:15:04.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:04.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:04.866" starttime="20201225 14:15:04.866"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:04.866" starttime="20201225 14:15:01.589"></status>
</kw>
<msg timestamp="20201225 14:15:04.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:04.867" starttime="20201225 14:15:01.589"></status>
</kw>
<msg timestamp="20201225 14:15:04.867" level="INFO">${result} = 70847-source bucket1</msg>
<status status="PASS" endtime="20201225 14:15:04.867" starttime="20201225 14:15:01.588"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:04.867" starttime="20201225 14:15:04.867"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:15:04.868" critical="yes" starttime="20201225 14:15:01.551"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:04.873" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:04.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:04.876" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:04.876" starttime="20201225 14:15:04.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:04.877" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:04.878" starttime="20201225 14:15:04.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:04.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:04.878" starttime="20201225 14:15:04.878"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:04.879" starttime="20201225 14:15:04.871"></status>
</kw>
<msg timestamp="20201225 14:15:04.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:04.879" starttime="20201225 14:15:04.870"></status>
</kw>
<msg timestamp="20201225 14:15:04.879" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:04.879" starttime="20201225 14:15:04.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:04.880" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:04.880" starttime="20201225 14:15:04.879"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:04.883" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:04.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:04.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:04.895" starttime="20201225 14:15:04.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:04.896" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:04.896" starttime="20201225 14:15:04.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:04.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:04.897" starttime="20201225 14:15:04.896"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:04.897" starttime="20201225 14:15:04.881"></status>
</kw>
<msg timestamp="20201225 14:15:04.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:04.897" starttime="20201225 14:15:04.881"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:04.897" starttime="20201225 14:15:04.880"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:04.897" starttime="20201225 14:15:04.880"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:04.897" starttime="20201225 14:15:04.870"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:04.897" starttime="20201225 14:15:04.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:04.900" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 70847-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:08.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:08.261" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:08.261" starttime="20201225 14:15:04.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:08.262" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201225 14:15:08.263" starttime="20201225 14:15:08.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:08.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:08.263" starttime="20201225 14:15:08.263"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:08.264" starttime="20201225 14:15:04.898"></status>
</kw>
<msg timestamp="20201225 14:15:08.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:08.264" starttime="20201225 14:15:04.898"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:08.264" starttime="20201225 14:15:04.897"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:08.269" level="INFO">Running command 'ozone sh bucket getacl 70847-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:11.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:11.636" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201225 14:15:11.636" starttime="20201225 14:15:08.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:11.637" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201225 14:15:11.637" starttime="20201225 14:15:11.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:11.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:11.638" starttime="20201225 14:15:11.637"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:11.638" starttime="20201225 14:15:08.266"></status>
</kw>
<msg timestamp="20201225 14:15:11.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:11.638" starttime="20201225 14:15:08.266"></status>
</kw>
<msg timestamp="20201225 14:15:11.639" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201225 14:15:11.639" starttime="20201225 14:15:08.265"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:11.639" starttime="20201225 14:15:11.639"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:11.639" starttime="20201225 14:15:08.264"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:11.643" level="INFO">Running command 'ozone sh bucket getacl 70847-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:15.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:15.340" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:15.340" starttime="20201225 14:15:11.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:15.341" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:15.341" starttime="20201225 14:15:15.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:15.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:15.346" starttime="20201225 14:15:15.341"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:15.348" starttime="20201225 14:15:11.641"></status>
</kw>
<msg timestamp="20201225 14:15:15.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:15.348" starttime="20201225 14:15:11.641"></status>
</kw>
<msg timestamp="20201225 14:15:15.364" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201225 14:15:15.364" starttime="20201225 14:15:11.640"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:15.365" starttime="20201225 14:15:15.364"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:15.365" starttime="20201225 14:15:11.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:15.398" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 70847-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:18.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:18.790" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:18.791" starttime="20201225 14:15:15.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:18.792" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201225 14:15:18.792" starttime="20201225 14:15:18.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:18.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:18.792" starttime="20201225 14:15:18.792"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:18.793" starttime="20201225 14:15:15.368"></status>
</kw>
<msg timestamp="20201225 14:15:18.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:18.793" starttime="20201225 14:15:15.367"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:18.793" starttime="20201225 14:15:15.365"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:18.798" level="INFO">Running command 'ozone sh bucket getacl 70847-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:21.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:21.903" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:21.903" starttime="20201225 14:15:18.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:21.904" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:21.904" starttime="20201225 14:15:21.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:21.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:21.905" starttime="20201225 14:15:21.904"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:21.905" starttime="20201225 14:15:18.795"></status>
</kw>
<msg timestamp="20201225 14:15:21.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:21.905" starttime="20201225 14:15:18.795"></status>
</kw>
<msg timestamp="20201225 14:15:21.906" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201225 14:15:21.906" starttime="20201225 14:15:18.794"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:21.906" starttime="20201225 14:15:21.906"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:21.906" starttime="20201225 14:15:18.794"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:21.911" level="INFO">Running command 'ozone sh bucket getacl 70847-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:25.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:25.112" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201225 14:15:25.112" starttime="20201225 14:15:21.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:25.113" level="INFO">READ</msg>
<status status="PASS" endtime="20201225 14:15:25.113" starttime="20201225 14:15:25.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:25.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:25.114" starttime="20201225 14:15:25.113"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:25.114" starttime="20201225 14:15:21.908"></status>
</kw>
<msg timestamp="20201225 14:15:25.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:25.114" starttime="20201225 14:15:21.908"></status>
</kw>
<msg timestamp="20201225 14:15:25.115" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201225 14:15:25.115" starttime="20201225 14:15:21.907"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:25.115" starttime="20201225 14:15:25.115"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:25.115" starttime="20201225 14:15:21.907"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:15:25.116" critical="yes" starttime="20201225 14:15:04.868"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:25.123" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:25.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:25.126" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:25.126" starttime="20201225 14:15:25.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:25.127" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:25.127" starttime="20201225 14:15:25.126"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:25.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:25.127" starttime="20201225 14:15:25.127"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:25.128" starttime="20201225 14:15:25.120"></status>
</kw>
<msg timestamp="20201225 14:15:25.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:25.128" starttime="20201225 14:15:25.119"></status>
</kw>
<msg timestamp="20201225 14:15:25.128" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:25.128" starttime="20201225 14:15:25.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:25.129" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:25.129" starttime="20201225 14:15:25.128"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:25.132" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:25.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:25.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:25.144" starttime="20201225 14:15:25.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:25.145" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:25.145" starttime="20201225 14:15:25.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:25.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:25.146" starttime="20201225 14:15:25.145"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:25.146" starttime="20201225 14:15:25.130"></status>
</kw>
<msg timestamp="20201225 14:15:25.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:25.146" starttime="20201225 14:15:25.130"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:25.146" starttime="20201225 14:15:25.129"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:25.146" starttime="20201225 14:15:25.129"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:25.147" starttime="20201225 14:15:25.118"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:25.147" starttime="20201225 14:15:25.118"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:25.150" level="INFO">Running command 'ozone sh bucket link 70847-source/bucket2 70847-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:28.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:28.269" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:28.269" starttime="20201225 14:15:25.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:28.271" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:15:28.271" starttime="20201225 14:15:28.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:28.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:28.271" starttime="20201225 14:15:28.271"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:28.272" starttime="20201225 14:15:25.148"></status>
</kw>
<msg timestamp="20201225 14:15:28.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:28.272" starttime="20201225 14:15:25.147"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:28.272" starttime="20201225 14:15:25.147"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:28.275" level="INFO">Running command 'ozone sh bucket create 70847-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:31.392" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 14:15:31.392" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:31.392" starttime="20201225 14:15:28.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:31.393" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201225 14:15:31.393" starttime="20201225 14:15:31.392"></status>
</kw>
<msg timestamp="20201225 14:15:31.393" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:31.393" starttime="20201225 14:15:28.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:31.394" starttime="20201225 14:15:31.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:31.398" level="INFO">Running command 'ozone sh bucket create 70847-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:34.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:34.800" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:34.800" starttime="20201225 14:15:31.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:34.801" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:15:34.802" starttime="20201225 14:15:34.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:34.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:34.802" starttime="20201225 14:15:34.802"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:34.803" starttime="20201225 14:15:31.395"></status>
</kw>
<msg timestamp="20201225 14:15:34.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:34.803" starttime="20201225 14:15:31.394"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:34.803" starttime="20201225 14:15:31.394"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:34.806" level="INFO">Running command 'ozone sh bucket link 70847-source/bucket1 70847-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:38.021" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 14:15:38.021" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:38.021" starttime="20201225 14:15:34.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.023" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201225 14:15:38.023" starttime="20201225 14:15:38.022"></status>
</kw>
<msg timestamp="20201225 14:15:38.023" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:38.023" starttime="20201225 14:15:34.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:38.024" starttime="20201225 14:15:38.023"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:15:38.024" critical="yes" starttime="20201225 14:15:25.117"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:38.030" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:38.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:38.033" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:38.033" starttime="20201225 14:15:38.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.034" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:38.034" starttime="20201225 14:15:38.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:38.035" starttime="20201225 14:15:38.034"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.035" starttime="20201225 14:15:38.027"></status>
</kw>
<msg timestamp="20201225 14:15:38.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:38.035" starttime="20201225 14:15:38.027"></status>
</kw>
<msg timestamp="20201225 14:15:38.035" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:38.035" starttime="20201225 14:15:38.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:38.036" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:38.036" starttime="20201225 14:15:38.036"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:38.040" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:38.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:38.057" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:38.057" starttime="20201225 14:15:38.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.058" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:38.058" starttime="20201225 14:15:38.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:38.059" starttime="20201225 14:15:38.058"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.059" starttime="20201225 14:15:38.037"></status>
</kw>
<msg timestamp="20201225 14:15:38.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:38.059" starttime="20201225 14:15:38.037"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.059" starttime="20201225 14:15:38.037"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.059" starttime="20201225 14:15:38.036"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.060" starttime="20201225 14:15:38.026"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.060" starttime="20201225 14:15:38.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:38.064" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:38.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:38.068" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:38.068" starttime="20201225 14:15:38.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.069" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:38.069" starttime="20201225 14:15:38.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:38.069" starttime="20201225 14:15:38.069"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.070" starttime="20201225 14:15:38.061"></status>
</kw>
<msg timestamp="20201225 14:15:38.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:38.070" starttime="20201225 14:15:38.061"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.070" starttime="20201225 14:15:38.061"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:38.074" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:38.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:38.077" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:38.077" starttime="20201225 14:15:38.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.078" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:38.078" starttime="20201225 14:15:38.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:38.078" starttime="20201225 14:15:38.078"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.079" starttime="20201225 14:15:38.072"></status>
</kw>
<msg timestamp="20201225 14:15:38.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:38.079" starttime="20201225 14:15:38.071"></status>
</kw>
<msg timestamp="20201225 14:15:38.079" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:38.079" starttime="20201225 14:15:38.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:38.080" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:38.080" starttime="20201225 14:15:38.079"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:38.083" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:38.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:38.093" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:38.093" starttime="20201225 14:15:38.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.094" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:38.094" starttime="20201225 14:15:38.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:38.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:38.095" starttime="20201225 14:15:38.094"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.096" starttime="20201225 14:15:38.081"></status>
</kw>
<msg timestamp="20201225 14:15:38.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:38.096" starttime="20201225 14:15:38.081"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.096" starttime="20201225 14:15:38.080"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.096" starttime="20201225 14:15:38.080"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.096" starttime="20201225 14:15:38.070"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:38.096" starttime="20201225 14:15:38.070"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:38.099" level="INFO">Running command 'ozone sh key list 70847-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:41.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:41.910" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:41.910" starttime="20201225 14:15:38.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.912" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "70847-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-12-25T14:13:37.359Z",
  "modificationTime" : "2020-12-25T14:13:38.923Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201225 14:15:41.912" starttime="20201225 14:15:41.911"></status>
</kw>
<msg timestamp="20201225 14:15:41.912" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:41.912" starttime="20201225 14:15:38.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:41.913" starttime="20201225 14:15:41.912"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.913" starttime="20201225 14:15:38.060"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.913" starttime="20201225 14:15:38.060"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:15:41.913" critical="yes" starttime="20201225 14:15:38.025"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:41.919" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:41.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:41.923" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:41.923" starttime="20201225 14:15:41.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.924" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:41.924" starttime="20201225 14:15:41.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:41.924" starttime="20201225 14:15:41.924"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.925" starttime="20201225 14:15:41.917"></status>
</kw>
<msg timestamp="20201225 14:15:41.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:41.925" starttime="20201225 14:15:41.916"></status>
</kw>
<msg timestamp="20201225 14:15:41.925" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:41.925" starttime="20201225 14:15:41.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:41.926" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:41.926" starttime="20201225 14:15:41.925"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:41.930" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:41.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:41.942" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:41.942" starttime="20201225 14:15:41.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.943" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:41.943" starttime="20201225 14:15:41.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:41.944" starttime="20201225 14:15:41.943"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.944" starttime="20201225 14:15:41.928"></status>
</kw>
<msg timestamp="20201225 14:15:41.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:41.944" starttime="20201225 14:15:41.927"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.945" starttime="20201225 14:15:41.927"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.945" starttime="20201225 14:15:41.926"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.945" starttime="20201225 14:15:41.915"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.945" starttime="20201225 14:15:41.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:41.949" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:41.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:41.953" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:41.953" starttime="20201225 14:15:41.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.954" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:41.954" starttime="20201225 14:15:41.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:41.955" starttime="20201225 14:15:41.954"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.955" starttime="20201225 14:15:41.947"></status>
</kw>
<msg timestamp="20201225 14:15:41.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:41.955" starttime="20201225 14:15:41.947"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.955" starttime="20201225 14:15:41.946"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:41.959" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:41.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:41.962" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:41.962" starttime="20201225 14:15:41.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.963" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:41.963" starttime="20201225 14:15:41.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:41.964" starttime="20201225 14:15:41.963"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.964" starttime="20201225 14:15:41.957"></status>
</kw>
<msg timestamp="20201225 14:15:41.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:41.964" starttime="20201225 14:15:41.957"></status>
</kw>
<msg timestamp="20201225 14:15:41.965" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:41.965" starttime="20201225 14:15:41.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:41.965" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:41.965" starttime="20201225 14:15:41.965"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:41.970" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:41.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:41.980" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:41.980" starttime="20201225 14:15:41.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.981" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:41.981" starttime="20201225 14:15:41.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:41.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:41.981" starttime="20201225 14:15:41.981"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.982" starttime="20201225 14:15:41.967"></status>
</kw>
<msg timestamp="20201225 14:15:41.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:41.982" starttime="20201225 14:15:41.966"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.982" starttime="20201225 14:15:41.966"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.982" starttime="20201225 14:15:41.965"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.982" starttime="20201225 14:15:41.956"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:41.982" starttime="20201225 14:15:41.956"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:41.985" level="INFO">Running command 'ozone sh key list 70847-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:45.180" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 14:15:45.180" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:45.180" starttime="20201225 14:15:41.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.182" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 70847-target unreadable-link null</msg>
<status status="PASS" endtime="20201225 14:15:45.182" starttime="20201225 14:15:45.181"></status>
</kw>
<msg timestamp="20201225 14:15:45.182" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:45.182" starttime="20201225 14:15:41.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:45.183" starttime="20201225 14:15:45.183"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.183" starttime="20201225 14:15:41.945"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.183" starttime="20201225 14:15:41.945"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:15:45.184" critical="yes" starttime="20201225 14:15:41.914"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:45.190" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:45.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:45.192" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:45.192" starttime="20201225 14:15:45.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.193" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:45.193" starttime="20201225 14:15:45.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:45.194" starttime="20201225 14:15:45.194"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.194" starttime="20201225 14:15:45.187"></status>
</kw>
<msg timestamp="20201225 14:15:45.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:45.195" starttime="20201225 14:15:45.187"></status>
</kw>
<msg timestamp="20201225 14:15:45.195" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:45.195" starttime="20201225 14:15:45.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:45.196" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:45.196" starttime="20201225 14:15:45.195"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:45.200" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:45.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:45.211" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:45.211" starttime="20201225 14:15:45.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.212" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:45.212" starttime="20201225 14:15:45.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:45.212" starttime="20201225 14:15:45.212"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.213" starttime="20201225 14:15:45.197"></status>
</kw>
<msg timestamp="20201225 14:15:45.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:45.213" starttime="20201225 14:15:45.197"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.213" starttime="20201225 14:15:45.196"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.213" starttime="20201225 14:15:45.196"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.213" starttime="20201225 14:15:45.186"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.214" starttime="20201225 14:15:45.185"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:45.220" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:45.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:45.222" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:45.222" starttime="20201225 14:15:45.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.223" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:45.223" starttime="20201225 14:15:45.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:45.224" starttime="20201225 14:15:45.224"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.224" starttime="20201225 14:15:45.215"></status>
</kw>
<msg timestamp="20201225 14:15:45.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:45.225" starttime="20201225 14:15:45.215"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.225" starttime="20201225 14:15:45.215"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:45.229" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:45.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:45.231" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:45.232" starttime="20201225 14:15:45.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.233" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:45.233" starttime="20201225 14:15:45.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:45.233" starttime="20201225 14:15:45.233"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.234" starttime="20201225 14:15:45.226"></status>
</kw>
<msg timestamp="20201225 14:15:45.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:45.234" starttime="20201225 14:15:45.226"></status>
</kw>
<msg timestamp="20201225 14:15:45.234" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:45.234" starttime="20201225 14:15:45.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:45.235" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:45.235" starttime="20201225 14:15:45.234"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:45.240" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:45.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:45.257" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:45.257" starttime="20201225 14:15:45.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.258" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:45.258" starttime="20201225 14:15:45.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:45.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:45.259" starttime="20201225 14:15:45.258"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.259" starttime="20201225 14:15:45.236"></status>
</kw>
<msg timestamp="20201225 14:15:45.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:45.259" starttime="20201225 14:15:45.236"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.260" starttime="20201225 14:15:45.236"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.260" starttime="20201225 14:15:45.235"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.260" starttime="20201225 14:15:45.225"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:45.260" starttime="20201225 14:15:45.225"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:45.265" level="INFO">Running command 'ozone sh bucket info 70847-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:48.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:48.681" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:48.681" starttime="20201225 14:15:45.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:48.682" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:13:52.533Z",
  "modificationTime" : "2020-12-25T14:14:09.086Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201225 14:15:48.682" starttime="20201225 14:15:48.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:48.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:48.683" starttime="20201225 14:15:48.682"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:48.683" starttime="20201225 14:15:45.261"></status>
</kw>
<msg timestamp="20201225 14:15:48.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:48.683" starttime="20201225 14:15:45.261"></status>
</kw>
<msg timestamp="20201225 14:15:48.683" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:48.684" starttime="20201225 14:15:45.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:48.684" starttime="20201225 14:15:48.684"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:48.684" starttime="20201225 14:15:48.684"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:48.687" level="INFO">Running command 'ozone sh key list 70847-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:51.765" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 14:15:51.765" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:51.765" starttime="20201225 14:15:48.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:51.766" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 70847-source unreadable-bucket </msg>
<status status="PASS" endtime="20201225 14:15:51.766" starttime="20201225 14:15:51.765"></status>
</kw>
<msg timestamp="20201225 14:15:51.766" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:51.766" starttime="20201225 14:15:48.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201225 14:15:51.767" starttime="20201225 14:15:51.767"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:51.767" starttime="20201225 14:15:45.214"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:51.767" starttime="20201225 14:15:45.214"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:15:51.768" critical="yes" starttime="20201225 14:15:45.184"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:51.774" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:51.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:51.777" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:15:51.777" starttime="20201225 14:15:51.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:51.778" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:15:51.778" starttime="20201225 14:15:51.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:51.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:51.779" starttime="20201225 14:15:51.778"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:51.779" starttime="20201225 14:15:51.771"></status>
</kw>
<msg timestamp="20201225 14:15:51.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:51.779" starttime="20201225 14:15:51.771"></status>
</kw>
<msg timestamp="20201225 14:15:51.779" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:15:51.779" starttime="20201225 14:15:51.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:15:51.780" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:15:51.780" starttime="20201225 14:15:51.779"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:51.784" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:51.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:51.795" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:15:51.795" starttime="20201225 14:15:51.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:51.796" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:15:51.796" starttime="20201225 14:15:51.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:51.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:51.797" starttime="20201225 14:15:51.797"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:51.797" starttime="20201225 14:15:51.781"></status>
</kw>
<msg timestamp="20201225 14:15:51.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:51.798" starttime="20201225 14:15:51.781"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:51.798" starttime="20201225 14:15:51.780"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:51.798" starttime="20201225 14:15:51.780"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:51.798" starttime="20201225 14:15:51.770"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:51.798" starttime="20201225 14:15:51.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:51.802" level="INFO">Running command 'ozone sh bucket link 70847-target/loop1 70847-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:55.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:55.092" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:55.092" starttime="20201225 14:15:51.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:55.093" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:15:55.093" starttime="20201225 14:15:55.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:55.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:55.093" starttime="20201225 14:15:55.093"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:55.094" starttime="20201225 14:15:51.799"></status>
</kw>
<msg timestamp="20201225 14:15:55.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:55.094" starttime="20201225 14:15:51.799"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:55.094" starttime="20201225 14:15:51.798"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:55.098" level="INFO">Running command 'ozone sh bucket link 70847-target/loop2 70847-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:15:57.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:15:57.995" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:15:57.995" starttime="20201225 14:15:55.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:15:57.997" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:15:57.997" starttime="20201225 14:15:57.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:15:57.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:15:57.997" starttime="20201225 14:15:57.997"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:57.998" starttime="20201225 14:15:55.095"></status>
</kw>
<msg timestamp="20201225 14:15:57.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:15:57.998" starttime="20201225 14:15:55.095"></status>
</kw>
<status status="PASS" endtime="20201225 14:15:57.998" starttime="20201225 14:15:55.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:15:58.002" level="INFO">Running command 'ozone sh bucket link 70847-target/loop3 70847-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:01.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:01.165" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:16:01.165" starttime="20201225 14:15:57.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:01.166" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:16:01.166" starttime="20201225 14:16:01.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:01.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:01.167" starttime="20201225 14:16:01.167"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:01.167" starttime="20201225 14:15:57.999"></status>
</kw>
<msg timestamp="20201225 14:16:01.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:01.168" starttime="20201225 14:15:57.999"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:01.168" starttime="20201225 14:15:57.998"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:01.171" level="INFO">Running command 'ozone sh key list 70847-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:04.462" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 14:16:04.462" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:16:04.462" starttime="20201225 14:16:01.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:04.463" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201225 14:16:04.463" starttime="20201225 14:16:04.462"></status>
</kw>
<msg timestamp="20201225 14:16:04.463" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:16:04.463" starttime="20201225 14:16:01.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201225 14:16:04.464" starttime="20201225 14:16:04.463"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:16:04.464" critical="yes" starttime="20201225 14:15:51.768"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:04.470" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:04.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:04.473" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:16:04.473" starttime="20201225 14:16:04.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:04.473" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:16:04.474" starttime="20201225 14:16:04.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:04.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:04.474" starttime="20201225 14:16:04.474"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:04.474" starttime="20201225 14:16:04.467"></status>
</kw>
<msg timestamp="20201225 14:16:04.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:04.475" starttime="20201225 14:16:04.467"></status>
</kw>
<msg timestamp="20201225 14:16:04.475" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:16:04.475" starttime="20201225 14:16:04.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:16:04.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:16:04.475" starttime="20201225 14:16:04.475"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:04.479" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:04.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:04.513" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:16:04.513" starttime="20201225 14:16:04.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:04.514" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:16:04.514" starttime="20201225 14:16:04.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:04.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:04.515" starttime="20201225 14:16:04.514"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:04.515" starttime="20201225 14:16:04.477"></status>
</kw>
<msg timestamp="20201225 14:16:04.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:04.516" starttime="20201225 14:16:04.476"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:04.516" starttime="20201225 14:16:04.476"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:04.516" starttime="20201225 14:16:04.476"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:04.516" starttime="20201225 14:16:04.466"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:04.516" starttime="20201225 14:16:04.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:04.519" level="INFO">Running command 'ozone sh bucket link 70847-source/bucket1 70847-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:07.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:07.648" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:16:07.648" starttime="20201225 14:16:04.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:07.649" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:16:07.649" starttime="20201225 14:16:07.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:07.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:07.650" starttime="20201225 14:16:07.649"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:07.650" starttime="20201225 14:16:04.517"></status>
</kw>
<msg timestamp="20201225 14:16:07.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:07.650" starttime="20201225 14:16:04.517"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:07.650" starttime="20201225 14:16:04.516"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:07.654" level="INFO">Running command 'ozone sh key put 70847-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:12.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:12.969" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:16:12.969" starttime="20201225 14:16:07.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:12.971" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:16:12.971" starttime="20201225 14:16:12.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:12.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:12.971" starttime="20201225 14:16:12.971"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:12.972" starttime="20201225 14:16:07.651"></status>
</kw>
<msg timestamp="20201225 14:16:12.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:12.972" starttime="20201225 14:16:07.651"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:12.972" starttime="20201225 14:16:07.651"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201225 14:16:12.975" level="INFO">${postfix} = 87409</msg>
<status status="PASS" endtime="20201225 14:16:12.975" starttime="20201225 14:16:12.974"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201225 14:16:12.975" level="INFO">${tmpfile} = /tmp/tempkey-87409</msg>
<status status="PASS" endtime="20201225 14:16:12.975" starttime="20201225 14:16:12.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:12.979" level="INFO">Running command 'ozone sh key get -f 70847-target/link1/key3 /tmp/tempkey-87409 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:17.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:17.792" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:16:17.792" starttime="20201225 14:16:12.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:17.793" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:16:17.794" starttime="20201225 14:16:17.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:17.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:17.794" starttime="20201225 14:16:17.794"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.795" starttime="20201225 14:16:12.976"></status>
</kw>
<msg timestamp="20201225 14:16:17.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:17.795" starttime="20201225 14:16:12.976"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.795" starttime="20201225 14:16:12.975"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201225 14:16:17.797" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-87409 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:17.800" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201225 14:16:17.800" starttime="20201225 14:16:17.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:17.805" level="INFO">Running command 'rm -f /tmp/tempkey-87409 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:17.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:17.807" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:16:17.807" starttime="20201225 14:16:17.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:17.808" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:16:17.809" starttime="20201225 14:16:17.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:17.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:17.809" starttime="20201225 14:16:17.809"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.809" starttime="20201225 14:16:17.802"></status>
</kw>
<msg timestamp="20201225 14:16:17.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:17.810" starttime="20201225 14:16:17.802"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.810" starttime="20201225 14:16:17.801"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:16:17.810" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201225 14:16:17.810" starttime="20201225 14:16:17.810"></status>
</kw>
<msg timestamp="20201225 14:16:17.811" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201225 14:16:17.811" starttime="20201225 14:16:12.973"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:16:17.812" starttime="20201225 14:16:17.811"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.812" starttime="20201225 14:16:12.972"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:16:17.812" critical="yes" starttime="20201225 14:16:04.465"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:17.818" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:17.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:17.821" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201225 14:16:17.821" starttime="20201225 14:16:17.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:17.822" level="INFO">scm</msg>
<status status="PASS" endtime="20201225 14:16:17.822" starttime="20201225 14:16:17.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:17.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:17.823" starttime="20201225 14:16:17.822"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.823" starttime="20201225 14:16:17.816"></status>
</kw>
<msg timestamp="20201225 14:16:17.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:17.824" starttime="20201225 14:16:17.816"></status>
</kw>
<msg timestamp="20201225 14:16:17.824" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201225 14:16:17.824" starttime="20201225 14:16:17.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:16:17.824" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:16:17.824" starttime="20201225 14:16:17.824"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:17.828" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:17.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:17.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:16:17.846" starttime="20201225 14:16:17.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:17.847" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:16:17.847" starttime="20201225 14:16:17.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:17.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:17.848" starttime="20201225 14:16:17.847"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.848" starttime="20201225 14:16:17.826"></status>
</kw>
<msg timestamp="20201225 14:16:17.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:17.848" starttime="20201225 14:16:17.825"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.849" starttime="20201225 14:16:17.825"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.849" starttime="20201225 14:16:17.825"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.849" starttime="20201225 14:16:17.815"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:17.849" starttime="20201225 14:16:17.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:17.852" level="INFO">Running command 'ozone sh bucket delete 70847-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:21.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:21.077" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:16:21.077" starttime="20201225 14:16:17.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:21.078" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:16:21.078" starttime="20201225 14:16:21.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:21.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:21.078" starttime="20201225 14:16:21.078"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:21.079" starttime="20201225 14:16:17.850"></status>
</kw>
<msg timestamp="20201225 14:16:21.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:21.079" starttime="20201225 14:16:17.850"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:21.079" starttime="20201225 14:16:17.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:21.083" level="INFO">Running command 'ozone sh bucket list 70847-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:24.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:24.433" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:16:24.433" starttime="20201225 14:16:21.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:24.434" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:15:34.631Z",
  "modificationTime" : "2020-12-25T14:15:34.631Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:14:12.501Z",
  "modificationTime" : "2020-12-25T14:14:12.501Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:13:52.533Z",
  "modificationTime" : "2020-12-25T14:14:09.086Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:15:28.105Z",
  "modificationTime" : "2020-12-25T14:15:28.105Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:16:07.474Z",
  "modificationTime" : "2020-12-25T14:16:07.474Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:16:00.968Z",
  "modificationTime" : "2020-12-25T14:16:00.968Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:15:54.920Z",
  "modificationTime" : "2020-12-25T14:15:54.920Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:15:57.823Z",
  "modificationTime" : "2020-12-25T14:15:57.823Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:13:46.040Z",
  "modificationTime" : "2020-12-25T14:14:05.757Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70847-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:13:49.357Z",
  "modificationTime" : "2020-12-25T14:13:49.357Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70847-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201225 14:16:24.434" starttime="20201225 14:16:24.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:24.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:24.435" starttime="20201225 14:16:24.434"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:24.435" starttime="20201225 14:16:21.080"></status>
</kw>
<msg timestamp="20201225 14:16:24.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:24.436" starttime="20201225 14:16:21.080"></status>
</kw>
<msg timestamp="20201225 14:16:24.436" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:16:24.436" starttime="20201225 14:16:21.079"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201225 14:16:24.437" starttime="20201225 14:16:24.436"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:16:24.441" level="INFO">Running command 'ozone sh key list 70847-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:16:27.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:16:27.849" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201225 14:16:27.849" starttime="20201225 14:16:24.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:16:27.850" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201225 14:16:27.850" starttime="20201225 14:16:27.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:16:27.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:16:27.851" starttime="20201225 14:16:27.850"></status>
</kw>
<status status="PASS" endtime="20201225 14:16:27.851" starttime="20201225 14:16:24.438"></status>
</kw>
<msg timestamp="20201225 14:16:27.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:16:27.851" starttime="20201225 14:16:24.437"></status>
</kw>
<msg timestamp="20201225 14:16:27.852" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201225 14:16:27.852" starttime="20201225 14:16:24.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201225 14:16:27.852" starttime="20201225 14:16:27.852"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:16:27.852" critical="yes" starttime="20201225 14:16:17.813"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201225 14:16:27.855" starttime="20201225 14:13:24.348"></status>
</suite>
<status status="PASS" elapsedtime="212286" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
