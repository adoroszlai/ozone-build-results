<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201225 14:10:11.315" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:14.197" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:18.160" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 14:06:18.160" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:18.160" starttime="20201225 14:06:14.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:18.161" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 14:06:18.161" starttime="20201225 14:06:18.161"></status>
</kw>
<msg timestamp="20201225 14:06:18.162" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:18.162" starttime="20201225 14:06:14.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:18.167" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:21.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:21.668" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:21.668" starttime="20201225 14:06:18.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:21.669" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:06:21.669" starttime="20201225 14:06:21.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:21.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:21.670" starttime="20201225 14:06:21.669"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:21.670" starttime="20201225 14:06:18.163"></status>
</kw>
<msg timestamp="20201225 14:06:21.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:21.671" starttime="20201225 14:06:18.163"></status>
</kw>
<msg timestamp="20201225 14:06:21.671" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:21.671" starttime="20201225 14:06:18.163"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201225 14:06:21.671" starttime="20201225 14:06:21.671"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:21.672" starttime="20201225 14:06:18.162"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:21.672" starttime="20201225 14:06:18.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:21.676" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:24.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:24.979" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:24.980" starttime="20201225 14:06:21.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:24.981" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:06:24.981" starttime="20201225 14:06:24.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:24.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:24.982" starttime="20201225 14:06:24.981"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:24.982" starttime="20201225 14:06:21.673"></status>
</kw>
<msg timestamp="20201225 14:06:24.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:24.982" starttime="20201225 14:06:21.673"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:24.982" starttime="20201225 14:06:21.673"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:24.982" starttime="20201225 14:06:21.672"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:24.982" starttime="20201225 14:06:21.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201225 14:06:24.983" starttime="20201225 14:06:24.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:24.987" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:28.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:28.258" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:28.258" starttime="20201225 14:06:24.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:28.259" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T14:06:24.806Z",
  "modificationTime" : "2020-12-25T14:06:24.806Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201225 14:06:28.259" starttime="20201225 14:06:28.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:28.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:28.260" starttime="20201225 14:06:28.259"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:28.260" starttime="20201225 14:06:24.984"></status>
</kw>
<msg timestamp="20201225 14:06:28.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:28.260" starttime="20201225 14:06:24.984"></status>
</kw>
<msg timestamp="20201225 14:06:28.260" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:28.260" starttime="20201225 14:06:24.983"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201225 14:06:28.261" starttime="20201225 14:06:28.260"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 14:06:28.265" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 14:06:28.265" starttime="20201225 14:06:28.264"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:06:28.265" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 14:06:28.266" starttime="20201225 14:06:28.265"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:28.266" starttime="20201225 14:06:28.264"></status>
</kw>
<msg timestamp="20201225 14:06:28.266" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 14:06:28.266" starttime="20201225 14:06:28.263"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:28.266" starttime="20201225 14:06:28.263"></status>
</kw>
<msg timestamp="20201225 14:06:28.266" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201225 14:06:28.266" starttime="20201225 14:06:28.262"></status>
</kw>
<msg timestamp="20201225 14:06:28.267" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201225 14:06:28.267" starttime="20201225 14:06:28.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:28.270" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:31.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:31.873" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:31.873" starttime="20201225 14:06:28.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:31.874" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:06:31.875" starttime="20201225 14:06:31.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:31.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:31.875" starttime="20201225 14:06:31.875"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:31.875" starttime="20201225 14:06:28.267"></status>
</kw>
<msg timestamp="20201225 14:06:31.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:31.876" starttime="20201225 14:06:28.267"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:31.876" starttime="20201225 14:06:28.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:31.880" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:39.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:39.298" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:39.299" starttime="20201225 14:06:31.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:39.300" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:06:39.300" starttime="20201225 14:06:39.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:39.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:39.300" starttime="20201225 14:06:39.300"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:39.301" starttime="20201225 14:06:31.877"></status>
</kw>
<msg timestamp="20201225 14:06:39.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:39.301" starttime="20201225 14:06:31.876"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:39.301" starttime="20201225 14:06:31.876"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:39.305" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:44.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:44.421" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:44.421" starttime="20201225 14:06:39.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:44.422" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:06:44.423" starttime="20201225 14:06:44.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:44.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:44.423" starttime="20201225 14:06:44.423"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:44.424" starttime="20201225 14:06:39.302"></status>
</kw>
<msg timestamp="20201225 14:06:44.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:44.424" starttime="20201225 14:06:39.302"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:44.424" starttime="20201225 14:06:39.301"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:44.428" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:49.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:49.408" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:49.408" starttime="20201225 14:06:44.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:49.409" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:06:49.409" starttime="20201225 14:06:49.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:49.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:49.410" starttime="20201225 14:06:49.409"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:49.410" starttime="20201225 14:06:44.425"></status>
</kw>
<msg timestamp="20201225 14:06:49.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:49.410" starttime="20201225 14:06:44.425"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:49.410" starttime="20201225 14:06:44.424"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:06:49.411" critical="yes" starttime="20201225 14:06:14.193"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 14:06:49.415" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 14:06:49.415" starttime="20201225 14:06:49.415"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:06:49.416" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 14:06:49.416" starttime="20201225 14:06:49.415"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:49.416" starttime="20201225 14:06:49.414"></status>
</kw>
<msg timestamp="20201225 14:06:49.416" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 14:06:49.416" starttime="20201225 14:06:49.414"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:49.416" starttime="20201225 14:06:49.413"></status>
</kw>
<msg timestamp="20201225 14:06:49.416" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 14:06:49.417" starttime="20201225 14:06:49.413"></status>
</kw>
<msg timestamp="20201225 14:06:49.417" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 14:06:49.417" starttime="20201225 14:06:49.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:49.421" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:52.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:52.642" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:52.642" starttime="20201225 14:06:49.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:52.643" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:06:52.643" starttime="20201225 14:06:52.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:52.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:52.644" starttime="20201225 14:06:52.643"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:52.644" starttime="20201225 14:06:49.418"></status>
</kw>
<msg timestamp="20201225 14:06:52.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:52.644" starttime="20201225 14:06:49.417"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:52.644" starttime="20201225 14:06:49.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:52.648" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:55.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:55.959" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201225 14:06:55.959" starttime="20201225 14:06:52.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:55.960" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201225 14:06:55.960" starttime="20201225 14:06:55.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:55.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:55.961" starttime="20201225 14:06:55.960"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:55.961" starttime="20201225 14:06:52.645"></status>
</kw>
<msg timestamp="20201225 14:06:55.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:55.961" starttime="20201225 14:06:52.645"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:55.961" starttime="20201225 14:06:52.645"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:06:55.961" critical="yes" starttime="20201225 14:06:49.411"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201225 14:06:55.962" starttime="20201225 14:06:14.144"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 14:08:49.271" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 14:08:49.271" starttime="20201225 14:08:49.271"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:08:49.272" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 14:08:49.272" starttime="20201225 14:08:49.271"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:49.272" starttime="20201225 14:08:49.270"></status>
</kw>
<msg timestamp="20201225 14:08:49.272" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 14:08:49.272" starttime="20201225 14:08:49.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:08:49.273" starttime="20201225 14:08:49.272"></status>
</kw>
<msg timestamp="20201225 14:08:49.273" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 14:08:49.273" starttime="20201225 14:08:49.272"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:49.273" starttime="20201225 14:08:49.269"></status>
</kw>
<msg timestamp="20201225 14:08:49.273" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 14:08:49.273" starttime="20201225 14:08:49.269"></status>
</kw>
<msg timestamp="20201225 14:08:49.273" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 14:08:49.273" starttime="20201225 14:08:49.268"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 14:08:49.274" level="INFO">${random} = 55838</msg>
<status status="PASS" endtime="20201225 14:08:49.274" starttime="20201225 14:08:49.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:08:49.279" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-55838 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:08:52.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:08:52.798" level="INFO">${output} = 2020-12-25 14:08:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:08:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201225 14:08:52.798" starttime="20201225 14:08:49.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:08:52.799" level="INFO">2020-12-25 14:08:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:08:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:08:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 14:08:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 14:08:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BDFD83F1A66A-&gt;a46601c4-4717-401f-85bf-443f91550171
2020-12-25 14:08:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201225 14:08:52.799" starttime="20201225 14:08:52.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:08:52.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:08:52.800" starttime="20201225 14:08:52.799"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:52.800" starttime="20201225 14:08:49.275"></status>
</kw>
<msg timestamp="20201225 14:08:52.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:08:52.800" starttime="20201225 14:08:49.275"></status>
</kw>
<msg timestamp="20201225 14:08:52.800" level="INFO">${result} = 2020-12-25 14:08:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:08:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201225 14:08:52.800" starttime="20201225 14:08:49.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:08:52.805" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:08:54.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:08:54.702" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 14:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 14:07 ofs://om/volume1/bucket1/ozone-14448
-rw-...</msg>
<status status="PASS" endtime="20201225 14:08:54.702" starttime="20201225 14:08:52.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:08:54.704" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 14:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 14:07 ofs://om/volume1/bucket1/ozone-14448
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 14:08 ofs://om/volume1/bucket1/ozone-55838
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 14:06 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 14:08 ofs://om/volume1/bucket1/wordcount-84.txt</msg>
<status status="PASS" endtime="20201225 14:08:54.704" starttime="20201225 14:08:54.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:08:54.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:08:54.704" starttime="20201225 14:08:54.704"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:54.705" starttime="20201225 14:08:52.802"></status>
</kw>
<msg timestamp="20201225 14:08:54.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:08:54.705" starttime="20201225 14:08:52.802"></status>
</kw>
<msg timestamp="20201225 14:08:54.705" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 14:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 14:07 ofs://om/volume1/bucket1/ozone-14448
-rw-...</msg>
<status status="PASS" endtime="20201225 14:08:54.705" starttime="20201225 14:08:52.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:08:54.706" starttime="20201225 14:08:54.705"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 14:08:54.706" critical="yes" starttime="20201225 14:08:49.267"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201225 14:08:54.707" starttime="20201225 14:08:49.219"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 14:07:19.189" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 14:07:19.189" starttime="20201225 14:07:19.188"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:07:19.189" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 14:07:19.189" starttime="20201225 14:07:19.189"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:19.190" starttime="20201225 14:07:19.188"></status>
</kw>
<msg timestamp="20201225 14:07:19.190" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 14:07:19.190" starttime="20201225 14:07:19.187"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:19.190" starttime="20201225 14:07:19.187"></status>
</kw>
<msg timestamp="20201225 14:07:19.190" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 14:07:19.190" starttime="20201225 14:07:19.186"></status>
</kw>
<msg timestamp="20201225 14:07:19.190" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 14:07:19.190" starttime="20201225 14:07:19.185"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 14:07:19.191" level="INFO">${random} = 14448</msg>
<status status="PASS" endtime="20201225 14:07:19.191" starttime="20201225 14:07:19.190"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:07:19.196" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-14448 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:07:22.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:07:22.994" level="INFO">${output} = 2020-12-25 14:07:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:07:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201225 14:07:22.994" starttime="20201225 14:07:19.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:07:22.995" level="INFO">2020-12-25 14:07:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:07:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:07:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 14:07:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 14:07:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8D00522CCF5F-&gt;a46601c4-4717-401f-85bf-443f91550171
2020-12-25 14:07:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201225 14:07:22.995" starttime="20201225 14:07:22.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:07:22.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:07:22.996" starttime="20201225 14:07:22.995"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:22.996" starttime="20201225 14:07:19.192"></status>
</kw>
<msg timestamp="20201225 14:07:22.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:07:22.996" starttime="20201225 14:07:19.191"></status>
</kw>
<msg timestamp="20201225 14:07:22.996" level="INFO">${result} = 2020-12-25 14:07:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:07:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201225 14:07:22.996" starttime="20201225 14:07:19.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:07:23.002" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:07:24.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:07:24.921" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 14:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 14:07 o3fs://bucket1.volume1.om/ozone-14448
dr...</msg>
<status status="PASS" endtime="20201225 14:07:24.921" starttime="20201225 14:07:23.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:07:24.922" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 14:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 14:07 o3fs://bucket1.volume1.om/ozone-14448
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 14:06 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 14:07:24.922" starttime="20201225 14:07:24.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:07:24.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:07:24.923" starttime="20201225 14:07:24.923"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:24.923" starttime="20201225 14:07:22.998"></status>
</kw>
<msg timestamp="20201225 14:07:24.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:07:24.923" starttime="20201225 14:07:22.997"></status>
</kw>
<msg timestamp="20201225 14:07:24.924" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 14:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 14:07 o3fs://bucket1.volume1.om/ozone-14448
dr...</msg>
<status status="PASS" endtime="20201225 14:07:24.924" starttime="20201225 14:07:22.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:07:24.924" starttime="20201225 14:07:24.924"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 14:07:24.924" critical="yes" starttime="20201225 14:07:19.185"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201225 14:07:24.925" starttime="20201225 14:07:19.138"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:07:14.366" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:07:14.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:07:14.369" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201225 14:07:14.369" starttime="20201225 14:07:14.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:07:14.370" level="INFO">rm</msg>
<status status="PASS" endtime="20201225 14:07:14.370" starttime="20201225 14:07:14.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:07:14.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:07:14.371" starttime="20201225 14:07:14.371"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:14.371" starttime="20201225 14:07:14.362"></status>
</kw>
<msg timestamp="20201225 14:07:14.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:07:14.372" starttime="20201225 14:07:14.362"></status>
</kw>
<msg timestamp="20201225 14:07:14.372" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201225 14:07:14.372" starttime="20201225 14:07:14.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:07:14.373" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:07:14.373" starttime="20201225 14:07:14.372"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:07:14.376" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:07:14.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:07:14.389" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:07:14.389" starttime="20201225 14:07:14.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:07:14.390" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:07:14.390" starttime="20201225 14:07:14.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:07:14.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:07:14.391" starttime="20201225 14:07:14.390"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:14.391" starttime="20201225 14:07:14.374"></status>
</kw>
<msg timestamp="20201225 14:07:14.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:07:14.391" starttime="20201225 14:07:14.374"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:14.391" starttime="20201225 14:07:14.374"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:14.391" starttime="20201225 14:07:14.373"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:14.392" starttime="20201225 14:07:14.361"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:07:14.392" critical="yes" starttime="20201225 14:07:14.361"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201225 14:07:14.393" starttime="20201225 14:07:14.321"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:09.355" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:09.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:09.358" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201225 14:06:09.358" starttime="20201225 14:06:09.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:09.359" level="INFO">om</msg>
<status status="PASS" endtime="20201225 14:06:09.359" starttime="20201225 14:06:09.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:09.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:09.360" starttime="20201225 14:06:09.359"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:09.360" starttime="20201225 14:06:09.351"></status>
</kw>
<msg timestamp="20201225 14:06:09.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:09.360" starttime="20201225 14:06:09.351"></status>
</kw>
<msg timestamp="20201225 14:06:09.360" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201225 14:06:09.360" starttime="20201225 14:06:09.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201225 14:06:09.361" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201225 14:06:09.361" starttime="20201225 14:06:09.361"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:06:09.365" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:06:09.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:06:09.383" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 14:06:09.383" starttime="20201225 14:06:09.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:06:09.384" level="INFO"></msg>
<status status="PASS" endtime="20201225 14:06:09.384" starttime="20201225 14:06:09.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:06:09.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:06:09.385" starttime="20201225 14:06:09.384"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:09.385" starttime="20201225 14:06:09.362"></status>
</kw>
<msg timestamp="20201225 14:06:09.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:06:09.385" starttime="20201225 14:06:09.362"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:09.385" starttime="20201225 14:06:09.362"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:09.385" starttime="20201225 14:06:09.361"></status>
</kw>
<status status="PASS" endtime="20201225 14:06:09.386" starttime="20201225 14:06:09.350"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 14:06:09.386" critical="yes" starttime="20201225 14:06:09.349"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201225 14:06:09.387" starttime="20201225 14:06:09.303"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:08:59.579" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:08:59.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:08:59.585" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:08:59.585" starttime="20201225 14:08:59.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:08:59.586" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:08:59.586" starttime="20201225 14:08:59.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:08:59.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:08:59.587" starttime="20201225 14:08:59.586"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:59.587" starttime="20201225 14:08:59.575"></status>
</kw>
<msg timestamp="20201225 14:08:59.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:08:59.587" starttime="20201225 14:08:59.575"></status>
</kw>
<msg timestamp="20201225 14:08:59.587" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:08:59.588" starttime="20201225 14:08:59.574"></status>
</kw>
<msg timestamp="20201225 14:08:59.588" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:08:59.588" starttime="20201225 14:08:59.574"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 14:08:59.591" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 14:08:59.592" starttime="20201225 14:08:59.591"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:08:59.592" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 14:08:59.592" starttime="20201225 14:08:59.592"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:59.592" starttime="20201225 14:08:59.590"></status>
</kw>
<msg timestamp="20201225 14:08:59.592" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 14:08:59.592" starttime="20201225 14:08:59.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:08:59.593" starttime="20201225 14:08:59.593"></status>
</kw>
<msg timestamp="20201225 14:08:59.593" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 14:08:59.593" starttime="20201225 14:08:59.592"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:59.593" starttime="20201225 14:08:59.589"></status>
</kw>
<msg timestamp="20201225 14:08:59.594" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 14:08:59.594" starttime="20201225 14:08:59.589"></status>
</kw>
<msg timestamp="20201225 14:08:59.594" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 14:08:59.594" starttime="20201225 14:08:59.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:08:59.597" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:09:32.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:09:32.106" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 14:09:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:09:01 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201225 14:09:32.106" starttime="20201225 14:08:59.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:09:32.107" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-25 14:09:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:09:01 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:09:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 14:09:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 14:09:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9146FD60DE57-&gt;a46601c4-4717-401f-85bf-443f91550171
2020-12-25 14:09:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-25 14:09:03 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-25 14:09:03 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-25 14:09:04 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905344227, maxDate=1609510144227, sequenceNumber=3, masterKeyId=2))
2020-12-25 14:09:04 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ca 88 ed d1 e9 2e 38 ca 90 9f f2 eb 2e 40 03 48 01 5a 0d 33 35 34 36 31 36 31 36 35 36 36 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-25 14:09:04 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905344227, maxDate=1609510144227, sequenceNumber=3, masterKeyId=2)
2020-12-25 14:09:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 14:09:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 14:09:04 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 14:09:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608905126087_0003
2020-12-25 14:09:05 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905344227, maxDate=1609510144227, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ca 88 ed d1 e9 2e 38 ca 90 9f f2 eb 2e 40 03 48 01 5a 0d 33 35 34 36 31 36 31 36 35 36 36 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-25 14:09:05 INFO  Configuration:2795 - resource-types.xml not found
2020-12-25 14:09:05 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-25 14:09:05 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-25 14:09:06 INFO  YarnClientImpl:329 - Submitted application application_1608905126087_0003
2020-12-25 14:09:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608905126087_0003/
2020-12-25 14:09:06 INFO  Job:1619 - Running job: job_1608905126087_0003
2020-12-25 14:09:14 INFO  Job:1640 - Job job_1608905126087_0003 running in uber mode : false
2020-12-25 14:09:14 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 14:09:24 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 14:09:25 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 14:09:26 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 14:09:30 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 14:09:31 INFO  Job:1658 - Job job_1608905126087_0003 completed successfully
2020-12-25 14:09:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065781
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42272
		Total time spent by all reduces in occupied slots (ms)=7000
		Total time spent by all map tasks (ms)=21136
		Total time spent by all reduce tasks (ms)=3500
		Total vcore-milliseconds taken by all map tasks=21136
		Total vcore-milliseconds taken by all reduce tasks=3500
		Total megabyte-milliseconds taken by all map tasks=43286528
		Total megabyte-milliseconds taken by all reduce tasks=7168000
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=989
		CPU time spent (ms)=6690
		Physical memory (bytes) snapshot=1390682112
		Virtual memory (bytes) snapshot=14026649600
		Total committed heap usage (bytes)=1221066752
		Peak Map Physical memory (bytes)=388890624
		Peak Map Virtual memory (bytes)=3510726656
		Peak Reduce Physical memory (bytes)=308854784
		Peak Reduce Virtual memory (bytes)=3529461760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.018 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201225 14:09:32.107" starttime="20201225 14:09:32.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:09:32.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:09:32.108" starttime="20201225 14:09:32.108"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.108" starttime="20201225 14:08:59.595"></status>
</kw>
<msg timestamp="20201225 14:09:32.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:09:32.109" starttime="20201225 14:08:59.594"></status>
</kw>
<msg timestamp="20201225 14:09:32.109" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 14:09:01 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:09:01 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201225 14:09:32.109" starttime="20201225 14:08:59.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 14:09:32.110" starttime="20201225 14:09:32.109"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 14:09:32.110" critical="yes" starttime="20201225 14:08:59.573"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:09:32.116" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:09:32.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:09:32.122" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:09:32.122" starttime="20201225 14:09:32.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:09:32.123" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:09:32.123" starttime="20201225 14:09:32.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:09:32.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:09:32.124" starttime="20201225 14:09:32.123"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.124" starttime="20201225 14:09:32.113"></status>
</kw>
<msg timestamp="20201225 14:09:32.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:09:32.124" starttime="20201225 14:09:32.113"></status>
</kw>
<msg timestamp="20201225 14:09:32.124" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:09:32.124" starttime="20201225 14:09:32.112"></status>
</kw>
<msg timestamp="20201225 14:09:32.125" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:09:32.125" starttime="20201225 14:09:32.112"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 14:09:32.125" level="INFO">${random} = 40</msg>
<status status="PASS" endtime="20201225 14:09:32.125" starttime="20201225 14:09:32.125"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 14:09:32.129" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 14:09:32.129" starttime="20201225 14:09:32.129"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:09:32.130" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 14:09:32.130" starttime="20201225 14:09:32.129"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.130" starttime="20201225 14:09:32.128"></status>
</kw>
<msg timestamp="20201225 14:09:32.130" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 14:09:32.130" starttime="20201225 14:09:32.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 14:09:32.131" starttime="20201225 14:09:32.131"></status>
</kw>
<msg timestamp="20201225 14:09:32.131" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 14:09:32.131" starttime="20201225 14:09:32.130"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.132" starttime="20201225 14:09:32.127"></status>
</kw>
<msg timestamp="20201225 14:09:32.132" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 14:09:32.132" starttime="20201225 14:09:32.126"></status>
</kw>
<msg timestamp="20201225 14:09:32.132" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 14:09:32.132" starttime="20201225 14:09:32.125"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 14:09:32.135" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 14:09:32.135" starttime="20201225 14:09:32.135"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:09:32.136" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 14:09:32.136" starttime="20201225 14:09:32.135"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.136" starttime="20201225 14:09:32.134"></status>
</kw>
<msg timestamp="20201225 14:09:32.136" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 14:09:32.136" starttime="20201225 14:09:32.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 14:09:32.137" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201225 14:09:32.137" starttime="20201225 14:09:32.137"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:09:32.138" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201225 14:09:32.138" starttime="20201225 14:09:32.138"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.138" starttime="20201225 14:09:32.136"></status>
</kw>
<msg timestamp="20201225 14:09:32.138" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201225 14:09:32.138" starttime="20201225 14:09:32.136"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.139" starttime="20201225 14:09:32.133"></status>
</kw>
<msg timestamp="20201225 14:09:32.139" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201225 14:09:32.139" starttime="20201225 14:09:32.133"></status>
</kw>
<msg timestamp="20201225 14:09:32.139" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201225 14:09:32.139" starttime="20201225 14:09:32.132"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 14:09:32.142" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 14:09:32.142" starttime="20201225 14:09:32.142"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:09:32.143" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 14:09:32.143" starttime="20201225 14:09:32.142"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.143" starttime="20201225 14:09:32.141"></status>
</kw>
<msg timestamp="20201225 14:09:32.143" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 14:09:32.143" starttime="20201225 14:09:32.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 14:09:32.145" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201225 14:09:32.145" starttime="20201225 14:09:32.144"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:09:32.145" level="INFO">${result} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201225 14:09:32.145" starttime="20201225 14:09:32.145"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.145" starttime="20201225 14:09:32.144"></status>
</kw>
<msg timestamp="20201225 14:09:32.146" level="INFO">${path_with_leading} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201225 14:09:32.146" starttime="20201225 14:09:32.143"></status>
</kw>
<status status="PASS" endtime="20201225 14:09:32.146" starttime="20201225 14:09:32.140"></status>
</kw>
<msg timestamp="20201225 14:09:32.146" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201225 14:09:32.146" starttime="20201225 14:09:32.140"></status>
</kw>
<msg timestamp="20201225 14:09:32.146" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201225 14:09:32.146" starttime="20201225 14:09:32.139"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:09:32.150" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-40.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:10:03.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:10:03.300" level="INFO">${output} = 2020-12-25 14:09:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-25 14:09:34 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20201225 14:10:03.301" starttime="20201225 14:09:32.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:10:03.302" level="INFO">2020-12-25 14:09:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-25 14:09:34 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-25 14:09:34 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905374397, maxDate=1609510174397, sequenceNumber=4, masterKeyId=2))
2020-12-25 14:09:34 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e8 f4 ee d1 e9 2e 38 e8 fc a0 f2 eb 2e 40 04 48 01 5a 0d 33 35 34 36 31 36 31 36 35 36 36 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-25 14:09:34 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905374397, maxDate=1609510174397, sequenceNumber=4, masterKeyId=2)
2020-12-25 14:09:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 14:09:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:09:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:09:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 14:09:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 14:09:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-820DBD59F1CB-&gt;a46601c4-4717-401f-85bf-443f91550171
2020-12-25 14:09:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 14:09:36 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 14:09:36 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 14:09:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608905126087_0004
2020-12-25 14:09:36 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905374397, maxDate=1609510174397, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e8 f4 ee d1 e9 2e 38 e8 fc a0 f2 eb 2e 40 04 48 01 5a 0d 33 35 34 36 31 36 31 36 35 36 36 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-25 14:09:36 INFO  Configuration:2795 - resource-types.xml not found
2020-12-25 14:09:36 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-25 14:09:36 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-25 14:09:37 INFO  YarnClientImpl:329 - Submitted application application_1608905126087_0004
2020-12-25 14:09:37 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608905126087_0004/
2020-12-25 14:09:37 INFO  Job:1619 - Running job: job_1608905126087_0004
2020-12-25 14:09:45 INFO  Job:1640 - Job job_1608905126087_0004 running in uber mode : false
2020-12-25 14:09:45 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 14:09:55 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 14:09:56 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 14:09:57 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 14:10:01 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 14:10:02 INFO  Job:1658 - Job job_1608905126087_0004 completed successfully
2020-12-25 14:10:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128431
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43570
		Total time spent by all reduces in occupied slots (ms)=7148
		Total time spent by all map tasks (ms)=21785
		Total time spent by all reduce tasks (ms)=3574
		Total vcore-milliseconds taken by all map tasks=21785
		Total vcore-milliseconds taken by all reduce tasks=3574
		Total megabyte-milliseconds taken by all map tasks=44615680
		Total megabyte-milliseconds taken by all reduce tasks=7319552
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1339
		CPU time spent (ms)=7680
		Physical memory (bytes) snapshot=1621692416
		Virtual memory (bytes) snapshot=14052642816
		Total committed heap usage (bytes)=1432879104
		Peak Map Physical memory (bytes)=543911936
		Peak Map Virtual memory (bytes)=3508019200
		Peak Reduce Physical memory (bytes)=304889856
		Peak Reduce Virtual memory (bytes)=3529576448
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201225 14:10:03.302" starttime="20201225 14:10:03.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:10:03.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:10:03.303" starttime="20201225 14:10:03.302"></status>
</kw>
<status status="PASS" endtime="20201225 14:10:03.303" starttime="20201225 14:09:32.147"></status>
</kw>
<msg timestamp="20201225 14:10:03.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:10:03.303" starttime="20201225 14:09:32.147"></status>
</kw>
<msg timestamp="20201225 14:10:03.304" level="INFO">${output} = 2020-12-25 14:09:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-25 14:09:34 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20201225 14:10:03.304" starttime="20201225 14:09:32.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201225 14:10:03.304" starttime="20201225 14:10:03.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 14:10:03.305" starttime="20201225 14:10:03.305"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 14:10:03.305" critical="yes" starttime="20201225 14:09:32.111"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201225 14:10:03.306" starttime="20201225 14:08:59.526"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:07:29.815" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:07:29.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:07:29.821" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:07:29.821" starttime="20201225 14:07:29.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:07:29.822" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:07:29.822" starttime="20201225 14:07:29.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:07:29.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:07:29.822" starttime="20201225 14:07:29.822"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:29.823" starttime="20201225 14:07:29.811"></status>
</kw>
<msg timestamp="20201225 14:07:29.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:07:29.823" starttime="20201225 14:07:29.811"></status>
</kw>
<msg timestamp="20201225 14:07:29.823" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:07:29.823" starttime="20201225 14:07:29.810"></status>
</kw>
<msg timestamp="20201225 14:07:29.823" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:07:29.823" starttime="20201225 14:07:29.810"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 14:07:29.827" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 14:07:29.827" starttime="20201225 14:07:29.827"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:07:29.828" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 14:07:29.828" starttime="20201225 14:07:29.827"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:29.828" starttime="20201225 14:07:29.826"></status>
</kw>
<msg timestamp="20201225 14:07:29.828" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 14:07:29.828" starttime="20201225 14:07:29.825"></status>
</kw>
<status status="PASS" endtime="20201225 14:07:29.828" starttime="20201225 14:07:29.824"></status>
</kw>
<msg timestamp="20201225 14:07:29.829" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 14:07:29.829" starttime="20201225 14:07:29.824"></status>
</kw>
<msg timestamp="20201225 14:07:29.829" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 14:07:29.829" starttime="20201225 14:07:29.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:07:29.832" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:08:07.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:08:07.049" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 14:07:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:07:32 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201225 14:08:07.049" starttime="20201225 14:07:29.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:08:07.050" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-25 14:07:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:07:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:07:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 14:07:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 14:07:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-629C4BE41400-&gt;a46601c4-4717-401f-85bf-443f91550171
2020-12-25 14:07:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-25 14:07:33 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-25 14:07:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-25 14:07:33 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905253822, maxDate=1609510053822, sequenceNumber=1, masterKeyId=2))
2020-12-25 14:07:33 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b9 c5 e7 d1 e9 2e 38 b9 cd 99 f2 eb 2e 40 01 48 01 5a 0d 33 35 34 36 31 36 31 36 35 36 36 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-25 14:07:33 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905253822, maxDate=1609510053822, sequenceNumber=1, masterKeyId=2)
2020-12-25 14:07:34 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 14:07:34 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 14:07:37 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608905126087_0001
2020-12-25 14:07:37 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905253822, maxDate=1609510053822, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b9 c5 e7 d1 e9 2e 38 b9 cd 99 f2 eb 2e 40 01 48 01 5a 0d 33 35 34 36 31 36 31 36 35 36 36 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-25 14:07:37 INFO  Configuration:2795 - resource-types.xml not found
2020-12-25 14:07:37 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-25 14:07:37 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-25 14:07:38 INFO  YarnClientImpl:329 - Submitted application application_1608905126087_0001
2020-12-25 14:07:38 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608905126087_0001/
2020-12-25 14:07:38 INFO  Job:1619 - Running job: job_1608905126087_0001
2020-12-25 14:07:49 INFO  Job:1640 - Job job_1608905126087_0001 running in uber mode : false
2020-12-25 14:07:49 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 14:07:59 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 14:08:00 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 14:08:01 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 14:08:05 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 14:08:06 INFO  Job:1658 - Job job_1608905126087_0001 completed successfully
2020-12-25 14:08:06 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065993
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43564
		Total time spent by all reduces in occupied slots (ms)=8018
		Total time spent by all map tasks (ms)=21782
		Total time spent by all reduce tasks (ms)=4009
		Total vcore-milliseconds taken by all map tasks=21782
		Total vcore-milliseconds taken by all reduce tasks=4009
		Total megabyte-milliseconds taken by all map tasks=44609536
		Total megabyte-milliseconds taken by all reduce tasks=8210432
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1367
		CPU time spent (ms)=7180
		Physical memory (bytes) snapshot=1630806016
		Virtual memory (bytes) snapshot=14043475968
		Total committed heap usage (bytes)=1450180608
		Peak Map Physical memory (bytes)=551198720
		Peak Map Virtual memory (bytes)=3507859456
		Peak Reduce Physical memory (bytes)=298700800
		Peak Reduce Virtual memory (bytes)=3524694016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.299 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201225 14:08:07.051" starttime="20201225 14:08:07.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:08:07.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:08:07.051" starttime="20201225 14:08:07.051"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:07.051" starttime="20201225 14:07:29.830"></status>
</kw>
<msg timestamp="20201225 14:08:07.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:08:07.052" starttime="20201225 14:07:29.830"></status>
</kw>
<msg timestamp="20201225 14:08:07.052" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 14:07:31 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:07:32 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201225 14:08:07.052" starttime="20201225 14:07:29.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 14:08:07.053" starttime="20201225 14:08:07.052"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 14:08:07.053" critical="yes" starttime="20201225 14:07:29.809"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:08:07.059" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:08:07.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:08:07.065" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:08:07.065" starttime="20201225 14:08:07.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:08:07.065" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:08:07.066" starttime="20201225 14:08:07.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:08:07.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:08:07.066" starttime="20201225 14:08:07.066"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:07.066" starttime="20201225 14:08:07.056"></status>
</kw>
<msg timestamp="20201225 14:08:07.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:08:07.067" starttime="20201225 14:08:07.056"></status>
</kw>
<msg timestamp="20201225 14:08:07.067" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:08:07.067" starttime="20201225 14:08:07.056"></status>
</kw>
<msg timestamp="20201225 14:08:07.067" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 14:08:07.067" starttime="20201225 14:08:07.055"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 14:08:07.068" level="INFO">${random} = 84</msg>
<status status="PASS" endtime="20201225 14:08:07.068" starttime="20201225 14:08:07.067"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 14:08:07.071" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 14:08:07.071" starttime="20201225 14:08:07.071"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:08:07.072" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 14:08:07.072" starttime="20201225 14:08:07.071"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:07.072" starttime="20201225 14:08:07.070"></status>
</kw>
<msg timestamp="20201225 14:08:07.072" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 14:08:07.072" starttime="20201225 14:08:07.070"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:07.072" starttime="20201225 14:08:07.069"></status>
</kw>
<msg timestamp="20201225 14:08:07.072" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 14:08:07.072" starttime="20201225 14:08:07.069"></status>
</kw>
<msg timestamp="20201225 14:08:07.073" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 14:08:07.073" starttime="20201225 14:08:07.068"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 14:08:07.076" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 14:08:07.076" starttime="20201225 14:08:07.075"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:08:07.076" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 14:08:07.076" starttime="20201225 14:08:07.076"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:07.077" starttime="20201225 14:08:07.075"></status>
</kw>
<msg timestamp="20201225 14:08:07.077" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 14:08:07.077" starttime="20201225 14:08:07.074"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:07.077" starttime="20201225 14:08:07.074"></status>
</kw>
<msg timestamp="20201225 14:08:07.077" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201225 14:08:07.077" starttime="20201225 14:08:07.073"></status>
</kw>
<msg timestamp="20201225 14:08:07.077" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201225 14:08:07.077" starttime="20201225 14:08:07.073"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 14:08:07.081" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 14:08:07.081" starttime="20201225 14:08:07.080"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 14:08:07.081" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 14:08:07.081" starttime="20201225 14:08:07.081"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:07.082" starttime="20201225 14:08:07.080"></status>
</kw>
<msg timestamp="20201225 14:08:07.082" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 14:08:07.082" starttime="20201225 14:08:07.080"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:07.082" starttime="20201225 14:08:07.079"></status>
</kw>
<msg timestamp="20201225 14:08:07.082" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-84.txt</msg>
<status status="PASS" endtime="20201225 14:08:07.082" starttime="20201225 14:08:07.078"></status>
</kw>
<msg timestamp="20201225 14:08:07.082" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-84.txt</msg>
<status status="PASS" endtime="20201225 14:08:07.082" starttime="20201225 14:08:07.078"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 14:08:07.086" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-84.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 14:08:43.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 14:08:43.660" level="INFO">${output} = 2020-12-25 14:08:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-25 14:08:09 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20201225 14:08:43.660" starttime="20201225 14:08:07.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 14:08:43.661" level="INFO">2020-12-25 14:08:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-25 14:08:09 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
2020-12-25 14:08:09 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905289514, maxDate=1609510089514, sequenceNumber=2, masterKeyId=2))
2020-12-25 14:08:09 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ca dd e9 d1 e9 2e 38 ca e5 9b f2 eb 2e 40 02 48 01 5a 0d 33 35 34 36 31 36 31 36 35 36 36 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-25 14:08:09 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905289514, maxDate=1609510089514, sequenceNumber=2, masterKeyId=2)
2020-12-25 14:08:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 14:08:09 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 14:08:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 14:08:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 14:08:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 14:08:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-189CF2FE6B6D-&gt;a46601c4-4717-401f-85bf-443f91550171
2020-12-25 14:08:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 14:08:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 14:08:11 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 14:08:11 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608905126087_0002
2020-12-25 14:08:11 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608905289514, maxDate=1609510089514, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ca dd e9 d1 e9 2e 38 ca e5 9b f2 eb 2e 40 02 48 01 5a 0d 33 35 34 36 31 36 31 36 35 36 36 30 38 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-25 14:08:11 INFO  Configuration:2795 - resource-types.xml not found
2020-12-25 14:08:11 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-25 14:08:11 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-25 14:08:12 INFO  YarnClientImpl:329 - Submitted application application_1608905126087_0002
2020-12-25 14:08:12 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608905126087_0002/
2020-12-25 14:08:12 INFO  Job:1619 - Running job: job_1608905126087_0002
2020-12-25 14:08:19 INFO  Job:1640 - Job job_1608905126087_0002 running in uber mode : false
2020-12-25 14:08:19 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 14:08:30 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 14:08:32 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 14:08:39 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 14:08:43 INFO  Job:1658 - Job job_1608905126087_0002 completed successfully
2020-12-25 14:08:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128515
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44292
		Total time spent by all reduces in occupied slots (ms)=12212
		Total time spent by all map tasks (ms)=22146
		Total time spent by all reduce tasks (ms)=6106
		Total vcore-milliseconds taken by all map tasks=22146
		Total vcore-milliseconds taken by all reduce tasks=6106
		Total megabyte-milliseconds taken by all map tasks=45355008
		Total megabyte-milliseconds taken by all reduce tasks=12505088
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1152
		CPU time spent (ms)=7940
		Physical memory (bytes) snapshot=1462747136
		Virtual memory (bytes) snapshot=14038736896
		Total committed heap usage (bytes)=1260912640
		Peak Map Physical memory (bytes)=409321472
		Peak Map Virtual memory (bytes)=3508260864
		Peak Reduce Physical memory (bytes)=292667392
		Peak Reduce Virtual memory (bytes)=3514793984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201225 14:08:43.661" starttime="20201225 14:08:43.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 14:08:43.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 14:08:43.662" starttime="20201225 14:08:43.662"></status>
</kw>
<status status="PASS" endtime="20201225 14:08:43.662" starttime="20201225 14:08:07.083"></status>
</kw>
<msg timestamp="20201225 14:08:43.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 14:08:43.663" starttime="20201225 14:08:07.083"></status>
</kw>
<msg timestamp="20201225 14:08:43.663" level="INFO">${output} = 2020-12-25 14:08:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-25 14:08:09 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.8:10200
20...</msg>
<status status="PASS" endtime="20201225 14:08:43.663" starttime="20201225 14:08:07.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201225 14:08:43.664" starttime="20201225 14:08:43.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 14:08:43.664" starttime="20201225 14:08:43.664"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 14:08:43.664" critical="yes" starttime="20201225 14:08:07.054"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201225 14:08:43.665" starttime="20201225 14:07:29.761"></status>
</suite>
<status status="PASS" elapsedtime="190933" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
