<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201225 13:33:38.991" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:29.252" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:31.386" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 13:20:31.386" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 13:20:31.386" starttime="20201225 13:20:29.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:31.387" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 13:20:31.387" starttime="20201225 13:20:31.386"></status>
</kw>
<msg timestamp="20201225 13:20:31.387" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 13:20:31.387" starttime="20201225 13:20:29.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:31.393" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:33.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:20:33.469" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:20:33.469" starttime="20201225 13:20:31.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:33.470" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:20:33.470" starttime="20201225 13:20:33.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:20:33.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:20:33.471" starttime="20201225 13:20:33.470"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:33.471" starttime="20201225 13:20:31.389"></status>
</kw>
<msg timestamp="20201225 13:20:33.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:20:33.471" starttime="20201225 13:20:31.389"></status>
</kw>
<msg timestamp="20201225 13:20:33.471" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201225 13:20:33.471" starttime="20201225 13:20:31.388"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201225 13:20:33.472" starttime="20201225 13:20:33.472"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:33.472" starttime="20201225 13:20:31.388"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:33.472" starttime="20201225 13:20:31.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:33.476" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:35.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:20:35.369" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:20:35.369" starttime="20201225 13:20:33.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:35.371" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:20:35.371" starttime="20201225 13:20:35.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:20:35.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:20:35.371" starttime="20201225 13:20:35.371"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:35.372" starttime="20201225 13:20:33.474"></status>
</kw>
<msg timestamp="20201225 13:20:35.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:20:35.372" starttime="20201225 13:20:33.474"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:35.372" starttime="20201225 13:20:33.473"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:35.372" starttime="20201225 13:20:33.473"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:35.372" starttime="20201225 13:20:33.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201225 13:20:35.373" starttime="20201225 13:20:35.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:35.376" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:37.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:20:37.495" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T13:20...</msg>
<status status="PASS" endtime="20201225 13:20:37.496" starttime="20201225 13:20:35.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:37.497" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T13:20:35.231Z",
  "modificationTime" : "2020-12-25T13:20:35.231Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201225 13:20:37.497" starttime="20201225 13:20:37.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:20:37.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:20:37.497" starttime="20201225 13:20:37.497"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:37.498" starttime="20201225 13:20:35.374"></status>
</kw>
<msg timestamp="20201225 13:20:37.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:20:37.498" starttime="20201225 13:20:35.373"></status>
</kw>
<msg timestamp="20201225 13:20:37.498" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T13:20...</msg>
<status status="PASS" endtime="20201225 13:20:37.498" starttime="20201225 13:20:35.373"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201225 13:20:37.499" starttime="20201225 13:20:37.498"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:20:37.502" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:20:37.502" starttime="20201225 13:20:37.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:20:37.503" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:20:37.503" starttime="20201225 13:20:37.502"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:37.503" starttime="20201225 13:20:37.501"></status>
</kw>
<msg timestamp="20201225 13:20:37.503" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:20:37.503" starttime="20201225 13:20:37.501"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:37.503" starttime="20201225 13:20:37.500"></status>
</kw>
<msg timestamp="20201225 13:20:37.503" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201225 13:20:37.503" starttime="20201225 13:20:37.499"></status>
</kw>
<msg timestamp="20201225 13:20:37.504" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201225 13:20:37.504" starttime="20201225 13:20:37.499"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:37.508" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:39.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:20:39.653" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:20:39.653" starttime="20201225 13:20:37.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:39.654" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:20:39.654" starttime="20201225 13:20:39.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:20:39.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:20:39.655" starttime="20201225 13:20:39.654"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:39.655" starttime="20201225 13:20:37.504"></status>
</kw>
<msg timestamp="20201225 13:20:39.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:20:39.655" starttime="20201225 13:20:37.504"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:39.655" starttime="20201225 13:20:37.504"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:39.659" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:44.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:20:44.918" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:20:44.918" starttime="20201225 13:20:39.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:44.919" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:20:44.920" starttime="20201225 13:20:44.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:20:44.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:20:44.920" starttime="20201225 13:20:44.920"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:44.921" starttime="20201225 13:20:39.656"></status>
</kw>
<msg timestamp="20201225 13:20:44.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:20:44.921" starttime="20201225 13:20:39.656"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:44.921" starttime="20201225 13:20:39.655"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:44.925" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:48.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:20:48.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:20:48.452" starttime="20201225 13:20:44.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:48.453" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:20:48.453" starttime="20201225 13:20:48.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:20:48.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:20:48.453" starttime="20201225 13:20:48.453"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:48.454" starttime="20201225 13:20:44.922"></status>
</kw>
<msg timestamp="20201225 13:20:48.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:20:48.454" starttime="20201225 13:20:44.922"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:48.454" starttime="20201225 13:20:44.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:48.458" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:52.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:20:52.182" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:20:52.182" starttime="20201225 13:20:48.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:52.183" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:20:52.183" starttime="20201225 13:20:52.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:20:52.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:20:52.184" starttime="20201225 13:20:52.183"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:52.184" starttime="20201225 13:20:48.455"></status>
</kw>
<msg timestamp="20201225 13:20:52.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:20:52.184" starttime="20201225 13:20:48.455"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:52.184" starttime="20201225 13:20:48.454"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 13:20:52.184" critical="yes" starttime="20201225 13:20:29.246"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:20:52.189" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:20:52.189" starttime="20201225 13:20:52.189"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:20:52.190" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:20:52.190" starttime="20201225 13:20:52.190"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:52.190" starttime="20201225 13:20:52.188"></status>
</kw>
<msg timestamp="20201225 13:20:52.190" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:20:52.190" starttime="20201225 13:20:52.188"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:52.191" starttime="20201225 13:20:52.187"></status>
</kw>
<msg timestamp="20201225 13:20:52.191" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 13:20:52.191" starttime="20201225 13:20:52.187"></status>
</kw>
<msg timestamp="20201225 13:20:52.191" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 13:20:52.191" starttime="20201225 13:20:52.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:52.194" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:54.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:20:54.289" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:20:54.290" starttime="20201225 13:20:52.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:54.291" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:20:54.291" starttime="20201225 13:20:54.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:20:54.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:20:54.292" starttime="20201225 13:20:54.291"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:54.292" starttime="20201225 13:20:52.192"></status>
</kw>
<msg timestamp="20201225 13:20:54.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:20:54.292" starttime="20201225 13:20:52.192"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:54.292" starttime="20201225 13:20:52.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:20:54.296" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:20:56.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:20:56.368" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:20:56.368" starttime="20201225 13:20:54.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:20:56.370" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:20:56.370" starttime="20201225 13:20:56.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:20:56.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:20:56.370" starttime="20201225 13:20:56.370"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:56.371" starttime="20201225 13:20:54.293"></status>
</kw>
<msg timestamp="20201225 13:20:56.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:20:56.371" starttime="20201225 13:20:54.293"></status>
</kw>
<status status="PASS" endtime="20201225 13:20:56.371" starttime="20201225 13:20:54.292"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 13:20:56.371" critical="yes" starttime="20201225 13:20:52.185"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201225 13:20:56.372" starttime="20201225 13:20:29.195"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:22:29.839" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:22:29.839" starttime="20201225 13:22:29.839"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:22:29.840" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:22:29.840" starttime="20201225 13:22:29.840"></status>
</kw>
<status status="PASS" endtime="20201225 13:22:29.840" starttime="20201225 13:22:29.839"></status>
</kw>
<msg timestamp="20201225 13:22:29.840" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:22:29.840" starttime="20201225 13:22:29.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:22:29.841" starttime="20201225 13:22:29.841"></status>
</kw>
<msg timestamp="20201225 13:22:29.841" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 13:22:29.841" starttime="20201225 13:22:29.840"></status>
</kw>
<status status="PASS" endtime="20201225 13:22:29.842" starttime="20201225 13:22:29.838"></status>
</kw>
<msg timestamp="20201225 13:22:29.842" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:22:29.842" starttime="20201225 13:22:29.837"></status>
</kw>
<msg timestamp="20201225 13:22:29.842" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:22:29.842" starttime="20201225 13:22:29.836"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:22:29.842" level="INFO">${random} = 66890</msg>
<status status="PASS" endtime="20201225 13:22:29.842" starttime="20201225 13:22:29.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:22:29.847" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-66890 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:22:32.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:22:32.925" level="INFO">${output} = 2020-12-25 13:22:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:22:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 ...</msg>
<status status="PASS" endtime="20201225 13:22:32.925" starttime="20201225 13:22:29.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:22:32.926" level="INFO">2020-12-25 13:22:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:22:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 13:22:31 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-25 13:22:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:22:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-84E3312D4673-&gt;cd9bd100-3f49-4e6c-adb7-153dd22a65af
2020-12-25 13:22:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201225 13:22:32.926" starttime="20201225 13:22:32.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:22:32.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:22:32.927" starttime="20201225 13:22:32.927"></status>
</kw>
<status status="PASS" endtime="20201225 13:22:32.927" starttime="20201225 13:22:29.843"></status>
</kw>
<msg timestamp="20201225 13:22:32.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:22:32.927" starttime="20201225 13:22:29.843"></status>
</kw>
<msg timestamp="20201225 13:22:32.928" level="INFO">${result} = 2020-12-25 13:22:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:22:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 ...</msg>
<status status="PASS" endtime="20201225 13:22:32.928" starttime="20201225 13:22:29.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:22:32.932" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:22:34.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:22:34.507" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-25 13:21 ofs://om/volume1/bucket1/ozone-25367
-rw-...</msg>
<status status="PASS" endtime="20201225 13:22:34.507" starttime="20201225 13:22:32.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:22:34.508" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-25 13:21 ofs://om/volume1/bucket1/ozone-25367
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-25 13:22 ofs://om/volume1/bucket1/ozone-66890
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:20 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:21 ofs://om/volume1/bucket1/wordcount-73.txt</msg>
<status status="PASS" endtime="20201225 13:22:34.508" starttime="20201225 13:22:34.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:22:34.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:22:34.509" starttime="20201225 13:22:34.508"></status>
</kw>
<status status="PASS" endtime="20201225 13:22:34.509" starttime="20201225 13:22:32.930"></status>
</kw>
<msg timestamp="20201225 13:22:34.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:22:34.509" starttime="20201225 13:22:32.929"></status>
</kw>
<msg timestamp="20201225 13:22:34.510" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-25 13:21 ofs://om/volume1/bucket1/ozone-25367
-rw-...</msg>
<status status="PASS" endtime="20201225 13:22:34.510" starttime="20201225 13:22:32.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:22:34.510" starttime="20201225 13:22:34.510"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 13:22:34.510" critical="yes" starttime="20201225 13:22:29.835"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201225 13:22:34.512" starttime="20201225 13:22:29.790"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:21:01.008" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:21:01.008" starttime="20201225 13:21:01.008"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:21:01.009" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:21:01.009" starttime="20201225 13:21:01.009"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:01.009" starttime="20201225 13:21:01.007"></status>
</kw>
<msg timestamp="20201225 13:21:01.009" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:21:01.009" starttime="20201225 13:21:01.007"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:01.010" starttime="20201225 13:21:01.006"></status>
</kw>
<msg timestamp="20201225 13:21:01.010" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:21:01.010" starttime="20201225 13:21:01.006"></status>
</kw>
<msg timestamp="20201225 13:21:01.010" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:21:01.010" starttime="20201225 13:21:01.005"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:21:01.011" level="INFO">${random} = 25367</msg>
<status status="PASS" endtime="20201225 13:21:01.011" starttime="20201225 13:21:01.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:21:01.015" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-25367 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:21:04.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:21:04.314" level="INFO">${output} = 2020-12-25 13:21:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:21:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 ...</msg>
<status status="PASS" endtime="20201225 13:21:04.314" starttime="20201225 13:21:01.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:21:04.315" level="INFO">2020-12-25 13:21:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:21:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 13:21:02 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-25 13:21:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:21:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FA3A8C3511ED-&gt;cd9bd100-3f49-4e6c-adb7-153dd22a65af
2020-12-25 13:21:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201225 13:21:04.315" starttime="20201225 13:21:04.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:21:04.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:21:04.316" starttime="20201225 13:21:04.315"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:04.316" starttime="20201225 13:21:01.012"></status>
</kw>
<msg timestamp="20201225 13:21:04.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:21:04.316" starttime="20201225 13:21:01.011"></status>
</kw>
<msg timestamp="20201225 13:21:04.316" level="INFO">${result} = 2020-12-25 13:21:02 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:21:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 ...</msg>
<status status="PASS" endtime="20201225 13:21:04.316" starttime="20201225 13:21:01.011"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:21:04.321" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:21:05.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:21:05.946" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-25 13:21 o3fs://bucket1.volume1.om/ozone-25367
dr...</msg>
<status status="PASS" endtime="20201225 13:21:05.947" starttime="20201225 13:21:04.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:21:05.948" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-25 13:21 o3fs://bucket1.volume1.om/ozone-25367
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:20 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 13:21:05.948" starttime="20201225 13:21:05.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:21:05.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:21:05.948" starttime="20201225 13:21:05.948"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:05.949" starttime="20201225 13:21:04.318"></status>
</kw>
<msg timestamp="20201225 13:21:05.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:21:05.949" starttime="20201225 13:21:04.317"></status>
</kw>
<msg timestamp="20201225 13:21:05.949" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-25 13:21 o3fs://bucket1.volume1.om/ozone-25367
dr...</msg>
<status status="PASS" endtime="20201225 13:21:05.949" starttime="20201225 13:21:04.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:21:05.950" starttime="20201225 13:21:05.949"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 13:21:05.950" critical="yes" starttime="20201225 13:21:01.004"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201225 13:21:05.951" starttime="20201225 13:21:00.959"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:22:38.902" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:22:38.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:22:38.909" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:22:38.909" starttime="20201225 13:22:38.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:22:38.909" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:22:38.909" starttime="20201225 13:22:38.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:22:38.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:22:38.910" starttime="20201225 13:22:38.910"></status>
</kw>
<status status="PASS" endtime="20201225 13:22:38.910" starttime="20201225 13:22:38.898"></status>
</kw>
<msg timestamp="20201225 13:22:38.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:22:38.911" starttime="20201225 13:22:38.897"></status>
</kw>
<msg timestamp="20201225 13:22:38.911" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:22:38.911" starttime="20201225 13:22:38.897"></status>
</kw>
<msg timestamp="20201225 13:22:38.911" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:22:38.911" starttime="20201225 13:22:38.897"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:22:38.915" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:22:38.915" starttime="20201225 13:22:38.915"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:22:38.916" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:22:38.916" starttime="20201225 13:22:38.915"></status>
</kw>
<status status="PASS" endtime="20201225 13:22:38.916" starttime="20201225 13:22:38.913"></status>
</kw>
<msg timestamp="20201225 13:22:38.916" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:22:38.916" starttime="20201225 13:22:38.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:22:38.917" starttime="20201225 13:22:38.917"></status>
</kw>
<msg timestamp="20201225 13:22:38.917" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 13:22:38.917" starttime="20201225 13:22:38.916"></status>
</kw>
<status status="PASS" endtime="20201225 13:22:38.917" starttime="20201225 13:22:38.912"></status>
</kw>
<msg timestamp="20201225 13:22:38.917" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:22:38.918" starttime="20201225 13:22:38.912"></status>
</kw>
<msg timestamp="20201225 13:22:38.918" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:22:38.918" starttime="20201225 13:22:38.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:22:38.921" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:23:12.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:23:12.216" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:22:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:22:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201225 13:23:12.216" starttime="20201225 13:22:38.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:23:12.218" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:22:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:22:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 13:22:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-25 13:22:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:22:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-44DADBCA1A50-&gt;cd9bd100-3f49-4e6c-adb7-153dd22a65af
2020-12-25 13:22:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-25 13:22:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-25 13:22:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 13:22:44 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-25 13:22:44 INFO  JobSubmitter:198 - number of splits:3
2020-12-25 13:22:45 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608902394358_0003
2020-12-25 13:22:45 INFO  YarnClientImpl:273 - Submitted application application_1608902394358_0003
2020-12-25 13:22:45 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608902394358_0003/
2020-12-25 13:22:45 INFO  Job:1339 - Running job: job_1608902394358_0003
2020-12-25 13:22:51 INFO  Job:1360 - Job job_1608902394358_0003 running in uber mode : false
2020-12-25 13:22:51 INFO  Job:1367 -  map 0% reduce 0%
2020-12-25 13:22:57 INFO  Job:1367 -  map 33% reduce 0%
2020-12-25 13:23:02 INFO  Job:1367 -  map 67% reduce 0%
2020-12-25 13:23:07 INFO  Job:1367 -  map 100% reduce 0%
2020-12-25 13:23:10 INFO  Job:1367 -  map 100% reduce 100%
2020-12-25 13:23:11 INFO  Job:1378 - Job job_1608902394358_0003 completed successfully
2020-12-25 13:23:11 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610709
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36320
		Total time spent by all reduces in occupied slots (ms)=13664
		Total time spent by all map tasks (ms)=9080
		Total time spent by all reduce tasks (ms)=3416
		Total vcore-milliseconds taken by all map tasks=9080
		Total vcore-milliseconds taken by all reduce tasks=3416
		Total megabyte-milliseconds taken by all map tasks=37191680
		Total megabyte-milliseconds taken by all reduce tasks=13991936
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=545
		CPU time spent (ms)=5950
		Physical memory (bytes) snapshot=1144070144
		Virtual memory (bytes) snapshot=15762079744
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.321 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201225 13:23:12.218" starttime="20201225 13:23:12.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:23:12.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:23:12.218" starttime="20201225 13:23:12.218"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.219" starttime="20201225 13:22:38.919"></status>
</kw>
<msg timestamp="20201225 13:23:12.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:23:12.219" starttime="20201225 13:22:38.918"></status>
</kw>
<msg timestamp="20201225 13:23:12.219" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:22:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:22:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201225 13:23:12.219" starttime="20201225 13:22:38.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:23:12.220" starttime="20201225 13:23:12.219"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:23:12.220" critical="yes" starttime="20201225 13:22:38.896"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:23:12.225" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:23:12.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:23:12.231" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:23:12.231" starttime="20201225 13:23:12.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:23:12.232" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:23:12.232" starttime="20201225 13:23:12.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:23:12.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:23:12.232" starttime="20201225 13:23:12.232"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.233" starttime="20201225 13:23:12.223"></status>
</kw>
<msg timestamp="20201225 13:23:12.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:23:12.233" starttime="20201225 13:23:12.222"></status>
</kw>
<msg timestamp="20201225 13:23:12.233" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:23:12.233" starttime="20201225 13:23:12.222"></status>
</kw>
<msg timestamp="20201225 13:23:12.233" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:23:12.233" starttime="20201225 13:23:12.222"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:23:12.234" level="INFO">${random} = 01</msg>
<status status="PASS" endtime="20201225 13:23:12.234" starttime="20201225 13:23:12.234"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:23:12.238" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:23:12.238" starttime="20201225 13:23:12.238"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:23:12.239" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:23:12.239" starttime="20201225 13:23:12.238"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.239" starttime="20201225 13:23:12.237"></status>
</kw>
<msg timestamp="20201225 13:23:12.239" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:23:12.239" starttime="20201225 13:23:12.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:23:12.240" starttime="20201225 13:23:12.239"></status>
</kw>
<msg timestamp="20201225 13:23:12.240" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 13:23:12.240" starttime="20201225 13:23:12.239"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.240" starttime="20201225 13:23:12.236"></status>
</kw>
<msg timestamp="20201225 13:23:12.240" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:23:12.240" starttime="20201225 13:23:12.235"></status>
</kw>
<msg timestamp="20201225 13:23:12.240" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:23:12.240" starttime="20201225 13:23:12.235"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:23:12.243" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:23:12.243" starttime="20201225 13:23:12.243"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:23:12.244" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:23:12.244" starttime="20201225 13:23:12.243"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.244" starttime="20201225 13:23:12.243"></status>
</kw>
<msg timestamp="20201225 13:23:12.244" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:23:12.244" starttime="20201225 13:23:12.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:23:12.246" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201225 13:23:12.246" starttime="20201225 13:23:12.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:23:12.246" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201225 13:23:12.247" starttime="20201225 13:23:12.246"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.247" starttime="20201225 13:23:12.245"></status>
</kw>
<msg timestamp="20201225 13:23:12.247" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201225 13:23:12.247" starttime="20201225 13:23:12.244"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.247" starttime="20201225 13:23:12.242"></status>
</kw>
<msg timestamp="20201225 13:23:12.247" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201225 13:23:12.247" starttime="20201225 13:23:12.241"></status>
</kw>
<msg timestamp="20201225 13:23:12.247" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201225 13:23:12.247" starttime="20201225 13:23:12.241"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:23:12.250" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:23:12.250" starttime="20201225 13:23:12.250"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:23:12.251" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:23:12.251" starttime="20201225 13:23:12.251"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.251" starttime="20201225 13:23:12.250"></status>
</kw>
<msg timestamp="20201225 13:23:12.251" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:23:12.251" starttime="20201225 13:23:12.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:23:12.253" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201225 13:23:12.253" starttime="20201225 13:23:12.252"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:23:12.253" level="INFO">${result} = /wordcount-01.txt</msg>
<status status="PASS" endtime="20201225 13:23:12.253" starttime="20201225 13:23:12.253"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.253" starttime="20201225 13:23:12.252"></status>
</kw>
<msg timestamp="20201225 13:23:12.254" level="INFO">${path_with_leading} = /wordcount-01.txt</msg>
<status status="PASS" endtime="20201225 13:23:12.254" starttime="20201225 13:23:12.252"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:12.254" starttime="20201225 13:23:12.249"></status>
</kw>
<msg timestamp="20201225 13:23:12.254" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-01.txt</msg>
<status status="PASS" endtime="20201225 13:23:12.254" starttime="20201225 13:23:12.248"></status>
</kw>
<msg timestamp="20201225 13:23:12.254" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-01.txt</msg>
<status status="PASS" endtime="20201225 13:23:12.254" starttime="20201225 13:23:12.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:23:12.257" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-01.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:23:45.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:23:45.792" level="INFO">${output} = 2020-12-25 13:23:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-25 13:23:14 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201225 13:23:45.792" starttime="20201225 13:23:12.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:23:45.793" level="INFO">2020-12-25 13:23:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-25 13:23:14 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 13:23:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:23:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 13:23:14 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-25 13:23:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:23:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-72E0BD37FAE7-&gt;cd9bd100-3f49-4e6c-adb7-153dd22a65af
2020-12-25 13:23:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 13:23:15 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-25 13:23:15 INFO  JobSubmitter:198 - number of splits:3
2020-12-25 13:23:15 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608902394358_0004
2020-12-25 13:23:16 INFO  YarnClientImpl:273 - Submitted application application_1608902394358_0004
2020-12-25 13:23:16 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608902394358_0004/
2020-12-25 13:23:16 INFO  Job:1339 - Running job: job_1608902394358_0004
2020-12-25 13:23:24 INFO  Job:1360 - Job job_1608902394358_0004 running in uber mode : false
2020-12-25 13:23:24 INFO  Job:1367 -  map 0% reduce 0%
2020-12-25 13:23:30 INFO  Job:1367 -  map 33% reduce 0%
2020-12-25 13:23:35 INFO  Job:1367 -  map 67% reduce 0%
2020-12-25 13:23:40 INFO  Job:1367 -  map 100% reduce 0%
2020-12-25 13:23:44 INFO  Job:1367 -  map 100% reduce 100%
2020-12-25 13:23:45 INFO  Job:1378 - Job job_1608902394358_0004 completed successfully
2020-12-25 13:23:45 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673471
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36588
		Total time spent by all reduces in occupied slots (ms)=13280
		Total time spent by all map tasks (ms)=9147
		Total time spent by all reduce tasks (ms)=3320
		Total vcore-milliseconds taken by all map tasks=9147
		Total vcore-milliseconds taken by all reduce tasks=3320
		Total megabyte-milliseconds taken by all map tasks=37466112
		Total megabyte-milliseconds taken by all reduce tasks=13598720
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=582
		CPU time spent (ms)=6910
		Physical memory (bytes) snapshot=1171132416
		Virtual memory (bytes) snapshot=15790030848
		Total committed heap usage (bytes)=1055391744
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201225 13:23:45.794" starttime="20201225 13:23:45.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:23:45.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:23:45.794" starttime="20201225 13:23:45.794"></status>
</kw>
<status status="PASS" endtime="20201225 13:23:45.795" starttime="20201225 13:23:12.255"></status>
</kw>
<msg timestamp="20201225 13:23:45.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:23:45.795" starttime="20201225 13:23:12.255"></status>
</kw>
<msg timestamp="20201225 13:23:45.795" level="INFO">${output} = 2020-12-25 13:23:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-25 13:23:14 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201225 13:23:45.795" starttime="20201225 13:23:12.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201225 13:23:45.796" starttime="20201225 13:23:45.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:23:45.796" starttime="20201225 13:23:45.796"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:23:45.797" critical="yes" starttime="20201225 13:23:12.221"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201225 13:23:45.798" starttime="20201225 13:22:38.850"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:21:10.297" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:21:10.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:21:10.303" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:21:10.303" starttime="20201225 13:21:10.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:21:10.303" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:21:10.304" starttime="20201225 13:21:10.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:21:10.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:21:10.304" starttime="20201225 13:21:10.304"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:10.304" starttime="20201225 13:21:10.294"></status>
</kw>
<msg timestamp="20201225 13:21:10.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:21:10.305" starttime="20201225 13:21:10.293"></status>
</kw>
<msg timestamp="20201225 13:21:10.305" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:21:10.305" starttime="20201225 13:21:10.293"></status>
</kw>
<msg timestamp="20201225 13:21:10.305" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:21:10.305" starttime="20201225 13:21:10.293"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:21:10.309" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:21:10.309" starttime="20201225 13:21:10.309"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:21:10.310" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:21:10.310" starttime="20201225 13:21:10.309"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:10.310" starttime="20201225 13:21:10.307"></status>
</kw>
<msg timestamp="20201225 13:21:10.310" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:21:10.310" starttime="20201225 13:21:10.307"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:10.310" starttime="20201225 13:21:10.306"></status>
</kw>
<msg timestamp="20201225 13:21:10.310" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:21:10.310" starttime="20201225 13:21:10.306"></status>
</kw>
<msg timestamp="20201225 13:21:10.310" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:21:10.311" starttime="20201225 13:21:10.305"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:21:10.314" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:21:49.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:21:49.598" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:21:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:21:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201225 13:21:49.598" starttime="20201225 13:21:10.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:21:49.600" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:21:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:21:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 13:21:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-25 13:21:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:21:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AD71C6F9944F-&gt;cd9bd100-3f49-4e6c-adb7-153dd22a65af
2020-12-25 13:21:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-25 13:21:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-25 13:21:16 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-25 13:21:16 INFO  JobSubmitter:198 - number of splits:3
2020-12-25 13:21:16 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608902394358_0001
2020-12-25 13:21:17 INFO  YarnClientImpl:273 - Submitted application application_1608902394358_0001
2020-12-25 13:21:17 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608902394358_0001/
2020-12-25 13:21:17 INFO  Job:1339 - Running job: job_1608902394358_0001
2020-12-25 13:21:26 INFO  Job:1360 - Job job_1608902394358_0001 running in uber mode : false
2020-12-25 13:21:26 INFO  Job:1367 -  map 0% reduce 0%
2020-12-25 13:21:32 INFO  Job:1367 -  map 33% reduce 0%
2020-12-25 13:21:37 INFO  Job:1367 -  map 67% reduce 0%
2020-12-25 13:21:42 INFO  Job:1367 -  map 100% reduce 0%
2020-12-25 13:21:47 INFO  Job:1367 -  map 100% reduce 100%
2020-12-25 13:21:48 INFO  Job:1378 - Job job_1608902394358_0001 completed successfully
2020-12-25 13:21:49 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37260
		Total time spent by all reduces in occupied slots (ms)=15232
		Total time spent by all map tasks (ms)=9315
		Total time spent by all reduce tasks (ms)=3808
		Total vcore-milliseconds taken by all map tasks=9315
		Total vcore-milliseconds taken by all reduce tasks=3808
		Total megabyte-milliseconds taken by all map tasks=38154240
		Total megabyte-milliseconds taken by all reduce tasks=15597568
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=536
		CPU time spent (ms)=6220
		Physical memory (bytes) snapshot=1152475136
		Virtual memory (bytes) snapshot=15770243072
		Total committed heap usage (bytes)=1004535808
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.677 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201225 13:21:49.600" starttime="20201225 13:21:49.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:21:49.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:21:49.601" starttime="20201225 13:21:49.600"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:49.601" starttime="20201225 13:21:10.311"></status>
</kw>
<msg timestamp="20201225 13:21:49.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:21:49.601" starttime="20201225 13:21:10.311"></status>
</kw>
<msg timestamp="20201225 13:21:49.602" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:21:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:21:12 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201225 13:21:49.602" starttime="20201225 13:21:10.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:21:49.602" starttime="20201225 13:21:49.602"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:21:49.602" critical="yes" starttime="20201225 13:21:10.292"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:21:49.607" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:21:49.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:21:49.613" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:21:49.613" starttime="20201225 13:21:49.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:21:49.613" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:21:49.614" starttime="20201225 13:21:49.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:21:49.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:21:49.614" starttime="20201225 13:21:49.614"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:49.614" starttime="20201225 13:21:49.605"></status>
</kw>
<msg timestamp="20201225 13:21:49.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:21:49.615" starttime="20201225 13:21:49.604"></status>
</kw>
<msg timestamp="20201225 13:21:49.615" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:21:49.615" starttime="20201225 13:21:49.604"></status>
</kw>
<msg timestamp="20201225 13:21:49.615" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201225 13:21:49.615" starttime="20201225 13:21:49.604"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:21:49.616" level="INFO">${random} = 73</msg>
<status status="PASS" endtime="20201225 13:21:49.616" starttime="20201225 13:21:49.615"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:21:49.620" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:21:49.620" starttime="20201225 13:21:49.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:21:49.620" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:21:49.620" starttime="20201225 13:21:49.620"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:49.621" starttime="20201225 13:21:49.619"></status>
</kw>
<msg timestamp="20201225 13:21:49.621" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:21:49.621" starttime="20201225 13:21:49.618"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:49.621" starttime="20201225 13:21:49.617"></status>
</kw>
<msg timestamp="20201225 13:21:49.621" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:21:49.621" starttime="20201225 13:21:49.617"></status>
</kw>
<msg timestamp="20201225 13:21:49.621" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:21:49.621" starttime="20201225 13:21:49.616"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:21:49.624" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:21:49.624" starttime="20201225 13:21:49.624"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:21:49.624" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:21:49.625" starttime="20201225 13:21:49.624"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:49.625" starttime="20201225 13:21:49.623"></status>
</kw>
<msg timestamp="20201225 13:21:49.625" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:21:49.625" starttime="20201225 13:21:49.623"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:49.625" starttime="20201225 13:21:49.622"></status>
</kw>
<msg timestamp="20201225 13:21:49.625" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201225 13:21:49.625" starttime="20201225 13:21:49.622"></status>
</kw>
<msg timestamp="20201225 13:21:49.625" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201225 13:21:49.625" starttime="20201225 13:21:49.621"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:21:49.628" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:21:49.628" starttime="20201225 13:21:49.628"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:21:49.629" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:21:49.629" starttime="20201225 13:21:49.628"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:49.629" starttime="20201225 13:21:49.628"></status>
</kw>
<msg timestamp="20201225 13:21:49.629" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:21:49.629" starttime="20201225 13:21:49.627"></status>
</kw>
<status status="PASS" endtime="20201225 13:21:49.629" starttime="20201225 13:21:49.627"></status>
</kw>
<msg timestamp="20201225 13:21:49.629" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-73.txt</msg>
<status status="PASS" endtime="20201225 13:21:49.630" starttime="20201225 13:21:49.626"></status>
</kw>
<msg timestamp="20201225 13:21:49.630" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-73.txt</msg>
<status status="PASS" endtime="20201225 13:21:49.630" starttime="20201225 13:21:49.626"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:21:49.633" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-73.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:22:25.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:22:25.396" level="INFO">${output} = 2020-12-25 13:21:51 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-25 13:21:51 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201225 13:22:25.396" starttime="20201225 13:21:49.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:22:25.398" level="INFO">2020-12-25 13:21:51 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-25 13:21:51 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 13:21:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:21:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-25 13:21:51 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-25 13:21:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:21:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A0E80B417C56-&gt;cd9bd100-3f49-4e6c-adb7-153dd22a65af
2020-12-25 13:21:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 13:21:52 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-25 13:21:52 INFO  JobSubmitter:198 - number of splits:3
2020-12-25 13:21:53 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608902394358_0002
2020-12-25 13:21:53 INFO  YarnClientImpl:273 - Submitted application application_1608902394358_0002
2020-12-25 13:21:53 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608902394358_0002/
2020-12-25 13:21:53 INFO  Job:1339 - Running job: job_1608902394358_0002
2020-12-25 13:22:00 INFO  Job:1360 - Job job_1608902394358_0002 running in uber mode : false
2020-12-25 13:22:00 INFO  Job:1367 -  map 0% reduce 0%
2020-12-25 13:22:06 INFO  Job:1367 -  map 33% reduce 0%
2020-12-25 13:22:11 INFO  Job:1367 -  map 67% reduce 0%
2020-12-25 13:22:16 INFO  Job:1367 -  map 100% reduce 0%
2020-12-25 13:22:20 INFO  Job:1367 -  map 100% reduce 100%
2020-12-25 13:22:24 INFO  Job:1378 - Job job_1608902394358_0002 completed successfully
2020-12-25 13:22:25 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673555
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37708
		Total time spent by all reduces in occupied slots (ms)=13184
		Total time spent by all map tasks (ms)=9427
		Total time spent by all reduce tasks (ms)=3296
		Total vcore-milliseconds taken by all map tasks=9427
		Total vcore-milliseconds taken by all reduce tasks=3296
		Total megabyte-milliseconds taken by all map tasks=38612992
		Total megabyte-milliseconds taken by all reduce tasks=13500416
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=588
		CPU time spent (ms)=7100
		Physical memory (bytes) snapshot=1190076416
		Virtual memory (bytes) snapshot=15800897536
		Total committed heap usage (bytes)=1049624576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201225 13:22:25.398" starttime="20201225 13:22:25.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:22:25.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:22:25.399" starttime="20201225 13:22:25.398"></status>
</kw>
<status status="PASS" endtime="20201225 13:22:25.399" starttime="20201225 13:21:49.631"></status>
</kw>
<msg timestamp="20201225 13:22:25.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:22:25.399" starttime="20201225 13:21:49.631"></status>
</kw>
<msg timestamp="20201225 13:22:25.399" level="INFO">${output} = 2020-12-25 13:21:51 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.9:8032
2020-12-25 13:21:51 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201225 13:22:25.400" starttime="20201225 13:21:49.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201225 13:22:25.400" starttime="20201225 13:22:25.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:22:25.400" starttime="20201225 13:22:25.400"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:22:25.401" critical="yes" starttime="20201225 13:21:49.603"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201225 13:22:25.402" starttime="20201225 13:21:10.246"></status>
</suite>
<status status="PASS" elapsedtime="178995" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:24.968" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:27.074" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 13:25:27.074" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 13:25:27.074" starttime="20201225 13:25:24.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:27.075" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 13:25:27.075" starttime="20201225 13:25:27.074"></status>
</kw>
<msg timestamp="20201225 13:25:27.075" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 13:25:27.075" starttime="20201225 13:25:24.964"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:27.080" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:28.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:25:28.983" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:25:28.983" starttime="20201225 13:25:27.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:28.984" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:25:28.985" starttime="20201225 13:25:28.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:25:28.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:25:28.985" starttime="20201225 13:25:28.985"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:28.985" starttime="20201225 13:25:27.077"></status>
</kw>
<msg timestamp="20201225 13:25:28.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:25:28.986" starttime="20201225 13:25:27.077"></status>
</kw>
<msg timestamp="20201225 13:25:28.986" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201225 13:25:28.986" starttime="20201225 13:25:27.076"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201225 13:25:28.986" starttime="20201225 13:25:28.986"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:28.986" starttime="20201225 13:25:27.076"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:28.987" starttime="20201225 13:25:27.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:28.991" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:30.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:25:30.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:25:30.881" starttime="20201225 13:25:28.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:30.882" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:25:30.882" starttime="20201225 13:25:30.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:25:30.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:25:30.883" starttime="20201225 13:25:30.882"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:30.883" starttime="20201225 13:25:28.988"></status>
</kw>
<msg timestamp="20201225 13:25:30.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:25:30.883" starttime="20201225 13:25:28.988"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:30.883" starttime="20201225 13:25:28.987"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:30.884" starttime="20201225 13:25:28.987"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:30.884" starttime="20201225 13:25:28.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201225 13:25:30.884" starttime="20201225 13:25:30.884"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:30.888" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:32.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:25:32.830" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T13:25...</msg>
<status status="PASS" endtime="20201225 13:25:32.830" starttime="20201225 13:25:30.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:32.831" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T13:25:30.750Z",
  "modificationTime" : "2020-12-25T13:25:30.750Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201225 13:25:32.831" starttime="20201225 13:25:32.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:25:32.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:25:32.832" starttime="20201225 13:25:32.831"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:32.832" starttime="20201225 13:25:30.885"></status>
</kw>
<msg timestamp="20201225 13:25:32.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:25:32.832" starttime="20201225 13:25:30.885"></status>
</kw>
<msg timestamp="20201225 13:25:32.833" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T13:25...</msg>
<status status="PASS" endtime="20201225 13:25:32.833" starttime="20201225 13:25:30.884"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201225 13:25:32.833" starttime="20201225 13:25:32.833"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:25:32.836" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:25:32.837" starttime="20201225 13:25:32.836"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:25:32.837" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:25:32.837" starttime="20201225 13:25:32.837"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:32.837" starttime="20201225 13:25:32.836"></status>
</kw>
<msg timestamp="20201225 13:25:32.837" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:25:32.837" starttime="20201225 13:25:32.835"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:32.838" starttime="20201225 13:25:32.835"></status>
</kw>
<msg timestamp="20201225 13:25:32.838" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201225 13:25:32.838" starttime="20201225 13:25:32.834"></status>
</kw>
<msg timestamp="20201225 13:25:32.838" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201225 13:25:32.838" starttime="20201225 13:25:32.833"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:32.841" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:35.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:25:35.100" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:25:35.100" starttime="20201225 13:25:32.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:35.101" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:25:35.102" starttime="20201225 13:25:35.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:25:35.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:25:35.102" starttime="20201225 13:25:35.102"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:35.102" starttime="20201225 13:25:32.839"></status>
</kw>
<msg timestamp="20201225 13:25:35.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:25:35.103" starttime="20201225 13:25:32.838"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:35.103" starttime="20201225 13:25:32.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:35.106" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:40.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:25:40.052" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:25:40.052" starttime="20201225 13:25:35.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:40.053" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:25:40.053" starttime="20201225 13:25:40.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:25:40.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:25:40.053" starttime="20201225 13:25:40.053"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:40.054" starttime="20201225 13:25:35.104"></status>
</kw>
<msg timestamp="20201225 13:25:40.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:25:40.054" starttime="20201225 13:25:35.104"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:40.054" starttime="20201225 13:25:35.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:40.057" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:43.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:25:43.673" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:25:43.673" starttime="20201225 13:25:40.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:43.674" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:25:43.675" starttime="20201225 13:25:43.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:25:43.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:25:43.675" starttime="20201225 13:25:43.675"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:43.676" starttime="20201225 13:25:40.055"></status>
</kw>
<msg timestamp="20201225 13:25:43.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:25:43.676" starttime="20201225 13:25:40.055"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:43.676" starttime="20201225 13:25:40.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:43.680" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:47.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:25:47.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:25:47.239" starttime="20201225 13:25:43.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:47.240" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:25:47.241" starttime="20201225 13:25:47.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:25:47.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:25:47.241" starttime="20201225 13:25:47.241"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:47.241" starttime="20201225 13:25:43.677"></status>
</kw>
<msg timestamp="20201225 13:25:47.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:25:47.242" starttime="20201225 13:25:43.677"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:47.242" starttime="20201225 13:25:43.676"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 13:25:47.242" critical="yes" starttime="20201225 13:25:24.963"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:25:47.246" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:25:47.246" starttime="20201225 13:25:47.246"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:25:47.247" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:25:47.247" starttime="20201225 13:25:47.247"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:47.247" starttime="20201225 13:25:47.245"></status>
</kw>
<msg timestamp="20201225 13:25:47.247" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:25:47.247" starttime="20201225 13:25:47.245"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:47.247" starttime="20201225 13:25:47.244"></status>
</kw>
<msg timestamp="20201225 13:25:47.247" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 13:25:47.247" starttime="20201225 13:25:47.244"></status>
</kw>
<msg timestamp="20201225 13:25:47.248" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 13:25:47.248" starttime="20201225 13:25:47.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:47.251" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:49.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:25:49.345" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:25:49.345" starttime="20201225 13:25:47.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:49.346" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:25:49.346" starttime="20201225 13:25:49.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:25:49.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:25:49.347" starttime="20201225 13:25:49.346"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:49.347" starttime="20201225 13:25:47.248"></status>
</kw>
<msg timestamp="20201225 13:25:49.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:25:49.347" starttime="20201225 13:25:47.248"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:49.348" starttime="20201225 13:25:47.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:49.351" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:25:51.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:25:51.451" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:25:51.451" starttime="20201225 13:25:49.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:25:51.452" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:25:51.452" starttime="20201225 13:25:51.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:25:51.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:25:51.452" starttime="20201225 13:25:51.452"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:51.453" starttime="20201225 13:25:49.349"></status>
</kw>
<msg timestamp="20201225 13:25:51.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:25:51.453" starttime="20201225 13:25:49.348"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:51.453" starttime="20201225 13:25:49.348"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 13:25:51.453" critical="yes" starttime="20201225 13:25:47.243"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201225 13:25:51.454" starttime="20201225 13:25:24.916"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:27:25.369" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:27:25.369" starttime="20201225 13:27:25.369"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:27:25.370" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:27:25.370" starttime="20201225 13:27:25.369"></status>
</kw>
<status status="PASS" endtime="20201225 13:27:25.370" starttime="20201225 13:27:25.369"></status>
</kw>
<msg timestamp="20201225 13:27:25.370" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:27:25.370" starttime="20201225 13:27:25.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:27:25.371" starttime="20201225 13:27:25.371"></status>
</kw>
<msg timestamp="20201225 13:27:25.371" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 13:27:25.371" starttime="20201225 13:27:25.370"></status>
</kw>
<status status="PASS" endtime="20201225 13:27:25.372" starttime="20201225 13:27:25.368"></status>
</kw>
<msg timestamp="20201225 13:27:25.372" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:27:25.372" starttime="20201225 13:27:25.367"></status>
</kw>
<msg timestamp="20201225 13:27:25.372" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:27:25.372" starttime="20201225 13:27:25.366"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:27:25.372" level="INFO">${random} = 54257</msg>
<status status="PASS" endtime="20201225 13:27:25.372" starttime="20201225 13:27:25.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:27:25.377" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-54257 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:27:28.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:27:28.669" level="INFO">${output} = 2020-12-25 13:27:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:27:28.669" starttime="20201225 13:27:25.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:27:28.670" level="INFO">2020-12-25 13:27:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:27 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-25 13:27:27 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:27:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:27:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:27:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:27:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-67E75506AFBD-&gt;8582b13e-2d63-4975-be45-16fcab60dc90
2020-12-25 13:27:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 13:27:28 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201225 13:27:28.670" starttime="20201225 13:27:28.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:27:28.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:27:28.671" starttime="20201225 13:27:28.670"></status>
</kw>
<status status="PASS" endtime="20201225 13:27:28.671" starttime="20201225 13:27:25.373"></status>
</kw>
<msg timestamp="20201225 13:27:28.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:27:28.671" starttime="20201225 13:27:25.373"></status>
</kw>
<msg timestamp="20201225 13:27:28.672" level="INFO">${result} = 2020-12-25 13:27:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:27:28.672" starttime="20201225 13:27:25.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:27:28.676" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:27:30.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:27:30.438" level="INFO">${output} = 2020-12-25 13:27:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:27:30.438" starttime="20201225 13:27:28.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:27:30.439" level="INFO">2020-12-25 13:27:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:30 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-25 13:26 ofs://om/volume1/bucket1/ozone-49789
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-25 13:27 ofs://om/volume1/bucket1/ozone-54257
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:25 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:26 ofs://om/volume1/bucket1/wordcount-22.txt
2020-12-25 13:27:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201225 13:27:30.439" starttime="20201225 13:27:30.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:27:30.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:27:30.439" starttime="20201225 13:27:30.439"></status>
</kw>
<status status="PASS" endtime="20201225 13:27:30.440" starttime="20201225 13:27:28.674"></status>
</kw>
<msg timestamp="20201225 13:27:30.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:27:30.440" starttime="20201225 13:27:28.674"></status>
</kw>
<msg timestamp="20201225 13:27:30.440" level="INFO">${result} = 2020-12-25 13:27:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:29 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:30 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:27:30.440" starttime="20201225 13:27:28.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:27:30.441" starttime="20201225 13:27:30.440"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 13:27:30.441" critical="yes" starttime="20201225 13:27:25.366"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201225 13:27:30.442" starttime="20201225 13:27:25.320"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:25:55.818" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:25:55.818" starttime="20201225 13:25:55.817"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:25:55.818" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:25:55.819" starttime="20201225 13:25:55.818"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:55.819" starttime="20201225 13:25:55.817"></status>
</kw>
<msg timestamp="20201225 13:25:55.819" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:25:55.819" starttime="20201225 13:25:55.816"></status>
</kw>
<status status="PASS" endtime="20201225 13:25:55.819" starttime="20201225 13:25:55.816"></status>
</kw>
<msg timestamp="20201225 13:25:55.819" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:25:55.819" starttime="20201225 13:25:55.815"></status>
</kw>
<msg timestamp="20201225 13:25:55.819" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:25:55.819" starttime="20201225 13:25:55.815"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:25:55.820" level="INFO">${random} = 49789</msg>
<status status="PASS" endtime="20201225 13:25:55.820" starttime="20201225 13:25:55.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:25:55.824" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-49789 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:26:01.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:26:01.616" level="INFO">${output} = 2020-12-25 13:25:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:25:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:25:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:26:01.616" starttime="20201225 13:25:55.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:26:01.617" level="INFO">2020-12-25 13:25:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:25:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:25:57 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:25:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-25 13:25:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:25:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:25:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:25:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:25:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-669B93B890CF-&gt;8582b13e-2d63-4975-be45-16fcab60dc90
2020-12-25 13:25:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 13:26:01 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201225 13:26:01.617" starttime="20201225 13:26:01.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:26:01.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:26:01.618" starttime="20201225 13:26:01.617"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:01.618" starttime="20201225 13:25:55.821"></status>
</kw>
<msg timestamp="20201225 13:26:01.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:26:01.618" starttime="20201225 13:25:55.821"></status>
</kw>
<msg timestamp="20201225 13:26:01.618" level="INFO">${result} = 2020-12-25 13:25:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:25:56 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:25:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:26:01.618" starttime="20201225 13:25:55.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:26:01.623" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:26:03.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:26:03.179" level="INFO">${output} = 2020-12-25 13:26:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:26:03.179" starttime="20201225 13:26:01.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:26:03.180" level="INFO">2020-12-25 13:26:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:03 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-25 13:26 o3fs://bucket1.volume1.om/ozone-49789
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:25 o3fs://bucket1.volume1.om/user
2020-12-25 13:26:03 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201225 13:26:03.180" starttime="20201225 13:26:03.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:26:03.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:26:03.181" starttime="20201225 13:26:03.180"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:03.181" starttime="20201225 13:26:01.620"></status>
</kw>
<msg timestamp="20201225 13:26:03.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:26:03.181" starttime="20201225 13:26:01.619"></status>
</kw>
<msg timestamp="20201225 13:26:03.182" level="INFO">${result} = 2020-12-25 13:26:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:26:03.182" starttime="20201225 13:26:01.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:26:03.182" starttime="20201225 13:26:03.182"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 13:26:03.182" critical="yes" starttime="20201225 13:25:55.814"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201225 13:26:03.183" starttime="20201225 13:25:55.770"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:27:34.912" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:27:34.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:27:34.918" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:27:34.918" starttime="20201225 13:27:34.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:27:34.919" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:27:34.919" starttime="20201225 13:27:34.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:27:34.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:27:34.920" starttime="20201225 13:27:34.919"></status>
</kw>
<status status="PASS" endtime="20201225 13:27:34.920" starttime="20201225 13:27:34.908"></status>
</kw>
<msg timestamp="20201225 13:27:34.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:27:34.920" starttime="20201225 13:27:34.907"></status>
</kw>
<msg timestamp="20201225 13:27:34.921" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:27:34.921" starttime="20201225 13:27:34.907"></status>
</kw>
<msg timestamp="20201225 13:27:34.921" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:27:34.921" starttime="20201225 13:27:34.907"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:27:34.925" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:27:34.925" starttime="20201225 13:27:34.925"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:27:34.926" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:27:34.926" starttime="20201225 13:27:34.926"></status>
</kw>
<status status="PASS" endtime="20201225 13:27:34.926" starttime="20201225 13:27:34.924"></status>
</kw>
<msg timestamp="20201225 13:27:34.926" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:27:34.926" starttime="20201225 13:27:34.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:27:34.927" starttime="20201225 13:27:34.927"></status>
</kw>
<msg timestamp="20201225 13:27:34.928" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 13:27:34.928" starttime="20201225 13:27:34.927"></status>
</kw>
<status status="PASS" endtime="20201225 13:27:34.928" starttime="20201225 13:27:34.922"></status>
</kw>
<msg timestamp="20201225 13:27:34.928" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:27:34.928" starttime="20201225 13:27:34.922"></status>
</kw>
<msg timestamp="20201225 13:27:34.928" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:27:34.928" starttime="20201225 13:27:34.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:27:34.931" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:28:10.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:28:10.646" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:27:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27...</msg>
<status status="PASS" endtime="20201225 13:28:10.646" starttime="20201225 13:27:34.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:28:10.647" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:27:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:36 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-25 13:27:36 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:27:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:27:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:27:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:27:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ADA9ACBE86FD-&gt;8582b13e-2d63-4975-be45-16fcab60dc90
2020-12-25 13:27:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-25 13:27:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-25 13:27:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:40 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 13:27:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 13:27:41 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 13:27:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608902664711_0003
2020-12-25 13:27:41 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-25 13:27:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:41 INFO  Configuration:2752 - resource-types.xml not found
2020-12-25 13:27:41 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-25 13:27:41 INFO  YarnClientImpl:324 - Submitted application application_1608902664711_0003
2020-12-25 13:27:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608902664711_0003/
2020-12-25 13:27:41 INFO  Job:1619 - Running job: job_1608902664711_0003
2020-12-25 13:27:48 INFO  Job:1640 - Job job_1608902664711_0003 running in uber mode : false
2020-12-25 13:27:48 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 13:27:54 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 13:27:59 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 13:28:04 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 13:28:08 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 13:28:09 INFO  Job:1658 - Job job_1608902664711_0003 completed successfully
2020-12-25 13:28:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:10 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016165
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36760
		Total time spent by all reduces in occupied slots (ms)=13820
		Total time spent by all map tasks (ms)=9190
		Total time spent by all reduce tasks (ms)=3455
		Total vcore-milliseconds taken by all map tasks=9190
		Total vcore-milliseconds taken by all reduce tasks=3455
		Total megabyte-milliseconds taken by all map tasks=37642240
		Total megabyte-milliseconds taken by all reduce tasks=14151680
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=558
		CPU time spent (ms)=5800
		Physical memory (bytes) snapshot=1223073792
		Virtual memory (bytes) snapshot=15783428096
		Total committed heap usage (bytes)=1060634624
		Peak Map Physical memory (bytes)=317612032
		Peak Map Virtual memory (bytes)=3945615360
		Peak Reduce Physical memory (bytes)=303300608
		Peak Reduce Virtual memory (bytes)=3973931008
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.647 seconds
2020-12-25 13:28:10 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-25 13:28:10 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201225 13:28:10.647" starttime="20201225 13:28:10.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:28:10.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:28:10.648" starttime="20201225 13:28:10.647"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.648" starttime="20201225 13:27:34.929"></status>
</kw>
<msg timestamp="20201225 13:28:10.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:28:10.648" starttime="20201225 13:27:34.929"></status>
</kw>
<msg timestamp="20201225 13:28:10.649" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:27:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27...</msg>
<status status="PASS" endtime="20201225 13:28:10.649" starttime="20201225 13:27:34.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:28:10.649" starttime="20201225 13:28:10.649"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:28:10.649" critical="yes" starttime="20201225 13:27:34.906"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:28:10.654" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:28:10.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:28:10.659" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:28:10.659" starttime="20201225 13:28:10.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:28:10.660" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:28:10.660" starttime="20201225 13:28:10.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:28:10.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:28:10.661" starttime="20201225 13:28:10.660"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.661" starttime="20201225 13:28:10.652"></status>
</kw>
<msg timestamp="20201225 13:28:10.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:28:10.661" starttime="20201225 13:28:10.651"></status>
</kw>
<msg timestamp="20201225 13:28:10.662" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:28:10.662" starttime="20201225 13:28:10.651"></status>
</kw>
<msg timestamp="20201225 13:28:10.662" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:28:10.662" starttime="20201225 13:28:10.651"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:28:10.663" level="INFO">${random} = 28</msg>
<status status="PASS" endtime="20201225 13:28:10.663" starttime="20201225 13:28:10.662"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:28:10.666" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:28:10.666" starttime="20201225 13:28:10.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:28:10.667" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:28:10.667" starttime="20201225 13:28:10.666"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.667" starttime="20201225 13:28:10.665"></status>
</kw>
<msg timestamp="20201225 13:28:10.667" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:28:10.667" starttime="20201225 13:28:10.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:28:10.668" starttime="20201225 13:28:10.667"></status>
</kw>
<msg timestamp="20201225 13:28:10.668" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 13:28:10.668" starttime="20201225 13:28:10.667"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.668" starttime="20201225 13:28:10.664"></status>
</kw>
<msg timestamp="20201225 13:28:10.668" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:28:10.668" starttime="20201225 13:28:10.663"></status>
</kw>
<msg timestamp="20201225 13:28:10.668" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:28:10.669" starttime="20201225 13:28:10.663"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:28:10.672" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:28:10.672" starttime="20201225 13:28:10.671"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:28:10.672" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:28:10.672" starttime="20201225 13:28:10.672"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.673" starttime="20201225 13:28:10.671"></status>
</kw>
<msg timestamp="20201225 13:28:10.673" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:28:10.673" starttime="20201225 13:28:10.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:28:10.674" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201225 13:28:10.674" starttime="20201225 13:28:10.674"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:28:10.675" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201225 13:28:10.675" starttime="20201225 13:28:10.674"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.675" starttime="20201225 13:28:10.673"></status>
</kw>
<msg timestamp="20201225 13:28:10.675" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201225 13:28:10.675" starttime="20201225 13:28:10.673"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.675" starttime="20201225 13:28:10.670"></status>
</kw>
<msg timestamp="20201225 13:28:10.675" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201225 13:28:10.675" starttime="20201225 13:28:10.669"></status>
</kw>
<msg timestamp="20201225 13:28:10.676" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201225 13:28:10.676" starttime="20201225 13:28:10.669"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:28:10.679" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:28:10.679" starttime="20201225 13:28:10.678"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:28:10.679" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:28:10.679" starttime="20201225 13:28:10.679"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.679" starttime="20201225 13:28:10.678"></status>
</kw>
<msg timestamp="20201225 13:28:10.679" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:28:10.679" starttime="20201225 13:28:10.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:28:10.681" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201225 13:28:10.681" starttime="20201225 13:28:10.680"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:28:10.681" level="INFO">${result} = /wordcount-28.txt</msg>
<status status="PASS" endtime="20201225 13:28:10.681" starttime="20201225 13:28:10.681"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.681" starttime="20201225 13:28:10.680"></status>
</kw>
<msg timestamp="20201225 13:28:10.682" level="INFO">${path_with_leading} = /wordcount-28.txt</msg>
<status status="PASS" endtime="20201225 13:28:10.682" starttime="20201225 13:28:10.680"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:10.682" starttime="20201225 13:28:10.677"></status>
</kw>
<msg timestamp="20201225 13:28:10.682" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-28.txt</msg>
<status status="PASS" endtime="20201225 13:28:10.682" starttime="20201225 13:28:10.676"></status>
</kw>
<msg timestamp="20201225 13:28:10.682" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-28.txt</msg>
<status status="PASS" endtime="20201225 13:28:10.682" starttime="20201225 13:28:10.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:28:10.685" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-28.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:28:48.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:28:48.155" level="INFO">${output} = 2020-12-25 13:28:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:28:48.155" starttime="20201225 13:28:10.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:28:48.156" level="INFO">2020-12-25 13:28:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-25 13:28:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 13:28:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-25 13:28:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:28:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:28:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:28:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:28:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E9B25E8B9860-&gt;8582b13e-2d63-4975-be45-16fcab60dc90
2020-12-25 13:28:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 13:28:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 13:28:16 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 13:28:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608902664711_0004
2020-12-25 13:28:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-25 13:28:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:17 INFO  Configuration:2752 - resource-types.xml not found
2020-12-25 13:28:17 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-25 13:28:17 INFO  YarnClientImpl:324 - Submitted application application_1608902664711_0004
2020-12-25 13:28:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608902664711_0004/
2020-12-25 13:28:17 INFO  Job:1619 - Running job: job_1608902664711_0004
2020-12-25 13:28:24 INFO  Job:1640 - Job job_1608902664711_0004 running in uber mode : false
2020-12-25 13:28:24 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 13:28:30 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 13:28:35 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 13:28:40 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 13:28:47 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 13:28:47 INFO  Job:1658 - Job job_1608902664711_0004 completed successfully
2020-12-25 13:28:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078807
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36976
		Total time spent by all reduces in occupied slots (ms)=23808
		Total time spent by all map tasks (ms)=9244
		Total time spent by all reduce tasks (ms)=5952
		Total vcore-milliseconds taken by all map tasks=9244
		Total vcore-milliseconds taken by all reduce tasks=5952
		Total megabyte-milliseconds taken by all map tasks=37863424
		Total megabyte-milliseconds taken by all reduce tasks=24379392
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=534
		CPU time spent (ms)=6520
		Physical memory (bytes) snapshot=1232539648
		Virtual memory (bytes) snapshot=15796064256
		Total committed heap usage (bytes)=1067974656
		Peak Map Physical memory (bytes)=316497920
		Peak Map Virtual memory (bytes)=3946123264
		Peak Reduce Physical memory (bytes)=291983360
		Peak Reduce Virtual memory (bytes)=3964551168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-25 13:28:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201225 13:28:48.156" starttime="20201225 13:28:48.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:28:48.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:28:48.157" starttime="20201225 13:28:48.157"></status>
</kw>
<status status="PASS" endtime="20201225 13:28:48.157" starttime="20201225 13:28:10.683"></status>
</kw>
<msg timestamp="20201225 13:28:48.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:28:48.158" starttime="20201225 13:28:10.683"></status>
</kw>
<msg timestamp="20201225 13:28:48.158" level="INFO">${output} = 2020-12-25 13:28:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:28:12 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:28:48.158" starttime="20201225 13:28:10.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201225 13:28:48.159" starttime="20201225 13:28:48.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:28:48.159" starttime="20201225 13:28:48.159"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:28:48.159" critical="yes" starttime="20201225 13:28:10.650"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201225 13:28:48.161" starttime="20201225 13:27:34.859"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:26:07.729" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:26:07.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:26:07.733" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:26:07.734" starttime="20201225 13:26:07.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:26:07.734" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:26:07.734" starttime="20201225 13:26:07.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:26:07.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:26:07.735" starttime="20201225 13:26:07.734"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:07.735" starttime="20201225 13:26:07.725"></status>
</kw>
<msg timestamp="20201225 13:26:07.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:26:07.735" starttime="20201225 13:26:07.725"></status>
</kw>
<msg timestamp="20201225 13:26:07.736" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:26:07.736" starttime="20201225 13:26:07.724"></status>
</kw>
<msg timestamp="20201225 13:26:07.736" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:26:07.736" starttime="20201225 13:26:07.724"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:26:07.740" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:26:07.740" starttime="20201225 13:26:07.739"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:26:07.740" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:26:07.740" starttime="20201225 13:26:07.740"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:07.741" starttime="20201225 13:26:07.738"></status>
</kw>
<msg timestamp="20201225 13:26:07.741" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:26:07.741" starttime="20201225 13:26:07.738"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:07.741" starttime="20201225 13:26:07.737"></status>
</kw>
<msg timestamp="20201225 13:26:07.741" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:26:07.741" starttime="20201225 13:26:07.737"></status>
</kw>
<msg timestamp="20201225 13:26:07.741" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:26:07.741" starttime="20201225 13:26:07.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:26:07.744" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:26:46.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:26:46.952" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:26:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26...</msg>
<status status="PASS" endtime="20201225 13:26:46.952" starttime="20201225 13:26:07.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:26:46.953" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:26:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-25 13:26:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:26:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:26:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:26:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:26:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-68A58AB0DC87-&gt;8582b13e-2d63-4975-be45-16fcab60dc90
2020-12-25 13:26:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-25 13:26:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:10 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-25 13:26:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 13:26:13 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 13:26:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608902664711_0001
2020-12-25 13:26:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-25 13:26:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:14 INFO  Configuration:2752 - resource-types.xml not found
2020-12-25 13:26:14 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-25 13:26:14 INFO  YarnClientImpl:324 - Submitted application application_1608902664711_0001
2020-12-25 13:26:14 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608902664711_0001/
2020-12-25 13:26:14 INFO  Job:1619 - Running job: job_1608902664711_0001
2020-12-25 13:26:24 INFO  Job:1640 - Job job_1608902664711_0001 running in uber mode : false
2020-12-25 13:26:24 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 13:26:30 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 13:26:35 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 13:26:40 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 13:26:45 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 13:26:46 INFO  Job:1658 - Job job_1608902664711_0001 completed successfully
2020-12-25 13:26:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:46 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016377
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37600
		Total time spent by all reduces in occupied slots (ms)=14232
		Total time spent by all map tasks (ms)=9400
		Total time spent by all reduce tasks (ms)=3558
		Total vcore-milliseconds taken by all map tasks=9400
		Total vcore-milliseconds taken by all reduce tasks=3558
		Total megabyte-milliseconds taken by all map tasks=38502400
		Total megabyte-milliseconds taken by all reduce tasks=14573568
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=572
		CPU time spent (ms)=5270
		Physical memory (bytes) snapshot=1245126656
		Virtual memory (bytes) snapshot=15752818688
		Total committed heap usage (bytes)=1082130432
		Peak Map Physical memory (bytes)=382406656
		Peak Map Virtual memory (bytes)=3943620608
		Peak Reduce Physical memory (bytes)=286658560
		Peak Reduce Virtual memory (bytes)=3958747136
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.558 seconds
2020-12-25 13:26:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:46 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-25 13:26:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201225 13:26:46.953" starttime="20201225 13:26:46.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:26:46.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:26:46.954" starttime="20201225 13:26:46.953"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:46.954" starttime="20201225 13:26:07.742"></status>
</kw>
<msg timestamp="20201225 13:26:46.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:26:46.954" starttime="20201225 13:26:07.742"></status>
</kw>
<msg timestamp="20201225 13:26:46.955" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:26:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:08 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26...</msg>
<status status="PASS" endtime="20201225 13:26:46.955" starttime="20201225 13:26:07.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:26:46.955" starttime="20201225 13:26:46.955"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:26:46.956" critical="yes" starttime="20201225 13:26:07.723"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:26:46.960" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:26:46.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:26:46.967" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:26:46.967" starttime="20201225 13:26:46.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:26:46.968" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:26:46.968" starttime="20201225 13:26:46.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:26:46.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:26:46.969" starttime="20201225 13:26:46.968"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:46.969" starttime="20201225 13:26:46.958"></status>
</kw>
<msg timestamp="20201225 13:26:46.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:26:46.969" starttime="20201225 13:26:46.958"></status>
</kw>
<msg timestamp="20201225 13:26:46.969" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:26:46.969" starttime="20201225 13:26:46.957"></status>
</kw>
<msg timestamp="20201225 13:26:46.970" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201225 13:26:46.970" starttime="20201225 13:26:46.957"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:26:46.970" level="INFO">${random} = 22</msg>
<status status="PASS" endtime="20201225 13:26:46.970" starttime="20201225 13:26:46.970"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:26:46.974" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:26:46.974" starttime="20201225 13:26:46.974"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:26:46.975" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:26:46.975" starttime="20201225 13:26:46.974"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:46.975" starttime="20201225 13:26:46.973"></status>
</kw>
<msg timestamp="20201225 13:26:46.975" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:26:46.975" starttime="20201225 13:26:46.973"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:46.975" starttime="20201225 13:26:46.972"></status>
</kw>
<msg timestamp="20201225 13:26:46.975" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:26:46.975" starttime="20201225 13:26:46.971"></status>
</kw>
<msg timestamp="20201225 13:26:46.976" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:26:46.976" starttime="20201225 13:26:46.971"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:26:46.979" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:26:46.979" starttime="20201225 13:26:46.978"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:26:46.979" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:26:46.979" starttime="20201225 13:26:46.979"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:46.980" starttime="20201225 13:26:46.978"></status>
</kw>
<msg timestamp="20201225 13:26:46.980" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:26:46.980" starttime="20201225 13:26:46.977"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:46.980" starttime="20201225 13:26:46.977"></status>
</kw>
<msg timestamp="20201225 13:26:46.980" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201225 13:26:46.980" starttime="20201225 13:26:46.976"></status>
</kw>
<msg timestamp="20201225 13:26:46.980" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201225 13:26:46.980" starttime="20201225 13:26:46.976"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:26:46.983" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:26:46.983" starttime="20201225 13:26:46.983"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:26:46.984" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:26:46.984" starttime="20201225 13:26:46.984"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:46.984" starttime="20201225 13:26:46.983"></status>
</kw>
<msg timestamp="20201225 13:26:46.984" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:26:46.984" starttime="20201225 13:26:46.982"></status>
</kw>
<status status="PASS" endtime="20201225 13:26:46.985" starttime="20201225 13:26:46.982"></status>
</kw>
<msg timestamp="20201225 13:26:46.985" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-22.txt</msg>
<status status="PASS" endtime="20201225 13:26:46.985" starttime="20201225 13:26:46.981"></status>
</kw>
<msg timestamp="20201225 13:26:46.985" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-22.txt</msg>
<status status="PASS" endtime="20201225 13:26:46.985" starttime="20201225 13:26:46.980"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:26:46.988" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-22.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:27:20.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:27:20.885" level="INFO">${output} = 2020-12-25 13:26:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:27:20.885" starttime="20201225 13:26:46.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:27:20.886" level="INFO">2020-12-25 13:26:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:48 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-25 13:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:48 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 13:26:48 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:49 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-25 13:26:49 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-25 13:26:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:26:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:26:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:26:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F8F7C2CBDBA2-&gt;8582b13e-2d63-4975-be45-16fcab60dc90
2020-12-25 13:26:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 13:26:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 13:26:50 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 13:26:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608902664711_0002
2020-12-25 13:26:50 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-25 13:26:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:51 INFO  Configuration:2752 - resource-types.xml not found
2020-12-25 13:26:51 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-25 13:26:51 INFO  YarnClientImpl:324 - Submitted application application_1608902664711_0002
2020-12-25 13:26:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608902664711_0002/
2020-12-25 13:26:51 INFO  Job:1619 - Running job: job_1608902664711_0002
2020-12-25 13:26:58 INFO  Job:1640 - Job job_1608902664711_0002 running in uber mode : false
2020-12-25 13:26:58 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 13:27:05 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 13:27:09 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 13:27:15 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 13:27:19 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 13:27:20 INFO  Job:1658 - Job job_1608902664711_0002 completed successfully
2020-12-25 13:27:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:27:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078891
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37344
		Total time spent by all reduces in occupied slots (ms)=13652
		Total time spent by all map tasks (ms)=9336
		Total time spent by all reduce tasks (ms)=3413
		Total vcore-milliseconds taken by all map tasks=9336
		Total vcore-milliseconds taken by all reduce tasks=3413
		Total megabyte-milliseconds taken by all map tasks=38240256
		Total megabyte-milliseconds taken by all reduce tasks=13979648
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=565
		CPU time spent (ms)=6400
		Physical memory (bytes) snapshot=1234968576
		Virtual memory (bytes) snapshot=15795339264
		Total committed heap usage (bytes)=1064304640
		Peak Map Physical memory (bytes)=315412480
		Peak Map Virtual memory (bytes)=3946385408
		Peak Reduce Physical memory (bytes)=295108608
		Peak Reduce Virtual memory (bytes)=3966996480
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-25 13:27:20 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201225 13:27:20.886" starttime="20201225 13:27:20.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:27:20.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:27:20.887" starttime="20201225 13:27:20.887"></status>
</kw>
<status status="PASS" endtime="20201225 13:27:20.887" starttime="20201225 13:26:46.986"></status>
</kw>
<msg timestamp="20201225 13:27:20.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:27:20.888" starttime="20201225 13:26:46.986"></status>
</kw>
<msg timestamp="20201225 13:27:20.888" level="INFO">${output} = 2020-12-25 13:26:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-25 13:26:48 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201225 13:27:20.888" starttime="20201225 13:26:46.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201225 13:27:20.889" starttime="20201225 13:27:20.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:27:20.889" starttime="20201225 13:27:20.889"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:27:20.889" critical="yes" starttime="20201225 13:26:46.956"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201225 13:27:20.891" starttime="20201225 13:26:07.676"></status>
</suite>
<status status="PASS" elapsedtime="185590" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:29:52.824" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:29:57.046" level="INFO">${rc} = 255</msg>
<msg timestamp="20201225 13:29:57.046" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 13:29:57.046" starttime="20201225 13:29:52.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:29:57.047" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 13:29:57.047" starttime="20201225 13:29:57.047"></status>
</kw>
<msg timestamp="20201225 13:29:57.048" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201225 13:29:57.048" starttime="20201225 13:29:52.818"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:29:57.053" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:00.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:00.063" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:30:00.063" starttime="20201225 13:29:57.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:00.064" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:30:00.065" starttime="20201225 13:30:00.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:00.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:00.065" starttime="20201225 13:30:00.065"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:00.066" starttime="20201225 13:29:57.049"></status>
</kw>
<msg timestamp="20201225 13:30:00.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:00.066" starttime="20201225 13:29:57.049"></status>
</kw>
<msg timestamp="20201225 13:30:00.066" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201225 13:30:00.066" starttime="20201225 13:29:57.049"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201225 13:30:00.067" starttime="20201225 13:30:00.066"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:00.067" starttime="20201225 13:29:57.048"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:00.067" starttime="20201225 13:29:57.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:00.072" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:02.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:02.714" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:30:02.714" starttime="20201225 13:30:00.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:02.716" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:30:02.716" starttime="20201225 13:30:02.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:02.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:02.716" starttime="20201225 13:30:02.716"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:02.717" starttime="20201225 13:30:00.069"></status>
</kw>
<msg timestamp="20201225 13:30:02.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:02.717" starttime="20201225 13:30:00.068"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:02.717" starttime="20201225 13:30:00.068"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:02.717" starttime="20201225 13:30:00.067"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:02.717" starttime="20201225 13:30:00.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201225 13:30:02.718" starttime="20201225 13:30:02.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:02.721" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:05.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:05.502" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T13:30...</msg>
<status status="PASS" endtime="20201225 13:30:05.502" starttime="20201225 13:30:02.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:05.503" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T13:30:02.604Z",
  "modificationTime" : "2020-12-25T13:30:02.604Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201225 13:30:05.503" starttime="20201225 13:30:05.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:05.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:05.504" starttime="20201225 13:30:05.503"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:05.504" starttime="20201225 13:30:02.719"></status>
</kw>
<msg timestamp="20201225 13:30:05.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:05.504" starttime="20201225 13:30:02.718"></status>
</kw>
<msg timestamp="20201225 13:30:05.505" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2020-12-25T13:30...</msg>
<status status="PASS" endtime="20201225 13:30:05.505" starttime="20201225 13:30:02.718"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201225 13:30:05.505" starttime="20201225 13:30:05.505"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:30:05.509" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:30:05.509" starttime="20201225 13:30:05.508"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:30:05.509" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:30:05.510" starttime="20201225 13:30:05.509"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:05.510" starttime="20201225 13:30:05.508"></status>
</kw>
<msg timestamp="20201225 13:30:05.510" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:30:05.510" starttime="20201225 13:30:05.507"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:05.510" starttime="20201225 13:30:05.507"></status>
</kw>
<msg timestamp="20201225 13:30:05.510" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201225 13:30:05.510" starttime="20201225 13:30:05.506"></status>
</kw>
<msg timestamp="20201225 13:30:05.510" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201225 13:30:05.510" starttime="20201225 13:30:05.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:05.514" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:08.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:08.822" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:30:08.822" starttime="20201225 13:30:05.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:08.823" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:30:08.823" starttime="20201225 13:30:08.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:08.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:08.823" starttime="20201225 13:30:08.823"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:08.824" starttime="20201225 13:30:05.511"></status>
</kw>
<msg timestamp="20201225 13:30:08.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:08.824" starttime="20201225 13:30:05.511"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:08.824" starttime="20201225 13:30:05.511"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:08.828" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:15.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:15.015" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:30:15.015" starttime="20201225 13:30:08.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:15.016" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:30:15.016" starttime="20201225 13:30:15.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:15.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:15.017" starttime="20201225 13:30:15.017"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:15.017" starttime="20201225 13:30:08.825"></status>
</kw>
<msg timestamp="20201225 13:30:15.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:15.018" starttime="20201225 13:30:08.825"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:15.018" starttime="20201225 13:30:08.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:15.021" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:19.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:19.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:30:19.758" starttime="20201225 13:30:15.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:19.759" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:30:19.759" starttime="20201225 13:30:19.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:19.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:19.760" starttime="20201225 13:30:19.759"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:19.760" starttime="20201225 13:30:15.019"></status>
</kw>
<msg timestamp="20201225 13:30:19.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:19.760" starttime="20201225 13:30:15.018"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:19.760" starttime="20201225 13:30:15.018"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:19.765" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:24.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:24.432" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:30:24.432" starttime="20201225 13:30:19.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:24.434" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:30:24.434" starttime="20201225 13:30:24.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:24.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:24.435" starttime="20201225 13:30:24.435"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:24.436" starttime="20201225 13:30:19.762"></status>
</kw>
<msg timestamp="20201225 13:30:24.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:24.436" starttime="20201225 13:30:19.761"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:24.436" starttime="20201225 13:30:19.761"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 13:30:24.436" critical="yes" starttime="20201225 13:29:52.818"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:30:24.442" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:30:24.442" starttime="20201225 13:30:24.441"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:30:24.443" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:30:24.443" starttime="20201225 13:30:24.442"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:24.443" starttime="20201225 13:30:24.441"></status>
</kw>
<msg timestamp="20201225 13:30:24.443" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:30:24.443" starttime="20201225 13:30:24.440"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:24.443" starttime="20201225 13:30:24.440"></status>
</kw>
<msg timestamp="20201225 13:30:24.443" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 13:30:24.443" starttime="20201225 13:30:24.439"></status>
</kw>
<msg timestamp="20201225 13:30:24.444" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 13:30:24.444" starttime="20201225 13:30:24.438"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:24.447" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:27.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:27.182" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:30:27.182" starttime="20201225 13:30:24.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:27.184" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:30:27.184" starttime="20201225 13:30:27.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:27.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:27.184" starttime="20201225 13:30:27.184"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:27.185" starttime="20201225 13:30:24.444"></status>
</kw>
<msg timestamp="20201225 13:30:27.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:27.185" starttime="20201225 13:30:24.444"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:27.185" starttime="20201225 13:30:24.444"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:27.189" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:30.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:30.218" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201225 13:30:30.218" starttime="20201225 13:30:27.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:30.219" level="INFO"></msg>
<status status="PASS" endtime="20201225 13:30:30.219" starttime="20201225 13:30:30.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:30.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:30.220" starttime="20201225 13:30:30.219"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:30.220" starttime="20201225 13:30:27.186"></status>
</kw>
<msg timestamp="20201225 13:30:30.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:30.220" starttime="20201225 13:30:27.186"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:30.220" starttime="20201225 13:30:27.185"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201225 13:30:30.221" critical="yes" starttime="20201225 13:30:24.438"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201225 13:30:30.222" starttime="20201225 13:29:52.767"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:32:03.366" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:32:03.366" starttime="20201225 13:32:03.366"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:32:03.367" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:32:03.367" starttime="20201225 13:32:03.366"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:03.367" starttime="20201225 13:32:03.365"></status>
</kw>
<msg timestamp="20201225 13:32:03.367" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:32:03.367" starttime="20201225 13:32:03.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:32:03.368" starttime="20201225 13:32:03.368"></status>
</kw>
<msg timestamp="20201225 13:32:03.368" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 13:32:03.368" starttime="20201225 13:32:03.367"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:03.368" starttime="20201225 13:32:03.364"></status>
</kw>
<msg timestamp="20201225 13:32:03.369" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:32:03.369" starttime="20201225 13:32:03.363"></status>
</kw>
<msg timestamp="20201225 13:32:03.369" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:32:03.369" starttime="20201225 13:32:03.362"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:32:03.369" level="INFO">${random} = 61262</msg>
<status status="PASS" endtime="20201225 13:32:03.369" starttime="20201225 13:32:03.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:32:03.375" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-61262 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:32:09.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:32:09.145" level="INFO">${output} = 2020-12-25 13:32:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:32:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201225 13:32:09.145" starttime="20201225 13:32:03.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:32:09.146" level="INFO">2020-12-25 13:32:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:32:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:32:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:32:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:32:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-365DD169DA9A-&gt;ab12742d-67d2-490e-8860-bd153f962545
2020-12-25 13:32:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201225 13:32:09.146" starttime="20201225 13:32:09.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:32:09.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:32:09.147" starttime="20201225 13:32:09.146"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:09.147" starttime="20201225 13:32:03.370"></status>
</kw>
<msg timestamp="20201225 13:32:09.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:32:09.147" starttime="20201225 13:32:03.370"></status>
</kw>
<msg timestamp="20201225 13:32:09.147" level="INFO">${result} = 2020-12-25 13:32:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:32:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201225 13:32:09.147" starttime="20201225 13:32:03.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:32:09.152" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:32:10.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:32:10.889" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:30 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 13:30 ofs://om/volume1/bucket1/ozone-46011
-rw-...</msg>
<status status="PASS" endtime="20201225 13:32:10.889" starttime="20201225 13:32:09.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:32:10.890" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:30 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 13:30 ofs://om/volume1/bucket1/ozone-46011
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 13:32 ofs://om/volume1/bucket1/ozone-61262
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:30 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:31 ofs://om/volume1/bucket1/wordcount-57.txt</msg>
<status status="PASS" endtime="20201225 13:32:10.890" starttime="20201225 13:32:10.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:32:10.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:32:10.891" starttime="20201225 13:32:10.890"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:10.891" starttime="20201225 13:32:09.149"></status>
</kw>
<msg timestamp="20201225 13:32:10.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:32:10.891" starttime="20201225 13:32:09.149"></status>
</kw>
<msg timestamp="20201225 13:32:10.891" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:30 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 13:30 ofs://om/volume1/bucket1/ozone-46011
-rw-...</msg>
<status status="PASS" endtime="20201225 13:32:10.891" starttime="20201225 13:32:09.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:32:10.892" starttime="20201225 13:32:10.892"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 13:32:10.892" critical="yes" starttime="20201225 13:32:03.361"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201225 13:32:10.893" starttime="20201225 13:32:03.311"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:30:34.665" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:30:34.665" starttime="20201225 13:30:34.664"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:30:34.665" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:30:34.665" starttime="20201225 13:30:34.665"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:34.666" starttime="20201225 13:30:34.664"></status>
</kw>
<msg timestamp="20201225 13:30:34.666" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:30:34.666" starttime="20201225 13:30:34.663"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:34.666" starttime="20201225 13:30:34.663"></status>
</kw>
<msg timestamp="20201225 13:30:34.666" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:30:34.666" starttime="20201225 13:30:34.662"></status>
</kw>
<msg timestamp="20201225 13:30:34.666" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:30:34.666" starttime="20201225 13:30:34.661"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:30:34.667" level="INFO">${random} = 46011</msg>
<status status="PASS" endtime="20201225 13:30:34.667" starttime="20201225 13:30:34.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:34.671" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-46011 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:38.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:38.153" level="INFO">${output} = 2020-12-25 13:30:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:30:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201225 13:30:38.153" starttime="20201225 13:30:34.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:38.155" level="INFO">2020-12-25 13:30:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:30:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:30:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:30:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:30:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DA20FE946EA4-&gt;ab12742d-67d2-490e-8860-bd153f962545
2020-12-25 13:30:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201225 13:30:38.155" starttime="20201225 13:30:38.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:38.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:38.155" starttime="20201225 13:30:38.155"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:38.156" starttime="20201225 13:30:34.668"></status>
</kw>
<msg timestamp="20201225 13:30:38.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:38.156" starttime="20201225 13:30:34.667"></status>
</kw>
<msg timestamp="20201225 13:30:38.156" level="INFO">${result} = 2020-12-25 13:30:36 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:30:36 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201225 13:30:38.156" starttime="20201225 13:30:34.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:38.161" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:39.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:39.798" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:30 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 13:30 o3fs://bucket1.volume1.om/ozone-46011
dr...</msg>
<status status="PASS" endtime="20201225 13:30:39.798" starttime="20201225 13:30:38.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:39.799" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:30 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 13:30 o3fs://bucket1.volume1.om/ozone-46011
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:30 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201225 13:30:39.800" starttime="20201225 13:30:39.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:39.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:39.800" starttime="20201225 13:30:39.800"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:39.801" starttime="20201225 13:30:38.158"></status>
</kw>
<msg timestamp="20201225 13:30:39.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:39.801" starttime="20201225 13:30:38.157"></status>
</kw>
<msg timestamp="20201225 13:30:39.801" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-25 13:30 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-25 13:30 o3fs://bucket1.volume1.om/ozone-46011
dr...</msg>
<status status="PASS" endtime="20201225 13:30:39.801" starttime="20201225 13:30:38.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:30:39.802" starttime="20201225 13:30:39.801"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201225 13:30:39.802" critical="yes" starttime="20201225 13:30:34.661"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201225 13:30:39.804" starttime="20201225 13:30:34.612"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:32:15.264" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:32:15.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:32:15.271" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:32:15.271" starttime="20201225 13:32:15.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:32:15.272" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:32:15.272" starttime="20201225 13:32:15.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:32:15.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:32:15.273" starttime="20201225 13:32:15.272"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:15.273" starttime="20201225 13:32:15.260"></status>
</kw>
<msg timestamp="20201225 13:32:15.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:32:15.273" starttime="20201225 13:32:15.260"></status>
</kw>
<msg timestamp="20201225 13:32:15.273" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:32:15.273" starttime="20201225 13:32:15.260"></status>
</kw>
<msg timestamp="20201225 13:32:15.274" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:32:15.274" starttime="20201225 13:32:15.259"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:32:15.278" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:32:15.278" starttime="20201225 13:32:15.277"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:32:15.278" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:32:15.278" starttime="20201225 13:32:15.278"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:15.278" starttime="20201225 13:32:15.276"></status>
</kw>
<msg timestamp="20201225 13:32:15.278" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:32:15.278" starttime="20201225 13:32:15.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:32:15.279" starttime="20201225 13:32:15.279"></status>
</kw>
<msg timestamp="20201225 13:32:15.279" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 13:32:15.279" starttime="20201225 13:32:15.278"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:15.279" starttime="20201225 13:32:15.275"></status>
</kw>
<msg timestamp="20201225 13:32:15.280" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:32:15.280" starttime="20201225 13:32:15.274"></status>
</kw>
<msg timestamp="20201225 13:32:15.280" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:32:15.280" starttime="20201225 13:32:15.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:32:15.284" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:32:53.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:32:53.091" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:32:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:32:17 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201225 13:32:53.091" starttime="20201225 13:32:15.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:32:53.092" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:32:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:32:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:32:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:32:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:32:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-667D31B08D2D-&gt;ab12742d-67d2-490e-8860-bd153f962545
2020-12-25 13:32:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-25 13:32:20 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-25 13:32:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 13:32:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 13:32:21 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 13:32:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608902966995_0003
2020-12-25 13:32:21 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-25 13:32:21 INFO  Configuration:2795 - resource-types.xml not found
2020-12-25 13:32:21 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-25 13:32:21 INFO  YarnClientImpl:329 - Submitted application application_1608902966995_0003
2020-12-25 13:32:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608902966995_0003/
2020-12-25 13:32:21 INFO  Job:1619 - Running job: job_1608902966995_0003
2020-12-25 13:32:29 INFO  Job:1640 - Job job_1608902966995_0003 running in uber mode : false
2020-12-25 13:32:29 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 13:32:35 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 13:32:40 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 13:32:45 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 13:32:52 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 13:32:52 INFO  Job:1658 - Job job_1608902966995_0003 completed successfully
2020-12-25 13:32:52 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056261
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38172
		Total time spent by all reduces in occupied slots (ms)=24212
		Total time spent by all map tasks (ms)=9543
		Total time spent by all reduce tasks (ms)=6053
		Total vcore-milliseconds taken by all map tasks=9543
		Total vcore-milliseconds taken by all reduce tasks=6053
		Total megabyte-milliseconds taken by all map tasks=39088128
		Total megabyte-milliseconds taken by all reduce tasks=24793088
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=605
		CPU time spent (ms)=6860
		Physical memory (bytes) snapshot=1510424576
		Virtual memory (bytes) snapshot=15801446400
		Total committed heap usage (bytes)=1672478720
		Peak Map Physical memory (bytes)=379670528
		Peak Map Virtual memory (bytes)=3946311680
		Peak Reduce Physical memory (bytes)=379625472
		Peak Reduce Virtual memory (bytes)=3967348736
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.874 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201225 13:32:53.092" starttime="20201225 13:32:53.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:32:53.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:32:53.093" starttime="20201225 13:32:53.093"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.093" starttime="20201225 13:32:15.282"></status>
</kw>
<msg timestamp="20201225 13:32:53.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:32:53.093" starttime="20201225 13:32:15.282"></status>
</kw>
<msg timestamp="20201225 13:32:53.094" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:32:17 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:32:17 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201225 13:32:53.094" starttime="20201225 13:32:15.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:32:53.094" starttime="20201225 13:32:53.094"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:32:53.095" critical="yes" starttime="20201225 13:32:15.259"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:32:53.100" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:32:53.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:32:53.106" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:32:53.106" starttime="20201225 13:32:53.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:32:53.107" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:32:53.107" starttime="20201225 13:32:53.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:32:53.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:32:53.108" starttime="20201225 13:32:53.107"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.108" starttime="20201225 13:32:53.097"></status>
</kw>
<msg timestamp="20201225 13:32:53.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:32:53.108" starttime="20201225 13:32:53.097"></status>
</kw>
<msg timestamp="20201225 13:32:53.108" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:32:53.108" starttime="20201225 13:32:53.096"></status>
</kw>
<msg timestamp="20201225 13:32:53.108" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:32:53.109" starttime="20201225 13:32:53.096"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:32:53.109" level="INFO">${random} = 12</msg>
<status status="PASS" endtime="20201225 13:32:53.109" starttime="20201225 13:32:53.109"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:32:53.113" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:32:53.113" starttime="20201225 13:32:53.112"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:32:53.114" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:32:53.114" starttime="20201225 13:32:53.113"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.114" starttime="20201225 13:32:53.112"></status>
</kw>
<msg timestamp="20201225 13:32:53.114" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:32:53.114" starttime="20201225 13:32:53.111"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201225 13:32:53.115" starttime="20201225 13:32:53.115"></status>
</kw>
<msg timestamp="20201225 13:32:53.115" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201225 13:32:53.115" starttime="20201225 13:32:53.114"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.115" starttime="20201225 13:32:53.110"></status>
</kw>
<msg timestamp="20201225 13:32:53.115" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:32:53.115" starttime="20201225 13:32:53.110"></status>
</kw>
<msg timestamp="20201225 13:32:53.116" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201225 13:32:53.116" starttime="20201225 13:32:53.109"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:32:53.119" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:32:53.119" starttime="20201225 13:32:53.118"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:32:53.119" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:32:53.119" starttime="20201225 13:32:53.119"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.119" starttime="20201225 13:32:53.118"></status>
</kw>
<msg timestamp="20201225 13:32:53.119" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:32:53.119" starttime="20201225 13:32:53.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:32:53.121" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201225 13:32:53.121" starttime="20201225 13:32:53.120"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:32:53.121" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201225 13:32:53.121" starttime="20201225 13:32:53.121"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.121" starttime="20201225 13:32:53.120"></status>
</kw>
<msg timestamp="20201225 13:32:53.122" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201225 13:32:53.122" starttime="20201225 13:32:53.120"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.122" starttime="20201225 13:32:53.117"></status>
</kw>
<msg timestamp="20201225 13:32:53.122" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201225 13:32:53.122" starttime="20201225 13:32:53.116"></status>
</kw>
<msg timestamp="20201225 13:32:53.122" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201225 13:32:53.122" starttime="20201225 13:32:53.116"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201225 13:32:53.125" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201225 13:32:53.125" starttime="20201225 13:32:53.125"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:32:53.126" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201225 13:32:53.126" starttime="20201225 13:32:53.125"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.126" starttime="20201225 13:32:53.124"></status>
</kw>
<msg timestamp="20201225 13:32:53.126" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201225 13:32:53.126" starttime="20201225 13:32:53.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:32:53.127" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201225 13:32:53.127" starttime="20201225 13:32:53.127"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:32:53.128" level="INFO">${result} = /wordcount-12.txt</msg>
<status status="PASS" endtime="20201225 13:32:53.128" starttime="20201225 13:32:53.127"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.128" starttime="20201225 13:32:53.127"></status>
</kw>
<msg timestamp="20201225 13:32:53.128" level="INFO">${path_with_leading} = /wordcount-12.txt</msg>
<status status="PASS" endtime="20201225 13:32:53.128" starttime="20201225 13:32:53.126"></status>
</kw>
<status status="PASS" endtime="20201225 13:32:53.129" starttime="20201225 13:32:53.124"></status>
</kw>
<msg timestamp="20201225 13:32:53.129" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-12.txt</msg>
<status status="PASS" endtime="20201225 13:32:53.129" starttime="20201225 13:32:53.123"></status>
</kw>
<msg timestamp="20201225 13:32:53.129" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-12.txt</msg>
<status status="PASS" endtime="20201225 13:32:53.129" starttime="20201225 13:32:53.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:32:53.132" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-12.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:33:32.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:33:32.362" level="INFO">${output} = 2020-12-25 13:32:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-25 13:32:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201225 13:33:32.362" starttime="20201225 13:32:53.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:33:32.363" level="INFO">2020-12-25 13:32:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-25 13:32:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 13:32:55 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:32:55 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:32:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:32:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:32:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5F73D178C9F0-&gt;ab12742d-67d2-490e-8860-bd153f962545
2020-12-25 13:32:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 13:32:56 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 13:32:59 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 13:32:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608902966995_0004
2020-12-25 13:32:59 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-25 13:32:59 INFO  Configuration:2795 - resource-types.xml not found
2020-12-25 13:32:59 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-25 13:32:59 INFO  YarnClientImpl:329 - Submitted application application_1608902966995_0004
2020-12-25 13:32:59 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608902966995_0004/
2020-12-25 13:32:59 INFO  Job:1619 - Running job: job_1608902966995_0004
2020-12-25 13:33:05 INFO  Job:1640 - Job job_1608902966995_0004 running in uber mode : false
2020-12-25 13:33:05 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 13:33:12 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 13:33:17 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 13:33:22 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 13:33:26 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 13:33:31 INFO  Job:1658 - Job job_1608902966995_0004 completed successfully
2020-12-25 13:33:31 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118923
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38816
		Total time spent by all reduces in occupied slots (ms)=13832
		Total time spent by all map tasks (ms)=9704
		Total time spent by all reduce tasks (ms)=3458
		Total vcore-milliseconds taken by all map tasks=9704
		Total vcore-milliseconds taken by all reduce tasks=3458
		Total megabyte-milliseconds taken by all map tasks=39747584
		Total megabyte-milliseconds taken by all reduce tasks=14163968
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=610
		CPU time spent (ms)=6710
		Physical memory (bytes) snapshot=1457229824
		Virtual memory (bytes) snapshot=15793467392
		Total committed heap usage (bytes)=1678770176
		Peak Map Physical memory (bytes)=367079424
		Peak Map Virtual memory (bytes)=3943763968
		Peak Reduce Physical memory (bytes)=367312896
		Peak Reduce Virtual memory (bytes)=3964956672
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201225 13:33:32.363" starttime="20201225 13:33:32.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:33:32.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:33:32.364" starttime="20201225 13:33:32.363"></status>
</kw>
<status status="PASS" endtime="20201225 13:33:32.364" starttime="20201225 13:32:53.130"></status>
</kw>
<msg timestamp="20201225 13:33:32.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:33:32.364" starttime="20201225 13:32:53.130"></status>
</kw>
<msg timestamp="20201225 13:33:32.365" level="INFO">${output} = 2020-12-25 13:32:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-25 13:32:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201225 13:33:32.365" starttime="20201225 13:32:53.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201225 13:33:32.366" starttime="20201225 13:33:32.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:33:32.366" starttime="20201225 13:33:32.366"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:33:32.367" critical="yes" starttime="20201225 13:32:53.095"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201225 13:33:32.368" starttime="20201225 13:32:15.214"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:44.279" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:30:44.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:30:44.285" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:30:44.285" starttime="20201225 13:30:44.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:30:44.286" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:30:44.286" starttime="20201225 13:30:44.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:30:44.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:30:44.287" starttime="20201225 13:30:44.286"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:44.287" starttime="20201225 13:30:44.275"></status>
</kw>
<msg timestamp="20201225 13:30:44.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:30:44.287" starttime="20201225 13:30:44.274"></status>
</kw>
<msg timestamp="20201225 13:30:44.287" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:30:44.287" starttime="20201225 13:30:44.274"></status>
</kw>
<msg timestamp="20201225 13:30:44.288" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:30:44.288" starttime="20201225 13:30:44.274"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:30:44.292" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:30:44.292" starttime="20201225 13:30:44.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:30:44.293" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:30:44.293" starttime="20201225 13:30:44.292"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:44.293" starttime="20201225 13:30:44.290"></status>
</kw>
<msg timestamp="20201225 13:30:44.293" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:30:44.293" starttime="20201225 13:30:44.290"></status>
</kw>
<status status="PASS" endtime="20201225 13:30:44.293" starttime="20201225 13:30:44.289"></status>
</kw>
<msg timestamp="20201225 13:30:44.293" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:30:44.293" starttime="20201225 13:30:44.289"></status>
</kw>
<msg timestamp="20201225 13:30:44.293" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:30:44.293" starttime="20201225 13:30:44.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:30:44.296" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:31:23.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:31:23.395" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:30:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:30:46 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201225 13:31:23.395" starttime="20201225 13:30:44.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:31:23.396" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:30:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:30:46 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:30:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:30:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:30:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D4A483BC5F36-&gt;ab12742d-67d2-490e-8860-bd153f962545
2020-12-25 13:30:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-25 13:30:47 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-25 13:30:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 13:30:48 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 13:30:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608902966995_0001
2020-12-25 13:30:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-25 13:30:48 INFO  Configuration:2795 - resource-types.xml not found
2020-12-25 13:30:48 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-25 13:30:49 INFO  YarnClientImpl:329 - Submitted application application_1608902966995_0001
2020-12-25 13:30:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608902966995_0001/
2020-12-25 13:30:49 INFO  Job:1619 - Running job: job_1608902966995_0001
2020-12-25 13:30:58 INFO  Job:1640 - Job job_1608902966995_0001 running in uber mode : false
2020-12-25 13:30:58 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 13:31:04 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 13:31:09 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 13:31:14 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 13:31:18 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 13:31:22 INFO  Job:1658 - Job job_1608902966995_0001 completed successfully
2020-12-25 13:31:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056481
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38188
		Total time spent by all reduces in occupied slots (ms)=14892
		Total time spent by all map tasks (ms)=9547
		Total time spent by all reduce tasks (ms)=3723
		Total vcore-milliseconds taken by all map tasks=9547
		Total vcore-milliseconds taken by all reduce tasks=3723
		Total megabyte-milliseconds taken by all map tasks=39104512
		Total megabyte-milliseconds taken by all reduce tasks=15249408
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=559
		CPU time spent (ms)=6710
		Physical memory (bytes) snapshot=1480740864
		Virtual memory (bytes) snapshot=15805018112
		Total committed heap usage (bytes)=1658847232
		Peak Map Physical memory (bytes)=381837312
		Peak Map Virtual memory (bytes)=3947524096
		Peak Reduce Physical memory (bytes)=381988864
		Peak Reduce Virtual memory (bytes)=3966746624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.465 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201225 13:31:23.397" starttime="20201225 13:31:23.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:31:23.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:31:23.397" starttime="20201225 13:31:23.397"></status>
</kw>
<status status="PASS" endtime="20201225 13:31:23.397" starttime="20201225 13:30:44.294"></status>
</kw>
<msg timestamp="20201225 13:31:23.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:31:23.398" starttime="20201225 13:30:44.294"></status>
</kw>
<msg timestamp="20201225 13:31:23.398" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-25 13:30:46 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:30:46 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201225 13:31:23.398" starttime="20201225 13:30:44.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:31:23.399" starttime="20201225 13:31:23.398"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:31:23.399" critical="yes" starttime="20201225 13:30:44.273"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:31:23.404" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:31:23.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:31:23.409" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:31:23.409" starttime="20201225 13:31:23.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:31:23.410" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:31:23.410" starttime="20201225 13:31:23.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:31:23.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:31:23.410" starttime="20201225 13:31:23.410"></status>
</kw>
<status status="PASS" endtime="20201225 13:31:23.411" starttime="20201225 13:31:23.401"></status>
</kw>
<msg timestamp="20201225 13:31:23.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:31:23.411" starttime="20201225 13:31:23.401"></status>
</kw>
<msg timestamp="20201225 13:31:23.411" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:31:23.411" starttime="20201225 13:31:23.401"></status>
</kw>
<msg timestamp="20201225 13:31:23.411" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201225 13:31:23.411" starttime="20201225 13:31:23.400"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201225 13:31:23.412" level="INFO">${random} = 57</msg>
<status status="PASS" endtime="20201225 13:31:23.412" starttime="20201225 13:31:23.412"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:31:23.416" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:31:23.416" starttime="20201225 13:31:23.416"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:31:23.417" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:31:23.417" starttime="20201225 13:31:23.416"></status>
</kw>
<status status="PASS" endtime="20201225 13:31:23.417" starttime="20201225 13:31:23.415"></status>
</kw>
<msg timestamp="20201225 13:31:23.417" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:31:23.417" starttime="20201225 13:31:23.414"></status>
</kw>
<status status="PASS" endtime="20201225 13:31:23.417" starttime="20201225 13:31:23.414"></status>
</kw>
<msg timestamp="20201225 13:31:23.417" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:31:23.417" starttime="20201225 13:31:23.413"></status>
</kw>
<msg timestamp="20201225 13:31:23.417" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201225 13:31:23.417" starttime="20201225 13:31:23.412"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:31:23.421" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:31:23.421" starttime="20201225 13:31:23.420"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:31:23.421" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:31:23.421" starttime="20201225 13:31:23.421"></status>
</kw>
<status status="PASS" endtime="20201225 13:31:23.421" starttime="20201225 13:31:23.420"></status>
</kw>
<msg timestamp="20201225 13:31:23.421" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:31:23.421" starttime="20201225 13:31:23.419"></status>
</kw>
<status status="PASS" endtime="20201225 13:31:23.422" starttime="20201225 13:31:23.419"></status>
</kw>
<msg timestamp="20201225 13:31:23.422" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201225 13:31:23.422" starttime="20201225 13:31:23.418"></status>
</kw>
<msg timestamp="20201225 13:31:23.422" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201225 13:31:23.422" starttime="20201225 13:31:23.417"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201225 13:31:23.425" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201225 13:31:23.425" starttime="20201225 13:31:23.424"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201225 13:31:23.425" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201225 13:31:23.425" starttime="20201225 13:31:23.425"></status>
</kw>
<status status="PASS" endtime="20201225 13:31:23.425" starttime="20201225 13:31:23.424"></status>
</kw>
<msg timestamp="20201225 13:31:23.425" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201225 13:31:23.425" starttime="20201225 13:31:23.424"></status>
</kw>
<status status="PASS" endtime="20201225 13:31:23.426" starttime="20201225 13:31:23.423"></status>
</kw>
<msg timestamp="20201225 13:31:23.426" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-57.txt</msg>
<status status="PASS" endtime="20201225 13:31:23.426" starttime="20201225 13:31:23.423"></status>
</kw>
<msg timestamp="20201225 13:31:23.426" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-57.txt</msg>
<status status="PASS" endtime="20201225 13:31:23.426" starttime="20201225 13:31:23.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201225 13:31:23.429" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-57.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201225 13:31:58.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20201225 13:31:58.884" level="INFO">${output} = 2020-12-25 13:31:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-25 13:31:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201225 13:31:58.884" starttime="20201225 13:31:23.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201225 13:31:58.885" level="INFO">2020-12-25 13:31:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-25 13:31:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-25 13:31:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-25 13:31:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-25 13:31:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-25 13:31:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-25 13:31:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-984EB955ED18-&gt;ab12742d-67d2-490e-8860-bd153f962545
2020-12-25 13:31:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-25 13:31:29 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-25 13:31:29 INFO  JobSubmitter:202 - number of splits:3
2020-12-25 13:31:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608902966995_0002
2020-12-25 13:31:29 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-25 13:31:29 INFO  Configuration:2795 - resource-types.xml not found
2020-12-25 13:31:29 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-25 13:31:29 INFO  YarnClientImpl:329 - Submitted application application_1608902966995_0002
2020-12-25 13:31:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608902966995_0002/
2020-12-25 13:31:29 INFO  Job:1619 - Running job: job_1608902966995_0002
2020-12-25 13:31:37 INFO  Job:1640 - Job job_1608902966995_0002 running in uber mode : false
2020-12-25 13:31:37 INFO  Job:1647 -  map 0% reduce 0%
2020-12-25 13:31:43 INFO  Job:1647 -  map 33% reduce 0%
2020-12-25 13:31:48 INFO  Job:1647 -  map 67% reduce 0%
2020-12-25 13:31:53 INFO  Job:1647 -  map 100% reduce 0%
2020-12-25 13:31:57 INFO  Job:1647 -  map 100% reduce 100%
2020-12-25 13:31:58 INFO  Job:1658 - Job job_1608902966995_0002 completed successfully
2020-12-25 13:31:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1119011
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38280
		Total time spent by all reduces in occupied slots (ms)=14024
		Total time spent by all map tasks (ms)=9570
		Total time spent by all reduce tasks (ms)=3506
		Total vcore-milliseconds taken by all map tasks=9570
		Total vcore-milliseconds taken by all reduce tasks=3506
		Total megabyte-milliseconds taken by all map tasks=39198720
		Total megabyte-milliseconds taken by all reduce tasks=14360576
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=616
		CPU time spent (ms)=6580
		Physical memory (bytes) snapshot=1462001664
		Virtual memory (bytes) snapshot=15792963584
		Total committed heap usage (bytes)=1625292800
		Peak Map Physical memory (bytes)=371613696
		Peak Map Virtual memory (bytes)=3945394176
		Peak Reduce Physical memory (bytes)=363827200
		Peak Reduce Virtual memory (bytes)=3963326464
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201225 13:31:58.886" starttime="20201225 13:31:58.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201225 13:31:58.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201225 13:31:58.886" starttime="20201225 13:31:58.886"></status>
</kw>
<status status="PASS" endtime="20201225 13:31:58.887" starttime="20201225 13:31:23.427"></status>
</kw>
<msg timestamp="20201225 13:31:58.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201225 13:31:58.887" starttime="20201225 13:31:23.427"></status>
</kw>
<msg timestamp="20201225 13:31:58.887" level="INFO">${output} = 2020-12-25 13:31:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-25 13:31:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201225 13:31:58.887" starttime="20201225 13:31:23.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201225 13:31:58.888" starttime="20201225 13:31:58.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201225 13:31:58.888" starttime="20201225 13:31:58.888"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201225 13:31:58.889" critical="yes" starttime="20201225 13:31:23.399"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201225 13:31:58.890" starttime="20201225 13:30:44.227"></status>
</suite>
<status status="PASS" elapsedtime="202046" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="566631" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
