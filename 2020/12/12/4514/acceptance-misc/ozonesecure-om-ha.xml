<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201212 13:42:59.764" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:39:35.249" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:39:44.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:39:44.518" level="INFO">${output} = 2020-12-12 13:39:36,705 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:36,862 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 13:39:44.518" starttime="20201212 13:39:35.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:39:44.519" level="INFO">2020-12-12 13:39:36,705 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:36,862 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:39:36,862 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-12 13:39:39,023 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-12-12 13:39:39,024 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-12-12 13:39:39,024 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-12-12 13:39:39,024 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-12-12 13:39:39,024 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-12-12 13:39:39,024 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-12-12 13:39:39,024 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-12-12 13:39:39,026 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-12-12 13:39:39,043 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 13:39:39,096 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-25153, with testuser/scm@EXAMPLE.COM as owner.
2020-12-12 13:39:39,516 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-25153/bucket-0-86645, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-12 13:39:40,047 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 13:39:41,091 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 13:39:41,693 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-12 13:39:42,093 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,423
Average Time spent in bucket creation: 00:00:00,146
Average Time spent in key creation: 00:00:01,080
Average Time spent in key write: 00:00:01,186
Total bytes written: 10240
Total Execution time: 00:00:07,125
***************************************************</msg>
<status status="PASS" endtime="20201212 13:39:44.519" starttime="20201212 13:39:44.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:39:44.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:39:44.520" starttime="20201212 13:39:44.520"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:44.520" starttime="20201212 13:39:35.246"></status>
</kw>
<msg timestamp="20201212 13:39:44.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:39:44.520" starttime="20201212 13:39:35.245"></status>
</kw>
<msg timestamp="20201212 13:39:44.521" level="INFO">${result} = 2020-12-12 13:39:36,705 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:36,862 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 13:39:44.521" starttime="20201212 13:39:35.245"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201212 13:39:44.522" starttime="20201212 13:39:44.521"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:44.522" starttime="20201212 13:39:44.521"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:39:44.522" critical="yes" starttime="20201212 13:39:35.244"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:39:44.527" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:39:52.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:39:52.237" level="INFO">${output} = 2020-12-12 13:39:46,089 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:46,302 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 13:39:52.237" starttime="20201212 13:39:44.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:39:52.239" level="INFO">2020-12-12 13:39:46,089 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:46,302 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:39:46,302 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-12 13:39:46,453 [main] INFO freon.BaseFreonGenerator: Executing test with prefix i0qb2wufnj
2020-12-12 13:39:46,465 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-12 13:39:47,467 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 13:39:47,622 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-12-12 13:39:47,674 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-12 13:39:48,282 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-12 13:39:48,468 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 13:39:48,541 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:39:48,542 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B5E1100C1B70-&gt;632a0b46-6d5d-441a-af86-094340d09691
2020-12-12 13:39:48,543 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 13:39:49,468 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 13:39:50,471 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 13:39:51,471 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-12 13:39:51,884 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3015.738403, max=3015.738403, mean=3015.738403, stddev=0.0, median=3015.738403, p75=3015.738403, p95=3015.738403, p98=3015.738403, p99=3015.738403, p999=3015.738403, mean_rate=0.24075081531527548, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-12 13:39:51,884 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2020-12-12 13:39:51,885 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-12 13:39:51,885 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201212 13:39:52.239" starttime="20201212 13:39:52.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:39:52.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:39:52.240" starttime="20201212 13:39:52.239"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:52.240" starttime="20201212 13:39:44.524"></status>
</kw>
<msg timestamp="20201212 13:39:52.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:39:52.240" starttime="20201212 13:39:44.524"></status>
</kw>
<msg timestamp="20201212 13:39:52.241" level="INFO">${result} = 2020-12-12 13:39:46,089 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:46,302 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 13:39:52.241" starttime="20201212 13:39:44.523"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201212 13:39:52.241" starttime="20201212 13:39:52.241"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:52.241" starttime="20201212 13:39:52.241"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:39:52.242" critical="yes" starttime="20201212 13:39:44.522"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:39:52.247" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:39:56.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:39:56.547" level="INFO">${output} = 2020-12-12 13:39:53,763 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:53,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 13:39:56.547" starttime="20201212 13:39:52.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:39:56.548" level="INFO">2020-12-12 13:39:53,763 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:53,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:39:53,930 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-12 13:39:54,068 [main] INFO freon.BaseFreonGenerator: Executing test with prefix imqv3q6nzy
2020-12-12 13:39:54,084 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-12 13:39:55,088 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 13:39:56,089 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-12 13:39:56,522 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=226.533643, max=226.533643, mean=226.533643, stddev=0.0, median=226.533643, p75=226.533643, p95=226.533643, p98=226.533643, p99=226.533643, p999=226.533643, mean_rate=0.878565219638063, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-12 13:39:56,523 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-12-12 13:39:56,525 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-12 13:39:56,525 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201212 13:39:56.549" starttime="20201212 13:39:56.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:39:56.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:39:56.549" starttime="20201212 13:39:56.549"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:56.550" starttime="20201212 13:39:52.244"></status>
</kw>
<msg timestamp="20201212 13:39:56.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:39:56.550" starttime="20201212 13:39:52.243"></status>
</kw>
<msg timestamp="20201212 13:39:56.550" level="INFO">${result} = 2020-12-12 13:39:53,763 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:53,930 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 13:39:56.550" starttime="20201212 13:39:52.243"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201212 13:39:56.551" starttime="20201212 13:39:56.551"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:56.551" starttime="20201212 13:39:56.550"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:39:56.551" critical="yes" starttime="20201212 13:39:52.242"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:39:56.556" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:00.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:00.773" level="INFO">${output} = 2020-12-12 13:39:58,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:58,251 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 13:40:00.773" starttime="20201212 13:39:56.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:00.774" level="INFO">2020-12-12 13:39:58,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:58,251 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:39:58,251 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-12 13:39:58,382 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dpd162aspw
2020-12-12 13:39:58,405 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-12 13:39:59,414 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 13:40:00,415 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-12 13:40:00,743 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=78.769354, max=78.769354, mean=78.769354, stddev=0.0, median=78.769354, p75=78.769354, p95=78.769354, p98=78.769354, p99=78.769354, p999=78.769354, mean_rate=0.887922828062692, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-12 13:40:00,747 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2020-12-12 13:40:00,747 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-12 13:40:00,747 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201212 13:40:00.774" starttime="20201212 13:40:00.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:00.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:00.775" starttime="20201212 13:40:00.774"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:00.775" starttime="20201212 13:39:56.554"></status>
</kw>
<msg timestamp="20201212 13:40:00.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:00.775" starttime="20201212 13:39:56.553"></status>
</kw>
<msg timestamp="20201212 13:40:00.776" level="INFO">${result} = 2020-12-12 13:39:58,072 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 13:39:58,251 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 13:40:00.776" starttime="20201212 13:39:56.553"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201212 13:40:00.776" starttime="20201212 13:40:00.776"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:00.777" starttime="20201212 13:40:00.776"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:40:00.777" critical="yes" starttime="20201212 13:39:56.552"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201212 13:40:00.778" starttime="20201212 13:39:35.221"></status>
</suite>
<status status="PASS" endtime="20201212 13:40:00.781" starttime="20201212 13:39:35.198"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:39:28.193" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:39:28.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:39:28.197" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:39:28.197" starttime="20201212 13:39:28.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:39:28.201" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:39:28.201" starttime="20201212 13:39:28.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:39:28.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:39:28.202" starttime="20201212 13:39:28.201"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:28.202" starttime="20201212 13:39:28.183"></status>
</kw>
<msg timestamp="20201212 13:39:28.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:39:28.206" starttime="20201212 13:39:28.183"></status>
</kw>
<msg timestamp="20201212 13:39:28.207" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:39:28.207" starttime="20201212 13:39:28.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:39:28.209" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:39:28.210" starttime="20201212 13:39:28.209"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:39:28.219" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:39:28.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:39:28.242" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:39:28.242" starttime="20201212 13:39:28.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:39:28.243" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:39:28.243" starttime="20201212 13:39:28.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:39:28.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:39:28.244" starttime="20201212 13:39:28.244"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:28.244" starttime="20201212 13:39:28.213"></status>
</kw>
<msg timestamp="20201212 13:39:28.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:39:28.244" starttime="20201212 13:39:28.211"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:28.245" starttime="20201212 13:39:28.210"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:28.245" starttime="20201212 13:39:28.210"></status>
</kw>
<status status="PASS" endtime="20201212 13:39:28.246" starttime="20201212 13:39:28.181"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:39:28.246" critical="yes" starttime="20201212 13:39:28.178"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201212 13:39:28.250" starttime="20201212 13:39:28.082"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:40:05.610" level="INFO">${random} = 54433</msg>
<status status="PASS" endtime="20201212 13:40:05.610" starttime="20201212 13:40:05.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201212 13:40:05.611" level="INFO">${source} = 54433-source</msg>
<status status="PASS" endtime="20201212 13:40:05.611" starttime="20201212 13:40:05.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201212 13:40:05.612" level="INFO">${target} = 54433-target</msg>
<status status="PASS" endtime="20201212 13:40:05.612" starttime="20201212 13:40:05.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:05.617" level="INFO">Running command 'ozone sh volume create 54433-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:08.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:08.522" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:08.522" starttime="20201212 13:40:05.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:08.523" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:08.523" starttime="20201212 13:40:08.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:08.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:08.524" starttime="20201212 13:40:08.523"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:08.524" starttime="20201212 13:40:05.613"></status>
</kw>
<msg timestamp="20201212 13:40:08.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:08.524" starttime="20201212 13:40:05.613"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:08.524" starttime="20201212 13:40:05.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:08.528" level="INFO">Running command 'ozone sh volume create 54433-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:11.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:11.592" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:11.592" starttime="20201212 13:40:08.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:11.593" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:11.593" starttime="20201212 13:40:11.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:11.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:11.594" starttime="20201212 13:40:11.594"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:11.594" starttime="20201212 13:40:08.525"></status>
</kw>
<msg timestamp="20201212 13:40:11.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:11.594" starttime="20201212 13:40:08.525"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:11.595" starttime="20201212 13:40:08.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:11.599" level="INFO">Running command 'ozone sh bucket create 54433-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:14.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:14.530" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:14.530" starttime="20201212 13:40:11.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:14.531" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:14.531" starttime="20201212 13:40:14.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:14.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:14.532" starttime="20201212 13:40:14.531"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:14.532" starttime="20201212 13:40:11.596"></status>
</kw>
<msg timestamp="20201212 13:40:14.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:14.532" starttime="20201212 13:40:11.596"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:14.532" starttime="20201212 13:40:11.596"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:14.535" level="INFO">Running command 'ozone sh key put 54433-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:19.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:19.919" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:19.919" starttime="20201212 13:40:14.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:19.920" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:19.920" starttime="20201212 13:40:19.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:19.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:19.921" starttime="20201212 13:40:19.920"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:19.921" starttime="20201212 13:40:14.533"></status>
</kw>
<msg timestamp="20201212 13:40:19.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:19.921" starttime="20201212 13:40:14.533"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:19.921" starttime="20201212 13:40:14.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:19.942" level="INFO">Running command 'ozone sh bucket create 54433-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:22.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:22.950" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:22.950" starttime="20201212 13:40:19.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:22.951" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:22.951" starttime="20201212 13:40:22.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:22.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:22.952" starttime="20201212 13:40:22.951"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:22.952" starttime="20201212 13:40:19.932"></status>
</kw>
<msg timestamp="20201212 13:40:22.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:22.952" starttime="20201212 13:40:19.932"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:22.953" starttime="20201212 13:40:19.931"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:22.957" level="INFO">Running command 'ozone sh bucket link 54433-source/readable-bucket 54433-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:25.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:25.975" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:25.975" starttime="20201212 13:40:22.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:25.976" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:25.977" starttime="20201212 13:40:25.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:25.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:25.977" starttime="20201212 13:40:25.977"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:25.977" starttime="20201212 13:40:22.953"></status>
</kw>
<msg timestamp="20201212 13:40:25.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:25.978" starttime="20201212 13:40:22.953"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:25.978" starttime="20201212 13:40:22.953"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:25.981" level="INFO">Running command 'ozone sh bucket link 54433-source/readable-bucket 54433-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:28.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:28.792" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:28.792" starttime="20201212 13:40:25.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:28.793" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:28.794" starttime="20201212 13:40:28.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:28.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:28.794" starttime="20201212 13:40:28.794"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:28.794" starttime="20201212 13:40:25.979"></status>
</kw>
<msg timestamp="20201212 13:40:28.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:28.795" starttime="20201212 13:40:25.978"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:28.795" starttime="20201212 13:40:25.978"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:28.798" level="INFO">Running command 'ozone sh bucket link 54433-source/unreadable-bucket 54433-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:31.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:31.766" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:31.766" starttime="20201212 13:40:28.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:31.767" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:31.767" starttime="20201212 13:40:31.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:31.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:31.768" starttime="20201212 13:40:31.767"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:31.768" starttime="20201212 13:40:28.796"></status>
</kw>
<msg timestamp="20201212 13:40:31.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:31.768" starttime="20201212 13:40:28.795"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:31.769" starttime="20201212 13:40:28.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:31.771" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 54433-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:34.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:34.650" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:34.650" starttime="20201212 13:40:31.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:34.651" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 13:40:34.651" starttime="20201212 13:40:34.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:34.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:34.651" starttime="20201212 13:40:34.651"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:34.652" starttime="20201212 13:40:31.769"></status>
</kw>
<msg timestamp="20201212 13:40:34.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:34.652" starttime="20201212 13:40:31.769"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:34.652" starttime="20201212 13:40:31.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:34.655" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 54433-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:37.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:37.687" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:37.687" starttime="20201212 13:40:34.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:37.688" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 13:40:37.688" starttime="20201212 13:40:37.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:37.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:37.689" starttime="20201212 13:40:37.688"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:37.689" starttime="20201212 13:40:34.653"></status>
</kw>
<msg timestamp="20201212 13:40:37.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:37.689" starttime="20201212 13:40:34.653"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:37.689" starttime="20201212 13:40:34.652"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:37.693" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 54433-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:40.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:40.541" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:40.541" starttime="20201212 13:40:37.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:40.542" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 13:40:40.542" starttime="20201212 13:40:40.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:40.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:40.542" starttime="20201212 13:40:40.542"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:40.543" starttime="20201212 13:40:37.690"></status>
</kw>
<msg timestamp="20201212 13:40:40.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:40.543" starttime="20201212 13:40:37.690"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:40.543" starttime="20201212 13:40:37.690"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:40.547" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 54433-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:43.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:43.428" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:43.429" starttime="20201212 13:40:40.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:43.429" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 13:40:43.430" starttime="20201212 13:40:43.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:43.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:43.430" starttime="20201212 13:40:43.430"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:43.430" starttime="20201212 13:40:40.544"></status>
</kw>
<msg timestamp="20201212 13:40:43.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:43.431" starttime="20201212 13:40:40.544"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:43.431" starttime="20201212 13:40:40.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:43.435" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 54433-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:46.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:46.149" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:46.149" starttime="20201212 13:40:43.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:46.150" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 13:40:46.150" starttime="20201212 13:40:46.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:46.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:46.151" starttime="20201212 13:40:46.150"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.151" starttime="20201212 13:40:43.432"></status>
</kw>
<msg timestamp="20201212 13:40:46.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:46.151" starttime="20201212 13:40:43.431"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.152" starttime="20201212 13:40:43.431"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.152" starttime="20201212 13:40:11.595"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.152" starttime="20201212 13:40:11.595"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.152" starttime="20201212 13:40:05.609"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:46.157" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:46.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:46.159" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:40:46.159" starttime="20201212 13:40:46.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:46.160" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:40:46.160" starttime="20201212 13:40:46.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:46.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:46.161" starttime="20201212 13:40:46.160"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.161" starttime="20201212 13:40:46.155"></status>
</kw>
<msg timestamp="20201212 13:40:46.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:46.161" starttime="20201212 13:40:46.155"></status>
</kw>
<msg timestamp="20201212 13:40:46.162" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:40:46.162" starttime="20201212 13:40:46.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:40:46.163" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:40:46.163" starttime="20201212 13:40:46.162"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:46.167" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:46.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:46.177" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:40:46.177" starttime="20201212 13:40:46.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:46.178" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:40:46.178" starttime="20201212 13:40:46.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:46.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:46.178" starttime="20201212 13:40:46.178"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.178" starttime="20201212 13:40:46.164"></status>
</kw>
<msg timestamp="20201212 13:40:46.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:46.179" starttime="20201212 13:40:46.164"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.179" starttime="20201212 13:40:46.164"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.179" starttime="20201212 13:40:46.163"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.179" starttime="20201212 13:40:46.154"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:46.179" starttime="20201212 13:40:46.153"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:46.183" level="INFO">Running command 'ozone sh bucket link 54433-source/no-such-bucket 54433-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:49.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:49.051" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:49.051" starttime="20201212 13:40:46.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:49.053" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:49.053" starttime="20201212 13:40:49.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:49.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:49.053" starttime="20201212 13:40:49.053"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:49.054" starttime="20201212 13:40:46.180"></status>
</kw>
<msg timestamp="20201212 13:40:49.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:49.054" starttime="20201212 13:40:46.180"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:49.054" starttime="20201212 13:40:46.179"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:49.058" level="INFO">Running command 'ozone sh key list 54433-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:52.169" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:40:52.169" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:52.169" starttime="20201212 13:40:49.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:52.170" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201212 13:40:52.170" starttime="20201212 13:40:52.170"></status>
</kw>
<msg timestamp="20201212 13:40:52.171" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:52.171" starttime="20201212 13:40:49.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 13:40:52.171" starttime="20201212 13:40:52.171"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:40:52.171" critical="yes" starttime="20201212 13:40:46.152"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:52.177" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:52.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:52.180" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:40:52.180" starttime="20201212 13:40:52.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:52.181" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:40:52.181" starttime="20201212 13:40:52.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:52.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:52.182" starttime="20201212 13:40:52.181"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:52.182" starttime="20201212 13:40:52.175"></status>
</kw>
<msg timestamp="20201212 13:40:52.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:52.182" starttime="20201212 13:40:52.175"></status>
</kw>
<msg timestamp="20201212 13:40:52.182" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:40:52.182" starttime="20201212 13:40:52.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:40:52.183" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:40:52.183" starttime="20201212 13:40:52.183"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:52.187" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:52.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:52.202" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:40:52.202" starttime="20201212 13:40:52.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:52.203" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:40:52.203" starttime="20201212 13:40:52.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:52.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:52.204" starttime="20201212 13:40:52.203"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:52.204" starttime="20201212 13:40:52.184"></status>
</kw>
<msg timestamp="20201212 13:40:52.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:52.204" starttime="20201212 13:40:52.184"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:52.204" starttime="20201212 13:40:52.184"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:52.204" starttime="20201212 13:40:52.183"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:52.205" starttime="20201212 13:40:52.174"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:52.205" starttime="20201212 13:40:52.173"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:52.209" level="INFO">Running command 'ozone sh bucket link 54433-source/bucket1 54433-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:54.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:54.965" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:54.966" starttime="20201212 13:40:52.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:54.967" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:54.967" starttime="20201212 13:40:54.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:54.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:54.967" starttime="20201212 13:40:54.967"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:54.967" starttime="20201212 13:40:52.206"></status>
</kw>
<msg timestamp="20201212 13:40:54.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:54.968" starttime="20201212 13:40:52.205"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:54.968" starttime="20201212 13:40:52.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:54.972" level="INFO">Running command 'ozone sh bucket create 54433-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:40:57.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:40:57.913" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:40:57.913" starttime="20201212 13:40:54.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:40:57.914" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:40:57.914" starttime="20201212 13:40:57.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:40:57.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:40:57.915" starttime="20201212 13:40:57.914"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:57.915" starttime="20201212 13:40:54.969"></status>
</kw>
<msg timestamp="20201212 13:40:57.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:40:57.915" starttime="20201212 13:40:54.968"></status>
</kw>
<status status="PASS" endtime="20201212 13:40:57.915" starttime="20201212 13:40:54.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:40:57.919" level="INFO">Running command 'ozone sh key put 54433-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:02.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:02.934" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:02.934" starttime="20201212 13:40:57.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:02.935" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:41:02.935" starttime="20201212 13:41:02.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:02.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:02.936" starttime="20201212 13:41:02.935"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:02.936" starttime="20201212 13:40:57.916"></status>
</kw>
<msg timestamp="20201212 13:41:02.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:02.936" starttime="20201212 13:40:57.916"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:02.936" starttime="20201212 13:40:57.915"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201212 13:41:02.938" level="INFO">${postfix} = 28591</msg>
<status status="PASS" endtime="20201212 13:41:02.938" starttime="20201212 13:41:02.937"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201212 13:41:02.938" level="INFO">${tmpfile} = /tmp/tempkey-28591</msg>
<status status="PASS" endtime="20201212 13:41:02.938" starttime="20201212 13:41:02.938"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:02.942" level="INFO">Running command 'ozone sh key get -f 54433-target/link1/key1 /tmp/tempkey-28591 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:07.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:07.963" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:07.963" starttime="20201212 13:41:02.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:07.964" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:41:07.964" starttime="20201212 13:41:07.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:07.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:07.965" starttime="20201212 13:41:07.964"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:07.965" starttime="20201212 13:41:02.939"></status>
</kw>
<msg timestamp="20201212 13:41:07.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:07.965" starttime="20201212 13:41:02.939"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:07.965" starttime="20201212 13:41:02.938"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201212 13:41:07.968" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-28591 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:07.970" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201212 13:41:07.970" starttime="20201212 13:41:07.965"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:07.975" level="INFO">Running command 'rm -f /tmp/tempkey-28591 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:07.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:07.977" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:07.977" starttime="20201212 13:41:07.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:07.977" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:07.977" starttime="20201212 13:41:07.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:07.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:07.978" starttime="20201212 13:41:07.978"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:07.978" starttime="20201212 13:41:07.971"></status>
</kw>
<msg timestamp="20201212 13:41:07.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:07.979" starttime="20201212 13:41:07.971"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:07.979" starttime="20201212 13:41:07.970"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:41:07.979" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201212 13:41:07.980" starttime="20201212 13:41:07.979"></status>
</kw>
<msg timestamp="20201212 13:41:07.980" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201212 13:41:07.980" starttime="20201212 13:41:02.937"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:07.980" starttime="20201212 13:41:07.980"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:07.980" starttime="20201212 13:41:02.936"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:41:07.981" critical="yes" starttime="20201212 13:40:52.173"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:07.987" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:07.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:07.988" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:41:07.988" starttime="20201212 13:41:07.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:07.989" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:41:07.989" starttime="20201212 13:41:07.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:07.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:07.990" starttime="20201212 13:41:07.990"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:07.990" starttime="20201212 13:41:07.983"></status>
</kw>
<msg timestamp="20201212 13:41:07.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:07.991" starttime="20201212 13:41:07.983"></status>
</kw>
<msg timestamp="20201212 13:41:07.991" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:41:07.991" starttime="20201212 13:41:07.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:41:07.991" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:41:07.991" starttime="20201212 13:41:07.991"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:07.996" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:08.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:08.016" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:08.016" starttime="20201212 13:41:07.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:08.017" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:08.017" starttime="20201212 13:41:08.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:08.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:08.017" starttime="20201212 13:41:08.017"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:08.018" starttime="20201212 13:41:07.993"></status>
</kw>
<msg timestamp="20201212 13:41:08.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:08.018" starttime="20201212 13:41:07.992"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:08.018" starttime="20201212 13:41:07.992"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:08.018" starttime="20201212 13:41:07.992"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:08.018" starttime="20201212 13:41:07.982"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:08.018" starttime="20201212 13:41:07.982"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:08.022" level="INFO">Running command 'ozone sh key put 54433-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:12.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:12.893" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:12.893" starttime="20201212 13:41:08.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:12.899" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:41:12.899" starttime="20201212 13:41:12.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:12.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:12.900" starttime="20201212 13:41:12.899"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:12.900" starttime="20201212 13:41:08.019"></status>
</kw>
<msg timestamp="20201212 13:41:12.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:12.900" starttime="20201212 13:41:08.019"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:12.900" starttime="20201212 13:41:08.018"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201212 13:41:12.902" level="INFO">${postfix} = 79631</msg>
<status status="PASS" endtime="20201212 13:41:12.902" starttime="20201212 13:41:12.901"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201212 13:41:12.903" level="INFO">${tmpfile} = /tmp/tempkey-79631</msg>
<status status="PASS" endtime="20201212 13:41:12.903" starttime="20201212 13:41:12.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:12.906" level="INFO">Running command 'ozone sh key get -f 54433-source/bucket1/key2 /tmp/tempkey-79631 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:17.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:17.539" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:17.539" starttime="20201212 13:41:12.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:17.540" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:41:17.540" starttime="20201212 13:41:17.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:17.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:17.541" starttime="20201212 13:41:17.540"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.541" starttime="20201212 13:41:12.903"></status>
</kw>
<msg timestamp="20201212 13:41:17.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:17.541" starttime="20201212 13:41:12.903"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.542" starttime="20201212 13:41:12.903"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201212 13:41:17.545" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-79631 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:17.546" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201212 13:41:17.546" starttime="20201212 13:41:17.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:17.550" level="INFO">Running command 'rm -f /tmp/tempkey-79631 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:17.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:17.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:17.552" starttime="20201212 13:41:17.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:17.553" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:17.553" starttime="20201212 13:41:17.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:17.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:17.554" starttime="20201212 13:41:17.553"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.554" starttime="20201212 13:41:17.547"></status>
</kw>
<msg timestamp="20201212 13:41:17.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:17.554" starttime="20201212 13:41:17.547"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.554" starttime="20201212 13:41:17.546"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:41:17.555" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201212 13:41:17.555" starttime="20201212 13:41:17.555"></status>
</kw>
<msg timestamp="20201212 13:41:17.555" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201212 13:41:17.555" starttime="20201212 13:41:12.901"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:17.556" starttime="20201212 13:41:17.555"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.556" starttime="20201212 13:41:12.900"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:41:17.556" critical="yes" starttime="20201212 13:41:07.981"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:17.563" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:17.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:17.564" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:41:17.564" starttime="20201212 13:41:17.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:17.565" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:41:17.565" starttime="20201212 13:41:17.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:17.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:17.566" starttime="20201212 13:41:17.565"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.566" starttime="20201212 13:41:17.560"></status>
</kw>
<msg timestamp="20201212 13:41:17.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:17.566" starttime="20201212 13:41:17.559"></status>
</kw>
<msg timestamp="20201212 13:41:17.566" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:41:17.566" starttime="20201212 13:41:17.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:41:17.567" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:41:17.567" starttime="20201212 13:41:17.566"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:17.570" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:17.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:17.588" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:17.588" starttime="20201212 13:41:17.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:17.589" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:17.589" starttime="20201212 13:41:17.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:17.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:17.590" starttime="20201212 13:41:17.589"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.590" starttime="20201212 13:41:17.568"></status>
</kw>
<msg timestamp="20201212 13:41:17.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:17.590" starttime="20201212 13:41:17.568"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.591" starttime="20201212 13:41:17.567"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.591" starttime="20201212 13:41:17.567"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.591" starttime="20201212 13:41:17.558"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:17.591" starttime="20201212 13:41:17.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:17.595" level="INFO">Running command 'ozone sh key list 54433-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:21.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:21.293" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201212 13:41:21.293" starttime="20201212 13:41:17.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:21.294" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201212 13:41:21.294" starttime="20201212 13:41:21.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:21.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:21.295" starttime="20201212 13:41:21.294"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:21.295" starttime="20201212 13:41:17.592"></status>
</kw>
<msg timestamp="20201212 13:41:21.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:21.295" starttime="20201212 13:41:17.592"></status>
</kw>
<msg timestamp="20201212 13:41:21.295" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201212 13:41:21.295" starttime="20201212 13:41:17.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:21.299" level="INFO">Running command 'ozone sh key list 54433-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:24.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:24.526" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201212 13:41:24.527" starttime="20201212 13:41:21.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:24.528" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201212 13:41:24.528" starttime="20201212 13:41:24.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:24.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:24.528" starttime="20201212 13:41:24.528"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:24.528" starttime="20201212 13:41:21.296"></status>
</kw>
<msg timestamp="20201212 13:41:24.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:24.529" starttime="20201212 13:41:21.296"></status>
</kw>
<msg timestamp="20201212 13:41:24.529" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201212 13:41:24.529" starttime="20201212 13:41:21.295"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:24.529" starttime="20201212 13:41:24.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:24.530" starttime="20201212 13:41:24.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:24.530" starttime="20201212 13:41:24.530"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:41:24.530" critical="yes" starttime="20201212 13:41:17.557"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:24.536" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:24.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:24.539" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:41:24.539" starttime="20201212 13:41:24.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:24.540" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:41:24.540" starttime="20201212 13:41:24.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:24.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:24.540" starttime="20201212 13:41:24.540"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:24.541" starttime="20201212 13:41:24.533"></status>
</kw>
<msg timestamp="20201212 13:41:24.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:24.541" starttime="20201212 13:41:24.533"></status>
</kw>
<msg timestamp="20201212 13:41:24.541" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:41:24.541" starttime="20201212 13:41:24.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:41:24.541" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:41:24.542" starttime="20201212 13:41:24.541"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:24.548" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:24.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:24.565" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:24.565" starttime="20201212 13:41:24.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:24.566" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:24.566" starttime="20201212 13:41:24.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:24.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:24.567" starttime="20201212 13:41:24.566"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:24.567" starttime="20201212 13:41:24.544"></status>
</kw>
<msg timestamp="20201212 13:41:24.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:24.567" starttime="20201212 13:41:24.544"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:24.568" starttime="20201212 13:41:24.542"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:24.568" starttime="20201212 13:41:24.542"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:24.568" starttime="20201212 13:41:24.532"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:24.568" starttime="20201212 13:41:24.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:24.574" level="INFO">Running command 'ozone sh key delete 54433-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:27.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:27.682" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:27.682" starttime="20201212 13:41:24.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:27.683" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:41:27.684" starttime="20201212 13:41:27.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:27.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:27.684" starttime="20201212 13:41:27.684"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:27.684" starttime="20201212 13:41:24.569"></status>
</kw>
<msg timestamp="20201212 13:41:27.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:27.684" starttime="20201212 13:41:24.568"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:27.685" starttime="20201212 13:41:24.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:27.688" level="INFO">Running command 'ozone sh key list 54433-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:31.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:31.116" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201212 13:41:31.116" starttime="20201212 13:41:27.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:31.117" level="INFO">key1</msg>
<status status="PASS" endtime="20201212 13:41:31.117" starttime="20201212 13:41:31.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:31.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:31.118" starttime="20201212 13:41:31.117"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:31.118" starttime="20201212 13:41:27.686"></status>
</kw>
<msg timestamp="20201212 13:41:31.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:31.118" starttime="20201212 13:41:27.685"></status>
</kw>
<msg timestamp="20201212 13:41:31.118" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201212 13:41:31.118" starttime="20201212 13:41:27.685"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:31.119" starttime="20201212 13:41:31.119"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:41:31.119" critical="yes" starttime="20201212 13:41:24.531"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:31.125" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:31.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:31.126" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:41:31.126" starttime="20201212 13:41:31.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:31.127" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:41:31.127" starttime="20201212 13:41:31.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:31.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:31.128" starttime="20201212 13:41:31.127"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:31.128" starttime="20201212 13:41:31.122"></status>
</kw>
<msg timestamp="20201212 13:41:31.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:31.128" starttime="20201212 13:41:31.121"></status>
</kw>
<msg timestamp="20201212 13:41:31.128" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:41:31.128" starttime="20201212 13:41:31.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:41:31.129" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:41:31.129" starttime="20201212 13:41:31.129"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:31.133" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:31.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:31.149" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:31.149" starttime="20201212 13:41:31.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:31.150" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:31.151" starttime="20201212 13:41:31.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:31.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:31.151" starttime="20201212 13:41:31.151"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:31.151" starttime="20201212 13:41:31.130"></status>
</kw>
<msg timestamp="20201212 13:41:31.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:31.152" starttime="20201212 13:41:31.130"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:31.152" starttime="20201212 13:41:31.129"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:31.152" starttime="20201212 13:41:31.129"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:31.152" starttime="20201212 13:41:31.121"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:31.152" starttime="20201212 13:41:31.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:31.155" level="INFO">Running command 'ozone sh bucket list 54433-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:33.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:33.971" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:33.971" starttime="20201212 13:41:31.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:33.972" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:48.960Z",
  "modificationTime" : "2020-12-12T13:40:48.960Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:31.565Z",
  "modificationTime" : "2020-12-12T13:40:45.967Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:54.887Z",
  "modificationTime" : "2020-12-12T13:40:54.887Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:25.789Z",
  "modificationTime" : "2020-12-12T13:40:43.305Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:28.707Z",
  "modificationTime" : "2020-12-12T13:40:28.707Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 13:41:33.973" starttime="20201212 13:41:33.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:33.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:33.973" starttime="20201212 13:41:33.973"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:33.973" starttime="20201212 13:41:31.153"></status>
</kw>
<msg timestamp="20201212 13:41:33.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:33.974" starttime="20201212 13:41:31.153"></status>
</kw>
<msg timestamp="20201212 13:41:33.974" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:33.974" starttime="20201212 13:41:31.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:33.974" starttime="20201212 13:41:33.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:33.975" starttime="20201212 13:41:33.975"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:41:33.975" critical="yes" starttime="20201212 13:41:31.120"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:33.981" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:33.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:33.982" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:41:33.982" starttime="20201212 13:41:33.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:33.983" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:41:33.983" starttime="20201212 13:41:33.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:33.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:33.984" starttime="20201212 13:41:33.984"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:33.984" starttime="20201212 13:41:33.978"></status>
</kw>
<msg timestamp="20201212 13:41:33.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:33.984" starttime="20201212 13:41:33.977"></status>
</kw>
<msg timestamp="20201212 13:41:33.985" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:41:33.985" starttime="20201212 13:41:33.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:41:33.985" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:41:33.985" starttime="20201212 13:41:33.985"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:33.990" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:33.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:33.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:33.999" starttime="20201212 13:41:33.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:34.000" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:34.000" starttime="20201212 13:41:33.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:34.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:34.001" starttime="20201212 13:41:34.000"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:34.001" starttime="20201212 13:41:33.987"></status>
</kw>
<msg timestamp="20201212 13:41:34.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:34.001" starttime="20201212 13:41:33.986"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:34.001" starttime="20201212 13:41:33.986"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:34.002" starttime="20201212 13:41:33.985"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:34.002" starttime="20201212 13:41:33.977"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:34.002" starttime="20201212 13:41:33.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:34.006" level="INFO">Running command 'ozone sh bucket info 54433-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:37.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:37.243" level="INFO">${output} = 54433-source bucket1</msg>
<status status="PASS" endtime="20201212 13:41:37.243" starttime="20201212 13:41:34.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:37.244" level="INFO">54433-source bucket1</msg>
<status status="PASS" endtime="20201212 13:41:37.244" starttime="20201212 13:41:37.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:37.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:37.245" starttime="20201212 13:41:37.245"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:37.245" starttime="20201212 13:41:34.003"></status>
</kw>
<msg timestamp="20201212 13:41:37.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:37.246" starttime="20201212 13:41:34.003"></status>
</kw>
<msg timestamp="20201212 13:41:37.246" level="INFO">${result} = 54433-source bucket1</msg>
<status status="PASS" endtime="20201212 13:41:37.246" starttime="20201212 13:41:34.002"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:37.246" starttime="20201212 13:41:37.246"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:41:37.247" critical="yes" starttime="20201212 13:41:33.975"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:37.252" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:37.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:37.254" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:41:37.254" starttime="20201212 13:41:37.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:37.255" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:41:37.255" starttime="20201212 13:41:37.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:37.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:37.256" starttime="20201212 13:41:37.255"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:37.256" starttime="20201212 13:41:37.249"></status>
</kw>
<msg timestamp="20201212 13:41:37.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:37.256" starttime="20201212 13:41:37.249"></status>
</kw>
<msg timestamp="20201212 13:41:37.257" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:41:37.257" starttime="20201212 13:41:37.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:41:37.257" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:41:37.257" starttime="20201212 13:41:37.257"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:37.262" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:37.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:37.271" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:37.271" starttime="20201212 13:41:37.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:37.272" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:37.272" starttime="20201212 13:41:37.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:37.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:37.272" starttime="20201212 13:41:37.272"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:37.273" starttime="20201212 13:41:37.259"></status>
</kw>
<msg timestamp="20201212 13:41:37.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:37.273" starttime="20201212 13:41:37.258"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:37.273" starttime="20201212 13:41:37.258"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:37.273" starttime="20201212 13:41:37.257"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:37.273" starttime="20201212 13:41:37.248"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:37.273" starttime="20201212 13:41:37.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:37.278" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 54433-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:40.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:40.207" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:40.207" starttime="20201212 13:41:37.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:40.208" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 13:41:40.208" starttime="20201212 13:41:40.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:40.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:40.208" starttime="20201212 13:41:40.208"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:40.209" starttime="20201212 13:41:37.274"></status>
</kw>
<msg timestamp="20201212 13:41:40.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:40.209" starttime="20201212 13:41:37.274"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:40.209" starttime="20201212 13:41:37.274"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:40.214" level="INFO">Running command 'ozone sh bucket getacl 54433-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:43.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:43.416" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201212 13:41:43.416" starttime="20201212 13:41:40.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:43.417" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201212 13:41:43.417" starttime="20201212 13:41:43.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:43.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:43.418" starttime="20201212 13:41:43.417"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:43.418" starttime="20201212 13:41:40.211"></status>
</kw>
<msg timestamp="20201212 13:41:43.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:43.418" starttime="20201212 13:41:40.210"></status>
</kw>
<msg timestamp="20201212 13:41:43.418" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201212 13:41:43.418" starttime="20201212 13:41:40.210"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:43.419" starttime="20201212 13:41:43.419"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:43.419" starttime="20201212 13:41:40.209"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:43.424" level="INFO">Running command 'ozone sh bucket getacl 54433-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:46.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:46.501" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:46.501" starttime="20201212 13:41:43.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:46.502" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:46.502" starttime="20201212 13:41:46.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:46.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:46.502" starttime="20201212 13:41:46.502"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:46.503" starttime="20201212 13:41:43.421"></status>
</kw>
<msg timestamp="20201212 13:41:46.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:46.503" starttime="20201212 13:41:43.421"></status>
</kw>
<msg timestamp="20201212 13:41:46.503" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201212 13:41:46.503" starttime="20201212 13:41:43.420"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:46.504" starttime="20201212 13:41:46.503"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:46.504" starttime="20201212 13:41:43.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:46.508" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 54433-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:49.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:49.289" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:49.289" starttime="20201212 13:41:46.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:49.290" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 13:41:49.290" starttime="20201212 13:41:49.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:49.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:49.290" starttime="20201212 13:41:49.290"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:49.291" starttime="20201212 13:41:46.505"></status>
</kw>
<msg timestamp="20201212 13:41:49.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:49.291" starttime="20201212 13:41:46.505"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:49.291" starttime="20201212 13:41:46.504"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:49.296" level="INFO">Running command 'ozone sh bucket getacl 54433-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:52.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:52.528" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:52.528" starttime="20201212 13:41:49.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:52.529" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:52.529" starttime="20201212 13:41:52.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:52.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:52.530" starttime="20201212 13:41:52.529"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:52.530" starttime="20201212 13:41:49.293"></status>
</kw>
<msg timestamp="20201212 13:41:52.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:52.530" starttime="20201212 13:41:49.293"></status>
</kw>
<msg timestamp="20201212 13:41:52.531" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201212 13:41:52.531" starttime="20201212 13:41:49.292"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:52.531" starttime="20201212 13:41:52.531"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:52.531" starttime="20201212 13:41:49.291"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:52.536" level="INFO">Running command 'ozone sh bucket getacl 54433-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:55.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:55.448" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201212 13:41:55.448" starttime="20201212 13:41:52.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:55.449" level="INFO">READ</msg>
<status status="PASS" endtime="20201212 13:41:55.449" starttime="20201212 13:41:55.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:55.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:55.450" starttime="20201212 13:41:55.450"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:55.450" starttime="20201212 13:41:52.533"></status>
</kw>
<msg timestamp="20201212 13:41:55.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:55.450" starttime="20201212 13:41:52.533"></status>
</kw>
<msg timestamp="20201212 13:41:55.451" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201212 13:41:55.451" starttime="20201212 13:41:52.532"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:41:55.451" starttime="20201212 13:41:55.451"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:55.451" starttime="20201212 13:41:52.531"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:41:55.452" critical="yes" starttime="20201212 13:41:37.247"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:55.458" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:55.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:55.460" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:41:55.460" starttime="20201212 13:41:55.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:55.461" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:41:55.461" starttime="20201212 13:41:55.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:55.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:55.462" starttime="20201212 13:41:55.461"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:55.462" starttime="20201212 13:41:55.455"></status>
</kw>
<msg timestamp="20201212 13:41:55.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:55.462" starttime="20201212 13:41:55.455"></status>
</kw>
<msg timestamp="20201212 13:41:55.462" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:41:55.462" starttime="20201212 13:41:55.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:41:55.463" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:41:55.463" starttime="20201212 13:41:55.463"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:55.467" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:55.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:55.477" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:41:55.477" starttime="20201212 13:41:55.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:55.478" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:41:55.478" starttime="20201212 13:41:55.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:55.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:55.479" starttime="20201212 13:41:55.478"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:55.479" starttime="20201212 13:41:55.464"></status>
</kw>
<msg timestamp="20201212 13:41:55.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:55.479" starttime="20201212 13:41:55.464"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:55.479" starttime="20201212 13:41:55.464"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:55.479" starttime="20201212 13:41:55.463"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:55.479" starttime="20201212 13:41:55.454"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:55.479" starttime="20201212 13:41:55.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:55.483" level="INFO">Running command 'ozone sh bucket link 54433-source/bucket2 54433-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:41:58.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:41:58.370" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:41:58.370" starttime="20201212 13:41:55.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:41:58.371" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:41:58.371" starttime="20201212 13:41:58.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:41:58.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:41:58.372" starttime="20201212 13:41:58.372"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:58.372" starttime="20201212 13:41:55.480"></status>
</kw>
<msg timestamp="20201212 13:41:58.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:41:58.373" starttime="20201212 13:41:55.480"></status>
</kw>
<status status="PASS" endtime="20201212 13:41:58.373" starttime="20201212 13:41:55.480"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:41:58.377" level="INFO">Running command 'ozone sh bucket create 54433-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:01.226" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:42:01.226" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:01.226" starttime="20201212 13:41:58.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:01.227" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201212 13:42:01.227" starttime="20201212 13:42:01.226"></status>
</kw>
<msg timestamp="20201212 13:42:01.227" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:01.228" starttime="20201212 13:41:58.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:01.228" starttime="20201212 13:42:01.228"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:01.232" level="INFO">Running command 'ozone sh bucket create 54433-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:03.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:03.973" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:03.973" starttime="20201212 13:42:01.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:03.974" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:42:03.974" starttime="20201212 13:42:03.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:03.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:03.975" starttime="20201212 13:42:03.974"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:03.975" starttime="20201212 13:42:01.229"></status>
</kw>
<msg timestamp="20201212 13:42:03.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:03.975" starttime="20201212 13:42:01.229"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:03.976" starttime="20201212 13:42:01.228"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:03.978" level="INFO">Running command 'ozone sh bucket link 54433-source/bucket1 54433-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:06.787" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:42:06.787" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:06.787" starttime="20201212 13:42:03.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.788" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201212 13:42:06.788" starttime="20201212 13:42:06.787"></status>
</kw>
<msg timestamp="20201212 13:42:06.788" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:06.788" starttime="20201212 13:42:03.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:06.789" starttime="20201212 13:42:06.788"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:42:06.789" critical="yes" starttime="20201212 13:41:55.453"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:06.797" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:06.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:06.799" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:42:06.800" starttime="20201212 13:42:06.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.801" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:42:06.801" starttime="20201212 13:42:06.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:06.801" starttime="20201212 13:42:06.801"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.801" starttime="20201212 13:42:06.794"></status>
</kw>
<msg timestamp="20201212 13:42:06.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:06.802" starttime="20201212 13:42:06.794"></status>
</kw>
<msg timestamp="20201212 13:42:06.802" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:42:06.802" starttime="20201212 13:42:06.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:42:06.803" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:42:06.803" starttime="20201212 13:42:06.802"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:06.806" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:06.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:06.816" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:06.816" starttime="20201212 13:42:06.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.817" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:06.817" starttime="20201212 13:42:06.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:06.818" starttime="20201212 13:42:06.817"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.818" starttime="20201212 13:42:06.804"></status>
</kw>
<msg timestamp="20201212 13:42:06.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:06.818" starttime="20201212 13:42:06.804"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.818" starttime="20201212 13:42:06.803"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.818" starttime="20201212 13:42:06.803"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.818" starttime="20201212 13:42:06.793"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.819" starttime="20201212 13:42:06.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:06.822" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:06.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:06.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:06.826" starttime="20201212 13:42:06.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.827" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:06.827" starttime="20201212 13:42:06.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:06.827" starttime="20201212 13:42:06.827"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.828" starttime="20201212 13:42:06.820"></status>
</kw>
<msg timestamp="20201212 13:42:06.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:06.828" starttime="20201212 13:42:06.820"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.828" starttime="20201212 13:42:06.820"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:06.832" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:06.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:06.833" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:42:06.833" starttime="20201212 13:42:06.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.834" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:42:06.834" starttime="20201212 13:42:06.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:06.835" starttime="20201212 13:42:06.835"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.835" starttime="20201212 13:42:06.829"></status>
</kw>
<msg timestamp="20201212 13:42:06.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:06.835" starttime="20201212 13:42:06.829"></status>
</kw>
<msg timestamp="20201212 13:42:06.836" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:42:06.836" starttime="20201212 13:42:06.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:42:06.836" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:42:06.836" starttime="20201212 13:42:06.836"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:06.841" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:06.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:06.848" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:06.848" starttime="20201212 13:42:06.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.849" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:06.849" starttime="20201212 13:42:06.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:06.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:06.850" starttime="20201212 13:42:06.850"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.851" starttime="20201212 13:42:06.837"></status>
</kw>
<msg timestamp="20201212 13:42:06.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:06.851" starttime="20201212 13:42:06.837"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.851" starttime="20201212 13:42:06.837"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.851" starttime="20201212 13:42:06.836"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.851" starttime="20201212 13:42:06.828"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:06.851" starttime="20201212 13:42:06.828"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:06.854" level="INFO">Running command 'ozone sh key list 54433-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:09.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:09.983" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:09.983" starttime="20201212 13:42:06.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:09.984" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "54433-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-12-12T13:40:17.411Z",
  "modificationTime" : "2020-12-12T13:40:19.285Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201212 13:42:09.984" starttime="20201212 13:42:09.983"></status>
</kw>
<msg timestamp="20201212 13:42:09.984" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:09.984" starttime="20201212 13:42:06.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:09.985" starttime="20201212 13:42:09.984"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:09.985" starttime="20201212 13:42:06.819"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:09.985" starttime="20201212 13:42:06.819"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:42:09.985" critical="yes" starttime="20201212 13:42:06.792"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:09.992" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:09.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:09.993" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:42:09.993" starttime="20201212 13:42:09.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:09.994" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:42:09.994" starttime="20201212 13:42:09.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:09.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:09.995" starttime="20201212 13:42:09.994"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:09.995" starttime="20201212 13:42:09.988"></status>
</kw>
<msg timestamp="20201212 13:42:09.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:09.995" starttime="20201212 13:42:09.988"></status>
</kw>
<msg timestamp="20201212 13:42:09.995" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:42:09.995" starttime="20201212 13:42:09.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:42:09.996" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:42:09.996" starttime="20201212 13:42:09.995"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:10.000" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:10.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:10.015" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:10.015" starttime="20201212 13:42:09.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:10.016" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:10.016" starttime="20201212 13:42:10.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:10.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:10.016" starttime="20201212 13:42:10.016"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.017" starttime="20201212 13:42:09.997"></status>
</kw>
<msg timestamp="20201212 13:42:10.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:10.017" starttime="20201212 13:42:09.997"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.017" starttime="20201212 13:42:09.996"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.017" starttime="20201212 13:42:09.996"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.017" starttime="20201212 13:42:09.987"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.017" starttime="20201212 13:42:09.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:10.022" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:10.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:10.024" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:10.024" starttime="20201212 13:42:10.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:10.025" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:10.025" starttime="20201212 13:42:10.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:10.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:10.026" starttime="20201212 13:42:10.025"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.026" starttime="20201212 13:42:10.019"></status>
</kw>
<msg timestamp="20201212 13:42:10.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:10.026" starttime="20201212 13:42:10.019"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.026" starttime="20201212 13:42:10.018"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:10.030" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:10.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:10.032" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:42:10.032" starttime="20201212 13:42:10.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:10.033" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:42:10.033" starttime="20201212 13:42:10.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:10.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:10.034" starttime="20201212 13:42:10.033"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.034" starttime="20201212 13:42:10.028"></status>
</kw>
<msg timestamp="20201212 13:42:10.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:10.034" starttime="20201212 13:42:10.028"></status>
</kw>
<msg timestamp="20201212 13:42:10.034" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:42:10.034" starttime="20201212 13:42:10.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:42:10.035" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:42:10.035" starttime="20201212 13:42:10.034"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:10.038" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:10.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:10.047" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:10.047" starttime="20201212 13:42:10.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:10.048" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:10.048" starttime="20201212 13:42:10.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:10.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:10.049" starttime="20201212 13:42:10.048"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.049" starttime="20201212 13:42:10.036"></status>
</kw>
<msg timestamp="20201212 13:42:10.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:10.049" starttime="20201212 13:42:10.036"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.049" starttime="20201212 13:42:10.035"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.049" starttime="20201212 13:42:10.035"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.049" starttime="20201212 13:42:10.027"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:10.049" starttime="20201212 13:42:10.027"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:10.053" level="INFO">Running command 'ozone sh key list 54433-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:12.755" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:42:12.755" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:12.755" starttime="20201212 13:42:10.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.756" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201212 13:42:12.757" starttime="20201212 13:42:12.756"></status>
</kw>
<msg timestamp="20201212 13:42:12.757" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:12.757" starttime="20201212 13:42:10.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:12.758" starttime="20201212 13:42:12.757"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.758" starttime="20201212 13:42:10.018"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.758" starttime="20201212 13:42:10.017"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:42:12.758" critical="yes" starttime="20201212 13:42:09.986"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:12.763" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:12.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:12.765" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:42:12.765" starttime="20201212 13:42:12.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.766" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:42:12.766" starttime="20201212 13:42:12.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:12.767" starttime="20201212 13:42:12.766"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.767" starttime="20201212 13:42:12.761"></status>
</kw>
<msg timestamp="20201212 13:42:12.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:12.767" starttime="20201212 13:42:12.760"></status>
</kw>
<msg timestamp="20201212 13:42:12.767" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:42:12.767" starttime="20201212 13:42:12.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:42:12.768" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:42:12.768" starttime="20201212 13:42:12.767"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:12.772" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:12.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:12.781" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:12.781" starttime="20201212 13:42:12.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.782" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:12.782" starttime="20201212 13:42:12.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:12.783" starttime="20201212 13:42:12.782"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.783" starttime="20201212 13:42:12.769"></status>
</kw>
<msg timestamp="20201212 13:42:12.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:12.783" starttime="20201212 13:42:12.769"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.783" starttime="20201212 13:42:12.768"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.784" starttime="20201212 13:42:12.768"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.784" starttime="20201212 13:42:12.760"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.784" starttime="20201212 13:42:12.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:12.788" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:12.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:12.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:12.791" starttime="20201212 13:42:12.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.791" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:12.791" starttime="20201212 13:42:12.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:12.792" starttime="20201212 13:42:12.792"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.792" starttime="20201212 13:42:12.785"></status>
</kw>
<msg timestamp="20201212 13:42:12.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:12.793" starttime="20201212 13:42:12.785"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.793" starttime="20201212 13:42:12.785"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:12.797" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:12.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:12.799" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:42:12.799" starttime="20201212 13:42:12.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.799" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:42:12.799" starttime="20201212 13:42:12.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:12.800" starttime="20201212 13:42:12.800"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.800" starttime="20201212 13:42:12.794"></status>
</kw>
<msg timestamp="20201212 13:42:12.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:12.800" starttime="20201212 13:42:12.794"></status>
</kw>
<msg timestamp="20201212 13:42:12.801" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:42:12.801" starttime="20201212 13:42:12.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:42:12.801" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:42:12.801" starttime="20201212 13:42:12.801"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:12.805" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:12.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:12.814" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:12.814" starttime="20201212 13:42:12.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.815" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:12.815" starttime="20201212 13:42:12.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:12.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:12.816" starttime="20201212 13:42:12.815"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.816" starttime="20201212 13:42:12.803"></status>
</kw>
<msg timestamp="20201212 13:42:12.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:12.816" starttime="20201212 13:42:12.802"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.816" starttime="20201212 13:42:12.802"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.816" starttime="20201212 13:42:12.801"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.816" starttime="20201212 13:42:12.793"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:12.817" starttime="20201212 13:42:12.793"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:12.822" level="INFO">Running command 'ozone sh bucket info 54433-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:15.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:15.779" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:15.779" starttime="20201212 13:42:12.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:15.780" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:31.565Z",
  "modificationTime" : "2020-12-12T13:40:45.967Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 13:42:15.781" starttime="20201212 13:42:15.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:15.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:15.781" starttime="20201212 13:42:15.781"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:15.781" starttime="20201212 13:42:12.817"></status>
</kw>
<msg timestamp="20201212 13:42:15.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:15.782" starttime="20201212 13:42:12.817"></status>
</kw>
<msg timestamp="20201212 13:42:15.782" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:15.782" starttime="20201212 13:42:12.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:15.782" starttime="20201212 13:42:15.782"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:15.783" starttime="20201212 13:42:15.783"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:15.786" level="INFO">Running command 'ozone sh key list 54433-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:18.456" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:42:18.457" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:18.457" starttime="20201212 13:42:15.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:18.458" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201212 13:42:18.458" starttime="20201212 13:42:18.457"></status>
</kw>
<msg timestamp="20201212 13:42:18.458" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:18.458" starttime="20201212 13:42:15.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:18.459" starttime="20201212 13:42:18.458"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:18.459" starttime="20201212 13:42:12.784"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:18.459" starttime="20201212 13:42:12.784"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:42:18.459" critical="yes" starttime="20201212 13:42:12.759"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:18.464" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:18.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:18.467" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:42:18.467" starttime="20201212 13:42:18.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:18.467" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:42:18.468" starttime="20201212 13:42:18.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:18.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:18.468" starttime="20201212 13:42:18.468"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:18.468" starttime="20201212 13:42:18.462"></status>
</kw>
<msg timestamp="20201212 13:42:18.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:18.469" starttime="20201212 13:42:18.461"></status>
</kw>
<msg timestamp="20201212 13:42:18.469" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:42:18.469" starttime="20201212 13:42:18.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:42:18.469" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:42:18.469" starttime="20201212 13:42:18.469"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:18.474" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:18.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:18.483" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:18.483" starttime="20201212 13:42:18.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:18.484" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:18.484" starttime="20201212 13:42:18.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:18.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:18.485" starttime="20201212 13:42:18.485"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:18.485" starttime="20201212 13:42:18.471"></status>
</kw>
<msg timestamp="20201212 13:42:18.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:18.485" starttime="20201212 13:42:18.470"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:18.486" starttime="20201212 13:42:18.470"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:18.486" starttime="20201212 13:42:18.470"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:18.486" starttime="20201212 13:42:18.461"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:18.486" starttime="20201212 13:42:18.460"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:18.490" level="INFO">Running command 'ozone sh bucket link 54433-target/loop1 54433-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:21.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:21.510" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:21.510" starttime="20201212 13:42:18.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:21.512" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:42:21.512" starttime="20201212 13:42:21.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:21.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:21.512" starttime="20201212 13:42:21.512"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:21.512" starttime="20201212 13:42:18.487"></status>
</kw>
<msg timestamp="20201212 13:42:21.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:21.513" starttime="20201212 13:42:18.487"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:21.513" starttime="20201212 13:42:18.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:21.517" level="INFO">Running command 'ozone sh bucket link 54433-target/loop2 54433-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:24.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:24.515" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:24.516" starttime="20201212 13:42:21.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:24.517" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:42:24.517" starttime="20201212 13:42:24.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:24.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:24.517" starttime="20201212 13:42:24.517"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:24.518" starttime="20201212 13:42:21.514"></status>
</kw>
<msg timestamp="20201212 13:42:24.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:24.518" starttime="20201212 13:42:21.514"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:24.518" starttime="20201212 13:42:21.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:24.523" level="INFO">Running command 'ozone sh bucket link 54433-target/loop3 54433-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:27.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:27.726" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:27.726" starttime="20201212 13:42:24.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:27.727" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:42:27.727" starttime="20201212 13:42:27.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:27.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:27.728" starttime="20201212 13:42:27.727"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:27.728" starttime="20201212 13:42:24.519"></status>
</kw>
<msg timestamp="20201212 13:42:27.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:27.728" starttime="20201212 13:42:24.519"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:27.728" starttime="20201212 13:42:24.518"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:27.731" level="INFO">Running command 'ozone sh key list 54433-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:30.907" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:42:30.907" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:30.907" starttime="20201212 13:42:27.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:30.908" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201212 13:42:30.909" starttime="20201212 13:42:30.908"></status>
</kw>
<msg timestamp="20201212 13:42:30.909" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:30.909" starttime="20201212 13:42:27.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:30.909" starttime="20201212 13:42:30.909"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:42:30.910" critical="yes" starttime="20201212 13:42:18.460"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:30.916" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:30.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:30.918" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:42:30.918" starttime="20201212 13:42:30.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:30.919" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:42:30.919" starttime="20201212 13:42:30.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:30.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:30.919" starttime="20201212 13:42:30.919"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:30.919" starttime="20201212 13:42:30.913"></status>
</kw>
<msg timestamp="20201212 13:42:30.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:30.920" starttime="20201212 13:42:30.912"></status>
</kw>
<msg timestamp="20201212 13:42:30.920" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:42:30.920" starttime="20201212 13:42:30.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:42:30.920" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:42:30.920" starttime="20201212 13:42:30.920"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:30.925" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:30.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:30.933" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:30.933" starttime="20201212 13:42:30.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:30.934" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:30.934" starttime="20201212 13:42:30.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:30.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:30.935" starttime="20201212 13:42:30.935"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:30.935" starttime="20201212 13:42:30.922"></status>
</kw>
<msg timestamp="20201212 13:42:30.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:30.935" starttime="20201212 13:42:30.921"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:30.936" starttime="20201212 13:42:30.921"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:30.936" starttime="20201212 13:42:30.921"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:30.936" starttime="20201212 13:42:30.912"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:30.936" starttime="20201212 13:42:30.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:30.939" level="INFO">Running command 'ozone sh bucket link 54433-source/bucket1 54433-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:33.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:33.854" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:33.854" starttime="20201212 13:42:30.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:33.855" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:42:33.855" starttime="20201212 13:42:33.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:33.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:33.856" starttime="20201212 13:42:33.856"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:33.856" starttime="20201212 13:42:30.937"></status>
</kw>
<msg timestamp="20201212 13:42:33.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:33.856" starttime="20201212 13:42:30.936"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:33.857" starttime="20201212 13:42:30.936"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:33.861" level="INFO">Running command 'ozone sh key put 54433-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:38.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:38.407" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:38.407" starttime="20201212 13:42:33.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:38.408" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:42:38.408" starttime="20201212 13:42:38.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:38.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:38.409" starttime="20201212 13:42:38.408"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:38.409" starttime="20201212 13:42:33.858"></status>
</kw>
<msg timestamp="20201212 13:42:38.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:38.409" starttime="20201212 13:42:33.857"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:38.409" starttime="20201212 13:42:33.857"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201212 13:42:38.411" level="INFO">${postfix} = 22339</msg>
<status status="PASS" endtime="20201212 13:42:38.411" starttime="20201212 13:42:38.410"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201212 13:42:38.412" level="INFO">${tmpfile} = /tmp/tempkey-22339</msg>
<status status="PASS" endtime="20201212 13:42:38.412" starttime="20201212 13:42:38.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:38.415" level="INFO">Running command 'ozone sh key get -f 54433-target/link1/key3 /tmp/tempkey-22339 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:42.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:42.790" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:42.790" starttime="20201212 13:42:38.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:42.791" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:42:42.791" starttime="20201212 13:42:42.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:42.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:42.792" starttime="20201212 13:42:42.791"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.792" starttime="20201212 13:42:38.413"></status>
</kw>
<msg timestamp="20201212 13:42:42.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:42.792" starttime="20201212 13:42:38.412"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.792" starttime="20201212 13:42:38.412"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201212 13:42:42.794" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-22339 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:42.797" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201212 13:42:42.797" starttime="20201212 13:42:42.793"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:42.800" level="INFO">Running command 'rm -f /tmp/tempkey-22339 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:42.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:42.803" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:42.803" starttime="20201212 13:42:42.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:42.804" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:42.804" starttime="20201212 13:42:42.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:42.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:42.805" starttime="20201212 13:42:42.804"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.805" starttime="20201212 13:42:42.798"></status>
</kw>
<msg timestamp="20201212 13:42:42.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:42.805" starttime="20201212 13:42:42.798"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.805" starttime="20201212 13:42:42.797"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:42:42.806" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201212 13:42:42.806" starttime="20201212 13:42:42.805"></status>
</kw>
<msg timestamp="20201212 13:42:42.806" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201212 13:42:42.806" starttime="20201212 13:42:38.410"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:42.806" starttime="20201212 13:42:42.806"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.806" starttime="20201212 13:42:38.409"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:42:42.807" critical="yes" starttime="20201212 13:42:30.910"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:42.812" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:42.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:42.814" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 13:42:42.814" starttime="20201212 13:42:42.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:42.814" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 13:42:42.815" starttime="20201212 13:42:42.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:42.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:42.815" starttime="20201212 13:42:42.815"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.816" starttime="20201212 13:42:42.809"></status>
</kw>
<msg timestamp="20201212 13:42:42.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:42.816" starttime="20201212 13:42:42.809"></status>
</kw>
<msg timestamp="20201212 13:42:42.816" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 13:42:42.816" starttime="20201212 13:42:42.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:42:42.817" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:42:42.817" starttime="20201212 13:42:42.816"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:42.821" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:42.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:42.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:42:42.830" starttime="20201212 13:42:42.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:42.831" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:42:42.831" starttime="20201212 13:42:42.830"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:42.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:42.831" starttime="20201212 13:42:42.831"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.832" starttime="20201212 13:42:42.818"></status>
</kw>
<msg timestamp="20201212 13:42:42.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:42.832" starttime="20201212 13:42:42.818"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.832" starttime="20201212 13:42:42.817"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.832" starttime="20201212 13:42:42.817"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.832" starttime="20201212 13:42:42.808"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:42.832" starttime="20201212 13:42:42.808"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:42.836" level="INFO">Running command 'ozone sh bucket delete 54433-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:45.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:45.616" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:45.616" starttime="20201212 13:42:42.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:45.617" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:42:45.617" starttime="20201212 13:42:45.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:45.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:45.618" starttime="20201212 13:42:45.617"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:45.618" starttime="20201212 13:42:42.833"></status>
</kw>
<msg timestamp="20201212 13:42:45.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:45.618" starttime="20201212 13:42:42.833"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:45.618" starttime="20201212 13:42:42.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:45.623" level="INFO">Running command 'ozone sh bucket list 54433-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:48.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:48.769" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:48.770" starttime="20201212 13:42:45.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:48.771" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:42:03.852Z",
  "modificationTime" : "2020-12-12T13:42:03.852Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:48.960Z",
  "modificationTime" : "2020-12-12T13:40:48.960Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:31.565Z",
  "modificationTime" : "2020-12-12T13:40:45.967Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:41:58.275Z",
  "modificationTime" : "2020-12-12T13:41:58.275Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:42:33.676Z",
  "modificationTime" : "2020-12-12T13:42:33.676Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:42:27.523Z",
  "modificationTime" : "2020-12-12T13:42:27.523Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:42:21.433Z",
  "modificationTime" : "2020-12-12T13:42:21.433Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:42:24.356Z",
  "modificationTime" : "2020-12-12T13:42:24.356Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:25.789Z",
  "modificationTime" : "2020-12-12T13:40:43.305Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "54433-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:40:28.707Z",
  "modificationTime" : "2020-12-12T13:40:28.707Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "54433-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 13:42:48.771" starttime="20201212 13:42:48.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:48.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:48.771" starttime="20201212 13:42:48.771"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:48.772" starttime="20201212 13:42:45.619"></status>
</kw>
<msg timestamp="20201212 13:42:48.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:48.772" starttime="20201212 13:42:45.619"></status>
</kw>
<msg timestamp="20201212 13:42:48.772" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:42:48.772" starttime="20201212 13:42:45.619"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:48.773" starttime="20201212 13:42:48.772"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:42:48.776" level="INFO">Running command 'ozone sh key list 54433-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:42:51.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:42:51.965" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201212 13:42:51.965" starttime="20201212 13:42:48.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:42:51.966" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201212 13:42:51.966" starttime="20201212 13:42:51.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:42:51.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:42:51.967" starttime="20201212 13:42:51.967"></status>
</kw>
<status status="PASS" endtime="20201212 13:42:51.967" starttime="20201212 13:42:48.774"></status>
</kw>
<msg timestamp="20201212 13:42:51.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:42:51.967" starttime="20201212 13:42:48.773"></status>
</kw>
<msg timestamp="20201212 13:42:51.968" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201212 13:42:51.968" starttime="20201212 13:42:48.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201212 13:42:51.968" starttime="20201212 13:42:51.968"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:42:51.968" critical="yes" starttime="20201212 13:42:42.807"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201212 13:42:51.971" starttime="20201212 13:40:05.561"></status>
</suite>
<status status="PASS" elapsedtime="192161" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
