<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201212 13:37:25.909" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:06.774" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:10.451" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:34:10.451" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:10.451" starttime="20201212 13:34:06.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:10.452" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:34:10.452" starttime="20201212 13:34:10.451"></status>
</kw>
<msg timestamp="20201212 13:34:10.452" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:10.452" starttime="20201212 13:34:06.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:10.459" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:13.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:13.696" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:13.696" starttime="20201212 13:34:10.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:13.697" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:34:13.697" starttime="20201212 13:34:13.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:13.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:13.698" starttime="20201212 13:34:13.698"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:13.699" starttime="20201212 13:34:10.454"></status>
</kw>
<msg timestamp="20201212 13:34:13.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:13.699" starttime="20201212 13:34:10.454"></status>
</kw>
<msg timestamp="20201212 13:34:13.699" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:13.699" starttime="20201212 13:34:10.453"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201212 13:34:13.700" starttime="20201212 13:34:13.699"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:13.700" starttime="20201212 13:34:10.453"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:13.700" starttime="20201212 13:34:10.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:13.705" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:16.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:16.659" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:16.659" starttime="20201212 13:34:13.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:16.661" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:34:16.661" starttime="20201212 13:34:16.660"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:16.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:16.661" starttime="20201212 13:34:16.661"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:16.662" starttime="20201212 13:34:13.702"></status>
</kw>
<msg timestamp="20201212 13:34:16.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:16.662" starttime="20201212 13:34:13.701"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:16.662" starttime="20201212 13:34:13.701"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:16.662" starttime="20201212 13:34:13.700"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:16.662" starttime="20201212 13:34:13.700"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 13:34:16.663" starttime="20201212 13:34:16.662"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:16.666" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:19.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:19.771" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:19.771" starttime="20201212 13:34:16.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:19.772" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:34:16.449Z",
  "modificationTime" : "2020-12-12T13:34:16.449Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 13:34:19.772" starttime="20201212 13:34:19.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:19.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:19.772" starttime="20201212 13:34:19.772"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:19.773" starttime="20201212 13:34:16.664"></status>
</kw>
<msg timestamp="20201212 13:34:19.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:19.773" starttime="20201212 13:34:16.663"></status>
</kw>
<msg timestamp="20201212 13:34:19.773" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:19.773" starttime="20201212 13:34:16.663"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 13:34:19.773" starttime="20201212 13:34:19.773"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:34:19.777" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:34:19.777" starttime="20201212 13:34:19.776"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:34:19.777" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:34:19.777" starttime="20201212 13:34:19.777"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:19.778" starttime="20201212 13:34:19.776"></status>
</kw>
<msg timestamp="20201212 13:34:19.778" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:34:19.778" starttime="20201212 13:34:19.776"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:19.778" starttime="20201212 13:34:19.775"></status>
</kw>
<msg timestamp="20201212 13:34:19.778" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 13:34:19.778" starttime="20201212 13:34:19.774"></status>
</kw>
<msg timestamp="20201212 13:34:19.778" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 13:34:19.778" starttime="20201212 13:34:19.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:19.783" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:22.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:22.757" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:22.757" starttime="20201212 13:34:19.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:22.758" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:34:22.758" starttime="20201212 13:34:22.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:22.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:22.759" starttime="20201212 13:34:22.758"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:22.759" starttime="20201212 13:34:19.779"></status>
</kw>
<msg timestamp="20201212 13:34:22.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:22.759" starttime="20201212 13:34:19.779"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:22.759" starttime="20201212 13:34:19.778"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:22.763" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:29.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:29.676" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:29.676" starttime="20201212 13:34:22.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:29.677" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:34:29.677" starttime="20201212 13:34:29.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:29.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:29.677" starttime="20201212 13:34:29.677"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:29.678" starttime="20201212 13:34:22.760"></status>
</kw>
<msg timestamp="20201212 13:34:29.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:29.678" starttime="20201212 13:34:22.760"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:29.678" starttime="20201212 13:34:22.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:29.681" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:34.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:34.242" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:34.242" starttime="20201212 13:34:29.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:34.243" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:34:34.243" starttime="20201212 13:34:34.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:34.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:34.244" starttime="20201212 13:34:34.243"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:34.244" starttime="20201212 13:34:29.679"></status>
</kw>
<msg timestamp="20201212 13:34:34.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:34.244" starttime="20201212 13:34:29.679"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:34.244" starttime="20201212 13:34:29.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:34.248" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:39.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:39.054" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:39.054" starttime="20201212 13:34:34.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:39.055" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:34:39.055" starttime="20201212 13:34:39.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:39.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:39.056" starttime="20201212 13:34:39.055"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:39.056" starttime="20201212 13:34:34.245"></status>
</kw>
<msg timestamp="20201212 13:34:39.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:39.056" starttime="20201212 13:34:34.245"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:39.056" starttime="20201212 13:34:34.245"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:34:39.057" critical="yes" starttime="20201212 13:34:06.769"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:34:39.061" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:34:39.061" starttime="20201212 13:34:39.061"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:34:39.062" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:34:39.062" starttime="20201212 13:34:39.061"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:39.062" starttime="20201212 13:34:39.060"></status>
</kw>
<msg timestamp="20201212 13:34:39.062" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:34:39.062" starttime="20201212 13:34:39.060"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:39.062" starttime="20201212 13:34:39.059"></status>
</kw>
<msg timestamp="20201212 13:34:39.062" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:34:39.062" starttime="20201212 13:34:39.059"></status>
</kw>
<msg timestamp="20201212 13:34:39.062" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:34:39.062" starttime="20201212 13:34:39.058"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:39.066" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:41.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:41.944" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:41.944" starttime="20201212 13:34:39.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:41.945" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:34:41.945" starttime="20201212 13:34:41.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:41.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:41.946" starttime="20201212 13:34:41.945"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:41.946" starttime="20201212 13:34:39.063"></status>
</kw>
<msg timestamp="20201212 13:34:41.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:41.946" starttime="20201212 13:34:39.063"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:41.947" starttime="20201212 13:34:39.063"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:41.950" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:44.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:44.787" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 13:34:44.787" starttime="20201212 13:34:41.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:44.788" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 13:34:44.789" starttime="20201212 13:34:44.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:44.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:44.789" starttime="20201212 13:34:44.789"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:44.789" starttime="20201212 13:34:41.947"></status>
</kw>
<msg timestamp="20201212 13:34:44.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:44.790" starttime="20201212 13:34:41.947"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:44.790" starttime="20201212 13:34:41.947"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:34:44.790" critical="yes" starttime="20201212 13:34:39.057"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201212 13:34:44.791" starttime="20201212 13:34:06.722"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:36:36.544" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:36:36.544" starttime="20201212 13:36:36.543"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:36:36.544" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:36:36.544" starttime="20201212 13:36:36.544"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:36.544" starttime="20201212 13:36:36.543"></status>
</kw>
<msg timestamp="20201212 13:36:36.544" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:36:36.544" starttime="20201212 13:36:36.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:36:36.545" starttime="20201212 13:36:36.545"></status>
</kw>
<msg timestamp="20201212 13:36:36.545" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:36:36.545" starttime="20201212 13:36:36.545"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:36.546" starttime="20201212 13:36:36.542"></status>
</kw>
<msg timestamp="20201212 13:36:36.546" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:36:36.546" starttime="20201212 13:36:36.541"></status>
</kw>
<msg timestamp="20201212 13:36:36.546" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:36:36.546" starttime="20201212 13:36:36.540"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:36:36.546" level="INFO">${random} = 25540</msg>
<status status="PASS" endtime="20201212 13:36:36.546" starttime="20201212 13:36:36.546"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:36:36.551" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-25540 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:36:39.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:36:39.990" level="INFO">${output} = 2020-12-12 13:36:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:36:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 13:36:39.990" starttime="20201212 13:36:36.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:36:39.991" level="INFO">2020-12-12 13:36:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:36:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:36:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:36:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:36:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E5EF13F41EA7-&gt;fb3a5878-dc91-4337-a4ec-46cf38c6a386
2020-12-12 13:36:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 13:36:39.991" starttime="20201212 13:36:39.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:36:39.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:36:39.992" starttime="20201212 13:36:39.992"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:39.992" starttime="20201212 13:36:36.547"></status>
</kw>
<msg timestamp="20201212 13:36:39.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:36:39.992" starttime="20201212 13:36:36.547"></status>
</kw>
<msg timestamp="20201212 13:36:39.993" level="INFO">${result} = 2020-12-12 13:36:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:36:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 13:36:39.993" starttime="20201212 13:36:36.547"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:36:39.997" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:36:41.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:36:41.751" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:36 ofs://om/volume1/bucket1/ozone-25540
-rw-...</msg>
<status status="PASS" endtime="20201212 13:36:41.751" starttime="20201212 13:36:39.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:36:41.752" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:36 ofs://om/volume1/bucket1/ozone-25540
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:35 ofs://om/volume1/bucket1/ozone-76391
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:34 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:36 ofs://om/volume1/bucket1/wordcount-76.txt</msg>
<status status="PASS" endtime="20201212 13:36:41.752" starttime="20201212 13:36:41.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:36:41.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:36:41.753" starttime="20201212 13:36:41.752"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:41.753" starttime="20201212 13:36:39.995"></status>
</kw>
<msg timestamp="20201212 13:36:41.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:36:41.753" starttime="20201212 13:36:39.994"></status>
</kw>
<msg timestamp="20201212 13:36:41.753" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:34 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:36 ofs://om/volume1/bucket1/ozone-25540
-rw-...</msg>
<status status="PASS" endtime="20201212 13:36:41.753" starttime="20201212 13:36:39.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:36:41.754" starttime="20201212 13:36:41.754"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:36:41.754" critical="yes" starttime="20201212 13:36:36.539"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 13:36:41.755" starttime="20201212 13:36:36.490"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:35:18.214" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:35:18.214" starttime="20201212 13:35:18.213"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:35:18.214" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:35:18.214" starttime="20201212 13:35:18.214"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:18.215" starttime="20201212 13:35:18.213"></status>
</kw>
<msg timestamp="20201212 13:35:18.215" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:35:18.215" starttime="20201212 13:35:18.213"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:18.215" starttime="20201212 13:35:18.212"></status>
</kw>
<msg timestamp="20201212 13:35:18.215" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:35:18.215" starttime="20201212 13:35:18.212"></status>
</kw>
<msg timestamp="20201212 13:35:18.215" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:35:18.215" starttime="20201212 13:35:18.211"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:35:18.216" level="INFO">${random} = 76391</msg>
<status status="PASS" endtime="20201212 13:35:18.216" starttime="20201212 13:35:18.215"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:35:18.220" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-76391 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:35:21.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:35:21.859" level="INFO">${output} = 2020-12-12 13:35:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:35:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 13:35:21.859" starttime="20201212 13:35:18.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:35:21.860" level="INFO">2020-12-12 13:35:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:35:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:35:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:35:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:35:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5A92DCA9DD1A-&gt;fb3a5878-dc91-4337-a4ec-46cf38c6a386
2020-12-12 13:35:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 13:35:21.860" starttime="20201212 13:35:21.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:35:21.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:35:21.860" starttime="20201212 13:35:21.860"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:21.861" starttime="20201212 13:35:18.217"></status>
</kw>
<msg timestamp="20201212 13:35:21.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:35:21.861" starttime="20201212 13:35:18.216"></status>
</kw>
<msg timestamp="20201212 13:35:21.861" level="INFO">${result} = 2020-12-12 13:35:20 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:35:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 13:35:21.861" starttime="20201212 13:35:18.216"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:35:21.866" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:35:23.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:35:23.641" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:35 o3fs://bucket1.volume1.om/ozone-76391
dr...</msg>
<status status="PASS" endtime="20201212 13:35:23.642" starttime="20201212 13:35:21.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:35:23.643" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:35 o3fs://bucket1.volume1.om/ozone-76391
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:34 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:35:23.643" starttime="20201212 13:35:23.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:35:23.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:35:23.643" starttime="20201212 13:35:23.643"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:23.644" starttime="20201212 13:35:21.863"></status>
</kw>
<msg timestamp="20201212 13:35:23.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:35:23.644" starttime="20201212 13:35:21.862"></status>
</kw>
<msg timestamp="20201212 13:35:23.644" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:34 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:35 o3fs://bucket1.volume1.om/ozone-76391
dr...</msg>
<status status="PASS" endtime="20201212 13:35:23.644" starttime="20201212 13:35:21.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:35:23.645" starttime="20201212 13:35:23.644"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:35:23.645" critical="yes" starttime="20201212 13:35:18.210"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 13:35:23.646" starttime="20201212 13:35:18.164"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:35:13.649" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:35:13.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:35:13.652" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201212 13:35:13.652" starttime="20201212 13:35:13.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:35:13.653" level="INFO">rm</msg>
<status status="PASS" endtime="20201212 13:35:13.653" starttime="20201212 13:35:13.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:35:13.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:35:13.653" starttime="20201212 13:35:13.653"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:13.654" starttime="20201212 13:35:13.645"></status>
</kw>
<msg timestamp="20201212 13:35:13.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:35:13.654" starttime="20201212 13:35:13.645"></status>
</kw>
<msg timestamp="20201212 13:35:13.654" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201212 13:35:13.654" starttime="20201212 13:35:13.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:35:13.655" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:35:13.655" starttime="20201212 13:35:13.654"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:35:13.659" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:35:13.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:35:13.675" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:35:13.675" starttime="20201212 13:35:13.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:35:13.676" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:35:13.676" starttime="20201212 13:35:13.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:35:13.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:35:13.676" starttime="20201212 13:35:13.676"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:13.677" starttime="20201212 13:35:13.656"></status>
</kw>
<msg timestamp="20201212 13:35:13.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:35:13.677" starttime="20201212 13:35:13.656"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:13.677" starttime="20201212 13:35:13.656"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:13.677" starttime="20201212 13:35:13.655"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:13.677" starttime="20201212 13:35:13.644"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:35:13.677" critical="yes" starttime="20201212 13:35:13.644"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201212 13:35:13.678" starttime="20201212 13:35:13.602"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:02.091" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:02.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:02.095" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201212 13:34:02.095" starttime="20201212 13:34:02.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:02.095" level="INFO">om</msg>
<status status="PASS" endtime="20201212 13:34:02.096" starttime="20201212 13:34:02.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:02.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:02.096" starttime="20201212 13:34:02.096"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:02.096" starttime="20201212 13:34:02.086"></status>
</kw>
<msg timestamp="20201212 13:34:02.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:02.097" starttime="20201212 13:34:02.086"></status>
</kw>
<msg timestamp="20201212 13:34:02.097" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201212 13:34:02.097" starttime="20201212 13:34:02.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 13:34:02.098" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 13:34:02.098" starttime="20201212 13:34:02.097"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:34:02.109" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:34:02.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:34:02.127" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:34:02.127" starttime="20201212 13:34:02.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:34:02.128" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:34:02.128" starttime="20201212 13:34:02.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:34:02.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:34:02.129" starttime="20201212 13:34:02.129"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:02.129" starttime="20201212 13:34:02.105"></status>
</kw>
<msg timestamp="20201212 13:34:02.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:34:02.129" starttime="20201212 13:34:02.105"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:02.130" starttime="20201212 13:34:02.100"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:02.134" starttime="20201212 13:34:02.099"></status>
</kw>
<status status="PASS" endtime="20201212 13:34:02.135" starttime="20201212 13:34:02.085"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:34:02.135" critical="yes" starttime="20201212 13:34:02.084"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201212 13:34:02.135" starttime="20201212 13:34:02.029"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:36:46.294" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:36:46.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:36:46.299" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:36:46.299" starttime="20201212 13:36:46.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:36:46.299" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:36:46.300" starttime="20201212 13:36:46.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:36:46.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:36:46.300" starttime="20201212 13:36:46.300"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:46.300" starttime="20201212 13:36:46.289"></status>
</kw>
<msg timestamp="20201212 13:36:46.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:36:46.301" starttime="20201212 13:36:46.289"></status>
</kw>
<msg timestamp="20201212 13:36:46.301" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:36:46.301" starttime="20201212 13:36:46.289"></status>
</kw>
<msg timestamp="20201212 13:36:46.301" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:36:46.301" starttime="20201212 13:36:46.288"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:36:46.305" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:36:46.305" starttime="20201212 13:36:46.305"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:36:46.306" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:36:46.306" starttime="20201212 13:36:46.305"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:46.306" starttime="20201212 13:36:46.303"></status>
</kw>
<msg timestamp="20201212 13:36:46.306" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:36:46.306" starttime="20201212 13:36:46.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:36:46.307" starttime="20201212 13:36:46.306"></status>
</kw>
<msg timestamp="20201212 13:36:46.307" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:36:46.307" starttime="20201212 13:36:46.306"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:46.307" starttime="20201212 13:36:46.302"></status>
</kw>
<msg timestamp="20201212 13:36:46.307" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:36:46.307" starttime="20201212 13:36:46.302"></status>
</kw>
<msg timestamp="20201212 13:36:46.307" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:36:46.307" starttime="20201212 13:36:46.301"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:36:46.310" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:37:16.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:37:16.423" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:36:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:36:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 13:37:16.424" starttime="20201212 13:36:46.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:37:16.425" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:36:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:36:48 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:36:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:36:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:36:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C73117D4A929-&gt;fb3a5878-dc91-4337-a4ec-46cf38c6a386
2020-12-12 13:36:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 13:36:49 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-12 13:36:49 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-12 13:36:49 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780209745, maxDate=1608385009745, sequenceNumber=3, masterKeyId=2))
2020-12-12 13:36:49 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 87 a8 ac b9 e5 2e 38 87 b0 de d9 e7 2e 40 03 48 01 5a 0d 31 38 36 32 34 37 32 37 37 35 37 30 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-12 13:36:49 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780209745, maxDate=1608385009745, sequenceNumber=3, masterKeyId=2)
2020-12-12 13:36:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:36:50 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:36:50 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:36:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607780011243_0003
2020-12-12 13:36:50 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780209745, maxDate=1608385009745, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 87 a8 ac b9 e5 2e 38 87 b0 de d9 e7 2e 40 03 48 01 5a 0d 31 38 36 32 34 37 32 37 37 35 37 30 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-12 13:36:50 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 13:36:50 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 13:36:50 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-12 13:36:51 INFO  YarnClientImpl:329 - Submitted application application_1607780011243_0003
2020-12-12 13:36:51 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607780011243_0003/
2020-12-12 13:36:51 INFO  Job:1619 - Running job: job_1607780011243_0003
2020-12-12 13:36:58 INFO  Job:1640 - Job job_1607780011243_0003 running in uber mode : false
2020-12-12 13:36:58 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:37:08 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:37:09 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 13:37:10 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:37:14 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:37:15 INFO  Job:1658 - Job job_1607780011243_0003 completed successfully
2020-12-12 13:37:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065769
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43844
		Total time spent by all reduces in occupied slots (ms)=6828
		Total time spent by all map tasks (ms)=21922
		Total time spent by all reduce tasks (ms)=3414
		Total vcore-milliseconds taken by all map tasks=21922
		Total vcore-milliseconds taken by all reduce tasks=3414
		Total megabyte-milliseconds taken by all map tasks=44896256
		Total megabyte-milliseconds taken by all reduce tasks=6991872
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1018
		CPU time spent (ms)=6870
		Physical memory (bytes) snapshot=1417453568
		Virtual memory (bytes) snapshot=14055661568
		Total committed heap usage (bytes)=1175453696
		Peak Map Physical memory (bytes)=388034560
		Peak Map Virtual memory (bytes)=3510689792
		Peak Reduce Physical memory (bytes)=303243264
		Peak Reduce Virtual memory (bytes)=3527077888
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 26.601 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 13:37:16.425" starttime="20201212 13:37:16.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:37:16.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:37:16.426" starttime="20201212 13:37:16.425"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.426" starttime="20201212 13:36:46.308"></status>
</kw>
<msg timestamp="20201212 13:37:16.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:37:16.426" starttime="20201212 13:36:46.308"></status>
</kw>
<msg timestamp="20201212 13:37:16.426" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:36:48 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:36:48 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 13:37:16.427" starttime="20201212 13:36:46.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:37:16.427" starttime="20201212 13:37:16.427"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:37:16.427" critical="yes" starttime="20201212 13:36:46.288"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:37:16.434" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:37:16.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:37:16.437" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:37:16.437" starttime="20201212 13:37:16.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:37:16.438" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:37:16.438" starttime="20201212 13:37:16.437"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:37:16.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:37:16.438" starttime="20201212 13:37:16.438"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.438" starttime="20201212 13:37:16.429"></status>
</kw>
<msg timestamp="20201212 13:37:16.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:37:16.439" starttime="20201212 13:37:16.429"></status>
</kw>
<msg timestamp="20201212 13:37:16.439" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:37:16.439" starttime="20201212 13:37:16.429"></status>
</kw>
<msg timestamp="20201212 13:37:16.439" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:37:16.439" starttime="20201212 13:37:16.428"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:37:16.440" level="INFO">${random} = 76</msg>
<status status="PASS" endtime="20201212 13:37:16.440" starttime="20201212 13:37:16.439"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:37:16.443" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:37:16.443" starttime="20201212 13:37:16.443"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:37:16.444" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:37:16.444" starttime="20201212 13:37:16.443"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.444" starttime="20201212 13:37:16.442"></status>
</kw>
<msg timestamp="20201212 13:37:16.444" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:37:16.444" starttime="20201212 13:37:16.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:37:16.445" starttime="20201212 13:37:16.444"></status>
</kw>
<msg timestamp="20201212 13:37:16.445" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:37:16.445" starttime="20201212 13:37:16.444"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.445" starttime="20201212 13:37:16.441"></status>
</kw>
<msg timestamp="20201212 13:37:16.445" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:37:16.445" starttime="20201212 13:37:16.440"></status>
</kw>
<msg timestamp="20201212 13:37:16.445" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:37:16.445" starttime="20201212 13:37:16.440"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:37:16.448" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:37:16.448" starttime="20201212 13:37:16.448"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:37:16.449" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:37:16.449" starttime="20201212 13:37:16.448"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.449" starttime="20201212 13:37:16.447"></status>
</kw>
<msg timestamp="20201212 13:37:16.449" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:37:16.449" starttime="20201212 13:37:16.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:37:16.450" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201212 13:37:16.450" starttime="20201212 13:37:16.450"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:37:16.451" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201212 13:37:16.451" starttime="20201212 13:37:16.451"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.451" starttime="20201212 13:37:16.450"></status>
</kw>
<msg timestamp="20201212 13:37:16.451" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201212 13:37:16.451" starttime="20201212 13:37:16.449"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.452" starttime="20201212 13:37:16.447"></status>
</kw>
<msg timestamp="20201212 13:37:16.452" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 13:37:16.452" starttime="20201212 13:37:16.446"></status>
</kw>
<msg timestamp="20201212 13:37:16.452" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 13:37:16.452" starttime="20201212 13:37:16.446"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:37:16.455" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:37:16.455" starttime="20201212 13:37:16.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:37:16.455" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:37:16.455" starttime="20201212 13:37:16.455"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.455" starttime="20201212 13:37:16.454"></status>
</kw>
<msg timestamp="20201212 13:37:16.455" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:37:16.455" starttime="20201212 13:37:16.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:37:16.457" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201212 13:37:16.457" starttime="20201212 13:37:16.456"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:37:16.457" level="INFO">${result} = /wordcount-76.txt</msg>
<status status="PASS" endtime="20201212 13:37:16.457" starttime="20201212 13:37:16.457"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.457" starttime="20201212 13:37:16.456"></status>
</kw>
<msg timestamp="20201212 13:37:16.458" level="INFO">${path_with_leading} = /wordcount-76.txt</msg>
<status status="PASS" endtime="20201212 13:37:16.458" starttime="20201212 13:37:16.456"></status>
</kw>
<status status="PASS" endtime="20201212 13:37:16.458" starttime="20201212 13:37:16.453"></status>
</kw>
<msg timestamp="20201212 13:37:16.458" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-76.txt</msg>
<status status="PASS" endtime="20201212 13:37:16.458" starttime="20201212 13:37:16.453"></status>
</kw>
<msg timestamp="20201212 13:37:16.458" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-76.txt</msg>
<status status="PASS" endtime="20201212 13:37:16.458" starttime="20201212 13:37:16.452"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:37:16.462" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-76.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:37:18.736" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:37:18.736" level="INFO">${output} = 2020-12-12 13:37:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-12 13:37:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
20...</msg>
<status status="PASS" endtime="20201212 13:37:18.736" starttime="20201212 13:37:16.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:37:18.737" level="INFO">2020-12-12 13:37:18 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-12 13:37:18 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-12 13:37:18 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780238577, maxDate=1608385038577, sequenceNumber=4, masterKeyId=2))
2020-12-12 13:37:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 93 89 ae b9 e5 2e 38 93 91 e0 d9 e7 2e 40 04 48 01 5a 0d 31 38 36 32 34 37 32 37 37 35 37 30 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-12 13:37:18 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780238577, maxDate=1608385038577, sequenceNumber=4, masterKeyId=2)
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-76.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</msg>
<status status="PASS" endtime="20201212 13:37:18.738" starttime="20201212 13:37:18.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:37:18.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201212 13:37:18.738" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201212 13:37:18.738" starttime="20201212 13:37:18.738"></status>
</kw>
<status status="FAIL" endtime="20201212 13:37:18.739" starttime="20201212 13:37:16.459"></status>
</kw>
<msg timestamp="20201212 13:37:18.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201212 13:37:18.739" starttime="20201212 13:37:16.459"></status>
</kw>
<status status="FAIL" endtime="20201212 13:37:18.739" starttime="20201212 13:37:16.458"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201212 13:37:18.739" critical="yes" starttime="20201212 13:37:16.428">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201212 13:37:18.741" starttime="20201212 13:36:46.243"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:35:28.221" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:35:28.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:35:28.225" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:35:28.225" starttime="20201212 13:35:28.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:35:28.226" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:35:28.226" starttime="20201212 13:35:28.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:35:28.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:35:28.226" starttime="20201212 13:35:28.226"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:28.226" starttime="20201212 13:35:28.216"></status>
</kw>
<msg timestamp="20201212 13:35:28.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:35:28.227" starttime="20201212 13:35:28.215"></status>
</kw>
<msg timestamp="20201212 13:35:28.227" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:35:28.227" starttime="20201212 13:35:28.215"></status>
</kw>
<msg timestamp="20201212 13:35:28.227" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:35:28.227" starttime="20201212 13:35:28.215"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:35:28.231" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:35:28.231" starttime="20201212 13:35:28.231"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:35:28.231" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:35:28.232" starttime="20201212 13:35:28.231"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:28.232" starttime="20201212 13:35:28.229"></status>
</kw>
<msg timestamp="20201212 13:35:28.232" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:35:28.232" starttime="20201212 13:35:28.229"></status>
</kw>
<status status="PASS" endtime="20201212 13:35:28.232" starttime="20201212 13:35:28.228"></status>
</kw>
<msg timestamp="20201212 13:35:28.232" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:35:28.232" starttime="20201212 13:35:28.228"></status>
</kw>
<msg timestamp="20201212 13:35:28.232" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:35:28.232" starttime="20201212 13:35:28.227"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:35:28.235" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:36:02.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:36:02.466" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:35:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:35:30 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 13:36:02.466" starttime="20201212 13:35:28.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:36:02.467" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:35:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:35:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:35:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:35:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:35:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-56595D030B70-&gt;fb3a5878-dc91-4337-a4ec-46cf38c6a386
2020-12-12 13:35:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 13:35:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-12 13:35:31 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-12 13:35:32 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780132033, maxDate=1608384932033, sequenceNumber=1, masterKeyId=2))
2020-12-12 13:35:32 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 bd c7 a7 b9 e5 2e 38 bd cf d9 d9 e7 2e 40 01 48 01 5a 0d 31 38 36 32 34 37 32 37 37 35 37 30 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-12 13:35:32 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780132033, maxDate=1608384932033, sequenceNumber=1, masterKeyId=2)
2020-12-12 13:35:32 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:35:32 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:35:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607780011243_0001
2020-12-12 13:35:32 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780132033, maxDate=1608384932033, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 bd c7 a7 b9 e5 2e 38 bd cf d9 d9 e7 2e 40 01 48 01 5a 0d 31 38 36 32 34 37 32 37 37 35 37 30 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-12 13:35:33 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 13:35:33 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 13:35:33 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-12 13:35:34 INFO  YarnClientImpl:329 - Submitted application application_1607780011243_0001
2020-12-12 13:35:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607780011243_0001/
2020-12-12 13:35:34 INFO  Job:1619 - Running job: job_1607780011243_0001
2020-12-12 13:35:44 INFO  Job:1640 - Job job_1607780011243_0001 running in uber mode : false
2020-12-12 13:35:44 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:35:54 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:35:56 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:36:00 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:36:01 INFO  Job:1658 - Job job_1607780011243_0001 completed successfully
2020-12-12 13:36:01 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065981
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42218
		Total time spent by all reduces in occupied slots (ms)=7140
		Total time spent by all map tasks (ms)=21109
		Total time spent by all reduce tasks (ms)=3570
		Total vcore-milliseconds taken by all map tasks=21109
		Total vcore-milliseconds taken by all reduce tasks=3570
		Total megabyte-milliseconds taken by all map tasks=43231232
		Total megabyte-milliseconds taken by all reduce tasks=7311360
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1029
		CPU time spent (ms)=6670
		Physical memory (bytes) snapshot=1421721600
		Virtual memory (bytes) snapshot=14049411072
		Total committed heap usage (bytes)=1210580992
		Peak Map Physical memory (bytes)=392421376
		Peak Map Virtual memory (bytes)=3508699136
		Peak Reduce Physical memory (bytes)=305901568
		Peak Reduce Virtual memory (bytes)=3526893568
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.514 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 13:36:02.467" starttime="20201212 13:36:02.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:36:02.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:36:02.468" starttime="20201212 13:36:02.467"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:02.468" starttime="20201212 13:35:28.233"></status>
</kw>
<msg timestamp="20201212 13:36:02.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:36:02.468" starttime="20201212 13:35:28.233"></status>
</kw>
<msg timestamp="20201212 13:36:02.469" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:35:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:35:30 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 13:36:02.469" starttime="20201212 13:35:28.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:36:02.469" starttime="20201212 13:36:02.469"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:36:02.469" critical="yes" starttime="20201212 13:35:28.214"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:36:02.474" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:36:02.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:36:02.481" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:36:02.481" starttime="20201212 13:36:02.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:36:02.481" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:36:02.481" starttime="20201212 13:36:02.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:36:02.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:36:02.482" starttime="20201212 13:36:02.482"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:02.482" starttime="20201212 13:36:02.472"></status>
</kw>
<msg timestamp="20201212 13:36:02.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:36:02.482" starttime="20201212 13:36:02.472"></status>
</kw>
<msg timestamp="20201212 13:36:02.483" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:36:02.483" starttime="20201212 13:36:02.471"></status>
</kw>
<msg timestamp="20201212 13:36:02.483" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:36:02.483" starttime="20201212 13:36:02.471"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:36:02.483" level="INFO">${random} = 76</msg>
<status status="PASS" endtime="20201212 13:36:02.483" starttime="20201212 13:36:02.483"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:36:02.487" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:36:02.487" starttime="20201212 13:36:02.486"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:36:02.487" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:36:02.487" starttime="20201212 13:36:02.487"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:02.488" starttime="20201212 13:36:02.486"></status>
</kw>
<msg timestamp="20201212 13:36:02.488" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:36:02.488" starttime="20201212 13:36:02.485"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:02.488" starttime="20201212 13:36:02.485"></status>
</kw>
<msg timestamp="20201212 13:36:02.488" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:36:02.488" starttime="20201212 13:36:02.484"></status>
</kw>
<msg timestamp="20201212 13:36:02.488" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:36:02.488" starttime="20201212 13:36:02.484"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:36:02.491" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:36:02.491" starttime="20201212 13:36:02.491"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:36:02.492" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:36:02.492" starttime="20201212 13:36:02.491"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:02.492" starttime="20201212 13:36:02.490"></status>
</kw>
<msg timestamp="20201212 13:36:02.492" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:36:02.492" starttime="20201212 13:36:02.490"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:02.492" starttime="20201212 13:36:02.489"></status>
</kw>
<msg timestamp="20201212 13:36:02.492" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 13:36:02.492" starttime="20201212 13:36:02.489"></status>
</kw>
<msg timestamp="20201212 13:36:02.493" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 13:36:02.493" starttime="20201212 13:36:02.488"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:36:02.495" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:36:02.495" starttime="20201212 13:36:02.495"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:36:02.496" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:36:02.496" starttime="20201212 13:36:02.496"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:02.496" starttime="20201212 13:36:02.495"></status>
</kw>
<msg timestamp="20201212 13:36:02.496" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:36:02.496" starttime="20201212 13:36:02.494"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:02.496" starttime="20201212 13:36:02.494"></status>
</kw>
<msg timestamp="20201212 13:36:02.497" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-76.txt</msg>
<status status="PASS" endtime="20201212 13:36:02.497" starttime="20201212 13:36:02.493"></status>
</kw>
<msg timestamp="20201212 13:36:02.497" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-76.txt</msg>
<status status="PASS" endtime="20201212 13:36:02.497" starttime="20201212 13:36:02.493"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:36:02.500" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-76.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:36:31.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:36:31.104" level="INFO">${output} = 2020-12-12 13:36:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-12 13:36:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
20...</msg>
<status status="PASS" endtime="20201212 13:36:31.105" starttime="20201212 13:36:02.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:36:31.106" level="INFO">2020-12-12 13:36:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-12 13:36:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-12 13:36:04 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780164663, maxDate=1608384964663, sequenceNumber=2, masterKeyId=2))
2020-12-12 13:36:04 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 db c7 a9 b9 e5 2e 38 db cf db d9 e7 2e 40 02 48 01 5a 0d 31 38 36 32 34 37 32 37 37 35 37 30 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-12 13:36:04 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780164663, maxDate=1608384964663, sequenceNumber=2, masterKeyId=2)
2020-12-12 13:36:04 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:36:05 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:36:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:36:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:36:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:36:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B7D7ACDA8E91-&gt;fb3a5878-dc91-4337-a4ec-46cf38c6a386
2020-12-12 13:36:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 13:36:06 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:36:06 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:36:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607780011243_0002
2020-12-12 13:36:06 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607780164663, maxDate=1608384964663, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 db c7 a9 b9 e5 2e 38 db cf db d9 e7 2e 40 02 48 01 5a 0d 31 38 36 32 34 37 32 37 37 35 37 30 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-12 13:36:06 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 13:36:06 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 13:36:06 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-12 13:36:07 INFO  YarnClientImpl:329 - Submitted application application_1607780011243_0002
2020-12-12 13:36:07 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607780011243_0002/
2020-12-12 13:36:07 INFO  Job:1619 - Running job: job_1607780011243_0002
2020-12-12 13:36:14 INFO  Job:1640 - Job job_1607780011243_0002 running in uber mode : false
2020-12-12 13:36:14 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:36:23 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:36:25 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 13:36:26 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:36:29 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:36:30 INFO  Job:1658 - Job job_1607780011243_0002 completed successfully
2020-12-12 13:36:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38842
		Total time spent by all reduces in occupied slots (ms)=6584
		Total time spent by all map tasks (ms)=19421
		Total time spent by all reduce tasks (ms)=3292
		Total vcore-milliseconds taken by all map tasks=19421
		Total vcore-milliseconds taken by all reduce tasks=3292
		Total megabyte-milliseconds taken by all map tasks=39774208
		Total megabyte-milliseconds taken by all reduce tasks=6742016
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=987
		CPU time spent (ms)=6510
		Physical memory (bytes) snapshot=1426771968
		Virtual memory (bytes) snapshot=14002282496
		Total committed heap usage (bytes)=1290797056
		Peak Map Physical memory (bytes)=396193792
		Peak Map Virtual memory (bytes)=3507777536
		Peak Reduce Physical memory (bytes)=273108992
		Peak Reduce Virtual memory (bytes)=3510325248
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 13:36:31.106" starttime="20201212 13:36:31.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:36:31.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:36:31.107" starttime="20201212 13:36:31.106"></status>
</kw>
<status status="PASS" endtime="20201212 13:36:31.107" starttime="20201212 13:36:02.498"></status>
</kw>
<msg timestamp="20201212 13:36:31.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:36:31.107" starttime="20201212 13:36:02.498"></status>
</kw>
<msg timestamp="20201212 13:36:31.107" level="INFO">${output} = 2020-12-12 13:36:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-12 13:36:04 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
20...</msg>
<status status="PASS" endtime="20201212 13:36:31.107" starttime="20201212 13:36:02.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 13:36:31.108" starttime="20201212 13:36:31.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:36:31.108" starttime="20201212 13:36:31.108"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:36:31.108" critical="yes" starttime="20201212 13:36:02.470"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 13:36:31.110" starttime="20201212 13:35:28.169"></status>
</suite>
<status status="FAIL" elapsedtime="144437" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="9">Critical Tests</stat>
<stat fail="1" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozonesecure-mr" pass="9">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="1" id="s1-s6" name="mapreduce-ofs" pass="1">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
