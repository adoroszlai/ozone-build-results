<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201212 13:20:38.577" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:16.217" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:18.345" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:09:18.345" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:09:18.345" starttime="20201212 13:09:16.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:18.346" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:09:18.346" starttime="20201212 13:09:18.346"></status>
</kw>
<msg timestamp="20201212 13:09:18.347" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:09:18.347" starttime="20201212 13:09:16.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:18.352" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:20.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:20.283" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:09:20.283" starttime="20201212 13:09:18.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:20.284" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:09:20.284" starttime="20201212 13:09:20.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:20.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:20.286" starttime="20201212 13:09:20.284"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:20.286" starttime="20201212 13:09:18.348"></status>
</kw>
<msg timestamp="20201212 13:09:20.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:20.286" starttime="20201212 13:09:18.348"></status>
</kw>
<msg timestamp="20201212 13:09:20.286" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201212 13:09:20.286" starttime="20201212 13:09:18.348"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201212 13:09:20.287" starttime="20201212 13:09:20.286"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:20.287" starttime="20201212 13:09:18.347"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:20.287" starttime="20201212 13:09:18.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:20.292" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:22.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:22.210" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:09:22.210" starttime="20201212 13:09:20.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:22.211" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:09:22.211" starttime="20201212 13:09:22.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:22.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:22.212" starttime="20201212 13:09:22.211"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:22.212" starttime="20201212 13:09:20.290"></status>
</kw>
<msg timestamp="20201212 13:09:22.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:22.212" starttime="20201212 13:09:20.290"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:22.212" starttime="20201212 13:09:20.288"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:22.212" starttime="20201212 13:09:20.287"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:22.213" starttime="20201212 13:09:20.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 13:09:22.213" starttime="20201212 13:09:22.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:22.217" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:24.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:24.233" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:09:22.079Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 13:09:24.234" starttime="20201212 13:09:22.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:24.235" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:09:22.079Z",
  "modificationTime" : "2020-12-12T13:09:22.079Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 13:09:24.235" starttime="20201212 13:09:24.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:24.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:24.235" starttime="20201212 13:09:24.235"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:24.236" starttime="20201212 13:09:22.214"></status>
</kw>
<msg timestamp="20201212 13:09:24.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:24.236" starttime="20201212 13:09:22.214"></status>
</kw>
<msg timestamp="20201212 13:09:24.236" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:09:22.079Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 13:09:24.236" starttime="20201212 13:09:22.213"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 13:09:24.236" starttime="20201212 13:09:24.236"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:09:24.240" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:09:24.240" starttime="20201212 13:09:24.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:09:24.240" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:09:24.240" starttime="20201212 13:09:24.240"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:24.241" starttime="20201212 13:09:24.239"></status>
</kw>
<msg timestamp="20201212 13:09:24.241" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:09:24.241" starttime="20201212 13:09:24.239"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:24.241" starttime="20201212 13:09:24.238"></status>
</kw>
<msg timestamp="20201212 13:09:24.241" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 13:09:24.241" starttime="20201212 13:09:24.237"></status>
</kw>
<msg timestamp="20201212 13:09:24.241" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 13:09:24.241" starttime="20201212 13:09:24.237"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:24.245" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:26.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:26.072" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:09:26.072" starttime="20201212 13:09:24.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:26.073" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:09:26.073" starttime="20201212 13:09:26.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:26.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:26.074" starttime="20201212 13:09:26.073"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:26.074" starttime="20201212 13:09:24.242"></status>
</kw>
<msg timestamp="20201212 13:09:26.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:26.074" starttime="20201212 13:09:24.242"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:26.074" starttime="20201212 13:09:24.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:26.078" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:30.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:30.965" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:09:30.965" starttime="20201212 13:09:26.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:30.966" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:09:30.966" starttime="20201212 13:09:30.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:30.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:30.967" starttime="20201212 13:09:30.967"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:30.967" starttime="20201212 13:09:26.076"></status>
</kw>
<msg timestamp="20201212 13:09:30.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:30.967" starttime="20201212 13:09:26.075"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:30.968" starttime="20201212 13:09:26.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:30.972" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:34.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:34.347" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:09:34.347" starttime="20201212 13:09:30.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:34.348" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:09:34.348" starttime="20201212 13:09:34.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:34.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:34.348" starttime="20201212 13:09:34.348"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:34.348" starttime="20201212 13:09:30.969"></status>
</kw>
<msg timestamp="20201212 13:09:34.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:34.349" starttime="20201212 13:09:30.968"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:34.349" starttime="20201212 13:09:30.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:34.352" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:37.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:37.842" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:09:37.842" starttime="20201212 13:09:34.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:37.843" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:09:37.843" starttime="20201212 13:09:37.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:37.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:37.844" starttime="20201212 13:09:37.843"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:37.844" starttime="20201212 13:09:34.350"></status>
</kw>
<msg timestamp="20201212 13:09:37.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:37.844" starttime="20201212 13:09:34.349"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:37.844" starttime="20201212 13:09:34.349"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:09:37.845" critical="yes" starttime="20201212 13:09:16.211"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:09:37.849" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:09:37.849" starttime="20201212 13:09:37.848"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:09:37.850" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:09:37.850" starttime="20201212 13:09:37.849"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:37.850" starttime="20201212 13:09:37.848"></status>
</kw>
<msg timestamp="20201212 13:09:37.850" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:09:37.850" starttime="20201212 13:09:37.848"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:37.850" starttime="20201212 13:09:37.847"></status>
</kw>
<msg timestamp="20201212 13:09:37.850" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:09:37.850" starttime="20201212 13:09:37.847"></status>
</kw>
<msg timestamp="20201212 13:09:37.851" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:09:37.851" starttime="20201212 13:09:37.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:37.854" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:39.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:39.672" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:09:39.672" starttime="20201212 13:09:37.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:39.673" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:09:39.673" starttime="20201212 13:09:39.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:39.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:39.674" starttime="20201212 13:09:39.673"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:39.674" starttime="20201212 13:09:37.851"></status>
</kw>
<msg timestamp="20201212 13:09:39.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:39.674" starttime="20201212 13:09:37.851"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:39.674" starttime="20201212 13:09:37.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:39.678" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:41.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:41.490" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:09:41.490" starttime="20201212 13:09:39.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:41.491" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:09:41.491" starttime="20201212 13:09:41.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:41.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:41.492" starttime="20201212 13:09:41.491"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:41.492" starttime="20201212 13:09:39.675"></status>
</kw>
<msg timestamp="20201212 13:09:41.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:41.492" starttime="20201212 13:09:39.675"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:41.492" starttime="20201212 13:09:39.674"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:09:41.493" critical="yes" starttime="20201212 13:09:37.845"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201212 13:09:41.494" starttime="20201212 13:09:16.157"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:11:04.668" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:11:04.668" starttime="20201212 13:11:04.667"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:11:04.668" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:11:04.668" starttime="20201212 13:11:04.668"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:04.668" starttime="20201212 13:11:04.667"></status>
</kw>
<msg timestamp="20201212 13:11:04.668" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:11:04.668" starttime="20201212 13:11:04.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:11:04.669" starttime="20201212 13:11:04.669"></status>
</kw>
<msg timestamp="20201212 13:11:04.669" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:11:04.669" starttime="20201212 13:11:04.669"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:04.670" starttime="20201212 13:11:04.666"></status>
</kw>
<msg timestamp="20201212 13:11:04.670" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:11:04.670" starttime="20201212 13:11:04.665"></status>
</kw>
<msg timestamp="20201212 13:11:04.670" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:11:04.670" starttime="20201212 13:11:04.665"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:11:04.670" level="INFO">${random} = 44931</msg>
<status status="PASS" endtime="20201212 13:11:04.670" starttime="20201212 13:11:04.670"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:11:04.676" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-44931 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:11:07.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:11:07.503" level="INFO">${output} = 2020-12-12 13:11:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:11:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 ...</msg>
<status status="PASS" endtime="20201212 13:11:07.503" starttime="20201212 13:11:04.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:11:07.504" level="INFO">2020-12-12 13:11:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:11:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 13:11:06 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 13:11:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:11:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1B3BC582C83C-&gt;b111814e-655a-4027-8da6-fe4f0e84fbab
2020-12-12 13:11:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 13:11:07.504" starttime="20201212 13:11:07.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:11:07.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:11:07.505" starttime="20201212 13:11:07.505"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:07.505" starttime="20201212 13:11:04.671"></status>
</kw>
<msg timestamp="20201212 13:11:07.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:11:07.506" starttime="20201212 13:11:04.671"></status>
</kw>
<msg timestamp="20201212 13:11:07.506" level="INFO">${result} = 2020-12-12 13:11:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:11:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 ...</msg>
<status status="PASS" endtime="20201212 13:11:07.506" starttime="20201212 13:11:04.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:11:07.510" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:11:09.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:11:09.010" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 13:11 ofs://om/volume1/bucket1/ozone-44931
-rw-...</msg>
<status status="PASS" endtime="20201212 13:11:09.010" starttime="20201212 13:11:07.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:11:09.011" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 13:11 ofs://om/volume1/bucket1/ozone-44931
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 13:09 ofs://om/volume1/bucket1/ozone-99492
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:10 ofs://om/volume1/bucket1/wordcount-39.txt</msg>
<status status="PASS" endtime="20201212 13:11:09.011" starttime="20201212 13:11:09.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:11:09.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:11:09.012" starttime="20201212 13:11:09.011"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:09.012" starttime="20201212 13:11:07.508"></status>
</kw>
<msg timestamp="20201212 13:11:09.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:11:09.012" starttime="20201212 13:11:07.508"></status>
</kw>
<msg timestamp="20201212 13:11:09.012" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 13:11 ofs://om/volume1/bucket1/ozone-44931
-rw-...</msg>
<status status="PASS" endtime="20201212 13:11:09.012" starttime="20201212 13:11:07.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:11:09.013" starttime="20201212 13:11:09.013"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:11:09.013" critical="yes" starttime="20201212 13:11:04.664"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 13:11:09.014" starttime="20201212 13:11:04.620"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:09:45.965" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:09:45.965" starttime="20201212 13:09:45.965"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:09:45.966" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:09:45.966" starttime="20201212 13:09:45.965"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:45.966" starttime="20201212 13:09:45.964"></status>
</kw>
<msg timestamp="20201212 13:09:45.966" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:09:45.966" starttime="20201212 13:09:45.964"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:45.966" starttime="20201212 13:09:45.963"></status>
</kw>
<msg timestamp="20201212 13:09:45.966" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:09:45.966" starttime="20201212 13:09:45.963"></status>
</kw>
<msg timestamp="20201212 13:09:45.967" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:09:45.967" starttime="20201212 13:09:45.962"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:09:45.967" level="INFO">${random} = 99492</msg>
<status status="PASS" endtime="20201212 13:09:45.967" starttime="20201212 13:09:45.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:45.973" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-99492 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:49.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:49.104" level="INFO">${output} = 2020-12-12 13:09:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:09:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 ...</msg>
<status status="PASS" endtime="20201212 13:09:49.104" starttime="20201212 13:09:45.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:49.105" level="INFO">2020-12-12 13:09:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:09:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 13:09:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 13:09:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:09:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-34784FE8BF56-&gt;b111814e-655a-4027-8da6-fe4f0e84fbab
2020-12-12 13:09:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 13:09:49.105" starttime="20201212 13:09:49.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:49.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:49.106" starttime="20201212 13:09:49.105"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:49.106" starttime="20201212 13:09:45.968"></status>
</kw>
<msg timestamp="20201212 13:09:49.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:49.106" starttime="20201212 13:09:45.968"></status>
</kw>
<msg timestamp="20201212 13:09:49.106" level="INFO">${result} = 2020-12-12 13:09:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:09:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 ...</msg>
<status status="PASS" endtime="20201212 13:09:49.106" starttime="20201212 13:09:45.967"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:49.112" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:50.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:50.542" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 13:09 o3fs://bucket1.volume1.om/ozone-99492
dr...</msg>
<status status="PASS" endtime="20201212 13:09:50.542" starttime="20201212 13:09:49.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:50.543" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 13:09 o3fs://bucket1.volume1.om/ozone-99492
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:09:50.543" starttime="20201212 13:09:50.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:50.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:50.544" starttime="20201212 13:09:50.543"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:50.544" starttime="20201212 13:09:49.108"></status>
</kw>
<msg timestamp="20201212 13:09:50.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:50.544" starttime="20201212 13:09:49.107"></status>
</kw>
<msg timestamp="20201212 13:09:50.544" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 13:09 o3fs://bucket1.volume1.om/ozone-99492
dr...</msg>
<status status="PASS" endtime="20201212 13:09:50.544" starttime="20201212 13:09:49.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:09:50.545" starttime="20201212 13:09:50.544"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:09:50.545" critical="yes" starttime="20201212 13:09:45.961"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 13:09:50.546" starttime="20201212 13:09:45.917"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:11:13.061" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:11:13.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:11:13.064" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:11:13.064" starttime="20201212 13:11:13.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:11:13.065" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:11:13.065" starttime="20201212 13:11:13.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:11:13.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:11:13.066" starttime="20201212 13:11:13.065"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:13.066" starttime="20201212 13:11:13.056"></status>
</kw>
<msg timestamp="20201212 13:11:13.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:11:13.066" starttime="20201212 13:11:13.056"></status>
</kw>
<msg timestamp="20201212 13:11:13.067" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:11:13.067" starttime="20201212 13:11:13.055"></status>
</kw>
<msg timestamp="20201212 13:11:13.067" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:11:13.067" starttime="20201212 13:11:13.055"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:11:13.071" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:11:13.071" starttime="20201212 13:11:13.071"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:11:13.071" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:11:13.071" starttime="20201212 13:11:13.071"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:13.072" starttime="20201212 13:11:13.069"></status>
</kw>
<msg timestamp="20201212 13:11:13.072" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:11:13.072" starttime="20201212 13:11:13.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:11:13.073" starttime="20201212 13:11:13.072"></status>
</kw>
<msg timestamp="20201212 13:11:13.073" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:11:13.073" starttime="20201212 13:11:13.072"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:13.073" starttime="20201212 13:11:13.068"></status>
</kw>
<msg timestamp="20201212 13:11:13.073" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:11:13.073" starttime="20201212 13:11:13.068"></status>
</kw>
<msg timestamp="20201212 13:11:13.073" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:11:13.073" starttime="20201212 13:11:13.067"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:11:13.078" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:11:42.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:11:42.427" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:11:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:11:14 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201212 13:11:42.427" starttime="20201212 13:11:13.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:11:42.428" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:11:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:11:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 13:11:14 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 13:11:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:11:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-41D40CF7AD7B-&gt;b111814e-655a-4027-8da6-fe4f0e84fbab
2020-12-12 13:11:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 13:11:15 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-12 13:11:16 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:11:16 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-12 13:11:16 INFO  JobSubmitter:198 - number of splits:3
2020-12-12 13:11:16 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607778525223_0003
2020-12-12 13:11:16 INFO  YarnClientImpl:273 - Submitted application application_1607778525223_0003
2020-12-12 13:11:16 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607778525223_0003/
2020-12-12 13:11:16 INFO  Job:1339 - Running job: job_1607778525223_0003
2020-12-12 13:11:23 INFO  Job:1360 - Job job_1607778525223_0003 running in uber mode : false
2020-12-12 13:11:23 INFO  Job:1367 -  map 0% reduce 0%
2020-12-12 13:11:29 INFO  Job:1367 -  map 33% reduce 0%
2020-12-12 13:11:33 INFO  Job:1367 -  map 67% reduce 0%
2020-12-12 13:11:37 INFO  Job:1367 -  map 100% reduce 0%
2020-12-12 13:11:41 INFO  Job:1367 -  map 100% reduce 100%
2020-12-12 13:11:41 INFO  Job:1378 - Job job_1607778525223_0003 completed successfully
2020-12-12 13:11:41 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610697
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33360
		Total time spent by all reduces in occupied slots (ms)=11992
		Total time spent by all map tasks (ms)=8340
		Total time spent by all reduce tasks (ms)=2998
		Total vcore-milliseconds taken by all map tasks=8340
		Total vcore-milliseconds taken by all reduce tasks=2998
		Total megabyte-milliseconds taken by all map tasks=34160640
		Total megabyte-milliseconds taken by all reduce tasks=12279808
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=531
		CPU time spent (ms)=6120
		Physical memory (bytes) snapshot=1161162752
		Virtual memory (bytes) snapshot=15786672128
		Total committed heap usage (bytes)=1018691584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 26.257 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 13:11:42.428" starttime="20201212 13:11:42.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:11:42.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:11:42.429" starttime="20201212 13:11:42.428"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.429" starttime="20201212 13:11:13.074"></status>
</kw>
<msg timestamp="20201212 13:11:42.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:11:42.429" starttime="20201212 13:11:13.074"></status>
</kw>
<msg timestamp="20201212 13:11:42.429" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:11:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:11:14 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201212 13:11:42.430" starttime="20201212 13:11:13.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:11:42.430" starttime="20201212 13:11:42.430"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:11:42.430" critical="yes" starttime="20201212 13:11:13.054"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:11:42.435" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:11:42.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:11:42.441" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:11:42.441" starttime="20201212 13:11:42.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:11:42.442" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:11:42.442" starttime="20201212 13:11:42.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:11:42.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:11:42.442" starttime="20201212 13:11:42.442"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.443" starttime="20201212 13:11:42.433"></status>
</kw>
<msg timestamp="20201212 13:11:42.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:11:42.443" starttime="20201212 13:11:42.433"></status>
</kw>
<msg timestamp="20201212 13:11:42.443" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:11:42.443" starttime="20201212 13:11:42.432"></status>
</kw>
<msg timestamp="20201212 13:11:42.443" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:11:42.443" starttime="20201212 13:11:42.432"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:11:42.444" level="INFO">${random} = 62</msg>
<status status="PASS" endtime="20201212 13:11:42.444" starttime="20201212 13:11:42.443"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:11:42.447" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:11:42.447" starttime="20201212 13:11:42.447"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:11:42.448" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:11:42.448" starttime="20201212 13:11:42.447"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.448" starttime="20201212 13:11:42.446"></status>
</kw>
<msg timestamp="20201212 13:11:42.448" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:11:42.448" starttime="20201212 13:11:42.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:11:42.449" starttime="20201212 13:11:42.448"></status>
</kw>
<msg timestamp="20201212 13:11:42.449" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:11:42.449" starttime="20201212 13:11:42.448"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.449" starttime="20201212 13:11:42.445"></status>
</kw>
<msg timestamp="20201212 13:11:42.449" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:11:42.449" starttime="20201212 13:11:42.445"></status>
</kw>
<msg timestamp="20201212 13:11:42.449" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:11:42.449" starttime="20201212 13:11:42.444"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:11:42.452" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:11:42.452" starttime="20201212 13:11:42.452"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:11:42.453" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:11:42.453" starttime="20201212 13:11:42.453"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.453" starttime="20201212 13:11:42.452"></status>
</kw>
<msg timestamp="20201212 13:11:42.453" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:11:42.453" starttime="20201212 13:11:42.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:11:42.455" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201212 13:11:42.455" starttime="20201212 13:11:42.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:11:42.455" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201212 13:11:42.455" starttime="20201212 13:11:42.455"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.455" starttime="20201212 13:11:42.454"></status>
</kw>
<msg timestamp="20201212 13:11:42.455" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201212 13:11:42.456" starttime="20201212 13:11:42.453"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.456" starttime="20201212 13:11:42.451"></status>
</kw>
<msg timestamp="20201212 13:11:42.456" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 13:11:42.456" starttime="20201212 13:11:42.450"></status>
</kw>
<msg timestamp="20201212 13:11:42.456" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 13:11:42.456" starttime="20201212 13:11:42.450"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:11:42.459" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:11:42.459" starttime="20201212 13:11:42.459"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:11:42.459" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:11:42.459" starttime="20201212 13:11:42.459"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.460" starttime="20201212 13:11:42.458"></status>
</kw>
<msg timestamp="20201212 13:11:42.460" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:11:42.460" starttime="20201212 13:11:42.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:11:42.461" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201212 13:11:42.461" starttime="20201212 13:11:42.461"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:11:42.462" level="INFO">${result} = /wordcount-62.txt</msg>
<status status="PASS" endtime="20201212 13:11:42.462" starttime="20201212 13:11:42.461"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.462" starttime="20201212 13:11:42.460"></status>
</kw>
<msg timestamp="20201212 13:11:42.462" level="INFO">${path_with_leading} = /wordcount-62.txt</msg>
<status status="PASS" endtime="20201212 13:11:42.462" starttime="20201212 13:11:42.460"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:42.462" starttime="20201212 13:11:42.457"></status>
</kw>
<msg timestamp="20201212 13:11:42.462" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-62.txt</msg>
<status status="PASS" endtime="20201212 13:11:42.462" starttime="20201212 13:11:42.457"></status>
</kw>
<msg timestamp="20201212 13:11:42.462" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-62.txt</msg>
<status status="PASS" endtime="20201212 13:11:42.462" starttime="20201212 13:11:42.456"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:11:42.466" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-62.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:12:13.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:12:13.352" level="INFO">${output} = 2020-12-12 13:11:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-12 13:11:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201212 13:12:13.352" starttime="20201212 13:11:42.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:12:13.353" level="INFO">2020-12-12 13:11:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-12 13:11:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:11:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:11:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 13:11:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 13:11:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:11:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DC6169039A24-&gt;b111814e-655a-4027-8da6-fe4f0e84fbab
2020-12-12 13:11:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 13:11:45 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-12 13:11:45 INFO  JobSubmitter:198 - number of splits:3
2020-12-12 13:11:45 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607778525223_0004
2020-12-12 13:11:45 INFO  YarnClientImpl:273 - Submitted application application_1607778525223_0004
2020-12-12 13:11:45 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607778525223_0004/
2020-12-12 13:11:45 INFO  Job:1339 - Running job: job_1607778525223_0004
2020-12-12 13:11:53 INFO  Job:1360 - Job job_1607778525223_0004 running in uber mode : false
2020-12-12 13:11:53 INFO  Job:1367 -  map 0% reduce 0%
2020-12-12 13:11:59 INFO  Job:1367 -  map 33% reduce 0%
2020-12-12 13:12:04 INFO  Job:1367 -  map 67% reduce 0%
2020-12-12 13:12:08 INFO  Job:1367 -  map 100% reduce 0%
2020-12-12 13:12:11 INFO  Job:1367 -  map 100% reduce 100%
2020-12-12 13:12:12 INFO  Job:1378 - Job job_1607778525223_0004 completed successfully
2020-12-12 13:12:12 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673451
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34416
		Total time spent by all reduces in occupied slots (ms)=12492
		Total time spent by all map tasks (ms)=8604
		Total time spent by all reduce tasks (ms)=3123
		Total vcore-milliseconds taken by all map tasks=8604
		Total vcore-milliseconds taken by all reduce tasks=3123
		Total megabyte-milliseconds taken by all map tasks=35241984
		Total megabyte-milliseconds taken by all reduce tasks=12791808
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=505
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1161547776
		Virtual memory (bytes) snapshot=15791140864
		Total committed heap usage (bytes)=1051197440
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 13:12:13.353" starttime="20201212 13:12:13.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:12:13.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:12:13.354" starttime="20201212 13:12:13.353"></status>
</kw>
<status status="PASS" endtime="20201212 13:12:13.354" starttime="20201212 13:11:42.463"></status>
</kw>
<msg timestamp="20201212 13:12:13.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:12:13.354" starttime="20201212 13:11:42.463"></status>
</kw>
<msg timestamp="20201212 13:12:13.355" level="INFO">${output} = 2020-12-12 13:11:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-12 13:11:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201212 13:12:13.355" starttime="20201212 13:11:42.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 13:12:13.355" starttime="20201212 13:12:13.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:12:13.356" starttime="20201212 13:12:13.355"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:12:13.356" critical="yes" starttime="20201212 13:11:42.431"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 13:12:13.357" starttime="20201212 13:11:13.011"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:54.670" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:09:54.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:09:54.673" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:09:54.673" starttime="20201212 13:09:54.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:09:54.674" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:09:54.674" starttime="20201212 13:09:54.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:09:54.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:09:54.675" starttime="20201212 13:09:54.674"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:54.675" starttime="20201212 13:09:54.664"></status>
</kw>
<msg timestamp="20201212 13:09:54.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:09:54.675" starttime="20201212 13:09:54.664"></status>
</kw>
<msg timestamp="20201212 13:09:54.676" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:09:54.676" starttime="20201212 13:09:54.664"></status>
</kw>
<msg timestamp="20201212 13:09:54.676" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:09:54.676" starttime="20201212 13:09:54.663"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:09:54.680" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:09:54.680" starttime="20201212 13:09:54.679"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:09:54.680" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:09:54.680" starttime="20201212 13:09:54.680"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:54.680" starttime="20201212 13:09:54.678"></status>
</kw>
<msg timestamp="20201212 13:09:54.681" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:09:54.681" starttime="20201212 13:09:54.678"></status>
</kw>
<status status="PASS" endtime="20201212 13:09:54.681" starttime="20201212 13:09:54.677"></status>
</kw>
<msg timestamp="20201212 13:09:54.681" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:09:54.681" starttime="20201212 13:09:54.677"></status>
</kw>
<msg timestamp="20201212 13:09:54.681" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:09:54.681" starttime="20201212 13:09:54.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:09:54.684" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:10:29.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:10:29.289" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:09:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:09:56 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201212 13:10:29.289" starttime="20201212 13:09:54.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:10:29.290" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:09:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:09:56 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 13:09:56 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 13:09:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:09:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-890237C95028-&gt;b111814e-655a-4027-8da6-fe4f0e84fbab
2020-12-12 13:09:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 13:09:59 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-12 13:10:00 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-12 13:10:00 INFO  JobSubmitter:198 - number of splits:3
2020-12-12 13:10:00 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607778525223_0001
2020-12-12 13:10:01 INFO  YarnClientImpl:273 - Submitted application application_1607778525223_0001
2020-12-12 13:10:01 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607778525223_0001/
2020-12-12 13:10:01 INFO  Job:1339 - Running job: job_1607778525223_0001
2020-12-12 13:10:09 INFO  Job:1360 - Job job_1607778525223_0001 running in uber mode : false
2020-12-12 13:10:09 INFO  Job:1367 -  map 0% reduce 0%
2020-12-12 13:10:15 INFO  Job:1367 -  map 33% reduce 0%
2020-12-12 13:10:20 INFO  Job:1367 -  map 67% reduce 0%
2020-12-12 13:10:24 INFO  Job:1367 -  map 100% reduce 0%
2020-12-12 13:10:27 INFO  Job:1367 -  map 100% reduce 100%
2020-12-12 13:10:28 INFO  Job:1378 - Job job_1607778525223_0001 completed successfully
2020-12-12 13:10:28 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610909
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34384
		Total time spent by all reduces in occupied slots (ms)=12708
		Total time spent by all map tasks (ms)=8596
		Total time spent by all reduce tasks (ms)=3177
		Total vcore-milliseconds taken by all map tasks=8596
		Total vcore-milliseconds taken by all reduce tasks=3177
		Total megabyte-milliseconds taken by all map tasks=35209216
		Total megabyte-milliseconds taken by all reduce tasks=13012992
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=6140
		Physical memory (bytes) snapshot=1168506880
		Virtual memory (bytes) snapshot=15794524160
		Total committed heap usage (bytes)=1016070144
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.904 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 13:10:29.290" starttime="20201212 13:10:29.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:10:29.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:10:29.291" starttime="20201212 13:10:29.290"></status>
</kw>
<status status="PASS" endtime="20201212 13:10:29.291" starttime="20201212 13:09:54.682"></status>
</kw>
<msg timestamp="20201212 13:10:29.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:10:29.291" starttime="20201212 13:09:54.682"></status>
</kw>
<msg timestamp="20201212 13:10:29.291" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:09:56 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:09:56 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201212 13:10:29.292" starttime="20201212 13:09:54.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:10:29.292" starttime="20201212 13:10:29.292"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:10:29.292" critical="yes" starttime="20201212 13:09:54.663"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:10:29.297" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:10:29.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:10:29.302" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:10:29.302" starttime="20201212 13:10:29.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:10:29.303" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:10:29.303" starttime="20201212 13:10:29.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:10:29.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:10:29.303" starttime="20201212 13:10:29.303"></status>
</kw>
<status status="PASS" endtime="20201212 13:10:29.304" starttime="20201212 13:10:29.295"></status>
</kw>
<msg timestamp="20201212 13:10:29.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:10:29.304" starttime="20201212 13:10:29.294"></status>
</kw>
<msg timestamp="20201212 13:10:29.304" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:10:29.304" starttime="20201212 13:10:29.294"></status>
</kw>
<msg timestamp="20201212 13:10:29.304" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 13:10:29.304" starttime="20201212 13:10:29.294"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:10:29.305" level="INFO">${random} = 39</msg>
<status status="PASS" endtime="20201212 13:10:29.305" starttime="20201212 13:10:29.304"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:10:29.308" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:10:29.308" starttime="20201212 13:10:29.308"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:10:29.309" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:10:29.309" starttime="20201212 13:10:29.308"></status>
</kw>
<status status="PASS" endtime="20201212 13:10:29.309" starttime="20201212 13:10:29.307"></status>
</kw>
<msg timestamp="20201212 13:10:29.309" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:10:29.309" starttime="20201212 13:10:29.307"></status>
</kw>
<status status="PASS" endtime="20201212 13:10:29.309" starttime="20201212 13:10:29.306"></status>
</kw>
<msg timestamp="20201212 13:10:29.309" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:10:29.310" starttime="20201212 13:10:29.306"></status>
</kw>
<msg timestamp="20201212 13:10:29.310" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:10:29.310" starttime="20201212 13:10:29.305"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:10:29.313" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:10:29.313" starttime="20201212 13:10:29.312"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:10:29.313" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:10:29.313" starttime="20201212 13:10:29.313"></status>
</kw>
<status status="PASS" endtime="20201212 13:10:29.313" starttime="20201212 13:10:29.312"></status>
</kw>
<msg timestamp="20201212 13:10:29.313" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:10:29.313" starttime="20201212 13:10:29.311"></status>
</kw>
<status status="PASS" endtime="20201212 13:10:29.314" starttime="20201212 13:10:29.311"></status>
</kw>
<msg timestamp="20201212 13:10:29.314" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 13:10:29.314" starttime="20201212 13:10:29.310"></status>
</kw>
<msg timestamp="20201212 13:10:29.314" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 13:10:29.314" starttime="20201212 13:10:29.310"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:10:29.317" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:10:29.317" starttime="20201212 13:10:29.316"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:10:29.317" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:10:29.317" starttime="20201212 13:10:29.317"></status>
</kw>
<status status="PASS" endtime="20201212 13:10:29.317" starttime="20201212 13:10:29.316"></status>
</kw>
<msg timestamp="20201212 13:10:29.317" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:10:29.317" starttime="20201212 13:10:29.316"></status>
</kw>
<status status="PASS" endtime="20201212 13:10:29.318" starttime="20201212 13:10:29.315"></status>
</kw>
<msg timestamp="20201212 13:10:29.318" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-39.txt</msg>
<status status="PASS" endtime="20201212 13:10:29.318" starttime="20201212 13:10:29.315"></status>
</kw>
<msg timestamp="20201212 13:10:29.318" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-39.txt</msg>
<status status="PASS" endtime="20201212 13:10:29.318" starttime="20201212 13:10:29.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:10:29.321" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-39.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:11:00.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:11:00.453" level="INFO">${output} = 2020-12-12 13:10:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-12 13:10:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201212 13:11:00.453" starttime="20201212 13:10:29.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:11:00.454" level="INFO">2020-12-12 13:10:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-12 13:10:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:10:31 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:10:31 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 13:10:31 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 13:10:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:10:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EAFE863EAA95-&gt;b111814e-655a-4027-8da6-fe4f0e84fbab
2020-12-12 13:10:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 13:10:32 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-12 13:10:32 INFO  JobSubmitter:198 - number of splits:3
2020-12-12 13:10:32 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607778525223_0002
2020-12-12 13:10:32 INFO  YarnClientImpl:273 - Submitted application application_1607778525223_0002
2020-12-12 13:10:32 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607778525223_0002/
2020-12-12 13:10:32 INFO  Job:1339 - Running job: job_1607778525223_0002
2020-12-12 13:10:40 INFO  Job:1360 - Job job_1607778525223_0002 running in uber mode : false
2020-12-12 13:10:40 INFO  Job:1367 -  map 0% reduce 0%
2020-12-12 13:10:46 INFO  Job:1367 -  map 33% reduce 0%
2020-12-12 13:10:51 INFO  Job:1367 -  map 67% reduce 0%
2020-12-12 13:10:54 INFO  Job:1367 -  map 100% reduce 0%
2020-12-12 13:10:59 INFO  Job:1367 -  map 100% reduce 100%
2020-12-12 13:11:00 INFO  Job:1378 - Job job_1607778525223_0002 completed successfully
2020-12-12 13:11:00 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673535
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33628
		Total time spent by all reduces in occupied slots (ms)=12636
		Total time spent by all map tasks (ms)=8407
		Total time spent by all reduce tasks (ms)=3159
		Total vcore-milliseconds taken by all map tasks=8407
		Total vcore-milliseconds taken by all reduce tasks=3159
		Total megabyte-milliseconds taken by all map tasks=34435072
		Total megabyte-milliseconds taken by all reduce tasks=12939264
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=503
		CPU time spent (ms)=6170
		Physical memory (bytes) snapshot=1169362944
		Virtual memory (bytes) snapshot=15792906240
		Total committed heap usage (bytes)=1050148864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 13:11:00.454" starttime="20201212 13:11:00.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:11:00.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:11:00.455" starttime="20201212 13:11:00.454"></status>
</kw>
<status status="PASS" endtime="20201212 13:11:00.455" starttime="20201212 13:10:29.319"></status>
</kw>
<msg timestamp="20201212 13:11:00.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:11:00.455" starttime="20201212 13:10:29.319"></status>
</kw>
<msg timestamp="20201212 13:11:00.456" level="INFO">${output} = 2020-12-12 13:10:30 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.4:8032
2020-12-12 13:10:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201212 13:11:00.456" starttime="20201212 13:10:29.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 13:11:00.456" starttime="20201212 13:11:00.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:11:00.457" starttime="20201212 13:11:00.456"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:11:00.457" critical="yes" starttime="20201212 13:10:29.293"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 13:11:00.458" starttime="20201212 13:09:54.618"></status>
</suite>
<status status="PASS" elapsedtime="160546" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:17.081" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:19.020" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:13:19.020" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:13:19.020" starttime="20201212 13:13:17.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:19.021" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:13:19.021" starttime="20201212 13:13:19.020"></status>
</kw>
<msg timestamp="20201212 13:13:19.022" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:13:19.022" starttime="20201212 13:13:17.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:19.027" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:20.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:20.853" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:13:20.853" starttime="20201212 13:13:19.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:20.854" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:13:20.854" starttime="20201212 13:13:20.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:20.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:20.855" starttime="20201212 13:13:20.854"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:20.855" starttime="20201212 13:13:19.023"></status>
</kw>
<msg timestamp="20201212 13:13:20.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:20.855" starttime="20201212 13:13:19.023"></status>
</kw>
<msg timestamp="20201212 13:13:20.855" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201212 13:13:20.855" starttime="20201212 13:13:19.023"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201212 13:13:20.856" starttime="20201212 13:13:20.856"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:20.856" starttime="20201212 13:13:19.022"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:20.856" starttime="20201212 13:13:19.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:20.861" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:22.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:22.694" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:13:22.694" starttime="20201212 13:13:20.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:22.695" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:13:22.695" starttime="20201212 13:13:22.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:22.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:22.696" starttime="20201212 13:13:22.695"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:22.696" starttime="20201212 13:13:20.858"></status>
</kw>
<msg timestamp="20201212 13:13:22.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:22.696" starttime="20201212 13:13:20.857"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:22.696" starttime="20201212 13:13:20.857"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:22.697" starttime="20201212 13:13:20.857"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:22.697" starttime="20201212 13:13:20.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 13:13:22.697" starttime="20201212 13:13:22.697"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:22.700" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:24.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:24.516" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:13:22.574Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 13:13:24.516" starttime="20201212 13:13:22.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:24.517" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:13:22.574Z",
  "modificationTime" : "2020-12-12T13:13:22.574Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 13:13:24.517" starttime="20201212 13:13:24.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:24.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:24.518" starttime="20201212 13:13:24.517"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:24.518" starttime="20201212 13:13:22.698"></status>
</kw>
<msg timestamp="20201212 13:13:24.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:24.518" starttime="20201212 13:13:22.698"></status>
</kw>
<msg timestamp="20201212 13:13:24.518" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:13:22.574Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 13:13:24.518" starttime="20201212 13:13:22.697"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 13:13:24.519" starttime="20201212 13:13:24.518"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:13:24.522" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:13:24.522" starttime="20201212 13:13:24.522"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:13:24.523" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:13:24.523" starttime="20201212 13:13:24.522"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:24.523" starttime="20201212 13:13:24.521"></status>
</kw>
<msg timestamp="20201212 13:13:24.523" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:13:24.523" starttime="20201212 13:13:24.521"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:24.523" starttime="20201212 13:13:24.520"></status>
</kw>
<msg timestamp="20201212 13:13:24.523" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 13:13:24.523" starttime="20201212 13:13:24.519"></status>
</kw>
<msg timestamp="20201212 13:13:24.523" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 13:13:24.523" starttime="20201212 13:13:24.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:24.528" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:26.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:26.440" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:13:26.440" starttime="20201212 13:13:24.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:26.441" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:13:26.441" starttime="20201212 13:13:26.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:26.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:26.442" starttime="20201212 13:13:26.441"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:26.442" starttime="20201212 13:13:24.524"></status>
</kw>
<msg timestamp="20201212 13:13:26.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:26.442" starttime="20201212 13:13:24.524"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:26.443" starttime="20201212 13:13:24.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:26.447" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:31.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:31.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:13:31.095" starttime="20201212 13:13:26.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:31.096" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:13:31.096" starttime="20201212 13:13:31.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:31.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:31.097" starttime="20201212 13:13:31.096"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:31.098" starttime="20201212 13:13:26.444"></status>
</kw>
<msg timestamp="20201212 13:13:31.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:31.098" starttime="20201212 13:13:26.443"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:31.098" starttime="20201212 13:13:26.443"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:31.118" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:34.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:34.550" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:13:34.550" starttime="20201212 13:13:31.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:34.551" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:13:34.551" starttime="20201212 13:13:34.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:34.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:34.552" starttime="20201212 13:13:34.551"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:34.552" starttime="20201212 13:13:31.099"></status>
</kw>
<msg timestamp="20201212 13:13:34.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:34.552" starttime="20201212 13:13:31.099"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:34.553" starttime="20201212 13:13:31.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:34.556" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:37.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:37.991" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:13:37.991" starttime="20201212 13:13:34.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:37.992" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:13:37.992" starttime="20201212 13:13:37.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:37.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:37.993" starttime="20201212 13:13:37.992"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:37.993" starttime="20201212 13:13:34.554"></status>
</kw>
<msg timestamp="20201212 13:13:37.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:37.993" starttime="20201212 13:13:34.553"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:37.993" starttime="20201212 13:13:34.553"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:13:37.993" critical="yes" starttime="20201212 13:13:17.075"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:13:37.998" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:13:37.998" starttime="20201212 13:13:37.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:13:37.998" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:13:37.998" starttime="20201212 13:13:37.998"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:37.999" starttime="20201212 13:13:37.997"></status>
</kw>
<msg timestamp="20201212 13:13:37.999" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:13:37.999" starttime="20201212 13:13:37.997"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:37.999" starttime="20201212 13:13:37.996"></status>
</kw>
<msg timestamp="20201212 13:13:37.999" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:13:37.999" starttime="20201212 13:13:37.995"></status>
</kw>
<msg timestamp="20201212 13:13:37.999" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:13:37.999" starttime="20201212 13:13:37.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:38.002" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:39.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:39.795" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:13:39.795" starttime="20201212 13:13:38.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:39.796" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:13:39.796" starttime="20201212 13:13:39.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:39.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:39.797" starttime="20201212 13:13:39.796"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:39.797" starttime="20201212 13:13:38.000"></status>
</kw>
<msg timestamp="20201212 13:13:39.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:39.797" starttime="20201212 13:13:38.000"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:39.797" starttime="20201212 13:13:37.999"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:39.800" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:41.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:41.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:13:41.515" starttime="20201212 13:13:39.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:41.516" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:13:41.516" starttime="20201212 13:13:41.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:41.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:41.517" starttime="20201212 13:13:41.517"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:41.517" starttime="20201212 13:13:39.798"></status>
</kw>
<msg timestamp="20201212 13:13:41.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:41.518" starttime="20201212 13:13:39.798"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:41.518" starttime="20201212 13:13:39.797"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:13:41.518" critical="yes" starttime="20201212 13:13:37.994"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201212 13:13:41.519" starttime="20201212 13:13:17.029"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:15:16.505" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:15:16.505" starttime="20201212 13:15:16.505"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:15:16.505" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:15:16.505" starttime="20201212 13:15:16.505"></status>
</kw>
<status status="PASS" endtime="20201212 13:15:16.506" starttime="20201212 13:15:16.504"></status>
</kw>
<msg timestamp="20201212 13:15:16.506" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:15:16.506" starttime="20201212 13:15:16.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:15:16.507" starttime="20201212 13:15:16.506"></status>
</kw>
<msg timestamp="20201212 13:15:16.507" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:15:16.507" starttime="20201212 13:15:16.506"></status>
</kw>
<status status="PASS" endtime="20201212 13:15:16.507" starttime="20201212 13:15:16.503"></status>
</kw>
<msg timestamp="20201212 13:15:16.507" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:15:16.507" starttime="20201212 13:15:16.503"></status>
</kw>
<msg timestamp="20201212 13:15:16.507" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:15:16.507" starttime="20201212 13:15:16.502"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:15:16.508" level="INFO">${random} = 66374</msg>
<status status="PASS" endtime="20201212 13:15:16.508" starttime="20201212 13:15:16.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:15:16.514" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-66374 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:15:19.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:15:19.632" level="INFO">${output} = 2020-12-12 13:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:15:19.632" starttime="20201212 13:15:16.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:15:19.633" level="INFO">2020-12-12 13:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:18 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 13:15:18 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:15:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:15:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:15:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:15:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-918A63C35C57-&gt;b35d8823-d34a-41f1-9ef1-d55c8d513547
2020-12-12 13:15:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 13:15:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 13:15:19.633" starttime="20201212 13:15:19.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:15:19.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:15:19.634" starttime="20201212 13:15:19.633"></status>
</kw>
<status status="PASS" endtime="20201212 13:15:19.634" starttime="20201212 13:15:16.509"></status>
</kw>
<msg timestamp="20201212 13:15:19.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:15:19.634" starttime="20201212 13:15:16.508"></status>
</kw>
<msg timestamp="20201212 13:15:19.634" level="INFO">${result} = 2020-12-12 13:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:17 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:15:19.634" starttime="20201212 13:15:16.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:15:19.639" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:15:21.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:15:21.153" level="INFO">${output} = 2020-12-12 13:15:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:21 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:15:21.153" starttime="20201212 13:15:19.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:15:21.154" level="INFO">2020-12-12 13:15:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:21 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:13 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-12 13:15 ofs://om/volume1/bucket1/ozone-66374
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-12 13:13 ofs://om/volume1/bucket1/ozone-81999
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:13 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:14 ofs://om/volume1/bucket1/wordcount-32.txt
2020-12-12 13:15:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 13:15:21.155" starttime="20201212 13:15:21.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:15:21.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:15:21.155" starttime="20201212 13:15:21.155"></status>
</kw>
<status status="PASS" endtime="20201212 13:15:21.155" starttime="20201212 13:15:19.636"></status>
</kw>
<msg timestamp="20201212 13:15:21.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:15:21.156" starttime="20201212 13:15:19.636"></status>
</kw>
<msg timestamp="20201212 13:15:21.156" level="INFO">${result} = 2020-12-12 13:15:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:21 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:15:21.156" starttime="20201212 13:15:19.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:15:21.156" starttime="20201212 13:15:21.156"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:15:21.157" critical="yes" starttime="20201212 13:15:16.501"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 13:15:21.157" starttime="20201212 13:15:16.438"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:13:45.616" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:13:45.616" starttime="20201212 13:13:45.616"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:13:45.617" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:13:45.617" starttime="20201212 13:13:45.616"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:45.617" starttime="20201212 13:13:45.615"></status>
</kw>
<msg timestamp="20201212 13:13:45.617" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:13:45.617" starttime="20201212 13:13:45.615"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:45.617" starttime="20201212 13:13:45.614"></status>
</kw>
<msg timestamp="20201212 13:13:45.617" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:13:45.617" starttime="20201212 13:13:45.614"></status>
</kw>
<msg timestamp="20201212 13:13:45.618" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:13:45.618" starttime="20201212 13:13:45.613"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:13:45.618" level="INFO">${random} = 81999</msg>
<status status="PASS" endtime="20201212 13:13:45.618" starttime="20201212 13:13:45.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:45.623" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-81999 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:48.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:48.701" level="INFO">${output} = 2020-12-12 13:13:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:13:48.701" starttime="20201212 13:13:45.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:48.702" level="INFO">2020-12-12 13:13:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:47 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 13:13:47 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:13:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:13:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:13:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:13:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-669A14F99EA3-&gt;b35d8823-d34a-41f1-9ef1-d55c8d513547
2020-12-12 13:13:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 13:13:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 13:13:48.703" starttime="20201212 13:13:48.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:48.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:48.703" starttime="20201212 13:13:48.703"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:48.703" starttime="20201212 13:13:45.619"></status>
</kw>
<msg timestamp="20201212 13:13:48.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:48.704" starttime="20201212 13:13:45.619"></status>
</kw>
<msg timestamp="20201212 13:13:48.704" level="INFO">${result} = 2020-12-12 13:13:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:46 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:13:48.704" starttime="20201212 13:13:45.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:48.709" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:50.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:50.202" level="INFO">${output} = 2020-12-12 13:13:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:13:50.202" starttime="20201212 13:13:48.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:50.203" level="INFO">2020-12-12 13:13:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:50 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:13 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-12 13:13 o3fs://bucket1.volume1.om/ozone-81999
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:13 o3fs://bucket1.volume1.om/user
2020-12-12 13:13:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 13:13:50.203" starttime="20201212 13:13:50.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:50.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:50.203" starttime="20201212 13:13:50.203"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:50.204" starttime="20201212 13:13:48.706"></status>
</kw>
<msg timestamp="20201212 13:13:50.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:50.204" starttime="20201212 13:13:48.704"></status>
</kw>
<msg timestamp="20201212 13:13:50.204" level="INFO">${result} = 2020-12-12 13:13:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:49 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:50 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:13:50.204" starttime="20201212 13:13:48.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:13:50.205" starttime="20201212 13:13:50.204"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:13:50.205" critical="yes" starttime="20201212 13:13:45.612"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 13:13:50.206" starttime="20201212 13:13:45.567"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:15:25.352" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:15:25.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:15:25.356" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:15:25.356" starttime="20201212 13:15:25.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:15:25.356" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:15:25.357" starttime="20201212 13:15:25.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:15:25.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:15:25.357" starttime="20201212 13:15:25.357"></status>
</kw>
<status status="PASS" endtime="20201212 13:15:25.357" starttime="20201212 13:15:25.347"></status>
</kw>
<msg timestamp="20201212 13:15:25.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:15:25.357" starttime="20201212 13:15:25.347"></status>
</kw>
<msg timestamp="20201212 13:15:25.358" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:15:25.358" starttime="20201212 13:15:25.346"></status>
</kw>
<msg timestamp="20201212 13:15:25.358" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:15:25.358" starttime="20201212 13:15:25.346"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:15:25.362" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:15:25.362" starttime="20201212 13:15:25.362"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:15:25.363" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:15:25.363" starttime="20201212 13:15:25.362"></status>
</kw>
<status status="PASS" endtime="20201212 13:15:25.363" starttime="20201212 13:15:25.360"></status>
</kw>
<msg timestamp="20201212 13:15:25.363" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:15:25.363" starttime="20201212 13:15:25.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:15:25.364" starttime="20201212 13:15:25.363"></status>
</kw>
<msg timestamp="20201212 13:15:25.364" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:15:25.364" starttime="20201212 13:15:25.363"></status>
</kw>
<status status="PASS" endtime="20201212 13:15:25.364" starttime="20201212 13:15:25.359"></status>
</kw>
<msg timestamp="20201212 13:15:25.364" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:15:25.364" starttime="20201212 13:15:25.359"></status>
</kw>
<msg timestamp="20201212 13:15:25.364" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:15:25.364" starttime="20201212 13:15:25.358"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:15:25.368" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:16:00.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:16:00.460" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:15:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15...</msg>
<status status="PASS" endtime="20201212 13:16:00.460" starttime="20201212 13:15:25.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:16:00.461" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:15:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:27 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 13:15:27 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:15:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:15:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:15:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:15:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1BB2C1D7E7D7-&gt;b35d8823-d34a-41f1-9ef1-d55c8d513547
2020-12-12 13:15:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 13:15:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:28 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-12-12 13:15:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:28 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:15:28 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:28 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:15:31 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:15:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607778774643_0003
2020-12-12 13:15:31 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 13:15:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:31 INFO  Configuration:2752 - resource-types.xml not found
2020-12-12 13:15:31 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-12 13:15:31 INFO  YarnClientImpl:324 - Submitted application application_1607778774643_0003
2020-12-12 13:15:31 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607778774643_0003/
2020-12-12 13:15:31 INFO  Job:1619 - Running job: job_1607778774643_0003
2020-12-12 13:15:38 INFO  Job:1640 - Job job_1607778774643_0003 running in uber mode : false
2020-12-12 13:15:38 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:15:44 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:15:49 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 13:15:54 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:15:58 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:15:59 INFO  Job:1658 - Job job_1607778774643_0003 completed successfully
2020-12-12 13:15:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016129
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35732
		Total time spent by all reduces in occupied slots (ms)=13068
		Total time spent by all map tasks (ms)=8933
		Total time spent by all reduce tasks (ms)=3267
		Total vcore-milliseconds taken by all map tasks=8933
		Total vcore-milliseconds taken by all reduce tasks=3267
		Total megabyte-milliseconds taken by all map tasks=36589568
		Total megabyte-milliseconds taken by all reduce tasks=13381632
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=534
		CPU time spent (ms)=5920
		Physical memory (bytes) snapshot=1198919680
		Virtual memory (bytes) snapshot=15776567296
		Total committed heap usage (bytes)=1071644672
		Peak Map Physical memory (bytes)=306450432
		Peak Map Virtual memory (bytes)=3940773888
		Peak Reduce Physical memory (bytes)=301395968
		Peak Reduce Virtual memory (bytes)=3969163264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.955 seconds
2020-12-12 13:15:59 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-12 13:16:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 13:16:00.461" starttime="20201212 13:16:00.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:16:00.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:16:00.462" starttime="20201212 13:16:00.461"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.462" starttime="20201212 13:15:25.365"></status>
</kw>
<msg timestamp="20201212 13:16:00.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:16:00.462" starttime="20201212 13:15:25.365"></status>
</kw>
<msg timestamp="20201212 13:16:00.463" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:15:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:26 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15...</msg>
<status status="PASS" endtime="20201212 13:16:00.463" starttime="20201212 13:15:25.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:16:00.463" starttime="20201212 13:16:00.463"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:16:00.463" critical="yes" starttime="20201212 13:15:25.345"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:16:00.469" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:16:00.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:16:00.475" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:16:00.475" starttime="20201212 13:16:00.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:16:00.475" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:16:00.476" starttime="20201212 13:16:00.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:16:00.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:16:00.476" starttime="20201212 13:16:00.476"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.476" starttime="20201212 13:16:00.466"></status>
</kw>
<msg timestamp="20201212 13:16:00.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:16:00.476" starttime="20201212 13:16:00.466"></status>
</kw>
<msg timestamp="20201212 13:16:00.477" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:16:00.477" starttime="20201212 13:16:00.466"></status>
</kw>
<msg timestamp="20201212 13:16:00.477" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:16:00.477" starttime="20201212 13:16:00.465"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:16:00.477" level="INFO">${random} = 60</msg>
<status status="PASS" endtime="20201212 13:16:00.477" starttime="20201212 13:16:00.477"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:16:00.481" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:16:00.481" starttime="20201212 13:16:00.481"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:16:00.482" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:16:00.482" starttime="20201212 13:16:00.481"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.482" starttime="20201212 13:16:00.480"></status>
</kw>
<msg timestamp="20201212 13:16:00.482" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:16:00.482" starttime="20201212 13:16:00.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:16:00.483" starttime="20201212 13:16:00.483"></status>
</kw>
<msg timestamp="20201212 13:16:00.483" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:16:00.483" starttime="20201212 13:16:00.482"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.483" starttime="20201212 13:16:00.479"></status>
</kw>
<msg timestamp="20201212 13:16:00.483" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:16:00.483" starttime="20201212 13:16:00.479"></status>
</kw>
<msg timestamp="20201212 13:16:00.484" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:16:00.484" starttime="20201212 13:16:00.478"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:16:00.486" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:16:00.486" starttime="20201212 13:16:00.486"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:16:00.487" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:16:00.487" starttime="20201212 13:16:00.487"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.487" starttime="20201212 13:16:00.486"></status>
</kw>
<msg timestamp="20201212 13:16:00.488" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:16:00.488" starttime="20201212 13:16:00.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:16:00.489" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201212 13:16:00.489" starttime="20201212 13:16:00.489"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:16:00.489" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201212 13:16:00.490" starttime="20201212 13:16:00.489"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.490" starttime="20201212 13:16:00.488"></status>
</kw>
<msg timestamp="20201212 13:16:00.490" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201212 13:16:00.490" starttime="20201212 13:16:00.488"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.490" starttime="20201212 13:16:00.485"></status>
</kw>
<msg timestamp="20201212 13:16:00.490" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 13:16:00.490" starttime="20201212 13:16:00.484"></status>
</kw>
<msg timestamp="20201212 13:16:00.491" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 13:16:00.491" starttime="20201212 13:16:00.484"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:16:00.493" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:16:00.493" starttime="20201212 13:16:00.493"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:16:00.494" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:16:00.494" starttime="20201212 13:16:00.494"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.494" starttime="20201212 13:16:00.493"></status>
</kw>
<msg timestamp="20201212 13:16:00.494" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:16:00.494" starttime="20201212 13:16:00.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:16:00.495" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201212 13:16:00.495" starttime="20201212 13:16:00.495"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:16:00.496" level="INFO">${result} = /wordcount-60.txt</msg>
<status status="PASS" endtime="20201212 13:16:00.496" starttime="20201212 13:16:00.496"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.496" starttime="20201212 13:16:00.495"></status>
</kw>
<msg timestamp="20201212 13:16:00.496" level="INFO">${path_with_leading} = /wordcount-60.txt</msg>
<status status="PASS" endtime="20201212 13:16:00.496" starttime="20201212 13:16:00.494"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:00.497" starttime="20201212 13:16:00.492"></status>
</kw>
<msg timestamp="20201212 13:16:00.497" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-60.txt</msg>
<status status="PASS" endtime="20201212 13:16:00.497" starttime="20201212 13:16:00.491"></status>
</kw>
<msg timestamp="20201212 13:16:00.497" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-60.txt</msg>
<status status="PASS" endtime="20201212 13:16:00.497" starttime="20201212 13:16:00.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:16:00.501" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-60.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:16:33.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:16:33.007" level="INFO">${output} = 2020-12-12 13:16:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:16:33.007" starttime="20201212 13:16:00.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:16:33.008" level="INFO">2020-12-12 13:16:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:02 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-12-12 13:16:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:16:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 13:16:02 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:16:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:16:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:16:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:16:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B5B4B4C8567A-&gt;b35d8823-d34a-41f1-9ef1-d55c8d513547
2020-12-12 13:16:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 13:16:03 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:16:03 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:16:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607778774643_0004
2020-12-12 13:16:03 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 13:16:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:04 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:04 INFO  Configuration:2752 - resource-types.xml not found
2020-12-12 13:16:04 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-12 13:16:04 INFO  YarnClientImpl:324 - Submitted application application_1607778774643_0004
2020-12-12 13:16:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607778774643_0004/
2020-12-12 13:16:04 INFO  Job:1619 - Running job: job_1607778774643_0004
2020-12-12 13:16:11 INFO  Job:1640 - Job job_1607778774643_0004 running in uber mode : false
2020-12-12 13:16:11 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:16:17 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:16:22 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 13:16:27 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:16:31 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:16:32 INFO  Job:1658 - Job job_1607778774643_0004 completed successfully
2020-12-12 13:16:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078787
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35400
		Total time spent by all reduces in occupied slots (ms)=12412
		Total time spent by all map tasks (ms)=8850
		Total time spent by all reduce tasks (ms)=3103
		Total vcore-milliseconds taken by all map tasks=8850
		Total vcore-milliseconds taken by all reduce tasks=3103
		Total megabyte-milliseconds taken by all map tasks=36249600
		Total megabyte-milliseconds taken by all reduce tasks=12709888
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=557
		CPU time spent (ms)=6150
		Physical memory (bytes) snapshot=1215787008
		Virtual memory (bytes) snapshot=15794774016
		Total committed heap usage (bytes)=1063780352
		Peak Map Physical memory (bytes)=309854208
		Peak Map Virtual memory (bytes)=3945934848
		Peak Reduce Physical memory (bytes)=290148352
		Peak Reduce Virtual memory (bytes)=3961909248
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-12 13:16:32 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 13:16:33.008" starttime="20201212 13:16:33.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:16:33.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:16:33.009" starttime="20201212 13:16:33.008"></status>
</kw>
<status status="PASS" endtime="20201212 13:16:33.009" starttime="20201212 13:16:00.498"></status>
</kw>
<msg timestamp="20201212 13:16:33.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:16:33.009" starttime="20201212 13:16:00.498"></status>
</kw>
<msg timestamp="20201212 13:16:33.010" level="INFO">${output} = 2020-12-12 13:16:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:01 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:16:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:16:33.010" starttime="20201212 13:16:00.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 13:16:33.010" starttime="20201212 13:16:33.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:16:33.011" starttime="20201212 13:16:33.010"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:16:33.011" critical="yes" starttime="20201212 13:16:00.464"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 13:16:33.012" starttime="20201212 13:15:25.301"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:54.294" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:13:54.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:13:54.300" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:13:54.300" starttime="20201212 13:13:54.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:13:54.300" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:13:54.301" starttime="20201212 13:13:54.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:13:54.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:13:54.301" starttime="20201212 13:13:54.301"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:54.301" starttime="20201212 13:13:54.290"></status>
</kw>
<msg timestamp="20201212 13:13:54.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:13:54.302" starttime="20201212 13:13:54.290"></status>
</kw>
<msg timestamp="20201212 13:13:54.302" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:13:54.302" starttime="20201212 13:13:54.290"></status>
</kw>
<msg timestamp="20201212 13:13:54.302" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:13:54.302" starttime="20201212 13:13:54.289"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:13:54.306" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:13:54.306" starttime="20201212 13:13:54.306"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:13:54.307" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:13:54.307" starttime="20201212 13:13:54.306"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:54.307" starttime="20201212 13:13:54.304"></status>
</kw>
<msg timestamp="20201212 13:13:54.307" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:13:54.307" starttime="20201212 13:13:54.304"></status>
</kw>
<status status="PASS" endtime="20201212 13:13:54.307" starttime="20201212 13:13:54.303"></status>
</kw>
<msg timestamp="20201212 13:13:54.307" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:13:54.307" starttime="20201212 13:13:54.303"></status>
</kw>
<msg timestamp="20201212 13:13:54.308" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:13:54.308" starttime="20201212 13:13:54.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:13:54.312" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:14:36.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:14:36.796" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:13:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13...</msg>
<status status="PASS" endtime="20201212 13:14:36.796" starttime="20201212 13:13:54.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:14:36.797" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:13:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 13:13:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:13:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:13:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:13:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:13:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-930FE68721EF-&gt;b35d8823-d34a-41f1-9ef1-d55c8d513547
2020-12-12 13:13:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-12-12 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:00 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:14:02 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:14:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607778774643_0001
2020-12-12 13:14:03 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 13:14:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:03 INFO  Configuration:2752 - resource-types.xml not found
2020-12-12 13:14:03 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-12 13:14:03 INFO  YarnClientImpl:324 - Submitted application application_1607778774643_0001
2020-12-12 13:14:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607778774643_0001/
2020-12-12 13:14:03 INFO  Job:1619 - Running job: job_1607778774643_0001
2020-12-12 13:14:12 INFO  Job:1640 - Job job_1607778774643_0001 running in uber mode : false
2020-12-12 13:14:12 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:14:18 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:14:23 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 13:14:28 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:14:35 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:14:36 INFO  Job:1658 - Job job_1607778774643_0001 completed successfully
2020-12-12 13:14:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016357
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34048
		Total time spent by all reduces in occupied slots (ms)=23272
		Total time spent by all map tasks (ms)=8512
		Total time spent by all reduce tasks (ms)=5818
		Total vcore-milliseconds taken by all map tasks=8512
		Total vcore-milliseconds taken by all reduce tasks=5818
		Total megabyte-milliseconds taken by all map tasks=34865152
		Total megabyte-milliseconds taken by all reduce tasks=23830528
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=5450
		Physical memory (bytes) snapshot=1210929152
		Virtual memory (bytes) snapshot=15786520576
		Total committed heap usage (bytes)=1059061760
		Peak Map Physical memory (bytes)=311549952
		Peak Map Virtual memory (bytes)=3944128512
		Peak Reduce Physical memory (bytes)=304340992
		Peak Reduce Virtual memory (bytes)=3975061504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.719 seconds
2020-12-12 13:14:36 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:36 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-12 13:14:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 13:14:36.797" starttime="20201212 13:14:36.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:14:36.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:14:36.798" starttime="20201212 13:14:36.798"></status>
</kw>
<status status="PASS" endtime="20201212 13:14:36.798" starttime="20201212 13:13:54.308"></status>
</kw>
<msg timestamp="20201212 13:14:36.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:14:36.799" starttime="20201212 13:13:54.308"></status>
</kw>
<msg timestamp="20201212 13:14:36.799" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:13:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:13...</msg>
<status status="PASS" endtime="20201212 13:14:36.799" starttime="20201212 13:13:54.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:14:36.799" starttime="20201212 13:14:36.799"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:14:36.800" critical="yes" starttime="20201212 13:13:54.288"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:14:36.804" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:14:36.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:14:36.809" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:14:36.809" starttime="20201212 13:14:36.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:14:36.810" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:14:36.810" starttime="20201212 13:14:36.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:14:36.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:14:36.811" starttime="20201212 13:14:36.810"></status>
</kw>
<status status="PASS" endtime="20201212 13:14:36.811" starttime="20201212 13:14:36.802"></status>
</kw>
<msg timestamp="20201212 13:14:36.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:14:36.811" starttime="20201212 13:14:36.802"></status>
</kw>
<msg timestamp="20201212 13:14:36.811" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:14:36.812" starttime="20201212 13:14:36.801"></status>
</kw>
<msg timestamp="20201212 13:14:36.812" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 13:14:36.812" starttime="20201212 13:14:36.801"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:14:36.812" level="INFO">${random} = 32</msg>
<status status="PASS" endtime="20201212 13:14:36.812" starttime="20201212 13:14:36.812"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:14:36.816" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:14:36.816" starttime="20201212 13:14:36.815"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:14:36.816" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:14:36.816" starttime="20201212 13:14:36.816"></status>
</kw>
<status status="PASS" endtime="20201212 13:14:36.816" starttime="20201212 13:14:36.815"></status>
</kw>
<msg timestamp="20201212 13:14:36.816" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:14:36.816" starttime="20201212 13:14:36.814"></status>
</kw>
<status status="PASS" endtime="20201212 13:14:36.817" starttime="20201212 13:14:36.814"></status>
</kw>
<msg timestamp="20201212 13:14:36.817" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:14:36.817" starttime="20201212 13:14:36.813"></status>
</kw>
<msg timestamp="20201212 13:14:36.817" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:14:36.817" starttime="20201212 13:14:36.812"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:14:36.820" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:14:36.820" starttime="20201212 13:14:36.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:14:36.820" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:14:36.820" starttime="20201212 13:14:36.820"></status>
</kw>
<status status="PASS" endtime="20201212 13:14:36.821" starttime="20201212 13:14:36.819"></status>
</kw>
<msg timestamp="20201212 13:14:36.821" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:14:36.821" starttime="20201212 13:14:36.819"></status>
</kw>
<status status="PASS" endtime="20201212 13:14:36.821" starttime="20201212 13:14:36.818"></status>
</kw>
<msg timestamp="20201212 13:14:36.821" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 13:14:36.821" starttime="20201212 13:14:36.818"></status>
</kw>
<msg timestamp="20201212 13:14:36.821" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 13:14:36.821" starttime="20201212 13:14:36.817"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:14:36.824" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:14:36.824" starttime="20201212 13:14:36.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:14:36.824" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:14:36.824" starttime="20201212 13:14:36.824"></status>
</kw>
<status status="PASS" endtime="20201212 13:14:36.825" starttime="20201212 13:14:36.823"></status>
</kw>
<msg timestamp="20201212 13:14:36.825" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:14:36.825" starttime="20201212 13:14:36.823"></status>
</kw>
<status status="PASS" endtime="20201212 13:14:36.825" starttime="20201212 13:14:36.822"></status>
</kw>
<msg timestamp="20201212 13:14:36.825" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-32.txt</msg>
<status status="PASS" endtime="20201212 13:14:36.825" starttime="20201212 13:14:36.822"></status>
</kw>
<msg timestamp="20201212 13:14:36.825" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-32.txt</msg>
<status status="PASS" endtime="20201212 13:14:36.825" starttime="20201212 13:14:36.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:14:36.828" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-32.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:15:12.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:15:12.309" level="INFO">${output} = 2020-12-12 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:15:12.309" starttime="20201212 13:14:36.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:15:12.310" level="INFO">2020-12-12 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.9:8032
2020-12-12 13:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 13:14:38 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 13:14:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:14:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:14:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:14:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4F71D4012463-&gt;b35d8823-d34a-41f1-9ef1-d55c8d513547
2020-12-12 13:14:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 13:14:39 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:14:40 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:14:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607778774643_0002
2020-12-12 13:14:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 13:14:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:40 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:40 INFO  Configuration:2752 - resource-types.xml not found
2020-12-12 13:14:40 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-12 13:14:40 INFO  YarnClientImpl:324 - Submitted application application_1607778774643_0002
2020-12-12 13:14:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607778774643_0002/
2020-12-12 13:14:40 INFO  Job:1619 - Running job: job_1607778774643_0002
2020-12-12 13:14:48 INFO  Job:1640 - Job job_1607778774643_0002 running in uber mode : false
2020-12-12 13:14:48 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:14:54 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:14:59 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 13:15:04 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:15:08 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:15:11 INFO  Job:1658 - Job job_1607778774643_0002 completed successfully
2020-12-12 13:15:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:15:11 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078871
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34804
		Total time spent by all reduces in occupied slots (ms)=12276
		Total time spent by all map tasks (ms)=8701
		Total time spent by all reduce tasks (ms)=3069
		Total vcore-milliseconds taken by all map tasks=8701
		Total vcore-milliseconds taken by all reduce tasks=3069
		Total megabyte-milliseconds taken by all map tasks=35639296
		Total megabyte-milliseconds taken by all reduce tasks=12570624
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=5870
		Physical memory (bytes) snapshot=1226854400
		Virtual memory (bytes) snapshot=15802810368
		Total committed heap usage (bytes)=1162870784
		Peak Map Physical memory (bytes)=317423616
		Peak Map Virtual memory (bytes)=3945099264
		Peak Reduce Physical memory (bytes)=295276544
		Peak Reduce Virtual memory (bytes)=3969859584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-12 13:15:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 13:15:12.310" starttime="20201212 13:15:12.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:15:12.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:15:12.311" starttime="20201212 13:15:12.311"></status>
</kw>
<status status="PASS" endtime="20201212 13:15:12.311" starttime="20201212 13:14:36.826"></status>
</kw>
<msg timestamp="20201212 13:15:12.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:15:12.312" starttime="20201212 13:14:36.826"></status>
</kw>
<msg timestamp="20201212 13:15:12.312" level="INFO">${output} = 2020-12-12 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 13:14:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 13:15:12.312" starttime="20201212 13:14:36.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 13:15:12.312" starttime="20201212 13:15:12.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:15:12.313" starttime="20201212 13:15:12.313"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:15:12.313" critical="yes" starttime="20201212 13:14:36.800"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 13:15:12.314" starttime="20201212 13:13:54.239"></status>
</suite>
<status status="PASS" elapsedtime="179634" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:17:35.275" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:17:39.051" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:17:39.051" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:17:39.051" starttime="20201212 13:17:35.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:17:39.052" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:17:39.052" starttime="20201212 13:17:39.052"></status>
</kw>
<msg timestamp="20201212 13:17:39.053" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 13:17:39.053" starttime="20201212 13:17:35.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:17:39.058" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:17:41.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:17:41.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:17:41.915" starttime="20201212 13:17:39.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:17:41.916" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:17:41.916" starttime="20201212 13:17:41.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:17:41.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:17:41.917" starttime="20201212 13:17:41.916"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:41.917" starttime="20201212 13:17:39.054"></status>
</kw>
<msg timestamp="20201212 13:17:41.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:17:41.917" starttime="20201212 13:17:39.054"></status>
</kw>
<msg timestamp="20201212 13:17:41.917" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201212 13:17:41.917" starttime="20201212 13:17:39.054"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201212 13:17:41.918" starttime="20201212 13:17:41.917"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:41.918" starttime="20201212 13:17:39.053"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:41.918" starttime="20201212 13:17:39.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:17:41.923" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:17:44.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:17:44.682" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:17:44.682" starttime="20201212 13:17:41.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:17:44.683" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:17:44.683" starttime="20201212 13:17:44.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:17:44.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:17:44.684" starttime="20201212 13:17:44.684"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:44.684" starttime="20201212 13:17:41.919"></status>
</kw>
<msg timestamp="20201212 13:17:44.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:17:44.685" starttime="20201212 13:17:41.919"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:44.685" starttime="20201212 13:17:41.919"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:44.685" starttime="20201212 13:17:41.918"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:44.685" starttime="20201212 13:17:41.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 13:17:44.685" starttime="20201212 13:17:44.685"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:17:44.689" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:17:47.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:17:47.438" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:17:44.424Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 13:17:47.438" starttime="20201212 13:17:44.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:17:47.439" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:17:44.424Z",
  "modificationTime" : "2020-12-12T13:17:44.424Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 13:17:47.440" starttime="20201212 13:17:47.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:17:47.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:17:47.440" starttime="20201212 13:17:47.440"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:47.440" starttime="20201212 13:17:44.686"></status>
</kw>
<msg timestamp="20201212 13:17:47.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:17:47.441" starttime="20201212 13:17:44.686"></status>
</kw>
<msg timestamp="20201212 13:17:47.441" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T13:17:44.424Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 13:17:47.441" starttime="20201212 13:17:44.685"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 13:17:47.441" starttime="20201212 13:17:47.441"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:17:47.445" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:17:47.445" starttime="20201212 13:17:47.444"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:17:47.445" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:17:47.445" starttime="20201212 13:17:47.445"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:47.445" starttime="20201212 13:17:47.444"></status>
</kw>
<msg timestamp="20201212 13:17:47.445" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:17:47.446" starttime="20201212 13:17:47.443"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:47.446" starttime="20201212 13:17:47.443"></status>
</kw>
<msg timestamp="20201212 13:17:47.446" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 13:17:47.446" starttime="20201212 13:17:47.442"></status>
</kw>
<msg timestamp="20201212 13:17:47.446" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 13:17:47.446" starttime="20201212 13:17:47.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:17:47.449" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:17:50.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:17:50.310" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:17:50.310" starttime="20201212 13:17:47.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:17:50.311" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:17:50.311" starttime="20201212 13:17:50.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:17:50.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:17:50.312" starttime="20201212 13:17:50.311"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:50.312" starttime="20201212 13:17:47.447"></status>
</kw>
<msg timestamp="20201212 13:17:50.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:17:50.312" starttime="20201212 13:17:47.447"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:50.313" starttime="20201212 13:17:47.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:17:50.319" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:17:56.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:17:56.666" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:17:56.666" starttime="20201212 13:17:50.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:17:56.667" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:17:56.668" starttime="20201212 13:17:56.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:17:56.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:17:56.668" starttime="20201212 13:17:56.668"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:56.668" starttime="20201212 13:17:50.314"></status>
</kw>
<msg timestamp="20201212 13:17:56.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:17:56.669" starttime="20201212 13:17:50.313"></status>
</kw>
<status status="PASS" endtime="20201212 13:17:56.669" starttime="20201212 13:17:50.313"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:17:56.673" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:18:03.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:18:03.769" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:18:03.769" starttime="20201212 13:17:56.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:18:03.770" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:18:03.770" starttime="20201212 13:18:03.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:18:03.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:18:03.771" starttime="20201212 13:18:03.770"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:03.771" starttime="20201212 13:17:56.670"></status>
</kw>
<msg timestamp="20201212 13:18:03.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:18:03.771" starttime="20201212 13:17:56.669"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:03.772" starttime="20201212 13:17:56.669"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:18:03.776" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:18:07.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:18:07.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:18:07.950" starttime="20201212 13:18:03.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:18:07.951" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:18:07.951" starttime="20201212 13:18:07.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:18:07.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:18:07.951" starttime="20201212 13:18:07.951"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:07.952" starttime="20201212 13:18:03.772"></status>
</kw>
<msg timestamp="20201212 13:18:07.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:18:07.952" starttime="20201212 13:18:03.772"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:07.952" starttime="20201212 13:18:03.772"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:18:07.952" critical="yes" starttime="20201212 13:17:35.268"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:18:07.957" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:18:07.957" starttime="20201212 13:18:07.957"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:18:07.958" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:18:07.958" starttime="20201212 13:18:07.958"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:07.958" starttime="20201212 13:18:07.956"></status>
</kw>
<msg timestamp="20201212 13:18:07.958" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:18:07.958" starttime="20201212 13:18:07.956"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:07.959" starttime="20201212 13:18:07.955"></status>
</kw>
<msg timestamp="20201212 13:18:07.959" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:18:07.959" starttime="20201212 13:18:07.955"></status>
</kw>
<msg timestamp="20201212 13:18:07.959" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:18:07.959" starttime="20201212 13:18:07.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:18:07.962" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:18:10.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:18:10.608" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:18:10.608" starttime="20201212 13:18:07.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:18:10.609" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:18:10.609" starttime="20201212 13:18:10.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:18:10.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:18:10.610" starttime="20201212 13:18:10.609"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:10.610" starttime="20201212 13:18:07.960"></status>
</kw>
<msg timestamp="20201212 13:18:10.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:18:10.610" starttime="20201212 13:18:07.959"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:10.611" starttime="20201212 13:18:07.959"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:18:10.614" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:18:13.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:18:13.308" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 13:18:13.308" starttime="20201212 13:18:10.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:18:13.309" level="INFO"></msg>
<status status="PASS" endtime="20201212 13:18:13.310" starttime="20201212 13:18:13.309"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:18:13.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:18:13.310" starttime="20201212 13:18:13.310"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:13.310" starttime="20201212 13:18:10.611"></status>
</kw>
<msg timestamp="20201212 13:18:13.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:18:13.311" starttime="20201212 13:18:10.611"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:13.311" starttime="20201212 13:18:10.611"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 13:18:13.311" critical="yes" starttime="20201212 13:18:07.953"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201212 13:18:13.312" starttime="20201212 13:17:35.213"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:19:49.654" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:19:49.654" starttime="20201212 13:19:49.653"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:19:49.654" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:19:49.654" starttime="20201212 13:19:49.654"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:49.655" starttime="20201212 13:19:49.651"></status>
</kw>
<msg timestamp="20201212 13:19:49.655" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:19:49.655" starttime="20201212 13:19:49.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:19:49.656" starttime="20201212 13:19:49.655"></status>
</kw>
<msg timestamp="20201212 13:19:49.656" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:19:49.656" starttime="20201212 13:19:49.655"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:49.656" starttime="20201212 13:19:49.650"></status>
</kw>
<msg timestamp="20201212 13:19:49.656" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:19:49.656" starttime="20201212 13:19:49.649"></status>
</kw>
<msg timestamp="20201212 13:19:49.656" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:19:49.656" starttime="20201212 13:19:49.648"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:19:49.657" level="INFO">${random} = 24098</msg>
<status status="PASS" endtime="20201212 13:19:49.657" starttime="20201212 13:19:49.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:19:49.662" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-24098 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:19:52.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:19:52.730" level="INFO">${output} = 2020-12-12 13:19:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:19:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 13:19:52.730" starttime="20201212 13:19:49.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:19:52.731" level="INFO">2020-12-12 13:19:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:19:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:19:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:19:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:19:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3C9306707CC3-&gt;c82196be-47d2-42d4-b3b4-eced334e4c6f
2020-12-12 13:19:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 13:19:52.731" starttime="20201212 13:19:52.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:19:52.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:19:52.732" starttime="20201212 13:19:52.731"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:52.732" starttime="20201212 13:19:49.658"></status>
</kw>
<msg timestamp="20201212 13:19:52.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:19:52.732" starttime="20201212 13:19:49.658"></status>
</kw>
<msg timestamp="20201212 13:19:52.732" level="INFO">${result} = 2020-12-12 13:19:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:19:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 13:19:52.732" starttime="20201212 13:19:49.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:19:52.737" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:19:54.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:19:54.274" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:19 ofs://om/volume1/bucket1/ozone-24098
-rw-...</msg>
<status status="PASS" endtime="20201212 13:19:54.275" starttime="20201212 13:19:52.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:19:54.275" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:19 ofs://om/volume1/bucket1/ozone-24098
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:18 ofs://om/volume1/bucket1/ozone-69064
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:18 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:19 ofs://om/volume1/bucket1/wordcount-91.txt</msg>
<status status="PASS" endtime="20201212 13:19:54.276" starttime="20201212 13:19:54.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:19:54.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:19:54.276" starttime="20201212 13:19:54.276"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:54.276" starttime="20201212 13:19:52.735"></status>
</kw>
<msg timestamp="20201212 13:19:54.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:19:54.277" starttime="20201212 13:19:52.734"></status>
</kw>
<msg timestamp="20201212 13:19:54.277" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:17 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:19 ofs://om/volume1/bucket1/ozone-24098
-rw-...</msg>
<status status="PASS" endtime="20201212 13:19:54.277" starttime="20201212 13:19:52.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:19:54.277" starttime="20201212 13:19:54.277"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:19:54.278" critical="yes" starttime="20201212 13:19:49.647"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 13:19:54.278" starttime="20201212 13:19:49.598"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:18:17.462" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:18:17.462" starttime="20201212 13:18:17.461"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:18:17.463" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:18:17.463" starttime="20201212 13:18:17.462"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:17.463" starttime="20201212 13:18:17.461"></status>
</kw>
<msg timestamp="20201212 13:18:17.463" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:18:17.463" starttime="20201212 13:18:17.461"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:17.463" starttime="20201212 13:18:17.460"></status>
</kw>
<msg timestamp="20201212 13:18:17.463" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:18:17.463" starttime="20201212 13:18:17.460"></status>
</kw>
<msg timestamp="20201212 13:18:17.463" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:18:17.463" starttime="20201212 13:18:17.459"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:18:17.464" level="INFO">${random} = 69064</msg>
<status status="PASS" endtime="20201212 13:18:17.464" starttime="20201212 13:18:17.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:18:17.470" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-69064 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:18:20.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:18:20.654" level="INFO">${output} = 2020-12-12 13:18:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:18:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 13:18:20.654" starttime="20201212 13:18:17.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:18:20.655" level="INFO">2020-12-12 13:18:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:18:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:18:19 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:18:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:18:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-252A8DD72205-&gt;c82196be-47d2-42d4-b3b4-eced334e4c6f
2020-12-12 13:18:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 13:18:20.655" starttime="20201212 13:18:20.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:18:20.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:18:20.656" starttime="20201212 13:18:20.655"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:20.656" starttime="20201212 13:18:17.465"></status>
</kw>
<msg timestamp="20201212 13:18:20.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:18:20.656" starttime="20201212 13:18:17.465"></status>
</kw>
<msg timestamp="20201212 13:18:20.657" level="INFO">${result} = 2020-12-12 13:18:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:18:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 13:18:20.657" starttime="20201212 13:18:17.464"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:18:20.661" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:18:22.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:18:22.319" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:18 o3fs://bucket1.volume1.om/ozone-69064
dr...</msg>
<status status="PASS" endtime="20201212 13:18:22.319" starttime="20201212 13:18:20.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:18:22.320" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:18 o3fs://bucket1.volume1.om/ozone-69064
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:18 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 13:18:22.320" starttime="20201212 13:18:22.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:18:22.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:18:22.321" starttime="20201212 13:18:22.321"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:22.321" starttime="20201212 13:18:20.658"></status>
</kw>
<msg timestamp="20201212 13:18:22.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:18:22.321" starttime="20201212 13:18:20.657"></status>
</kw>
<msg timestamp="20201212 13:18:22.322" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 13:17 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 13:18 o3fs://bucket1.volume1.om/ozone-69064
dr...</msg>
<status status="PASS" endtime="20201212 13:18:22.322" starttime="20201212 13:18:20.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:18:22.322" starttime="20201212 13:18:22.322"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 13:18:22.322" critical="yes" starttime="20201212 13:18:17.458"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 13:18:22.323" starttime="20201212 13:18:17.412"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:19:58.465" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:19:58.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:19:58.469" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:19:58.469" starttime="20201212 13:19:58.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:19:58.470" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:19:58.470" starttime="20201212 13:19:58.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:19:58.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:19:58.470" starttime="20201212 13:19:58.470"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:58.471" starttime="20201212 13:19:58.460"></status>
</kw>
<msg timestamp="20201212 13:19:58.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:19:58.471" starttime="20201212 13:19:58.460"></status>
</kw>
<msg timestamp="20201212 13:19:58.471" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:19:58.471" starttime="20201212 13:19:58.459"></status>
</kw>
<msg timestamp="20201212 13:19:58.471" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:19:58.471" starttime="20201212 13:19:58.459"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:19:58.475" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:19:58.475" starttime="20201212 13:19:58.475"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:19:58.476" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:19:58.476" starttime="20201212 13:19:58.475"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:58.476" starttime="20201212 13:19:58.473"></status>
</kw>
<msg timestamp="20201212 13:19:58.476" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:19:58.476" starttime="20201212 13:19:58.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:19:58.477" starttime="20201212 13:19:58.477"></status>
</kw>
<msg timestamp="20201212 13:19:58.477" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:19:58.477" starttime="20201212 13:19:58.476"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:58.477" starttime="20201212 13:19:58.473"></status>
</kw>
<msg timestamp="20201212 13:19:58.477" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:19:58.477" starttime="20201212 13:19:58.472"></status>
</kw>
<msg timestamp="20201212 13:19:58.478" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:19:58.478" starttime="20201212 13:19:58.471"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:19:58.482" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:20:30.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:20:30.475" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:20:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:20:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 13:20:30.475" starttime="20201212 13:19:58.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:20:30.476" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:20:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:20:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:20:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:20:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:20:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-32611102F8C7-&gt;c82196be-47d2-42d4-b3b4-eced334e4c6f
2020-12-12 13:20:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 13:20:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-12-12 13:20:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:20:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:20:02 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:20:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607779028445_0003
2020-12-12 13:20:02 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 13:20:02 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 13:20:02 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 13:20:02 INFO  YarnClientImpl:329 - Submitted application application_1607779028445_0003
2020-12-12 13:20:02 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607779028445_0003/
2020-12-12 13:20:02 INFO  Job:1619 - Running job: job_1607779028445_0003
2020-12-12 13:20:08 INFO  Job:1640 - Job job_1607779028445_0003 running in uber mode : false
2020-12-12 13:20:08 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:20:15 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:20:19 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 13:20:25 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:20:29 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:20:29 INFO  Job:1658 - Job job_1607779028445_0003 completed successfully
2020-12-12 13:20:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056241
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=37016
		Total time spent by all reduces in occupied slots (ms)=12576
		Total time spent by all map tasks (ms)=9254
		Total time spent by all reduce tasks (ms)=3144
		Total vcore-milliseconds taken by all map tasks=9254
		Total vcore-milliseconds taken by all reduce tasks=3144
		Total megabyte-milliseconds taken by all map tasks=37904384
		Total megabyte-milliseconds taken by all reduce tasks=12877824
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=530
		CPU time spent (ms)=6260
		Physical memory (bytes) snapshot=1443704832
		Virtual memory (bytes) snapshot=15808667648
		Total committed heap usage (bytes)=1454374912
		Peak Map Physical memory (bytes)=381263872
		Peak Map Virtual memory (bytes)=3948871680
		Peak Reduce Physical memory (bytes)=390131712
		Peak Reduce Virtual memory (bytes)=3970498560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.64 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 13:20:30.476" starttime="20201212 13:20:30.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:20:30.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:20:30.477" starttime="20201212 13:20:30.476"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.477" starttime="20201212 13:19:58.479"></status>
</kw>
<msg timestamp="20201212 13:20:30.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:20:30.477" starttime="20201212 13:19:58.478"></status>
</kw>
<msg timestamp="20201212 13:20:30.478" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:20:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:20:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 13:20:30.478" starttime="20201212 13:19:58.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:20:30.478" starttime="20201212 13:20:30.478"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:20:30.478" critical="yes" starttime="20201212 13:19:58.458"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:20:30.483" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:20:30.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:20:30.488" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:20:30.488" starttime="20201212 13:20:30.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:20:30.489" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:20:30.489" starttime="20201212 13:20:30.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:20:30.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:20:30.490" starttime="20201212 13:20:30.489"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.490" starttime="20201212 13:20:30.481"></status>
</kw>
<msg timestamp="20201212 13:20:30.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:20:30.490" starttime="20201212 13:20:30.480"></status>
</kw>
<msg timestamp="20201212 13:20:30.490" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:20:30.490" starttime="20201212 13:20:30.480"></status>
</kw>
<msg timestamp="20201212 13:20:30.490" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:20:30.490" starttime="20201212 13:20:30.480"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:20:30.491" level="INFO">${random} = 91</msg>
<status status="PASS" endtime="20201212 13:20:30.491" starttime="20201212 13:20:30.491"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:20:30.495" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:20:30.495" starttime="20201212 13:20:30.494"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:20:30.495" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:20:30.495" starttime="20201212 13:20:30.495"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.495" starttime="20201212 13:20:30.494"></status>
</kw>
<msg timestamp="20201212 13:20:30.495" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:20:30.495" starttime="20201212 13:20:30.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 13:20:30.496" starttime="20201212 13:20:30.496"></status>
</kw>
<msg timestamp="20201212 13:20:30.496" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 13:20:30.496" starttime="20201212 13:20:30.496"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.497" starttime="20201212 13:20:30.492"></status>
</kw>
<msg timestamp="20201212 13:20:30.497" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:20:30.497" starttime="20201212 13:20:30.492"></status>
</kw>
<msg timestamp="20201212 13:20:30.497" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 13:20:30.497" starttime="20201212 13:20:30.491"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:20:30.500" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:20:30.500" starttime="20201212 13:20:30.499"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:20:30.500" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:20:30.500" starttime="20201212 13:20:30.500"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.500" starttime="20201212 13:20:30.499"></status>
</kw>
<msg timestamp="20201212 13:20:30.501" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:20:30.501" starttime="20201212 13:20:30.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:20:30.502" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201212 13:20:30.502" starttime="20201212 13:20:30.502"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:20:30.502" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201212 13:20:30.503" starttime="20201212 13:20:30.502"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.503" starttime="20201212 13:20:30.501"></status>
</kw>
<msg timestamp="20201212 13:20:30.503" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201212 13:20:30.503" starttime="20201212 13:20:30.501"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.503" starttime="20201212 13:20:30.498"></status>
</kw>
<msg timestamp="20201212 13:20:30.503" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 13:20:30.503" starttime="20201212 13:20:30.498"></status>
</kw>
<msg timestamp="20201212 13:20:30.503" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 13:20:30.503" starttime="20201212 13:20:30.497"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 13:20:30.506" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 13:20:30.506" starttime="20201212 13:20:30.506"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:20:30.507" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 13:20:30.507" starttime="20201212 13:20:30.506"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.507" starttime="20201212 13:20:30.505"></status>
</kw>
<msg timestamp="20201212 13:20:30.507" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 13:20:30.507" starttime="20201212 13:20:30.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:20:30.508" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201212 13:20:30.508" starttime="20201212 13:20:30.508"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:20:30.509" level="INFO">${result} = /wordcount-91.txt</msg>
<status status="PASS" endtime="20201212 13:20:30.509" starttime="20201212 13:20:30.509"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.509" starttime="20201212 13:20:30.508"></status>
</kw>
<msg timestamp="20201212 13:20:30.509" level="INFO">${path_with_leading} = /wordcount-91.txt</msg>
<status status="PASS" endtime="20201212 13:20:30.509" starttime="20201212 13:20:30.507"></status>
</kw>
<status status="PASS" endtime="20201212 13:20:30.509" starttime="20201212 13:20:30.505"></status>
</kw>
<msg timestamp="20201212 13:20:30.510" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-91.txt</msg>
<status status="PASS" endtime="20201212 13:20:30.510" starttime="20201212 13:20:30.504"></status>
</kw>
<msg timestamp="20201212 13:20:30.510" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-91.txt</msg>
<status status="PASS" endtime="20201212 13:20:30.510" starttime="20201212 13:20:30.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:20:30.514" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-91.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:20:32.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 13:20:32.301" level="INFO">${output} = 2020-12-12 13:20:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-91....</msg>
<status status="PASS" endtime="20201212 13:20:32.301" starttime="20201212 13:20:30.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:20:32.302" level="INFO">2020-12-12 13:20:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-91.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1730)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</msg>
<status status="PASS" endtime="20201212 13:20:32.303" starttime="20201212 13:20:32.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:20:32.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201212 13:20:32.303" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201212 13:20:32.303" starttime="20201212 13:20:32.303"></status>
</kw>
<status status="FAIL" endtime="20201212 13:20:32.304" starttime="20201212 13:20:30.511"></status>
</kw>
<msg timestamp="20201212 13:20:32.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201212 13:20:32.304" starttime="20201212 13:20:30.510"></status>
</kw>
<status status="FAIL" endtime="20201212 13:20:32.304" starttime="20201212 13:20:30.510"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201212 13:20:32.304" critical="yes" starttime="20201212 13:20:30.479">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201212 13:20:32.305" starttime="20201212 13:19:58.414"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:18:26.523" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:18:26.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:18:26.527" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:18:26.527" starttime="20201212 13:18:26.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:18:26.528" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:18:26.528" starttime="20201212 13:18:26.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:18:26.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:18:26.529" starttime="20201212 13:18:26.528"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:26.529" starttime="20201212 13:18:26.519"></status>
</kw>
<msg timestamp="20201212 13:18:26.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:18:26.529" starttime="20201212 13:18:26.518"></status>
</kw>
<msg timestamp="20201212 13:18:26.530" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:18:26.530" starttime="20201212 13:18:26.518"></status>
</kw>
<msg timestamp="20201212 13:18:26.530" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:18:26.530" starttime="20201212 13:18:26.518"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:18:26.534" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:18:26.534" starttime="20201212 13:18:26.533"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:18:26.534" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:18:26.535" starttime="20201212 13:18:26.534"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:26.535" starttime="20201212 13:18:26.532"></status>
</kw>
<msg timestamp="20201212 13:18:26.535" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:18:26.535" starttime="20201212 13:18:26.532"></status>
</kw>
<status status="PASS" endtime="20201212 13:18:26.535" starttime="20201212 13:18:26.531"></status>
</kw>
<msg timestamp="20201212 13:18:26.535" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:18:26.535" starttime="20201212 13:18:26.531"></status>
</kw>
<msg timestamp="20201212 13:18:26.535" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:18:26.535" starttime="20201212 13:18:26.530"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:18:26.539" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:19:09.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:19:09.552" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:18:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:18:28 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 13:19:09.553" starttime="20201212 13:18:26.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:19:09.554" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:18:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:18:28 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:18:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:18:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:18:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-325DFFA0D500-&gt;c82196be-47d2-42d4-b3b4-eced334e4c6f
2020-12-12 13:18:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 13:18:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-12-12 13:18:29 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:18:30 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:18:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607779028445_0001
2020-12-12 13:18:32 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 13:18:33 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 13:18:33 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 13:18:33 INFO  YarnClientImpl:329 - Submitted application application_1607779028445_0001
2020-12-12 13:18:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607779028445_0001/
2020-12-12 13:18:33 INFO  Job:1619 - Running job: job_1607779028445_0001
2020-12-12 13:18:42 INFO  Job:1640 - Job job_1607779028445_0001 running in uber mode : false
2020-12-12 13:18:42 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:18:48 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:18:52 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 13:18:57 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:19:04 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:19:08 INFO  Job:1658 - Job job_1607779028445_0001 completed successfully
2020-12-12 13:19:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056461
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35200
		Total time spent by all reduces in occupied slots (ms)=23680
		Total time spent by all map tasks (ms)=8800
		Total time spent by all reduce tasks (ms)=5920
		Total vcore-milliseconds taken by all map tasks=8800
		Total vcore-milliseconds taken by all reduce tasks=5920
		Total megabyte-milliseconds taken by all map tasks=36044800
		Total megabyte-milliseconds taken by all reduce tasks=24248320
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=581
		CPU time spent (ms)=5600
		Physical memory (bytes) snapshot=1444225024
		Virtual memory (bytes) snapshot=15750918144
		Total committed heap usage (bytes)=1813512192
		Peak Map Physical memory (bytes)=357695488
		Peak Map Virtual memory (bytes)=3933380608
		Peak Reduce Physical memory (bytes)=386134016
		Peak Reduce Virtual memory (bytes)=3966091264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.641 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 13:19:09.554" starttime="20201212 13:19:09.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:19:09.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:19:09.555" starttime="20201212 13:19:09.554"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:09.555" starttime="20201212 13:18:26.536"></status>
</kw>
<msg timestamp="20201212 13:19:09.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:19:09.555" starttime="20201212 13:18:26.536"></status>
</kw>
<msg timestamp="20201212 13:19:09.555" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 13:18:28 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:18:28 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 13:19:09.555" starttime="20201212 13:18:26.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:19:09.556" starttime="20201212 13:19:09.555"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:19:09.556" critical="yes" starttime="20201212 13:18:26.517"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:19:09.560" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:19:09.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:19:09.565" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:19:09.565" starttime="20201212 13:19:09.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:19:09.565" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:19:09.566" starttime="20201212 13:19:09.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:19:09.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:19:09.566" starttime="20201212 13:19:09.566"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:09.566" starttime="20201212 13:19:09.558"></status>
</kw>
<msg timestamp="20201212 13:19:09.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:19:09.567" starttime="20201212 13:19:09.558"></status>
</kw>
<msg timestamp="20201212 13:19:09.567" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:19:09.567" starttime="20201212 13:19:09.557"></status>
</kw>
<msg timestamp="20201212 13:19:09.567" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 13:19:09.567" starttime="20201212 13:19:09.557"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 13:19:09.568" level="INFO">${random} = 91</msg>
<status status="PASS" endtime="20201212 13:19:09.568" starttime="20201212 13:19:09.567"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:19:09.571" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:19:09.571" starttime="20201212 13:19:09.571"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:19:09.572" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:19:09.572" starttime="20201212 13:19:09.571"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:09.572" starttime="20201212 13:19:09.570"></status>
</kw>
<msg timestamp="20201212 13:19:09.572" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:19:09.572" starttime="20201212 13:19:09.570"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:09.572" starttime="20201212 13:19:09.569"></status>
</kw>
<msg timestamp="20201212 13:19:09.572" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:19:09.572" starttime="20201212 13:19:09.568"></status>
</kw>
<msg timestamp="20201212 13:19:09.572" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 13:19:09.572" starttime="20201212 13:19:09.568"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:19:09.575" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:19:09.575" starttime="20201212 13:19:09.575"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:19:09.576" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:19:09.576" starttime="20201212 13:19:09.576"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:09.576" starttime="20201212 13:19:09.575"></status>
</kw>
<msg timestamp="20201212 13:19:09.576" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:19:09.576" starttime="20201212 13:19:09.574"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:09.576" starttime="20201212 13:19:09.574"></status>
</kw>
<msg timestamp="20201212 13:19:09.577" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 13:19:09.577" starttime="20201212 13:19:09.573"></status>
</kw>
<msg timestamp="20201212 13:19:09.577" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 13:19:09.577" starttime="20201212 13:19:09.573"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 13:19:09.580" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 13:19:09.580" starttime="20201212 13:19:09.579"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 13:19:09.580" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 13:19:09.580" starttime="20201212 13:19:09.580"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:09.580" starttime="20201212 13:19:09.579"></status>
</kw>
<msg timestamp="20201212 13:19:09.580" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 13:19:09.580" starttime="20201212 13:19:09.578"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:09.581" starttime="20201212 13:19:09.578"></status>
</kw>
<msg timestamp="20201212 13:19:09.581" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-91.txt</msg>
<status status="PASS" endtime="20201212 13:19:09.581" starttime="20201212 13:19:09.577"></status>
</kw>
<msg timestamp="20201212 13:19:09.581" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-91.txt</msg>
<status status="PASS" endtime="20201212 13:19:09.581" starttime="20201212 13:19:09.577"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 13:19:09.585" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-91.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 13:19:45.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 13:19:45.432" level="INFO">${output} = 2020-12-12 13:19:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-12-12 13:19:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201212 13:19:45.432" starttime="20201212 13:19:09.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 13:19:45.434" level="INFO">2020-12-12 13:19:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-12-12 13:19:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 13:19:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 13:19:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 13:19:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 13:19:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 13:19:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B2555499AFF9-&gt;c82196be-47d2-42d4-b3b4-eced334e4c6f
2020-12-12 13:19:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 13:19:12 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 13:19:12 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 13:19:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607779028445_0002
2020-12-12 13:19:13 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 13:19:13 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 13:19:13 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 13:19:13 INFO  YarnClientImpl:329 - Submitted application application_1607779028445_0002
2020-12-12 13:19:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607779028445_0002/
2020-12-12 13:19:13 INFO  Job:1619 - Running job: job_1607779028445_0002
2020-12-12 13:19:21 INFO  Job:1640 - Job job_1607779028445_0002 running in uber mode : false
2020-12-12 13:19:21 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 13:19:27 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 13:19:31 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 13:19:36 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 13:19:41 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 13:19:44 INFO  Job:1658 - Job job_1607779028445_0002 completed successfully
2020-12-12 13:19:45 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118991
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36076
		Total time spent by all reduces in occupied slots (ms)=13040
		Total time spent by all map tasks (ms)=9019
		Total time spent by all reduce tasks (ms)=3260
		Total vcore-milliseconds taken by all map tasks=9019
		Total vcore-milliseconds taken by all reduce tasks=3260
		Total megabyte-milliseconds taken by all map tasks=36941824
		Total megabyte-milliseconds taken by all reduce tasks=13352960
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=609
		CPU time spent (ms)=6180
		Physical memory (bytes) snapshot=1405808640
		Virtual memory (bytes) snapshot=15779328000
		Total committed heap usage (bytes)=1582825472
		Peak Map Physical memory (bytes)=373198848
		Peak Map Virtual memory (bytes)=3945340928
		Peak Reduce Physical memory (bytes)=377671680
		Peak Reduce Virtual memory (bytes)=3968335872
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 13:19:45.434" starttime="20201212 13:19:45.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 13:19:45.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 13:19:45.435" starttime="20201212 13:19:45.434"></status>
</kw>
<status status="PASS" endtime="20201212 13:19:45.435" starttime="20201212 13:19:09.582"></status>
</kw>
<msg timestamp="20201212 13:19:45.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 13:19:45.435" starttime="20201212 13:19:09.582"></status>
</kw>
<msg timestamp="20201212 13:19:45.435" level="INFO">${output} = 2020-12-12 13:19:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2020-12-12 13:19:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201212 13:19:45.435" starttime="20201212 13:19:09.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 13:19:45.436" starttime="20201212 13:19:45.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 13:19:45.436" starttime="20201212 13:19:45.436"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 13:19:45.436" critical="yes" starttime="20201212 13:19:09.556"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 13:19:45.437" starttime="20201212 13:18:26.472"></status>
</suite>
<status status="FAIL" elapsedtime="160546" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="FAIL" elapsedtime="500726" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="23">Critical Tests</stat>
<stat fail="1" pass="23">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozone-mr" pass="23">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="1" id="s1-s3" name="hadoop32" pass="7">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="1" id="s1-s3-s4" name="mapreduce-ofs" pass="1">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
