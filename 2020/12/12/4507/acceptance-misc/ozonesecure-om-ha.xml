<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201212 02:33:47.848" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/freon.robot" id="s1-s1-s1" name="Freon">
<test id="s1-s1-s1-t1" name="Freon Randomkey Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon rk ${OM_HA_PARAM} --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:29:31.598" level="INFO">Running command 'ozone freon rk --om-service-id=id1 --num-of-volumes=1 --num-of-buckets=1 --num-of-keys=1 --num-of-threads=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:29:42.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:29:42.373" level="INFO">${output} = 2020-12-12 02:29:33,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:33,621 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 02:29:42.373" starttime="20201212 02:29:31.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:29:42.374" level="INFO">2020-12-12 02:29:33,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:33,621 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:29:33,622 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-12 02:29:36,145 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2020-12-12 02:29:36,146 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 1.
2020-12-12 02:29:36,146 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 1.
2020-12-12 02:29:36,146 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 1.
2020-12-12 02:29:36,146 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2020-12-12 02:29:36,146 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2020-12-12 02:29:36,146 [main] INFO freon.RandomKeyGenerator: validateWrites : false
2020-12-12 02:29:36,150 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2020-12-12 02:29:36,153 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:29:36,194 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-60831, with testuser/scm@EXAMPLE.COM as owner.
2020-12-12 02:29:36,714 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-60831/bucket-0-19946, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-12 02:29:37,162 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:29:38,162 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:29:39,164 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:29:39,523 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-12 02:29:40,167 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)

***************************************************
Status: Success
Git Base Revision: b3cbbb467e22ea829b3808f4b7b01d07e0bf3842
Number of Volumes created: 1
Number of Buckets created: 1
Number of Keys added: 1
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,492
Average Time spent in bucket creation: 00:00:00,179
Average Time spent in key creation: 00:00:01,316
Average Time spent in key write: 00:00:01,814
Total bytes written: 10240
Total Execution time: 00:00:08,229
***************************************************</msg>
<status status="PASS" endtime="20201212 02:29:42.374" starttime="20201212 02:29:42.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:29:42.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:29:42.375" starttime="20201212 02:29:42.375"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:42.375" starttime="20201212 02:29:31.594"></status>
</kw>
<msg timestamp="20201212 02:29:42.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:29:42.376" starttime="20201212 02:29:31.593"></status>
</kw>
<msg timestamp="20201212 02:29:42.376" level="INFO">${result} = 2020-12-12 02:29:33,372 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:33,621 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 02:29:42.376" starttime="20201212 02:29:31.593"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 1</arg>
</arguments>
<status status="PASS" endtime="20201212 02:29:42.377" starttime="20201212 02:29:42.376"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:42.377" starttime="20201212 02:29:42.376"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 02:29:42.377" critical="yes" starttime="20201212 02:29:31.592"></status>
</test>
<test id="s1-s1-s1-t2" name="Freon Ozone Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:29:42.385" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:29:50.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:29:50.686" level="INFO">${output} = 2020-12-12 02:29:44,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:44,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 02:29:50.686" starttime="20201212 02:29:42.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:29:50.688" level="INFO">2020-12-12 02:29:44,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:44,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:29:44,286 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-12 02:29:44,474 [main] INFO freon.BaseFreonGenerator: Executing test with prefix bkqyylsjqi
2020-12-12 02:29:44,502 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-12 02:29:45,509 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:29:46,022 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner.
2020-12-12 02:29:46,087 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-12 02:29:46,510 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:29:46,758 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-12 02:29:47,082 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 02:29:47,083 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-B7F81069992A-&gt;fe48637a-3787-485f-83f1-c003d1348dea
2020-12-12 02:29:47,084 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 02:29:47,511 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:29:48,511 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:29:49,512 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-12 02:29:50,318 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=3035.679869, max=3035.679869, mean=3035.679869, stddev=0.0, median=3035.679869, p75=3035.679869, p95=3035.679869, p98=3035.679869, p99=3035.679869, p999=3035.679869, mean_rate=0.2410381527314773, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-12 02:29:50,319 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2020-12-12 02:29:50,321 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-12 02:29:50,321 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201212 02:29:50.688" starttime="20201212 02:29:50.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:29:50.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:29:50.689" starttime="20201212 02:29:50.689"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:50.690" starttime="20201212 02:29:42.381"></status>
</kw>
<msg timestamp="20201212 02:29:50.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:29:50.690" starttime="20201212 02:29:42.381"></status>
</kw>
<msg timestamp="20201212 02:29:50.690" level="INFO">${result} = 2020-12-12 02:29:44,088 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:44,286 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 02:29:50.690" starttime="20201212 02:29:42.380"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201212 02:29:50.691" starttime="20201212 02:29:50.691"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:50.691" starttime="20201212 02:29:50.690"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 02:29:50.692" critical="yes" starttime="20201212 02:29:42.379"></status>
</test>
<test id="s1-s1-s1-t3" name="Freon OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:29:50.697" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:29:55.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:29:55.769" level="INFO">${output} = 2020-12-12 02:29:52,539 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:52,790 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 02:29:55.769" starttime="20201212 02:29:50.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:29:55.770" level="INFO">2020-12-12 02:29:52,539 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:52,790 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:29:52,790 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-12 02:29:52,969 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 42mmgz8ivq
2020-12-12 02:29:52,988 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-12 02:29:53,995 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:29:54,995 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-12 02:29:55,738 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=268.193746, max=268.193746, mean=268.193746, stddev=0.0, median=268.193746, p75=268.193746, p95=268.193746, p98=268.193746, p99=268.193746, p999=268.193746, mean_rate=0.8856033822100025, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-12 02:29:55,739 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-12 02:29:55,745 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-12 02:29:55,745 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201212 02:29:55.770" starttime="20201212 02:29:55.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:29:55.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:29:55.771" starttime="20201212 02:29:55.770"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:55.771" starttime="20201212 02:29:50.694"></status>
</kw>
<msg timestamp="20201212 02:29:55.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:29:55.771" starttime="20201212 02:29:50.694"></status>
</kw>
<msg timestamp="20201212 02:29:55.772" level="INFO">${result} = 2020-12-12 02:29:52,539 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:52,790 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 02:29:55.772" starttime="20201212 02:29:50.693"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201212 02:29:55.773" starttime="20201212 02:29:55.772"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:55.773" starttime="20201212 02:29:55.772"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 02:29:55.773" critical="yes" starttime="20201212 02:29:50.692"></status>
</test>
<test id="s1-s1-s1-t4" name="Freon OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:29:55.779" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:00.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:00.695" level="INFO">${output} = 2020-12-12 02:29:57,585 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:57,835 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 02:30:00.695" starttime="20201212 02:29:55.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:00.696" level="INFO">2020-12-12 02:29:57,585 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:57,835 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:29:57,835 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-12 02:29:58,048 [main] INFO freon.BaseFreonGenerator: Executing test with prefix f5h6g5nmpi
2020-12-12 02:29:58,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2020-12-12 02:29:59,071 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-12 02:30:00,072 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-12 02:30:00,671 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=72.708283, max=72.708283, mean=72.708283, stddev=0.0, median=72.708283, p75=72.708283, p95=72.708283, p98=72.708283, p99=72.708283, p999=72.708283, mean_rate=0.8746752206264595, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-12 02:30:00,671 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-12 02:30:00,674 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-12 02:30:00,674 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201212 02:30:00.697" starttime="20201212 02:30:00.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:00.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:00.697" starttime="20201212 02:30:00.697"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:00.698" starttime="20201212 02:29:55.775"></status>
</kw>
<msg timestamp="20201212 02:30:00.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:00.698" starttime="20201212 02:29:55.775"></status>
</kw>
<msg timestamp="20201212 02:30:00.698" level="INFO">${result} = 2020-12-12 02:29:57,585 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-12 02:29:57,835 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201212 02:30:00.698" starttime="20201212 02:29:55.775"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201212 02:30:00.699" starttime="20201212 02:30:00.699"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:00.699" starttime="20201212 02:30:00.698"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 02:30:00.699" critical="yes" starttime="20201212 02:29:55.774"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20201212 02:30:00.701" starttime="20201212 02:29:31.567"></status>
</suite>
<status status="PASS" endtime="20201212 02:30:00.704" starttime="20201212 02:29:31.539"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:29:23.108" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:29:23.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:29:23.113" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:29:23.113" starttime="20201212 02:29:23.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:29:23.115" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:29:23.115" starttime="20201212 02:29:23.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:29:23.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:29:23.126" starttime="20201212 02:29:23.116"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:23.127" starttime="20201212 02:29:23.100"></status>
</kw>
<msg timestamp="20201212 02:29:23.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:29:23.127" starttime="20201212 02:29:23.100"></status>
</kw>
<msg timestamp="20201212 02:29:23.127" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:29:23.127" starttime="20201212 02:29:23.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:29:23.128" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:29:23.128" starttime="20201212 02:29:23.128"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:29:23.147" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:29:23.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:29:23.173" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:29:23.173" starttime="20201212 02:29:23.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:29:23.174" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:29:23.174" starttime="20201212 02:29:23.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:29:23.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:29:23.175" starttime="20201212 02:29:23.174"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:23.175" starttime="20201212 02:29:23.130"></status>
</kw>
<msg timestamp="20201212 02:29:23.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:29:23.175" starttime="20201212 02:29:23.129"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:23.176" starttime="20201212 02:29:23.129"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:23.176" starttime="20201212 02:29:23.128"></status>
</kw>
<status status="PASS" endtime="20201212 02:29:23.176" starttime="20201212 02:29:23.098"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:29:23.176" critical="yes" starttime="20201212 02:29:23.093"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201212 02:29:23.178" starttime="20201212 02:29:22.937"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 02:30:06.864" level="INFO">${random} = 29886</msg>
<status status="PASS" endtime="20201212 02:30:06.864" starttime="20201212 02:30:06.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20201212 02:30:06.865" level="INFO">${source} = 29886-source</msg>
<status status="PASS" endtime="20201212 02:30:06.865" starttime="20201212 02:30:06.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20201212 02:30:06.866" level="INFO">${target} = 29886-target</msg>
<status status="PASS" endtime="20201212 02:30:06.866" starttime="20201212 02:30:06.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:06.872" level="INFO">Running command 'ozone sh volume create 29886-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:10.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:10.484" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:10.484" starttime="20201212 02:30:06.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:10.485" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:30:10.485" starttime="20201212 02:30:10.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:10.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:10.485" starttime="20201212 02:30:10.485"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:10.486" starttime="20201212 02:30:06.867"></status>
</kw>
<msg timestamp="20201212 02:30:10.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:10.486" starttime="20201212 02:30:06.867"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:10.486" starttime="20201212 02:30:06.866"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:10.490" level="INFO">Running command 'ozone sh volume create 29886-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:15.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:15.099" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:15.099" starttime="20201212 02:30:10.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:15.100" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:30:15.100" starttime="20201212 02:30:15.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:15.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:15.100" starttime="20201212 02:30:15.100"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:15.101" starttime="20201212 02:30:10.487"></status>
</kw>
<msg timestamp="20201212 02:30:15.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:15.101" starttime="20201212 02:30:10.487"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:15.101" starttime="20201212 02:30:10.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:15.114" level="INFO">Running command 'ozone sh bucket create 29886-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:18.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:18.852" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:18.852" starttime="20201212 02:30:15.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:18.853" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:30:18.854" starttime="20201212 02:30:18.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:18.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:18.854" starttime="20201212 02:30:18.854"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:18.854" starttime="20201212 02:30:15.103"></status>
</kw>
<msg timestamp="20201212 02:30:18.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:18.855" starttime="20201212 02:30:15.103"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:18.855" starttime="20201212 02:30:15.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:18.860" level="INFO">Running command 'ozone sh key put 29886-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:24.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:24.954" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:24.954" starttime="20201212 02:30:18.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:24.955" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:30:24.956" starttime="20201212 02:30:24.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:24.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:24.956" starttime="20201212 02:30:24.956"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:24.956" starttime="20201212 02:30:18.856"></status>
</kw>
<msg timestamp="20201212 02:30:24.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:24.957" starttime="20201212 02:30:18.856"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:24.957" starttime="20201212 02:30:18.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:24.960" level="INFO">Running command 'ozone sh bucket create 29886-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:28.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:28.549" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:28.549" starttime="20201212 02:30:24.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:28.551" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:30:28.551" starttime="20201212 02:30:28.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:28.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:28.551" starttime="20201212 02:30:28.551"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:28.552" starttime="20201212 02:30:24.958"></status>
</kw>
<msg timestamp="20201212 02:30:28.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:28.552" starttime="20201212 02:30:24.957"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:28.552" starttime="20201212 02:30:24.957"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:28.557" level="INFO">Running command 'ozone sh bucket link 29886-source/readable-bucket 29886-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:32.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:32.195" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:32.195" starttime="20201212 02:30:28.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:32.197" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:30:32.197" starttime="20201212 02:30:32.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:32.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:32.198" starttime="20201212 02:30:32.198"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:32.198" starttime="20201212 02:30:28.553"></status>
</kw>
<msg timestamp="20201212 02:30:32.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:32.199" starttime="20201212 02:30:28.553"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:32.199" starttime="20201212 02:30:28.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:32.204" level="INFO">Running command 'ozone sh bucket link 29886-source/readable-bucket 29886-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:35.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:35.919" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:35.919" starttime="20201212 02:30:32.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:35.920" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:30:35.920" starttime="20201212 02:30:35.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:35.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:35.920" starttime="20201212 02:30:35.920"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:35.921" starttime="20201212 02:30:32.200"></status>
</kw>
<msg timestamp="20201212 02:30:35.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:35.921" starttime="20201212 02:30:32.200"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:35.921" starttime="20201212 02:30:32.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:35.925" level="INFO">Running command 'ozone sh bucket link 29886-source/unreadable-bucket 29886-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:40.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:40.023" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:40.023" starttime="20201212 02:30:35.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:40.024" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:30:40.024" starttime="20201212 02:30:40.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:40.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:40.024" starttime="20201212 02:30:40.024"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:40.025" starttime="20201212 02:30:35.922"></status>
</kw>
<msg timestamp="20201212 02:30:40.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:40.025" starttime="20201212 02:30:35.922"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:40.025" starttime="20201212 02:30:35.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:40.030" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 29886-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:43.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:43.974" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:43.974" starttime="20201212 02:30:40.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:43.975" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 02:30:43.975" starttime="20201212 02:30:43.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:43.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:43.975" starttime="20201212 02:30:43.975"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:43.976" starttime="20201212 02:30:40.026"></status>
</kw>
<msg timestamp="20201212 02:30:43.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:43.976" starttime="20201212 02:30:40.026"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:43.976" starttime="20201212 02:30:40.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:43.980" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 29886-source 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:48.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:48.025" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:48.025" starttime="20201212 02:30:43.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:48.026" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 02:30:48.026" starttime="20201212 02:30:48.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:48.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:48.027" starttime="20201212 02:30:48.026"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:48.027" starttime="20201212 02:30:43.977"></status>
</kw>
<msg timestamp="20201212 02:30:48.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:48.027" starttime="20201212 02:30:43.977"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:48.027" starttime="20201212 02:30:43.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:48.032" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 29886-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:51.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:51.542" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:51.542" starttime="20201212 02:30:48.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:51.543" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 02:30:51.543" starttime="20201212 02:30:51.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:51.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:51.544" starttime="20201212 02:30:51.543"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:51.544" starttime="20201212 02:30:48.028"></status>
</kw>
<msg timestamp="20201212 02:30:51.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:51.544" starttime="20201212 02:30:48.028"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:51.545" starttime="20201212 02:30:48.027"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:51.549" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 29886-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:55.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:55.241" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:55.241" starttime="20201212 02:30:51.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:55.242" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 02:30:55.242" starttime="20201212 02:30:55.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:55.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:55.243" starttime="20201212 02:30:55.242"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:55.243" starttime="20201212 02:30:51.546"></status>
</kw>
<msg timestamp="20201212 02:30:55.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:55.243" starttime="20201212 02:30:51.545"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:55.244" starttime="20201212 02:30:51.545"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:55.248" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 29886-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:58.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:58.870" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:30:58.870" starttime="20201212 02:30:55.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:58.872" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 02:30:58.872" starttime="20201212 02:30:58.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:58.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:58.872" starttime="20201212 02:30:58.872"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.872" starttime="20201212 02:30:55.244"></status>
</kw>
<msg timestamp="20201212 02:30:58.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:58.873" starttime="20201212 02:30:55.244"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.873" starttime="20201212 02:30:55.244"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.873" starttime="20201212 02:30:15.102"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.873" starttime="20201212 02:30:15.101"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.873" starttime="20201212 02:30:06.863"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:58.881" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:58.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:58.883" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:30:58.883" starttime="20201212 02:30:58.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:58.884" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:30:58.884" starttime="20201212 02:30:58.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:58.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:58.885" starttime="20201212 02:30:58.884"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.885" starttime="20201212 02:30:58.877"></status>
</kw>
<msg timestamp="20201212 02:30:58.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:58.885" starttime="20201212 02:30:58.876"></status>
</kw>
<msg timestamp="20201212 02:30:58.886" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:30:58.886" starttime="20201212 02:30:58.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:30:58.887" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:30:58.887" starttime="20201212 02:30:58.886"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:58.891" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:30:58.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:30:58.911" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:30:58.911" starttime="20201212 02:30:58.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:30:58.912" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:30:58.912" starttime="20201212 02:30:58.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:30:58.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:30:58.913" starttime="20201212 02:30:58.912"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.913" starttime="20201212 02:30:58.888"></status>
</kw>
<msg timestamp="20201212 02:30:58.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:30:58.913" starttime="20201212 02:30:58.888"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.914" starttime="20201212 02:30:58.888"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.914" starttime="20201212 02:30:58.887"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.914" starttime="20201212 02:30:58.875"></status>
</kw>
<status status="PASS" endtime="20201212 02:30:58.914" starttime="20201212 02:30:58.875"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:30:58.918" level="INFO">Running command 'ozone sh bucket link 29886-source/no-such-bucket 29886-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:02.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:02.644" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:02.644" starttime="20201212 02:30:58.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:02.645" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:31:02.645" starttime="20201212 02:31:02.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:02.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:02.646" starttime="20201212 02:31:02.646"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:02.646" starttime="20201212 02:30:58.915"></status>
</kw>
<msg timestamp="20201212 02:31:02.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:02.647" starttime="20201212 02:30:58.915"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:02.647" starttime="20201212 02:30:58.914"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:02.650" level="INFO">Running command 'ozone sh key list 29886-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:06.345" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 02:31:06.345" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:06.345" starttime="20201212 02:31:02.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:06.346" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20201212 02:31:06.346" starttime="20201212 02:31:06.346"></status>
</kw>
<msg timestamp="20201212 02:31:06.347" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:06.347" starttime="20201212 02:31:02.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 02:31:06.348" starttime="20201212 02:31:06.347"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:31:06.348" critical="yes" starttime="20201212 02:30:58.874"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:06.354" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:06.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:06.356" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:31:06.356" starttime="20201212 02:31:06.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:06.357" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:31:06.357" starttime="20201212 02:31:06.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:06.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:06.358" starttime="20201212 02:31:06.358"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:06.358" starttime="20201212 02:31:06.351"></status>
</kw>
<msg timestamp="20201212 02:31:06.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:06.359" starttime="20201212 02:31:06.351"></status>
</kw>
<msg timestamp="20201212 02:31:06.359" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:31:06.359" starttime="20201212 02:31:06.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:31:06.360" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:31:06.360" starttime="20201212 02:31:06.359"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:06.365" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:06.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:06.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:31:06.376" starttime="20201212 02:31:06.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:06.377" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:31:06.377" starttime="20201212 02:31:06.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:06.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:06.378" starttime="20201212 02:31:06.377"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:06.378" starttime="20201212 02:31:06.361"></status>
</kw>
<msg timestamp="20201212 02:31:06.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:06.378" starttime="20201212 02:31:06.361"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:06.379" starttime="20201212 02:31:06.360"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:06.379" starttime="20201212 02:31:06.360"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:06.379" starttime="20201212 02:31:06.350"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:06.379" starttime="20201212 02:31:06.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:06.385" level="INFO">Running command 'ozone sh bucket link 29886-source/bucket1 29886-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:09.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:09.947" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:09.947" starttime="20201212 02:31:06.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:09.948" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:31:09.948" starttime="20201212 02:31:09.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:09.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:09.949" starttime="20201212 02:31:09.948"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:09.949" starttime="20201212 02:31:06.380"></status>
</kw>
<msg timestamp="20201212 02:31:09.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:09.949" starttime="20201212 02:31:06.380"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:09.949" starttime="20201212 02:31:06.379"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:09.955" level="INFO">Running command 'ozone sh bucket create 29886-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:13.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:13.929" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:13.929" starttime="20201212 02:31:09.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:13.931" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:31:13.931" starttime="20201212 02:31:13.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:13.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:13.931" starttime="20201212 02:31:13.931"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:13.932" starttime="20201212 02:31:09.951"></status>
</kw>
<msg timestamp="20201212 02:31:13.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:13.932" starttime="20201212 02:31:09.950"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:13.932" starttime="20201212 02:31:09.950"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:13.937" level="INFO">Running command 'ozone sh key put 29886-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:20.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:20.162" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:20.163" starttime="20201212 02:31:13.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:20.164" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:31:20.164" starttime="20201212 02:31:20.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:20.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:20.165" starttime="20201212 02:31:20.164"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:20.165" starttime="20201212 02:31:13.933"></status>
</kw>
<msg timestamp="20201212 02:31:20.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:20.165" starttime="20201212 02:31:13.933"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:20.166" starttime="20201212 02:31:13.932"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201212 02:31:20.167" level="INFO">${postfix} = 51542</msg>
<status status="PASS" endtime="20201212 02:31:20.168" starttime="20201212 02:31:20.167"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201212 02:31:20.168" level="INFO">${tmpfile} = /tmp/tempkey-51542</msg>
<status status="PASS" endtime="20201212 02:31:20.168" starttime="20201212 02:31:20.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:20.173" level="INFO">Running command 'ozone sh key get -f 29886-target/link1/key1 /tmp/tempkey-51542 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:25.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:25.798" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:25.798" starttime="20201212 02:31:20.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:25.799" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:31:25.799" starttime="20201212 02:31:25.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:25.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:25.800" starttime="20201212 02:31:25.799"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.800" starttime="20201212 02:31:20.169"></status>
</kw>
<msg timestamp="20201212 02:31:25.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:25.800" starttime="20201212 02:31:20.169"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.801" starttime="20201212 02:31:20.168"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201212 02:31:25.805" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-51542 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:25.807" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201212 02:31:25.807" starttime="20201212 02:31:25.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:25.813" level="INFO">Running command 'rm -f /tmp/tempkey-51542 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:25.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:25.815" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:31:25.815" starttime="20201212 02:31:25.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:25.816" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:31:25.816" starttime="20201212 02:31:25.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:25.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:25.817" starttime="20201212 02:31:25.816"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.817" starttime="20201212 02:31:25.809"></status>
</kw>
<msg timestamp="20201212 02:31:25.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:25.817" starttime="20201212 02:31:25.808"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.818" starttime="20201212 02:31:25.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:31:25.818" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201212 02:31:25.818" starttime="20201212 02:31:25.818"></status>
</kw>
<msg timestamp="20201212 02:31:25.818" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201212 02:31:25.818" starttime="20201212 02:31:20.166"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:31:25.819" starttime="20201212 02:31:25.819"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.819" starttime="20201212 02:31:20.166"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:31:25.819" critical="yes" starttime="20201212 02:31:06.348"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:25.826" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:25.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:25.828" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:31:25.828" starttime="20201212 02:31:25.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:25.829" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:31:25.830" starttime="20201212 02:31:25.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:25.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:25.830" starttime="20201212 02:31:25.830"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.831" starttime="20201212 02:31:25.823"></status>
</kw>
<msg timestamp="20201212 02:31:25.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:25.831" starttime="20201212 02:31:25.823"></status>
</kw>
<msg timestamp="20201212 02:31:25.831" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:31:25.831" starttime="20201212 02:31:25.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:31:25.832" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:31:25.832" starttime="20201212 02:31:25.831"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:25.837" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:25.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:25.860" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:31:25.860" starttime="20201212 02:31:25.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:25.861" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:31:25.861" starttime="20201212 02:31:25.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:25.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:25.862" starttime="20201212 02:31:25.861"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.862" starttime="20201212 02:31:25.833"></status>
</kw>
<msg timestamp="20201212 02:31:25.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:25.862" starttime="20201212 02:31:25.833"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.862" starttime="20201212 02:31:25.832"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.862" starttime="20201212 02:31:25.832"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.862" starttime="20201212 02:31:25.822"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:25.863" starttime="20201212 02:31:25.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:25.867" level="INFO">Running command 'ozone sh key put 29886-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:31.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:31.598" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:31.598" starttime="20201212 02:31:25.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:31.600" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:31:31.600" starttime="20201212 02:31:31.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:31.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:31.600" starttime="20201212 02:31:31.600"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:31.601" starttime="20201212 02:31:25.864"></status>
</kw>
<msg timestamp="20201212 02:31:31.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:31.601" starttime="20201212 02:31:25.863"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:31.601" starttime="20201212 02:31:25.863"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201212 02:31:31.603" level="INFO">${postfix} = 72969</msg>
<status status="PASS" endtime="20201212 02:31:31.603" starttime="20201212 02:31:31.602"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201212 02:31:31.603" level="INFO">${tmpfile} = /tmp/tempkey-72969</msg>
<status status="PASS" endtime="20201212 02:31:31.603" starttime="20201212 02:31:31.603"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:31.609" level="INFO">Running command 'ozone sh key get -f 29886-source/bucket1/key2 /tmp/tempkey-72969 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:37.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:37.294" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:37.294" starttime="20201212 02:31:31.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:37.295" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:31:37.295" starttime="20201212 02:31:37.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:37.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:37.296" starttime="20201212 02:31:37.296"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.296" starttime="20201212 02:31:31.604"></status>
</kw>
<msg timestamp="20201212 02:31:37.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:37.297" starttime="20201212 02:31:31.604"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.297" starttime="20201212 02:31:31.603"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201212 02:31:37.299" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-72969 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:37.302" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201212 02:31:37.302" starttime="20201212 02:31:37.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:37.308" level="INFO">Running command 'rm -f /tmp/tempkey-72969 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:37.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:37.309" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:31:37.309" starttime="20201212 02:31:37.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:37.311" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:31:37.311" starttime="20201212 02:31:37.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:37.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:37.312" starttime="20201212 02:31:37.311"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.313" starttime="20201212 02:31:37.304"></status>
</kw>
<msg timestamp="20201212 02:31:37.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:37.313" starttime="20201212 02:31:37.304"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.313" starttime="20201212 02:31:37.303"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:31:37.314" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201212 02:31:37.314" starttime="20201212 02:31:37.313"></status>
</kw>
<msg timestamp="20201212 02:31:37.314" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201212 02:31:37.314" starttime="20201212 02:31:31.602"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:31:37.314" starttime="20201212 02:31:37.314"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.315" starttime="20201212 02:31:31.601"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:31:37.315" critical="yes" starttime="20201212 02:31:25.821"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:37.322" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:37.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:37.324" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:31:37.324" starttime="20201212 02:31:37.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:37.325" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:31:37.325" starttime="20201212 02:31:37.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:37.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:37.326" starttime="20201212 02:31:37.325"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.326" starttime="20201212 02:31:37.319"></status>
</kw>
<msg timestamp="20201212 02:31:37.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:37.326" starttime="20201212 02:31:37.319"></status>
</kw>
<msg timestamp="20201212 02:31:37.327" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:31:37.327" starttime="20201212 02:31:37.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:31:37.327" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:31:37.327" starttime="20201212 02:31:37.327"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:37.332" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:37.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:37.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:31:37.348" starttime="20201212 02:31:37.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:37.349" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:31:37.349" starttime="20201212 02:31:37.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:37.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:37.350" starttime="20201212 02:31:37.349"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.350" starttime="20201212 02:31:37.329"></status>
</kw>
<msg timestamp="20201212 02:31:37.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:37.351" starttime="20201212 02:31:37.328"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.351" starttime="20201212 02:31:37.328"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.351" starttime="20201212 02:31:37.328"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.351" starttime="20201212 02:31:37.317"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:37.351" starttime="20201212 02:31:37.317"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:37.356" level="INFO">Running command 'ozone sh key list 29886-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:41.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:41.010" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201212 02:31:41.010" starttime="20201212 02:31:37.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:41.011" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201212 02:31:41.011" starttime="20201212 02:31:41.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:41.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:41.012" starttime="20201212 02:31:41.011"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:41.012" starttime="20201212 02:31:37.352"></status>
</kw>
<msg timestamp="20201212 02:31:41.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:41.012" starttime="20201212 02:31:37.352"></status>
</kw>
<msg timestamp="20201212 02:31:41.013" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20201212 02:31:41.013" starttime="20201212 02:31:37.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:41.017" level="INFO">Running command 'ozone sh key list 29886-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:44.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:44.699" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20201212 02:31:44.699" starttime="20201212 02:31:41.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:44.701" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20201212 02:31:44.701" starttime="20201212 02:31:44.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:44.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:44.702" starttime="20201212 02:31:44.701"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:44.703" starttime="20201212 02:31:41.014"></status>
</kw>
<msg timestamp="20201212 02:31:44.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:44.703" starttime="20201212 02:31:41.013"></status>
</kw>
<msg timestamp="20201212 02:31:44.703" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20201212 02:31:44.703" starttime="20201212 02:31:41.013"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:31:44.704" starttime="20201212 02:31:44.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201212 02:31:44.705" starttime="20201212 02:31:44.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201212 02:31:44.705" starttime="20201212 02:31:44.705"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:31:44.705" critical="yes" starttime="20201212 02:31:37.316"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:44.713" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:44.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:44.716" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:31:44.716" starttime="20201212 02:31:44.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:44.717" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:31:44.717" starttime="20201212 02:31:44.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:44.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:44.718" starttime="20201212 02:31:44.717"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:44.718" starttime="20201212 02:31:44.710"></status>
</kw>
<msg timestamp="20201212 02:31:44.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:44.719" starttime="20201212 02:31:44.710"></status>
</kw>
<msg timestamp="20201212 02:31:44.719" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:31:44.719" starttime="20201212 02:31:44.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:31:44.720" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:31:44.720" starttime="20201212 02:31:44.719"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:44.725" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:44.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:44.737" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:31:44.738" starttime="20201212 02:31:44.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:44.739" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:31:44.739" starttime="20201212 02:31:44.738"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:44.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:44.740" starttime="20201212 02:31:44.740"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:44.740" starttime="20201212 02:31:44.721"></status>
</kw>
<msg timestamp="20201212 02:31:44.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:44.741" starttime="20201212 02:31:44.721"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:44.741" starttime="20201212 02:31:44.720"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:44.741" starttime="20201212 02:31:44.720"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:44.741" starttime="20201212 02:31:44.709"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:44.741" starttime="20201212 02:31:44.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:44.748" level="INFO">Running command 'ozone sh key delete 29886-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:48.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:48.587" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:48.587" starttime="20201212 02:31:44.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:48.588" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:31:48.588" starttime="20201212 02:31:48.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:48.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:48.591" starttime="20201212 02:31:48.590"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:48.591" starttime="20201212 02:31:44.742"></status>
</kw>
<msg timestamp="20201212 02:31:48.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:48.591" starttime="20201212 02:31:44.742"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:48.591" starttime="20201212 02:31:44.741"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:48.600" level="INFO">Running command 'ozone sh key list 29886-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:52.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:52.790" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20201212 02:31:52.790" starttime="20201212 02:31:48.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:52.791" level="INFO">key1</msg>
<status status="PASS" endtime="20201212 02:31:52.792" starttime="20201212 02:31:52.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:52.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:52.792" starttime="20201212 02:31:52.792"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:52.793" starttime="20201212 02:31:48.592"></status>
</kw>
<msg timestamp="20201212 02:31:52.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:52.793" starttime="20201212 02:31:48.592"></status>
</kw>
<msg timestamp="20201212 02:31:52.793" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20201212 02:31:52.793" starttime="20201212 02:31:48.592"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20201212 02:31:52.794" starttime="20201212 02:31:52.793"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:31:52.794" critical="yes" starttime="20201212 02:31:44.706"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:52.799" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:52.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:52.802" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:31:52.802" starttime="20201212 02:31:52.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:52.803" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:31:52.803" starttime="20201212 02:31:52.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:52.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:52.803" starttime="20201212 02:31:52.803"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:52.804" starttime="20201212 02:31:52.797"></status>
</kw>
<msg timestamp="20201212 02:31:52.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:52.804" starttime="20201212 02:31:52.796"></status>
</kw>
<msg timestamp="20201212 02:31:52.804" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:31:52.804" starttime="20201212 02:31:52.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:31:52.805" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:31:52.805" starttime="20201212 02:31:52.804"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:52.809" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:52.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:52.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:31:52.823" starttime="20201212 02:31:52.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:52.824" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:31:52.825" starttime="20201212 02:31:52.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:52.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:52.825" starttime="20201212 02:31:52.825"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:52.825" starttime="20201212 02:31:52.806"></status>
</kw>
<msg timestamp="20201212 02:31:52.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:52.826" starttime="20201212 02:31:52.806"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:52.826" starttime="20201212 02:31:52.805"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:52.826" starttime="20201212 02:31:52.805"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:52.826" starttime="20201212 02:31:52.795"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:52.826" starttime="20201212 02:31:52.795"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:52.830" level="INFO">Running command 'ozone sh bucket list 29886-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:56.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:56.867" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:56.867" starttime="20201212 02:31:52.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:56.868" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:31:02.537Z",
  "modificationTime" : "2020-12-12T02:31:02.537Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:30:39.853Z",
  "modificationTime" : "2020-12-12T02:30:58.706Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:31:09.721Z",
  "modificationTime" : "2020-12-12T02:31:09.721Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:30:32.105Z",
  "modificationTime" : "2020-12-12T02:30:54.911Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:30:35.800Z",
  "modificationTime" : "2020-12-12T02:30:35.800Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 02:31:56.868" starttime="20201212 02:31:56.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:56.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:56.869" starttime="20201212 02:31:56.868"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:56.869" starttime="20201212 02:31:52.827"></status>
</kw>
<msg timestamp="20201212 02:31:56.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:56.869" starttime="20201212 02:31:52.827"></status>
</kw>
<msg timestamp="20201212 02:31:56.870" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:31:56.870" starttime="20201212 02:31:52.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201212 02:31:56.870" starttime="20201212 02:31:56.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20201212 02:31:56.871" starttime="20201212 02:31:56.870"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:31:56.871" critical="yes" starttime="20201212 02:31:52.794"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:56.878" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:56.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:56.880" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:31:56.880" starttime="20201212 02:31:56.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:56.881" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:31:56.881" starttime="20201212 02:31:56.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:56.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:56.882" starttime="20201212 02:31:56.881"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:56.882" starttime="20201212 02:31:56.875"></status>
</kw>
<msg timestamp="20201212 02:31:56.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:56.883" starttime="20201212 02:31:56.874"></status>
</kw>
<msg timestamp="20201212 02:31:56.883" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:31:56.883" starttime="20201212 02:31:56.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:31:56.884" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:31:56.884" starttime="20201212 02:31:56.883"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:56.889" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:31:56.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:31:56.901" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:31:56.901" starttime="20201212 02:31:56.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:31:56.902" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:31:56.902" starttime="20201212 02:31:56.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:31:56.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:31:56.902" starttime="20201212 02:31:56.902"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:56.903" starttime="20201212 02:31:56.885"></status>
</kw>
<msg timestamp="20201212 02:31:56.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:31:56.903" starttime="20201212 02:31:56.885"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:56.903" starttime="20201212 02:31:56.884"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:56.904" starttime="20201212 02:31:56.884"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:56.904" starttime="20201212 02:31:56.873"></status>
</kw>
<status status="PASS" endtime="20201212 02:31:56.904" starttime="20201212 02:31:56.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:31:56.909" level="INFO">Running command 'ozone sh bucket info 29886-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:00.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:00.660" level="INFO">${output} = 29886-source bucket1</msg>
<status status="PASS" endtime="20201212 02:32:00.660" starttime="20201212 02:31:56.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:00.661" level="INFO">29886-source bucket1</msg>
<status status="PASS" endtime="20201212 02:32:00.662" starttime="20201212 02:32:00.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:00.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:00.662" starttime="20201212 02:32:00.662"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:00.663" starttime="20201212 02:31:56.905"></status>
</kw>
<msg timestamp="20201212 02:32:00.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:00.663" starttime="20201212 02:31:56.905"></status>
</kw>
<msg timestamp="20201212 02:32:00.663" level="INFO">${result} = 29886-source bucket1</msg>
<status status="PASS" endtime="20201212 02:32:00.663" starttime="20201212 02:31:56.904"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:00.664" starttime="20201212 02:32:00.663"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:32:00.664" critical="yes" starttime="20201212 02:31:56.872"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:00.671" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:00.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:00.673" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:32:00.673" starttime="20201212 02:32:00.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:00.674" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:32:00.674" starttime="20201212 02:32:00.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:00.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:00.675" starttime="20201212 02:32:00.674"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:00.675" starttime="20201212 02:32:00.668"></status>
</kw>
<msg timestamp="20201212 02:32:00.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:00.675" starttime="20201212 02:32:00.667"></status>
</kw>
<msg timestamp="20201212 02:32:00.676" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:32:00.676" starttime="20201212 02:32:00.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:32:00.676" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:32:00.676" starttime="20201212 02:32:00.676"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:00.681" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:00.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:00.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:00.695" starttime="20201212 02:32:00.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:00.697" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:00.697" starttime="20201212 02:32:00.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:00.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:00.698" starttime="20201212 02:32:00.697"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:00.698" starttime="20201212 02:32:00.678"></status>
</kw>
<msg timestamp="20201212 02:32:00.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:00.698" starttime="20201212 02:32:00.677"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:00.698" starttime="20201212 02:32:00.677"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:00.698" starttime="20201212 02:32:00.677"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:00.699" starttime="20201212 02:32:00.666"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:00.699" starttime="20201212 02:32:00.666"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:00.704" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 29886-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:04.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:04.328" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:04.328" starttime="20201212 02:32:00.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:04.329" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 02:32:04.330" starttime="20201212 02:32:04.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:04.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:04.330" starttime="20201212 02:32:04.330"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:04.331" starttime="20201212 02:32:00.700"></status>
</kw>
<msg timestamp="20201212 02:32:04.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:04.331" starttime="20201212 02:32:00.699"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:04.331" starttime="20201212 02:32:00.699"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:04.337" level="INFO">Running command 'ozone sh bucket getacl 29886-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:08.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:08.345" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201212 02:32:08.345" starttime="20201212 02:32:04.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:08.346" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201212 02:32:08.346" starttime="20201212 02:32:08.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:08.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:08.347" starttime="20201212 02:32:08.346"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:08.347" starttime="20201212 02:32:04.333"></status>
</kw>
<msg timestamp="20201212 02:32:08.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:08.348" starttime="20201212 02:32:04.333"></status>
</kw>
<msg timestamp="20201212 02:32:08.348" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20201212 02:32:08.348" starttime="20201212 02:32:04.332"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:08.348" starttime="20201212 02:32:08.348"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:08.349" starttime="20201212 02:32:04.331"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:08.354" level="INFO">Running command 'ozone sh bucket getacl 29886-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:12.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:12.084" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:12.084" starttime="20201212 02:32:08.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:12.085" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:12.085" starttime="20201212 02:32:12.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:12.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:12.086" starttime="20201212 02:32:12.085"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:12.086" starttime="20201212 02:32:08.351"></status>
</kw>
<msg timestamp="20201212 02:32:12.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:12.086" starttime="20201212 02:32:08.350"></status>
</kw>
<msg timestamp="20201212 02:32:12.087" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201212 02:32:12.087" starttime="20201212 02:32:08.350"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:12.087" starttime="20201212 02:32:12.087"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:12.087" starttime="20201212 02:32:08.349"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:12.093" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 29886-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:15.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:15.839" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:15.839" starttime="20201212 02:32:12.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:15.840" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20201212 02:32:15.840" starttime="20201212 02:32:15.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:15.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:15.841" starttime="20201212 02:32:15.841"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:15.841" starttime="20201212 02:32:12.089"></status>
</kw>
<msg timestamp="20201212 02:32:15.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:15.842" starttime="20201212 02:32:12.088"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:15.842" starttime="20201212 02:32:12.088"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:15.847" level="INFO">Running command 'ozone sh bucket getacl 29886-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:19.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:19.553" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:19.553" starttime="20201212 02:32:15.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:19.554" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:19.554" starttime="20201212 02:32:19.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:19.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:19.555" starttime="20201212 02:32:19.554"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:19.555" starttime="20201212 02:32:15.844"></status>
</kw>
<msg timestamp="20201212 02:32:19.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:19.555" starttime="20201212 02:32:15.844"></status>
</kw>
<msg timestamp="20201212 02:32:19.555" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20201212 02:32:19.555" starttime="20201212 02:32:15.843"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:19.556" starttime="20201212 02:32:19.556"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:19.556" starttime="20201212 02:32:15.842"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:19.562" level="INFO">Running command 'ozone sh bucket getacl 29886-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:23.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:23.403" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20201212 02:32:23.403" starttime="20201212 02:32:19.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:23.404" level="INFO">READ</msg>
<status status="PASS" endtime="20201212 02:32:23.404" starttime="20201212 02:32:23.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:23.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:23.405" starttime="20201212 02:32:23.405"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:23.405" starttime="20201212 02:32:19.558"></status>
</kw>
<msg timestamp="20201212 02:32:23.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:23.406" starttime="20201212 02:32:19.558"></status>
</kw>
<msg timestamp="20201212 02:32:23.406" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20201212 02:32:23.406" starttime="20201212 02:32:19.557"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:23.406" starttime="20201212 02:32:23.406"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:23.407" starttime="20201212 02:32:19.556"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:32:23.407" critical="yes" starttime="20201212 02:32:00.665"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:23.413" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:23.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:23.416" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:32:23.416" starttime="20201212 02:32:23.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:23.417" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:32:23.417" starttime="20201212 02:32:23.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:23.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:23.418" starttime="20201212 02:32:23.417"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:23.418" starttime="20201212 02:32:23.410"></status>
</kw>
<msg timestamp="20201212 02:32:23.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:23.418" starttime="20201212 02:32:23.410"></status>
</kw>
<msg timestamp="20201212 02:32:23.419" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:32:23.419" starttime="20201212 02:32:23.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:32:23.419" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:32:23.419" starttime="20201212 02:32:23.419"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:23.424" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:23.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:23.436" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:23.436" starttime="20201212 02:32:23.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:23.437" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:23.437" starttime="20201212 02:32:23.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:23.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:23.438" starttime="20201212 02:32:23.437"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:23.438" starttime="20201212 02:32:23.421"></status>
</kw>
<msg timestamp="20201212 02:32:23.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:23.438" starttime="20201212 02:32:23.421"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:23.438" starttime="20201212 02:32:23.420"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:23.438" starttime="20201212 02:32:23.420"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:23.438" starttime="20201212 02:32:23.409"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:23.439" starttime="20201212 02:32:23.408"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:23.442" level="INFO">Running command 'ozone sh bucket link 29886-source/bucket2 29886-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:28.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:28.098" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:28.098" starttime="20201212 02:32:23.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:28.100" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:32:28.100" starttime="20201212 02:32:28.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:28.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:28.101" starttime="20201212 02:32:28.100"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:28.101" starttime="20201212 02:32:23.440"></status>
</kw>
<msg timestamp="20201212 02:32:28.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:28.101" starttime="20201212 02:32:23.439"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:28.101" starttime="20201212 02:32:23.439"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:28.104" level="INFO">Running command 'ozone sh bucket create 29886-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:31.722" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 02:32:31.722" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:31.722" starttime="20201212 02:32:28.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:31.724" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201212 02:32:31.724" starttime="20201212 02:32:31.723"></status>
</kw>
<msg timestamp="20201212 02:32:31.724" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:31.724" starttime="20201212 02:32:28.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:31.725" starttime="20201212 02:32:31.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:31.729" level="INFO">Running command 'ozone sh bucket create 29886-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:37.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:37.288" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:37.288" starttime="20201212 02:32:31.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:37.289" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:32:37.289" starttime="20201212 02:32:37.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:37.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:37.290" starttime="20201212 02:32:37.290"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:37.290" starttime="20201212 02:32:31.726"></status>
</kw>
<msg timestamp="20201212 02:32:37.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:37.291" starttime="20201212 02:32:31.725"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:37.291" starttime="20201212 02:32:31.725"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:37.294" level="INFO">Running command 'ozone sh bucket link 29886-source/bucket1 29886-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:40.994" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 02:32:40.994" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:40.994" starttime="20201212 02:32:37.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:40.995" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20201212 02:32:40.995" starttime="20201212 02:32:40.995"></status>
</kw>
<msg timestamp="20201212 02:32:40.996" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:40.996" starttime="20201212 02:32:37.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:40.996" starttime="20201212 02:32:40.996"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:32:40.997" critical="yes" starttime="20201212 02:32:23.407"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:41.003" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:41.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:41.006" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:32:41.006" starttime="20201212 02:32:41.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.007" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:32:41.007" starttime="20201212 02:32:41.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:41.008" starttime="20201212 02:32:41.008"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.008" starttime="20201212 02:32:41.000"></status>
</kw>
<msg timestamp="20201212 02:32:41.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:41.008" starttime="20201212 02:32:41.000"></status>
</kw>
<msg timestamp="20201212 02:32:41.009" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:32:41.009" starttime="20201212 02:32:40.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:32:41.009" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:32:41.009" starttime="20201212 02:32:41.009"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:41.013" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:41.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:41.025" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:41.025" starttime="20201212 02:32:41.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.026" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:41.026" starttime="20201212 02:32:41.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:41.027" starttime="20201212 02:32:41.027"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.027" starttime="20201212 02:32:41.011"></status>
</kw>
<msg timestamp="20201212 02:32:41.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:41.028" starttime="20201212 02:32:41.011"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.028" starttime="20201212 02:32:41.010"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.028" starttime="20201212 02:32:41.010"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.028" starttime="20201212 02:32:40.999"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.028" starttime="20201212 02:32:40.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:41.034" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:41.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:41.037" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:41.037" starttime="20201212 02:32:41.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.038" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:41.038" starttime="20201212 02:32:41.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:41.039" starttime="20201212 02:32:41.038"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.039" starttime="20201212 02:32:41.030"></status>
</kw>
<msg timestamp="20201212 02:32:41.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:41.039" starttime="20201212 02:32:41.030"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.039" starttime="20201212 02:32:41.030"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:41.045" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:41.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:41.046" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:32:41.046" starttime="20201212 02:32:41.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.047" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:32:41.047" starttime="20201212 02:32:41.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:41.048" starttime="20201212 02:32:41.047"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.048" starttime="20201212 02:32:41.041"></status>
</kw>
<msg timestamp="20201212 02:32:41.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:41.048" starttime="20201212 02:32:41.041"></status>
</kw>
<msg timestamp="20201212 02:32:41.049" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:32:41.049" starttime="20201212 02:32:41.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:32:41.049" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:32:41.049" starttime="20201212 02:32:41.049"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:41.054" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:41.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:41.071" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:41.072" starttime="20201212 02:32:41.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.073" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:41.073" starttime="20201212 02:32:41.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:41.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:41.074" starttime="20201212 02:32:41.073"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.074" starttime="20201212 02:32:41.051"></status>
</kw>
<msg timestamp="20201212 02:32:41.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:41.074" starttime="20201212 02:32:41.051"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.075" starttime="20201212 02:32:41.050"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.075" starttime="20201212 02:32:41.050"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.075" starttime="20201212 02:32:41.040"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:41.075" starttime="20201212 02:32:41.040"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:41.078" level="INFO">Running command 'ozone sh key list 29886-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:45.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:45.521" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:45.521" starttime="20201212 02:32:41.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.522" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "volumeName" : "29886-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2020-12-12T02:30:22.506Z",
  "modificationTime" : "2020-12-12T02:30:24.471Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20201212 02:32:45.522" starttime="20201212 02:32:45.521"></status>
</kw>
<msg timestamp="20201212 02:32:45.523" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:45.523" starttime="20201212 02:32:41.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:45.523" starttime="20201212 02:32:45.523"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.523" starttime="20201212 02:32:41.029"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.524" starttime="20201212 02:32:41.028"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:32:45.524" critical="yes" starttime="20201212 02:32:40.998"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:45.532" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:45.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:45.535" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:32:45.535" starttime="20201212 02:32:45.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.537" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:32:45.537" starttime="20201212 02:32:45.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:45.539" starttime="20201212 02:32:45.537"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.540" starttime="20201212 02:32:45.528"></status>
</kw>
<msg timestamp="20201212 02:32:45.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:45.540" starttime="20201212 02:32:45.528"></status>
</kw>
<msg timestamp="20201212 02:32:45.541" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:32:45.541" starttime="20201212 02:32:45.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:32:45.542" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:32:45.542" starttime="20201212 02:32:45.541"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:45.546" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:45.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:45.565" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:45.565" starttime="20201212 02:32:45.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.566" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:45.567" starttime="20201212 02:32:45.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:45.567" starttime="20201212 02:32:45.567"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.567" starttime="20201212 02:32:45.544"></status>
</kw>
<msg timestamp="20201212 02:32:45.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:45.568" starttime="20201212 02:32:45.543"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.568" starttime="20201212 02:32:45.543"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.568" starttime="20201212 02:32:45.542"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.568" starttime="20201212 02:32:45.527"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.568" starttime="20201212 02:32:45.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:45.574" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:45.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:45.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:45.579" starttime="20201212 02:32:45.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.580" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:45.580" starttime="20201212 02:32:45.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:45.581" starttime="20201212 02:32:45.580"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.581" starttime="20201212 02:32:45.571"></status>
</kw>
<msg timestamp="20201212 02:32:45.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:45.581" starttime="20201212 02:32:45.571"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.582" starttime="20201212 02:32:45.570"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:45.586" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:45.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:45.589" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:32:45.589" starttime="20201212 02:32:45.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.590" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:32:45.590" starttime="20201212 02:32:45.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:45.591" starttime="20201212 02:32:45.591"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.591" starttime="20201212 02:32:45.583"></status>
</kw>
<msg timestamp="20201212 02:32:45.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:45.592" starttime="20201212 02:32:45.583"></status>
</kw>
<msg timestamp="20201212 02:32:45.592" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:32:45.592" starttime="20201212 02:32:45.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:32:45.593" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:32:45.593" starttime="20201212 02:32:45.592"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:45.597" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:45.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:45.612" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:45.612" starttime="20201212 02:32:45.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.613" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:45.613" starttime="20201212 02:32:45.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:45.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:45.614" starttime="20201212 02:32:45.614"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.614" starttime="20201212 02:32:45.595"></status>
</kw>
<msg timestamp="20201212 02:32:45.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:45.615" starttime="20201212 02:32:45.594"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.615" starttime="20201212 02:32:45.594"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.615" starttime="20201212 02:32:45.593"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.615" starttime="20201212 02:32:45.582"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:45.615" starttime="20201212 02:32:45.582"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:45.619" level="INFO">Running command 'ozone sh key list 29886-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:49.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 02:32:49.301" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:49.301" starttime="20201212 02:32:45.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.302" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket</msg>
<status status="PASS" endtime="20201212 02:32:49.302" starttime="20201212 02:32:49.301"></status>
</kw>
<msg timestamp="20201212 02:32:49.303" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:49.303" starttime="20201212 02:32:45.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:49.303" starttime="20201212 02:32:49.303"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.304" starttime="20201212 02:32:45.569"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.304" starttime="20201212 02:32:45.568"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:32:49.304" critical="yes" starttime="20201212 02:32:45.525"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:49.312" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:49.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:49.313" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:32:49.313" starttime="20201212 02:32:49.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.314" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:32:49.314" starttime="20201212 02:32:49.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:49.315" starttime="20201212 02:32:49.314"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.315" starttime="20201212 02:32:49.308"></status>
</kw>
<msg timestamp="20201212 02:32:49.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:49.315" starttime="20201212 02:32:49.307"></status>
</kw>
<msg timestamp="20201212 02:32:49.316" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:32:49.316" starttime="20201212 02:32:49.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:32:49.316" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:32:49.316" starttime="20201212 02:32:49.316"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:49.322" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:49.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:49.336" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:49.336" starttime="20201212 02:32:49.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.337" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:49.337" starttime="20201212 02:32:49.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:49.338" starttime="20201212 02:32:49.337"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.338" starttime="20201212 02:32:49.318"></status>
</kw>
<msg timestamp="20201212 02:32:49.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:49.339" starttime="20201212 02:32:49.318"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.339" starttime="20201212 02:32:49.317"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.339" starttime="20201212 02:32:49.317"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.339" starttime="20201212 02:32:49.306"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.340" starttime="20201212 02:32:49.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:49.346" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:49.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:49.348" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:49.349" starttime="20201212 02:32:49.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.350" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:49.350" starttime="20201212 02:32:49.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:49.351" starttime="20201212 02:32:49.350"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.351" starttime="20201212 02:32:49.342"></status>
</kw>
<msg timestamp="20201212 02:32:49.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:49.351" starttime="20201212 02:32:49.341"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.351" starttime="20201212 02:32:49.341"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:49.357" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:49.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:49.359" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:32:49.359" starttime="20201212 02:32:49.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.360" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:32:49.360" starttime="20201212 02:32:49.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:49.361" starttime="20201212 02:32:49.361"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.362" starttime="20201212 02:32:49.353"></status>
</kw>
<msg timestamp="20201212 02:32:49.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:49.362" starttime="20201212 02:32:49.353"></status>
</kw>
<msg timestamp="20201212 02:32:49.362" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:32:49.362" starttime="20201212 02:32:49.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:32:49.363" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:32:49.363" starttime="20201212 02:32:49.362"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:49.369" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:49.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:49.382" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:49.382" starttime="20201212 02:32:49.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.383" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:49.383" starttime="20201212 02:32:49.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:49.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:49.384" starttime="20201212 02:32:49.384"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.385" starttime="20201212 02:32:49.365"></status>
</kw>
<msg timestamp="20201212 02:32:49.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:49.385" starttime="20201212 02:32:49.364"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.385" starttime="20201212 02:32:49.364"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.385" starttime="20201212 02:32:49.363"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.385" starttime="20201212 02:32:49.352"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:49.385" starttime="20201212 02:32:49.352"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:49.391" level="INFO">Running command 'ozone sh bucket info 29886-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:53.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:53.165" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:53.165" starttime="20201212 02:32:49.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:53.167" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:30:39.853Z",
  "modificationTime" : "2020-12-12T02:30:58.706Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 02:32:53.167" starttime="20201212 02:32:53.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:53.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:53.168" starttime="20201212 02:32:53.167"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:53.168" starttime="20201212 02:32:49.387"></status>
</kw>
<msg timestamp="20201212 02:32:53.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:53.168" starttime="20201212 02:32:49.386"></status>
</kw>
<msg timestamp="20201212 02:32:53.169" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:53.169" starttime="20201212 02:32:49.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:53.169" starttime="20201212 02:32:53.169"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:53.170" starttime="20201212 02:32:53.169"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:53.174" level="INFO">Running command 'ozone sh key list 29886-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:56.680" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 02:32:56.680" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:56.680" starttime="20201212 02:32:53.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:56.681" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket</msg>
<status status="PASS" endtime="20201212 02:32:56.681" starttime="20201212 02:32:56.681"></status>
</kw>
<msg timestamp="20201212 02:32:56.682" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:32:56.682" starttime="20201212 02:32:53.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20201212 02:32:56.682" starttime="20201212 02:32:56.682"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:56.683" starttime="20201212 02:32:49.340"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:56.683" starttime="20201212 02:32:49.340"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:32:56.683" critical="yes" starttime="20201212 02:32:49.305"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:56.689" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:56.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:56.691" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:32:56.692" starttime="20201212 02:32:56.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:56.692" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:32:56.693" starttime="20201212 02:32:56.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:56.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:56.693" starttime="20201212 02:32:56.693"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:56.693" starttime="20201212 02:32:56.686"></status>
</kw>
<msg timestamp="20201212 02:32:56.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:56.694" starttime="20201212 02:32:56.686"></status>
</kw>
<msg timestamp="20201212 02:32:56.694" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:32:56.694" starttime="20201212 02:32:56.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:32:56.695" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:32:56.695" starttime="20201212 02:32:56.695"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:56.700" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:32:56.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:32:56.713" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:32:56.713" starttime="20201212 02:32:56.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:32:56.715" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:32:56.715" starttime="20201212 02:32:56.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:32:56.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:32:56.715" starttime="20201212 02:32:56.715"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:56.716" starttime="20201212 02:32:56.696"></status>
</kw>
<msg timestamp="20201212 02:32:56.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:32:56.716" starttime="20201212 02:32:56.696"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:56.716" starttime="20201212 02:32:56.696"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:56.716" starttime="20201212 02:32:56.695"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:56.716" starttime="20201212 02:32:56.685"></status>
</kw>
<status status="PASS" endtime="20201212 02:32:56.716" starttime="20201212 02:32:56.685"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:32:56.722" level="INFO">Running command 'ozone sh bucket link 29886-target/loop1 29886-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:00.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:00.054" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:00.054" starttime="20201212 02:32:56.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:00.055" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:33:00.055" starttime="20201212 02:33:00.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:00.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:00.056" starttime="20201212 02:33:00.055"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:00.056" starttime="20201212 02:32:56.718"></status>
</kw>
<msg timestamp="20201212 02:33:00.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:00.056" starttime="20201212 02:32:56.717"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:00.056" starttime="20201212 02:32:56.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:00.061" level="INFO">Running command 'ozone sh bucket link 29886-target/loop2 29886-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:03.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:03.591" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:03.591" starttime="20201212 02:33:00.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:03.592" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:33:03.592" starttime="20201212 02:33:03.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:03.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:03.593" starttime="20201212 02:33:03.592"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:03.593" starttime="20201212 02:33:00.057"></status>
</kw>
<msg timestamp="20201212 02:33:03.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:03.593" starttime="20201212 02:33:00.057"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:03.594" starttime="20201212 02:33:00.057"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:03.598" level="INFO">Running command 'ozone sh bucket link 29886-target/loop3 29886-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:07.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:07.124" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:07.124" starttime="20201212 02:33:03.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:07.125" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:33:07.125" starttime="20201212 02:33:07.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:07.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:07.126" starttime="20201212 02:33:07.125"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:07.126" starttime="20201212 02:33:03.595"></status>
</kw>
<msg timestamp="20201212 02:33:07.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:07.126" starttime="20201212 02:33:03.594"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:07.127" starttime="20201212 02:33:03.594"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:07.130" level="INFO">Running command 'ozone sh key list 29886-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:10.417" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 02:33:10.417" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:10.417" starttime="20201212 02:33:07.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:10.418" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20201212 02:33:10.418" starttime="20201212 02:33:10.417"></status>
</kw>
<msg timestamp="20201212 02:33:10.419" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:10.419" starttime="20201212 02:33:07.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20201212 02:33:10.419" starttime="20201212 02:33:10.419"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:33:10.419" critical="yes" starttime="20201212 02:32:56.683"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:10.427" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:10.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:10.428" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:33:10.429" starttime="20201212 02:33:10.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:10.430" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:33:10.430" starttime="20201212 02:33:10.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:10.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:10.431" starttime="20201212 02:33:10.430"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:10.431" starttime="20201212 02:33:10.423"></status>
</kw>
<msg timestamp="20201212 02:33:10.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:10.432" starttime="20201212 02:33:10.423"></status>
</kw>
<msg timestamp="20201212 02:33:10.432" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:33:10.432" starttime="20201212 02:33:10.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:33:10.433" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:33:10.433" starttime="20201212 02:33:10.432"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:10.438" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:10.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:10.455" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:33:10.455" starttime="20201212 02:33:10.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:10.456" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:33:10.456" starttime="20201212 02:33:10.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:10.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:10.457" starttime="20201212 02:33:10.456"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:10.457" starttime="20201212 02:33:10.435"></status>
</kw>
<msg timestamp="20201212 02:33:10.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:10.457" starttime="20201212 02:33:10.435"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:10.457" starttime="20201212 02:33:10.434"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:10.457" starttime="20201212 02:33:10.433"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:10.458" starttime="20201212 02:33:10.422"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:10.458" starttime="20201212 02:33:10.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:10.462" level="INFO">Running command 'ozone sh bucket link 29886-source/bucket1 29886-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:13.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:13.973" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:13.973" starttime="20201212 02:33:10.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:13.974" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:33:13.974" starttime="20201212 02:33:13.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:13.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:13.975" starttime="20201212 02:33:13.974"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:13.975" starttime="20201212 02:33:10.459"></status>
</kw>
<msg timestamp="20201212 02:33:13.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:13.975" starttime="20201212 02:33:10.459"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:13.976" starttime="20201212 02:33:10.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:13.980" level="INFO">Running command 'ozone sh key put 29886-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:19.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:19.625" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:19.625" starttime="20201212 02:33:13.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:19.627" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:33:19.627" starttime="20201212 02:33:19.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:19.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:19.627" starttime="20201212 02:33:19.627"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:19.628" starttime="20201212 02:33:13.977"></status>
</kw>
<msg timestamp="20201212 02:33:19.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:19.628" starttime="20201212 02:33:13.976"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:19.628" starttime="20201212 02:33:13.976"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20201212 02:33:19.630" level="INFO">${postfix} = 66515</msg>
<status status="PASS" endtime="20201212 02:33:19.630" starttime="20201212 02:33:19.629"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20201212 02:33:19.631" level="INFO">${tmpfile} = /tmp/tempkey-66515</msg>
<status status="PASS" endtime="20201212 02:33:19.631" starttime="20201212 02:33:19.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:19.636" level="INFO">Running command 'ozone sh key get -f 29886-target/link1/key3 /tmp/tempkey-66515 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:24.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:24.869" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:24.869" starttime="20201212 02:33:19.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:24.871" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:33:24.871" starttime="20201212 02:33:24.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:24.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:24.872" starttime="20201212 02:33:24.871"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.873" starttime="20201212 02:33:19.632"></status>
</kw>
<msg timestamp="20201212 02:33:24.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:24.873" starttime="20201212 02:33:19.631"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.873" starttime="20201212 02:33:19.631"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20201212 02:33:24.876" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-66515 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:24.879" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20201212 02:33:24.879" starttime="20201212 02:33:24.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:24.885" level="INFO">Running command 'rm -f /tmp/tempkey-66515 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:24.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:24.887" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:33:24.887" starttime="20201212 02:33:24.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:24.888" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:33:24.888" starttime="20201212 02:33:24.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:24.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:24.889" starttime="20201212 02:33:24.889"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.889" starttime="20201212 02:33:24.881"></status>
</kw>
<msg timestamp="20201212 02:33:24.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:24.890" starttime="20201212 02:33:24.880"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.890" starttime="20201212 02:33:24.880"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:33:24.891" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20201212 02:33:24.891" starttime="20201212 02:33:24.890"></status>
</kw>
<msg timestamp="20201212 02:33:24.891" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20201212 02:33:24.891" starttime="20201212 02:33:19.629"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:33:24.891" starttime="20201212 02:33:24.891"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.891" starttime="20201212 02:33:19.628"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:33:24.892" critical="yes" starttime="20201212 02:33:10.420"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:24.899" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:24.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:24.902" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20201212 02:33:24.902" starttime="20201212 02:33:24.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:24.903" level="INFO">scm</msg>
<status status="PASS" endtime="20201212 02:33:24.903" starttime="20201212 02:33:24.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:24.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:24.904" starttime="20201212 02:33:24.903"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.905" starttime="20201212 02:33:24.896"></status>
</kw>
<msg timestamp="20201212 02:33:24.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:24.905" starttime="20201212 02:33:24.895"></status>
</kw>
<msg timestamp="20201212 02:33:24.905" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20201212 02:33:24.905" starttime="20201212 02:33:24.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:33:24.906" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:33:24.906" starttime="20201212 02:33:24.905"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:24.910" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:24.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:24.933" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:33:24.933" starttime="20201212 02:33:24.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:24.934" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:33:24.935" starttime="20201212 02:33:24.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:24.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:24.935" starttime="20201212 02:33:24.935"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.936" starttime="20201212 02:33:24.907"></status>
</kw>
<msg timestamp="20201212 02:33:24.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:24.936" starttime="20201212 02:33:24.907"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.936" starttime="20201212 02:33:24.906"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.936" starttime="20201212 02:33:24.906"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.936" starttime="20201212 02:33:24.894"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:24.936" starttime="20201212 02:33:24.894"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:24.940" level="INFO">Running command 'ozone sh bucket delete 29886-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:28.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:28.602" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:28.603" starttime="20201212 02:33:24.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:28.604" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:33:28.604" starttime="20201212 02:33:28.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:28.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:28.605" starttime="20201212 02:33:28.604"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:28.605" starttime="20201212 02:33:24.938"></status>
</kw>
<msg timestamp="20201212 02:33:28.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:28.605" starttime="20201212 02:33:24.937"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:28.605" starttime="20201212 02:33:24.937"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:28.611" level="INFO">Running command 'ozone sh bucket list 29886-target 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:32.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:32.640" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:32.640" starttime="20201212 02:33:28.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:32.641" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:32:37.202Z",
  "modificationTime" : "2020-12-12T02:32:37.202Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:31:02.537Z",
  "modificationTime" : "2020-12-12T02:31:02.537Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:30:39.853Z",
  "modificationTime" : "2020-12-12T02:30:58.706Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:32:27.958Z",
  "modificationTime" : "2020-12-12T02:32:27.958Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:33:13.847Z",
  "modificationTime" : "2020-12-12T02:33:13.847Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:33:07.006Z",
  "modificationTime" : "2020-12-12T02:33:07.006Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:32:59.949Z",
  "modificationTime" : "2020-12-12T02:32:59.949Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:33:03.514Z",
  "modificationTime" : "2020-12-12T02:33:03.514Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:30:32.105Z",
  "modificationTime" : "2020-12-12T02:30:54.911Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}
{
  "metadata" : { },
  "volumeName" : "29886-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:30:35.800Z",
  "modificationTime" : "2020-12-12T02:30:35.800Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "29886-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 02:33:32.641" starttime="20201212 02:33:32.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:32.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:32.642" starttime="20201212 02:33:32.641"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:32.642" starttime="20201212 02:33:28.606"></status>
</kw>
<msg timestamp="20201212 02:33:32.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:32.642" starttime="20201212 02:33:28.606"></status>
</kw>
<msg timestamp="20201212 02:33:32.643" level="INFO">${bucket_list} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:33:32.643" starttime="20201212 02:33:28.606"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20201212 02:33:32.643" starttime="20201212 02:33:32.643"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:33:32.649" level="INFO">Running command 'ozone sh key list 29886-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:33:36.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:33:36.656" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20201212 02:33:36.656" starttime="20201212 02:33:32.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:33:36.658" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20201212 02:33:36.658" starttime="20201212 02:33:36.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:33:36.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:33:36.658" starttime="20201212 02:33:36.658"></status>
</kw>
<status status="PASS" endtime="20201212 02:33:36.659" starttime="20201212 02:33:32.644"></status>
</kw>
<msg timestamp="20201212 02:33:36.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:33:36.659" starttime="20201212 02:33:32.644"></status>
</kw>
<msg timestamp="20201212 02:33:36.659" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20201212 02:33:36.659" starttime="20201212 02:33:32.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20201212 02:33:36.660" starttime="20201212 02:33:36.659"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:33:36.660" critical="yes" starttime="20201212 02:33:24.893"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20201212 02:33:36.663" starttime="20201212 02:30:06.800"></status>
</suite>
<status status="PASS" elapsedtime="239269" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon.Freon</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
