<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201212 01:55:03.314" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:23.742" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:26.176" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 01:41:26.176" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 01:41:26.176" starttime="20201212 01:41:23.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:26.178" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 01:41:26.178" starttime="20201212 01:41:26.177"></status>
</kw>
<msg timestamp="20201212 01:41:26.178" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 01:41:26.178" starttime="20201212 01:41:23.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:26.184" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:28.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:41:28.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:41:28.458" starttime="20201212 01:41:26.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:28.459" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:41:28.459" starttime="20201212 01:41:28.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:41:28.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:41:28.460" starttime="20201212 01:41:28.459"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:28.460" starttime="20201212 01:41:26.180"></status>
</kw>
<msg timestamp="20201212 01:41:28.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:41:28.460" starttime="20201212 01:41:26.180"></status>
</kw>
<msg timestamp="20201212 01:41:28.461" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201212 01:41:28.461" starttime="20201212 01:41:26.179"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201212 01:41:28.461" starttime="20201212 01:41:28.461"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:28.461" starttime="20201212 01:41:26.179"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:28.461" starttime="20201212 01:41:26.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:28.466" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:30.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:41:30.407" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:41:30.407" starttime="20201212 01:41:28.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:30.409" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:41:30.409" starttime="20201212 01:41:30.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:41:30.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:41:30.409" starttime="20201212 01:41:30.409"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:30.410" starttime="20201212 01:41:28.463"></status>
</kw>
<msg timestamp="20201212 01:41:30.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:41:30.410" starttime="20201212 01:41:28.463"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:30.410" starttime="20201212 01:41:28.462"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:30.410" starttime="20201212 01:41:28.462"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:30.410" starttime="20201212 01:41:28.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 01:41:30.411" starttime="20201212 01:41:30.410"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:30.415" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:32.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:41:32.742" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T01:41:30.358Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 01:41:32.742" starttime="20201212 01:41:30.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:32.743" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T01:41:30.358Z",
  "modificationTime" : "2020-12-12T01:41:30.358Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 01:41:32.743" starttime="20201212 01:41:32.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:41:32.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:41:32.744" starttime="20201212 01:41:32.743"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:32.744" starttime="20201212 01:41:30.412"></status>
</kw>
<msg timestamp="20201212 01:41:32.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:41:32.744" starttime="20201212 01:41:30.411"></status>
</kw>
<msg timestamp="20201212 01:41:32.744" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T01:41:30.358Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 01:41:32.745" starttime="20201212 01:41:30.411"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 01:41:32.745" starttime="20201212 01:41:32.745"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:41:32.749" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:41:32.749" starttime="20201212 01:41:32.749"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:41:32.750" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:41:32.750" starttime="20201212 01:41:32.749"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:32.750" starttime="20201212 01:41:32.748"></status>
</kw>
<msg timestamp="20201212 01:41:32.750" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:41:32.750" starttime="20201212 01:41:32.748"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:32.750" starttime="20201212 01:41:32.747"></status>
</kw>
<msg timestamp="20201212 01:41:32.751" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 01:41:32.751" starttime="20201212 01:41:32.746"></status>
</kw>
<msg timestamp="20201212 01:41:32.751" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 01:41:32.751" starttime="20201212 01:41:32.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:32.755" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:35.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:41:35.036" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:41:35.036" starttime="20201212 01:41:32.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:35.038" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:41:35.038" starttime="20201212 01:41:35.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:41:35.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:41:35.038" starttime="20201212 01:41:35.038"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:35.039" starttime="20201212 01:41:32.752"></status>
</kw>
<msg timestamp="20201212 01:41:35.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:41:35.039" starttime="20201212 01:41:32.751"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:35.039" starttime="20201212 01:41:32.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:35.043" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:40.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:41:40.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:41:40.709" starttime="20201212 01:41:35.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:40.710" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:41:40.710" starttime="20201212 01:41:40.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:41:40.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:41:40.711" starttime="20201212 01:41:40.710"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:40.711" starttime="20201212 01:41:35.040"></status>
</kw>
<msg timestamp="20201212 01:41:40.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:41:40.712" starttime="20201212 01:41:35.040"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:40.712" starttime="20201212 01:41:35.039"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:40.721" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:44.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:41:44.831" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:41:44.831" starttime="20201212 01:41:40.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:44.832" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:41:44.832" starttime="20201212 01:41:44.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:41:44.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:41:44.833" starttime="20201212 01:41:44.832"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:44.833" starttime="20201212 01:41:40.713"></status>
</kw>
<msg timestamp="20201212 01:41:44.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:41:44.833" starttime="20201212 01:41:40.713"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:44.833" starttime="20201212 01:41:40.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:44.837" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:48.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:41:48.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:41:48.992" starttime="20201212 01:41:44.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:48.993" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:41:48.993" starttime="20201212 01:41:48.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:41:48.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:41:48.994" starttime="20201212 01:41:48.994"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:48.994" starttime="20201212 01:41:44.834"></status>
</kw>
<msg timestamp="20201212 01:41:48.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:41:48.995" starttime="20201212 01:41:44.834"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:48.995" starttime="20201212 01:41:44.833"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 01:41:48.995" critical="yes" starttime="20201212 01:41:23.736"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:41:49.000" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:41:49.000" starttime="20201212 01:41:49.000"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:41:49.001" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:41:49.001" starttime="20201212 01:41:49.001"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:49.001" starttime="20201212 01:41:48.999"></status>
</kw>
<msg timestamp="20201212 01:41:49.005" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:41:49.006" starttime="20201212 01:41:48.999"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:49.006" starttime="20201212 01:41:48.998"></status>
</kw>
<msg timestamp="20201212 01:41:49.006" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 01:41:49.006" starttime="20201212 01:41:48.998"></status>
</kw>
<msg timestamp="20201212 01:41:49.006" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 01:41:49.006" starttime="20201212 01:41:48.997"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:49.011" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:51.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:41:51.188" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:41:51.188" starttime="20201212 01:41:49.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:51.189" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:41:51.189" starttime="20201212 01:41:51.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:41:51.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:41:51.190" starttime="20201212 01:41:51.189"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:51.190" starttime="20201212 01:41:49.007"></status>
</kw>
<msg timestamp="20201212 01:41:51.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:41:51.190" starttime="20201212 01:41:49.007"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:51.190" starttime="20201212 01:41:49.007"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:51.194" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:41:53.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:41:53.331" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:41:53.331" starttime="20201212 01:41:51.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:41:53.333" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:41:53.333" starttime="20201212 01:41:53.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:41:53.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:41:53.333" starttime="20201212 01:41:53.333"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:53.334" starttime="20201212 01:41:51.191"></status>
</kw>
<msg timestamp="20201212 01:41:53.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:41:53.334" starttime="20201212 01:41:51.191"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:53.334" starttime="20201212 01:41:51.190"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 01:41:53.334" critical="yes" starttime="20201212 01:41:48.996"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201212 01:41:53.335" starttime="20201212 01:41:23.673"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:43:33.213" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:43:33.213" starttime="20201212 01:43:33.213"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:43:33.214" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:43:33.214" starttime="20201212 01:43:33.213"></status>
</kw>
<status status="PASS" endtime="20201212 01:43:33.214" starttime="20201212 01:43:33.212"></status>
</kw>
<msg timestamp="20201212 01:43:33.214" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:43:33.214" starttime="20201212 01:43:33.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:43:33.215" starttime="20201212 01:43:33.215"></status>
</kw>
<msg timestamp="20201212 01:43:33.215" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 01:43:33.215" starttime="20201212 01:43:33.214"></status>
</kw>
<status status="PASS" endtime="20201212 01:43:33.216" starttime="20201212 01:43:33.211"></status>
</kw>
<msg timestamp="20201212 01:43:33.216" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:43:33.216" starttime="20201212 01:43:33.210"></status>
</kw>
<msg timestamp="20201212 01:43:33.216" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:43:33.216" starttime="20201212 01:43:33.209"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:43:33.216" level="INFO">${random} = 37127</msg>
<status status="PASS" endtime="20201212 01:43:33.216" starttime="20201212 01:43:33.216"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:43:33.223" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-37127 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:43:36.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:43:36.693" level="INFO">${output} = 2020-12-12 01:43:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:43:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 ...</msg>
<status status="PASS" endtime="20201212 01:43:36.693" starttime="20201212 01:43:33.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:43:36.698" level="INFO">2020-12-12 01:43:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:43:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 01:43:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 01:43:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:43:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F997E7D364F3-&gt;93102175-dd8d-4fda-8619-0ca5bf470814
2020-12-12 01:43:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 01:43:36.698" starttime="20201212 01:43:36.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:43:36.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:43:36.699" starttime="20201212 01:43:36.699"></status>
</kw>
<status status="PASS" endtime="20201212 01:43:36.699" starttime="20201212 01:43:33.217"></status>
</kw>
<msg timestamp="20201212 01:43:36.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:43:36.700" starttime="20201212 01:43:33.217"></status>
</kw>
<msg timestamp="20201212 01:43:36.700" level="INFO">${result} = 2020-12-12 01:43:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:43:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 ...</msg>
<status status="PASS" endtime="20201212 01:43:36.700" starttime="20201212 01:43:33.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:43:36.705" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:43:38.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:43:38.520" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:41 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 01:43 ofs://om/volume1/bucket1/ozone-37127
-rw-...</msg>
<status status="PASS" endtime="20201212 01:43:38.520" starttime="20201212 01:43:36.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:43:38.521" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:41 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 01:43 ofs://om/volume1/bucket1/ozone-37127
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 01:42 ofs://om/volume1/bucket1/ozone-37241
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:41 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:43 ofs://om/volume1/bucket1/wordcount-14.txt</msg>
<status status="PASS" endtime="20201212 01:43:38.521" starttime="20201212 01:43:38.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:43:38.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:43:38.521" starttime="20201212 01:43:38.521"></status>
</kw>
<status status="PASS" endtime="20201212 01:43:38.522" starttime="20201212 01:43:36.702"></status>
</kw>
<msg timestamp="20201212 01:43:38.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:43:38.522" starttime="20201212 01:43:36.702"></status>
</kw>
<msg timestamp="20201212 01:43:38.522" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:41 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 01:43 ofs://om/volume1/bucket1/ozone-37127
-rw-...</msg>
<status status="PASS" endtime="20201212 01:43:38.522" starttime="20201212 01:43:36.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:43:38.523" starttime="20201212 01:43:38.522"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 01:43:38.523" critical="yes" starttime="20201212 01:43:33.209"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 01:43:38.524" starttime="20201212 01:43:33.154"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:41:58.743" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:41:58.743" starttime="20201212 01:41:58.742"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:41:58.743" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:41:58.743" starttime="20201212 01:41:58.743"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:58.744" starttime="20201212 01:41:58.742"></status>
</kw>
<msg timestamp="20201212 01:41:58.744" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:41:58.744" starttime="20201212 01:41:58.741"></status>
</kw>
<status status="PASS" endtime="20201212 01:41:58.744" starttime="20201212 01:41:58.741"></status>
</kw>
<msg timestamp="20201212 01:41:58.744" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:41:58.744" starttime="20201212 01:41:58.740"></status>
</kw>
<msg timestamp="20201212 01:41:58.744" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:41:58.744" starttime="20201212 01:41:58.739"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:41:58.745" level="INFO">${random} = 37241</msg>
<status status="PASS" endtime="20201212 01:41:58.745" starttime="20201212 01:41:58.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:41:58.750" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-37241 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:42:02.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:42:02.557" level="INFO">${output} = 2020-12-12 01:42:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:42:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 ...</msg>
<status status="PASS" endtime="20201212 01:42:02.557" starttime="20201212 01:41:58.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:42:02.559" level="INFO">2020-12-12 01:42:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:42:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 01:42:00 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 01:42:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:42:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-11EAC3CD8D0E-&gt;93102175-dd8d-4fda-8619-0ca5bf470814
2020-12-12 01:42:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 01:42:02.559" starttime="20201212 01:42:02.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:42:02.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:42:02.560" starttime="20201212 01:42:02.559"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:02.560" starttime="20201212 01:41:58.746"></status>
</kw>
<msg timestamp="20201212 01:42:02.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:42:02.560" starttime="20201212 01:41:58.746"></status>
</kw>
<msg timestamp="20201212 01:42:02.560" level="INFO">${result} = 2020-12-12 01:42:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:42:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 ...</msg>
<status status="PASS" endtime="20201212 01:42:02.560" starttime="20201212 01:41:58.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:42:02.570" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:42:04.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:42:04.564" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:41 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 01:42 o3fs://bucket1.volume1.om/ozone-37241
dr...</msg>
<status status="PASS" endtime="20201212 01:42:04.564" starttime="20201212 01:42:02.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:42:04.566" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:41 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 01:42 o3fs://bucket1.volume1.om/ozone-37241
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:41 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 01:42:04.566" starttime="20201212 01:42:04.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:42:04.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:42:04.567" starttime="20201212 01:42:04.566"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:04.567" starttime="20201212 01:42:02.562"></status>
</kw>
<msg timestamp="20201212 01:42:04.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:42:04.567" starttime="20201212 01:42:02.561"></status>
</kw>
<msg timestamp="20201212 01:42:04.568" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:41 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-12 01:42 o3fs://bucket1.volume1.om/ozone-37241
dr...</msg>
<status status="PASS" endtime="20201212 01:42:04.568" starttime="20201212 01:42:02.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:42:04.568" starttime="20201212 01:42:04.568"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 01:42:04.568" critical="yes" starttime="20201212 01:41:58.738"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 01:42:04.569" starttime="20201212 01:41:58.684"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:43:43.592" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:43:43.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:43:43.599" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:43:43.599" starttime="20201212 01:43:43.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:43:43.600" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:43:43.600" starttime="20201212 01:43:43.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:43:43.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:43:43.601" starttime="20201212 01:43:43.600"></status>
</kw>
<status status="PASS" endtime="20201212 01:43:43.601" starttime="20201212 01:43:43.587"></status>
</kw>
<msg timestamp="20201212 01:43:43.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:43:43.602" starttime="20201212 01:43:43.587"></status>
</kw>
<msg timestamp="20201212 01:43:43.602" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:43:43.602" starttime="20201212 01:43:43.586"></status>
</kw>
<msg timestamp="20201212 01:43:43.602" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:43:43.602" starttime="20201212 01:43:43.586"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:43:43.607" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:43:43.607" starttime="20201212 01:43:43.607"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:43:43.608" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:43:43.608" starttime="20201212 01:43:43.607"></status>
</kw>
<status status="PASS" endtime="20201212 01:43:43.608" starttime="20201212 01:43:43.605"></status>
</kw>
<msg timestamp="20201212 01:43:43.608" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:43:43.608" starttime="20201212 01:43:43.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:43:43.609" starttime="20201212 01:43:43.608"></status>
</kw>
<msg timestamp="20201212 01:43:43.609" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 01:43:43.609" starttime="20201212 01:43:43.608"></status>
</kw>
<status status="PASS" endtime="20201212 01:43:43.609" starttime="20201212 01:43:43.604"></status>
</kw>
<msg timestamp="20201212 01:43:43.609" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:43:43.609" starttime="20201212 01:43:43.603"></status>
</kw>
<msg timestamp="20201212 01:43:43.610" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:43:43.610" starttime="20201212 01:43:43.602"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:43:43.614" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:44:22.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:44:22.975" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:43:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:43:45 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201212 01:44:22.975" starttime="20201212 01:43:43.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:44:22.976" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:43:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:43:45 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 01:43:45 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 01:43:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:43:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-23ABAD5F8AF8-&gt;93102175-dd8d-4fda-8619-0ca5bf470814
2020-12-12 01:43:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 01:43:49 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-12 01:43:49 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 01:43:49 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-12 01:43:50 INFO  JobSubmitter:198 - number of splits:3
2020-12-12 01:43:52 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607737243402_0003
2020-12-12 01:43:52 INFO  YarnClientImpl:273 - Submitted application application_1607737243402_0003
2020-12-12 01:43:53 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607737243402_0003/
2020-12-12 01:43:53 INFO  Job:1339 - Running job: job_1607737243402_0003
2020-12-12 01:44:00 INFO  Job:1360 - Job job_1607737243402_0003 running in uber mode : false
2020-12-12 01:44:00 INFO  Job:1367 -  map 0% reduce 0%
2020-12-12 01:44:07 INFO  Job:1367 -  map 33% reduce 0%
2020-12-12 01:44:12 INFO  Job:1367 -  map 67% reduce 0%
2020-12-12 01:44:17 INFO  Job:1367 -  map 100% reduce 0%
2020-12-12 01:44:21 INFO  Job:1367 -  map 100% reduce 100%
2020-12-12 01:44:22 INFO  Job:1378 - Job job_1607737243402_0003 completed successfully
2020-12-12 01:44:22 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610689
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43300
		Total time spent by all reduces in occupied slots (ms)=15328
		Total time spent by all map tasks (ms)=10825
		Total time spent by all reduce tasks (ms)=3832
		Total vcore-milliseconds taken by all map tasks=10825
		Total vcore-milliseconds taken by all reduce tasks=3832
		Total megabyte-milliseconds taken by all map tasks=44339200
		Total megabyte-milliseconds taken by all reduce tasks=15695872
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=629
		CPU time spent (ms)=7040
		Physical memory (bytes) snapshot=1125175296
		Virtual memory (bytes) snapshot=15767580672
		Total committed heap usage (bytes)=1053294592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.958 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 01:44:22.976" starttime="20201212 01:44:22.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:44:22.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:44:22.977" starttime="20201212 01:44:22.976"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:22.977" starttime="20201212 01:43:43.611"></status>
</kw>
<msg timestamp="20201212 01:44:22.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:44:22.977" starttime="20201212 01:43:43.610"></status>
</kw>
<msg timestamp="20201212 01:44:22.978" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:43:45 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:43:45 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201212 01:44:22.978" starttime="20201212 01:43:43.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:44:22.978" starttime="20201212 01:44:22.978"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:44:22.979" critical="yes" starttime="20201212 01:43:43.585"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:44:22.984" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:44:22.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:44:22.989" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:44:22.989" starttime="20201212 01:44:22.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:44:22.990" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:44:22.990" starttime="20201212 01:44:22.989"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:44:22.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:44:22.991" starttime="20201212 01:44:22.990"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:22.991" starttime="20201212 01:44:22.981"></status>
</kw>
<msg timestamp="20201212 01:44:22.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:44:22.991" starttime="20201212 01:44:22.981"></status>
</kw>
<msg timestamp="20201212 01:44:22.991" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:44:22.991" starttime="20201212 01:44:22.980"></status>
</kw>
<msg timestamp="20201212 01:44:22.992" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:44:22.992" starttime="20201212 01:44:22.980"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:44:22.992" level="INFO">${random} = 23</msg>
<status status="PASS" endtime="20201212 01:44:22.992" starttime="20201212 01:44:22.992"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:44:22.997" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:44:22.997" starttime="20201212 01:44:22.996"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:44:22.997" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:44:22.997" starttime="20201212 01:44:22.997"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:22.997" starttime="20201212 01:44:22.996"></status>
</kw>
<msg timestamp="20201212 01:44:22.997" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:44:22.998" starttime="20201212 01:44:22.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:44:22.999" starttime="20201212 01:44:22.998"></status>
</kw>
<msg timestamp="20201212 01:44:22.999" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 01:44:22.999" starttime="20201212 01:44:22.998"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:22.999" starttime="20201212 01:44:22.994"></status>
</kw>
<msg timestamp="20201212 01:44:22.999" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:44:22.999" starttime="20201212 01:44:22.993"></status>
</kw>
<msg timestamp="20201212 01:44:22.999" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:44:22.999" starttime="20201212 01:44:22.993"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:44:23.003" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:44:23.003" starttime="20201212 01:44:23.002"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:44:23.003" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:44:23.003" starttime="20201212 01:44:23.003"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:23.003" starttime="20201212 01:44:23.002"></status>
</kw>
<msg timestamp="20201212 01:44:23.004" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:44:23.004" starttime="20201212 01:44:23.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:44:23.005" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201212 01:44:23.005" starttime="20201212 01:44:23.005"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:44:23.006" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201212 01:44:23.006" starttime="20201212 01:44:23.005"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:23.006" starttime="20201212 01:44:23.004"></status>
</kw>
<msg timestamp="20201212 01:44:23.006" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201212 01:44:23.006" starttime="20201212 01:44:23.004"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:23.007" starttime="20201212 01:44:23.001"></status>
</kw>
<msg timestamp="20201212 01:44:23.007" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 01:44:23.007" starttime="20201212 01:44:23.000"></status>
</kw>
<msg timestamp="20201212 01:44:23.007" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 01:44:23.007" starttime="20201212 01:44:23.000"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:44:23.010" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:44:23.011" starttime="20201212 01:44:23.010"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:44:23.011" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:44:23.011" starttime="20201212 01:44:23.011"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:23.011" starttime="20201212 01:44:23.010"></status>
</kw>
<msg timestamp="20201212 01:44:23.011" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:44:23.011" starttime="20201212 01:44:23.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:44:23.013" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201212 01:44:23.013" starttime="20201212 01:44:23.012"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:44:23.013" level="INFO">${result} = /wordcount-23.txt</msg>
<status status="PASS" endtime="20201212 01:44:23.013" starttime="20201212 01:44:23.013"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:23.014" starttime="20201212 01:44:23.012"></status>
</kw>
<msg timestamp="20201212 01:44:23.014" level="INFO">${path_with_leading} = /wordcount-23.txt</msg>
<status status="PASS" endtime="20201212 01:44:23.014" starttime="20201212 01:44:23.012"></status>
</kw>
<status status="PASS" endtime="20201212 01:44:23.014" starttime="20201212 01:44:23.008"></status>
</kw>
<msg timestamp="20201212 01:44:23.014" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-23.txt</msg>
<status status="PASS" endtime="20201212 01:44:23.014" starttime="20201212 01:44:23.008"></status>
</kw>
<msg timestamp="20201212 01:44:23.014" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-23.txt</msg>
<status status="PASS" endtime="20201212 01:44:23.014" starttime="20201212 01:44:23.007"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:44:23.018" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-23.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:45:00.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:45:00.043" level="INFO">${output} = 2020-12-12 01:44:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-12 01:44:25 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201212 01:45:00.043" starttime="20201212 01:44:23.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:45:00.044" level="INFO">2020-12-12 01:44:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-12 01:44:25 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 01:44:25 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:44:25 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 01:44:25 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 01:44:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:44:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-210E824ED4A3-&gt;93102175-dd8d-4fda-8619-0ca5bf470814
2020-12-12 01:44:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 01:44:26 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-12 01:44:26 INFO  JobSubmitter:198 - number of splits:3
2020-12-12 01:44:26 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607737243402_0004
2020-12-12 01:44:27 INFO  YarnClientImpl:273 - Submitted application application_1607737243402_0004
2020-12-12 01:44:27 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607737243402_0004/
2020-12-12 01:44:27 INFO  Job:1339 - Running job: job_1607737243402_0004
2020-12-12 01:44:35 INFO  Job:1360 - Job job_1607737243402_0004 running in uber mode : false
2020-12-12 01:44:35 INFO  Job:1367 -  map 0% reduce 0%
2020-12-12 01:44:41 INFO  Job:1367 -  map 33% reduce 0%
2020-12-12 01:44:46 INFO  Job:1367 -  map 67% reduce 0%
2020-12-12 01:44:51 INFO  Job:1367 -  map 100% reduce 0%
2020-12-12 01:44:55 INFO  Job:1367 -  map 100% reduce 100%
2020-12-12 01:44:59 INFO  Job:1378 - Job job_1607737243402_0004 completed successfully
2020-12-12 01:44:59 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673451
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43316
		Total time spent by all reduces in occupied slots (ms)=15660
		Total time spent by all map tasks (ms)=10829
		Total time spent by all reduce tasks (ms)=3915
		Total vcore-milliseconds taken by all map tasks=10829
		Total vcore-milliseconds taken by all reduce tasks=3915
		Total megabyte-milliseconds taken by all map tasks=44355584
		Total megabyte-milliseconds taken by all reduce tasks=16035840
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=631
		CPU time spent (ms)=7800
		Physical memory (bytes) snapshot=1155297280
		Virtual memory (bytes) snapshot=15786053632
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 01:45:00.045" starttime="20201212 01:45:00.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:45:00.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:45:00.045" starttime="20201212 01:45:00.045"></status>
</kw>
<status status="PASS" endtime="20201212 01:45:00.046" starttime="20201212 01:44:23.015"></status>
</kw>
<msg timestamp="20201212 01:45:00.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:45:00.046" starttime="20201212 01:44:23.015"></status>
</kw>
<msg timestamp="20201212 01:45:00.046" level="INFO">${output} = 2020-12-12 01:44:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-12 01:44:25 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201212 01:45:00.046" starttime="20201212 01:44:23.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 01:45:00.047" starttime="20201212 01:45:00.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:45:00.047" starttime="20201212 01:45:00.047"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:45:00.048" critical="yes" starttime="20201212 01:44:22.979"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 01:45:00.049" starttime="20201212 01:43:43.527"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:42:09.781" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:42:09.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:42:09.787" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:42:09.787" starttime="20201212 01:42:09.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:42:09.788" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:42:09.788" starttime="20201212 01:42:09.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:42:09.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:42:09.789" starttime="20201212 01:42:09.788"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:09.789" starttime="20201212 01:42:09.776"></status>
</kw>
<msg timestamp="20201212 01:42:09.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:42:09.789" starttime="20201212 01:42:09.776"></status>
</kw>
<msg timestamp="20201212 01:42:09.789" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:42:09.789" starttime="20201212 01:42:09.776"></status>
</kw>
<msg timestamp="20201212 01:42:09.789" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:42:09.790" starttime="20201212 01:42:09.775"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:42:09.794" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:42:09.794" starttime="20201212 01:42:09.794"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:42:09.795" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:42:09.795" starttime="20201212 01:42:09.794"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:09.795" starttime="20201212 01:42:09.792"></status>
</kw>
<msg timestamp="20201212 01:42:09.795" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:42:09.795" starttime="20201212 01:42:09.792"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:09.795" starttime="20201212 01:42:09.791"></status>
</kw>
<msg timestamp="20201212 01:42:09.795" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:42:09.796" starttime="20201212 01:42:09.790"></status>
</kw>
<msg timestamp="20201212 01:42:09.796" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:42:09.796" starttime="20201212 01:42:09.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:42:09.799" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:42:48.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:42:48.905" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:42:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:42:11 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201212 01:42:48.905" starttime="20201212 01:42:09.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:42:48.906" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:42:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:42:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 01:42:11 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 01:42:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:42:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-959892CDE1D7-&gt;93102175-dd8d-4fda-8619-0ca5bf470814
2020-12-12 01:42:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 01:42:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-12 01:42:13 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-12 01:42:13 INFO  JobSubmitter:198 - number of splits:3
2020-12-12 01:42:14 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607737243402_0001
2020-12-12 01:42:14 INFO  YarnClientImpl:273 - Submitted application application_1607737243402_0001
2020-12-12 01:42:14 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607737243402_0001/
2020-12-12 01:42:14 INFO  Job:1339 - Running job: job_1607737243402_0001
2020-12-12 01:42:24 INFO  Job:1360 - Job job_1607737243402_0001 running in uber mode : false
2020-12-12 01:42:24 INFO  Job:1367 -  map 0% reduce 0%
2020-12-12 01:42:32 INFO  Job:1367 -  map 33% reduce 0%
2020-12-12 01:42:38 INFO  Job:1367 -  map 67% reduce 0%
2020-12-12 01:42:43 INFO  Job:1367 -  map 100% reduce 0%
2020-12-12 01:42:47 INFO  Job:1367 -  map 100% reduce 100%
2020-12-12 01:42:48 INFO  Job:1378 - Job job_1607737243402_0001 completed successfully
2020-12-12 01:42:48 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610909
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44552
		Total time spent by all reduces in occupied slots (ms)=16416
		Total time spent by all map tasks (ms)=11138
		Total time spent by all reduce tasks (ms)=4104
		Total vcore-milliseconds taken by all map tasks=11138
		Total vcore-milliseconds taken by all reduce tasks=4104
		Total megabyte-milliseconds taken by all map tasks=45621248
		Total megabyte-milliseconds taken by all reduce tasks=16809984
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=652
		CPU time spent (ms)=7630
		Physical memory (bytes) snapshot=1165369344
		Virtual memory (bytes) snapshot=15790497792
		Total committed heap usage (bytes)=1012400128
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.092 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 01:42:48.906" starttime="20201212 01:42:48.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:42:48.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:42:48.907" starttime="20201212 01:42:48.906"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:48.907" starttime="20201212 01:42:09.797"></status>
</kw>
<msg timestamp="20201212 01:42:48.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:42:48.907" starttime="20201212 01:42:09.796"></status>
</kw>
<msg timestamp="20201212 01:42:48.908" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:42:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:42:11 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201212 01:42:48.908" starttime="20201212 01:42:09.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:42:48.908" starttime="20201212 01:42:48.908"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:42:48.909" critical="yes" starttime="20201212 01:42:09.775"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:42:48.913" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:42:48.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:42:48.920" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:42:48.920" starttime="20201212 01:42:48.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:42:48.921" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:42:48.921" starttime="20201212 01:42:48.921"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:42:48.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:42:48.922" starttime="20201212 01:42:48.921"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:48.922" starttime="20201212 01:42:48.911"></status>
</kw>
<msg timestamp="20201212 01:42:48.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:42:48.922" starttime="20201212 01:42:48.911"></status>
</kw>
<msg timestamp="20201212 01:42:48.923" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:42:48.923" starttime="20201212 01:42:48.910"></status>
</kw>
<msg timestamp="20201212 01:42:48.923" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201212 01:42:48.923" starttime="20201212 01:42:48.910"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:42:48.924" level="INFO">${random} = 14</msg>
<status status="PASS" endtime="20201212 01:42:48.924" starttime="20201212 01:42:48.923"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:42:48.928" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:42:48.928" starttime="20201212 01:42:48.927"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:42:48.928" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:42:48.928" starttime="20201212 01:42:48.928"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:48.929" starttime="20201212 01:42:48.927"></status>
</kw>
<msg timestamp="20201212 01:42:48.929" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:42:48.929" starttime="20201212 01:42:48.926"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:48.929" starttime="20201212 01:42:48.925"></status>
</kw>
<msg timestamp="20201212 01:42:48.929" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:42:48.929" starttime="20201212 01:42:48.925"></status>
</kw>
<msg timestamp="20201212 01:42:48.929" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:42:48.929" starttime="20201212 01:42:48.924"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:42:48.933" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:42:48.933" starttime="20201212 01:42:48.932"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:42:48.933" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:42:48.933" starttime="20201212 01:42:48.933"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:48.934" starttime="20201212 01:42:48.932"></status>
</kw>
<msg timestamp="20201212 01:42:48.934" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:42:48.934" starttime="20201212 01:42:48.931"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:48.934" starttime="20201212 01:42:48.931"></status>
</kw>
<msg timestamp="20201212 01:42:48.934" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 01:42:48.934" starttime="20201212 01:42:48.930"></status>
</kw>
<msg timestamp="20201212 01:42:48.934" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 01:42:48.934" starttime="20201212 01:42:48.930"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:42:48.938" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:42:48.938" starttime="20201212 01:42:48.937"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:42:48.938" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:42:48.938" starttime="20201212 01:42:48.938"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:48.939" starttime="20201212 01:42:48.937"></status>
</kw>
<msg timestamp="20201212 01:42:48.939" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:42:48.939" starttime="20201212 01:42:48.936"></status>
</kw>
<status status="PASS" endtime="20201212 01:42:48.939" starttime="20201212 01:42:48.936"></status>
</kw>
<msg timestamp="20201212 01:42:48.939" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-14.txt</msg>
<status status="PASS" endtime="20201212 01:42:48.939" starttime="20201212 01:42:48.935"></status>
</kw>
<msg timestamp="20201212 01:42:48.939" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-14.txt</msg>
<status status="PASS" endtime="20201212 01:42:48.939" starttime="20201212 01:42:48.934"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:42:48.944" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-14.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:43:28.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:43:28.065" level="INFO">${output} = 2020-12-12 01:42:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-12 01:42:51 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201212 01:43:28.065" starttime="20201212 01:42:48.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:43:28.066" level="INFO">2020-12-12 01:42:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-12 01:42:51 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 01:42:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:42:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-12 01:42:51 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-12 01:42:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:42:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CDA72FC7F8FB-&gt;93102175-dd8d-4fda-8619-0ca5bf470814
2020-12-12 01:42:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 01:42:55 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-12 01:42:57 INFO  JobSubmitter:198 - number of splits:3
2020-12-12 01:42:57 INFO  JobSubmitter:287 - Submitting tokens for job: job_1607737243402_0002
2020-12-12 01:42:58 INFO  YarnClientImpl:273 - Submitted application application_1607737243402_0002
2020-12-12 01:42:58 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1607737243402_0002/
2020-12-12 01:42:58 INFO  Job:1339 - Running job: job_1607737243402_0002
2020-12-12 01:43:05 INFO  Job:1360 - Job job_1607737243402_0002 running in uber mode : false
2020-12-12 01:43:05 INFO  Job:1367 -  map 0% reduce 0%
2020-12-12 01:43:12 INFO  Job:1367 -  map 33% reduce 0%
2020-12-12 01:43:17 INFO  Job:1367 -  map 67% reduce 0%
2020-12-12 01:43:22 INFO  Job:1367 -  map 100% reduce 0%
2020-12-12 01:43:26 INFO  Job:1367 -  map 100% reduce 100%
2020-12-12 01:43:27 INFO  Job:1378 - Job job_1607737243402_0002 completed successfully
2020-12-12 01:43:27 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673535
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42824
		Total time spent by all reduces in occupied slots (ms)=15180
		Total time spent by all map tasks (ms)=10706
		Total time spent by all reduce tasks (ms)=3795
		Total vcore-milliseconds taken by all map tasks=10706
		Total vcore-milliseconds taken by all reduce tasks=3795
		Total megabyte-milliseconds taken by all map tasks=43851776
		Total megabyte-milliseconds taken by all reduce tasks=15544320
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=648
		CPU time spent (ms)=7530
		Physical memory (bytes) snapshot=1165856768
		Virtual memory (bytes) snapshot=15790014464
		Total committed heap usage (bytes)=1059061760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 01:43:28.066" starttime="20201212 01:43:28.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:43:28.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:43:28.067" starttime="20201212 01:43:28.066"></status>
</kw>
<status status="PASS" endtime="20201212 01:43:28.067" starttime="20201212 01:42:48.940"></status>
</kw>
<msg timestamp="20201212 01:43:28.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:43:28.067" starttime="20201212 01:42:48.940"></status>
</kw>
<msg timestamp="20201212 01:43:28.068" level="INFO">${output} = 2020-12-12 01:42:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.2:8032
2020-12-12 01:42:51 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201212 01:43:28.068" starttime="20201212 01:42:48.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 01:43:28.069" starttime="20201212 01:43:28.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:43:28.070" starttime="20201212 01:43:28.069"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:43:28.070" critical="yes" starttime="20201212 01:42:48.909"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 01:43:28.071" starttime="20201212 01:42:09.713"></status>
</suite>
<status status="PASS" elapsedtime="195797" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:06.487" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:09.148" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 01:46:09.148" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 01:46:09.148" starttime="20201212 01:46:06.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:09.149" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 01:46:09.149" starttime="20201212 01:46:09.148"></status>
</kw>
<msg timestamp="20201212 01:46:09.149" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 01:46:09.150" starttime="20201212 01:46:06.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:09.157" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:11.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:11.547" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:46:11.547" starttime="20201212 01:46:09.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:11.548" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:46:11.548" starttime="20201212 01:46:11.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:11.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:11.549" starttime="20201212 01:46:11.548"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:11.549" starttime="20201212 01:46:09.151"></status>
</kw>
<msg timestamp="20201212 01:46:11.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:11.550" starttime="20201212 01:46:09.151"></status>
</kw>
<msg timestamp="20201212 01:46:11.550" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201212 01:46:11.550" starttime="20201212 01:46:09.151"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201212 01:46:11.550" starttime="20201212 01:46:11.550"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:11.550" starttime="20201212 01:46:09.150"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:11.550" starttime="20201212 01:46:09.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:11.555" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:13.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:13.705" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:46:13.705" starttime="20201212 01:46:11.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:13.706" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:46:13.706" starttime="20201212 01:46:13.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:13.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:13.707" starttime="20201212 01:46:13.706"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:13.707" starttime="20201212 01:46:11.552"></status>
</kw>
<msg timestamp="20201212 01:46:13.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:13.707" starttime="20201212 01:46:11.552"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:13.708" starttime="20201212 01:46:11.552"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:13.708" starttime="20201212 01:46:11.551"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:13.708" starttime="20201212 01:46:11.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 01:46:13.708" starttime="20201212 01:46:13.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:13.713" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:16.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:16.186" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T01:46:13.583Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 01:46:16.186" starttime="20201212 01:46:13.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:16.187" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T01:46:13.583Z",
  "modificationTime" : "2020-12-12T01:46:13.583Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 01:46:16.187" starttime="20201212 01:46:16.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:16.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:16.188" starttime="20201212 01:46:16.188"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:16.188" starttime="20201212 01:46:13.709"></status>
</kw>
<msg timestamp="20201212 01:46:16.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:16.189" starttime="20201212 01:46:13.709"></status>
</kw>
<msg timestamp="20201212 01:46:16.189" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T01:46:13.583Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 01:46:16.189" starttime="20201212 01:46:13.708"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 01:46:16.189" starttime="20201212 01:46:16.189"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:46:16.193" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:46:16.193" starttime="20201212 01:46:16.193"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:46:16.194" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:46:16.194" starttime="20201212 01:46:16.194"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:16.194" starttime="20201212 01:46:16.192"></status>
</kw>
<msg timestamp="20201212 01:46:16.194" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:46:16.194" starttime="20201212 01:46:16.192"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:16.195" starttime="20201212 01:46:16.191"></status>
</kw>
<msg timestamp="20201212 01:46:16.195" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 01:46:16.195" starttime="20201212 01:46:16.190"></status>
</kw>
<msg timestamp="20201212 01:46:16.195" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 01:46:16.195" starttime="20201212 01:46:16.189"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:16.200" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:18.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:18.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:46:18.526" starttime="20201212 01:46:16.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:18.528" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:46:18.528" starttime="20201212 01:46:18.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:18.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:18.528" starttime="20201212 01:46:18.528"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:18.529" starttime="20201212 01:46:16.196"></status>
</kw>
<msg timestamp="20201212 01:46:18.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:18.529" starttime="20201212 01:46:16.196"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:18.529" starttime="20201212 01:46:16.195"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:18.533" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:24.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:24.028" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:46:24.028" starttime="20201212 01:46:18.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:24.029" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:46:24.029" starttime="20201212 01:46:24.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:24.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:24.030" starttime="20201212 01:46:24.030"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:24.030" starttime="20201212 01:46:18.530"></status>
</kw>
<msg timestamp="20201212 01:46:24.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:24.031" starttime="20201212 01:46:18.530"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:24.031" starttime="20201212 01:46:18.529"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:24.035" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:27.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:27.955" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:46:27.956" starttime="20201212 01:46:24.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:27.957" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:46:27.957" starttime="20201212 01:46:27.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:27.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:27.957" starttime="20201212 01:46:27.957"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:27.958" starttime="20201212 01:46:24.032"></status>
</kw>
<msg timestamp="20201212 01:46:27.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:27.958" starttime="20201212 01:46:24.032"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:27.958" starttime="20201212 01:46:24.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:27.962" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:32.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:32.146" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:46:32.146" starttime="20201212 01:46:27.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:32.147" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:46:32.147" starttime="20201212 01:46:32.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:32.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:32.148" starttime="20201212 01:46:32.148"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:32.149" starttime="20201212 01:46:27.959"></status>
</kw>
<msg timestamp="20201212 01:46:32.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:32.149" starttime="20201212 01:46:27.959"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:32.149" starttime="20201212 01:46:27.958"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 01:46:32.149" critical="yes" starttime="20201212 01:46:06.479"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:46:32.154" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:46:32.155" starttime="20201212 01:46:32.154"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:46:32.155" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:46:32.155" starttime="20201212 01:46:32.155"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:32.155" starttime="20201212 01:46:32.153"></status>
</kw>
<msg timestamp="20201212 01:46:32.155" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:46:32.155" starttime="20201212 01:46:32.153"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:32.156" starttime="20201212 01:46:32.152"></status>
</kw>
<msg timestamp="20201212 01:46:32.156" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 01:46:32.156" starttime="20201212 01:46:32.152"></status>
</kw>
<msg timestamp="20201212 01:46:32.156" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 01:46:32.156" starttime="20201212 01:46:32.151"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:32.160" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:34.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:34.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:46:34.403" starttime="20201212 01:46:32.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:34.404" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:46:34.404" starttime="20201212 01:46:34.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:34.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:34.405" starttime="20201212 01:46:34.405"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:34.405" starttime="20201212 01:46:32.157"></status>
</kw>
<msg timestamp="20201212 01:46:34.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:34.406" starttime="20201212 01:46:32.157"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:34.406" starttime="20201212 01:46:32.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:34.411" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:36.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:36.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:46:36.526" starttime="20201212 01:46:34.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:36.527" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:46:36.527" starttime="20201212 01:46:36.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:36.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:36.528" starttime="20201212 01:46:36.527"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:36.528" starttime="20201212 01:46:34.407"></status>
</kw>
<msg timestamp="20201212 01:46:36.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:36.528" starttime="20201212 01:46:34.407"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:36.528" starttime="20201212 01:46:34.406"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 01:46:36.529" critical="yes" starttime="20201212 01:46:32.150"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201212 01:46:36.530" starttime="20201212 01:46:06.412"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:48:20.385" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:48:20.386" starttime="20201212 01:48:20.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:48:20.386" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:48:20.386" starttime="20201212 01:48:20.386"></status>
</kw>
<status status="PASS" endtime="20201212 01:48:20.386" starttime="20201212 01:48:20.384"></status>
</kw>
<msg timestamp="20201212 01:48:20.386" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:48:20.387" starttime="20201212 01:48:20.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:48:20.388" starttime="20201212 01:48:20.387"></status>
</kw>
<msg timestamp="20201212 01:48:20.388" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 01:48:20.388" starttime="20201212 01:48:20.387"></status>
</kw>
<status status="PASS" endtime="20201212 01:48:20.388" starttime="20201212 01:48:20.383"></status>
</kw>
<msg timestamp="20201212 01:48:20.388" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:48:20.388" starttime="20201212 01:48:20.383"></status>
</kw>
<msg timestamp="20201212 01:48:20.389" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:48:20.389" starttime="20201212 01:48:20.381"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:48:20.389" level="INFO">${random} = 68713</msg>
<status status="PASS" endtime="20201212 01:48:20.389" starttime="20201212 01:48:20.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:48:20.396" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-68713 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:48:24.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:48:24.068" level="INFO">${output} = 2020-12-12 01:48:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:48:24.068" starttime="20201212 01:48:20.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:48:24.069" level="INFO">2020-12-12 01:48:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:22 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 01:48:22 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:48:22 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:48:22 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:48:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:48:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FAB18904FF15-&gt;31e5feb4-1380-486d-9606-2b8228bcfd5a
2020-12-12 01:48:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 01:48:23 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 01:48:24.069" starttime="20201212 01:48:24.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:48:24.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:48:24.070" starttime="20201212 01:48:24.069"></status>
</kw>
<status status="PASS" endtime="20201212 01:48:24.070" starttime="20201212 01:48:20.390"></status>
</kw>
<msg timestamp="20201212 01:48:24.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:48:24.070" starttime="20201212 01:48:20.390"></status>
</kw>
<msg timestamp="20201212 01:48:24.071" level="INFO">${result} = 2020-12-12 01:48:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:48:24.071" starttime="20201212 01:48:20.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:48:24.075" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:48:25.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:48:25.867" level="INFO">${output} = 2020-12-12 01:48:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:48:25.867" starttime="20201212 01:48:24.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:48:25.868" level="INFO">2020-12-12 01:48:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:25 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-12 01:46 ofs://om/volume1/bucket1/ozone-57812
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-12 01:48 ofs://om/volume1/bucket1/ozone-68713
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:46 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:47 ofs://om/volume1/bucket1/wordcount-53.txt
2020-12-12 01:48:25 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 01:48:25.868" starttime="20201212 01:48:25.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:48:25.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:48:25.869" starttime="20201212 01:48:25.868"></status>
</kw>
<status status="PASS" endtime="20201212 01:48:25.869" starttime="20201212 01:48:24.073"></status>
</kw>
<msg timestamp="20201212 01:48:25.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:48:25.870" starttime="20201212 01:48:24.073"></status>
</kw>
<msg timestamp="20201212 01:48:25.870" level="INFO">${result} = 2020-12-12 01:48:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:24 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:25 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:48:25.870" starttime="20201212 01:48:24.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:48:25.871" starttime="20201212 01:48:25.870"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 01:48:25.871" critical="yes" starttime="20201212 01:48:20.380"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 01:48:25.872" starttime="20201212 01:48:20.323"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:46:41.694" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:46:41.694" starttime="20201212 01:46:41.694"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:46:41.695" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:46:41.695" starttime="20201212 01:46:41.695"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:41.695" starttime="20201212 01:46:41.693"></status>
</kw>
<msg timestamp="20201212 01:46:41.695" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:46:41.695" starttime="20201212 01:46:41.693"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:41.696" starttime="20201212 01:46:41.692"></status>
</kw>
<msg timestamp="20201212 01:46:41.696" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:46:41.696" starttime="20201212 01:46:41.692"></status>
</kw>
<msg timestamp="20201212 01:46:41.696" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:46:41.696" starttime="20201212 01:46:41.691"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:46:41.696" level="INFO">${random} = 57812</msg>
<status status="PASS" endtime="20201212 01:46:41.697" starttime="20201212 01:46:41.696"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:41.702" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-57812 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:45.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:45.558" level="INFO">${output} = 2020-12-12 01:46:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:46:45.558" starttime="20201212 01:46:41.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:45.559" level="INFO">2020-12-12 01:46:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:43 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 01:46:43 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:46:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:46:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:46:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:46:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-613602EC6D08-&gt;31e5feb4-1380-486d-9606-2b8228bcfd5a
2020-12-12 01:46:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 01:46:45 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 01:46:45.559" starttime="20201212 01:46:45.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:45.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:45.560" starttime="20201212 01:46:45.559"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:45.560" starttime="20201212 01:46:41.697"></status>
</kw>
<msg timestamp="20201212 01:46:45.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:45.560" starttime="20201212 01:46:41.697"></status>
</kw>
<msg timestamp="20201212 01:46:45.560" level="INFO">${result} = 2020-12-12 01:46:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:43 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:46:45.560" starttime="20201212 01:46:41.697"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:45.565" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:47.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:47.460" level="INFO">${output} = 2020-12-12 01:46:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:46:47.460" starttime="20201212 01:46:45.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:47.462" level="INFO">2020-12-12 01:46:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:47 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-12 01:46 o3fs://bucket1.volume1.om/ozone-57812
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:46 o3fs://bucket1.volume1.om/user
2020-12-12 01:46:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 01:46:47.462" starttime="20201212 01:46:47.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:47.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:47.462" starttime="20201212 01:46:47.462"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:47.463" starttime="20201212 01:46:45.562"></status>
</kw>
<msg timestamp="20201212 01:46:47.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:47.463" starttime="20201212 01:46:45.561"></status>
</kw>
<msg timestamp="20201212 01:46:47.463" level="INFO">${result} = 2020-12-12 01:46:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:46 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:46:47.463" starttime="20201212 01:46:45.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:46:47.464" starttime="20201212 01:46:47.463"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 01:46:47.464" critical="yes" starttime="20201212 01:46:41.690"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 01:46:47.465" starttime="20201212 01:46:41.637"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:48:31.124" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:48:31.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:48:31.128" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:48:31.128" starttime="20201212 01:48:31.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:48:31.129" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:48:31.129" starttime="20201212 01:48:31.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:48:31.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:48:31.129" starttime="20201212 01:48:31.129"></status>
</kw>
<status status="PASS" endtime="20201212 01:48:31.130" starttime="20201212 01:48:31.118"></status>
</kw>
<msg timestamp="20201212 01:48:31.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:48:31.130" starttime="20201212 01:48:31.118"></status>
</kw>
<msg timestamp="20201212 01:48:31.130" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:48:31.130" starttime="20201212 01:48:31.117"></status>
</kw>
<msg timestamp="20201212 01:48:31.130" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:48:31.130" starttime="20201212 01:48:31.117"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:48:31.135" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:48:31.135" starttime="20201212 01:48:31.135"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:48:31.136" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:48:31.136" starttime="20201212 01:48:31.136"></status>
</kw>
<status status="PASS" endtime="20201212 01:48:31.136" starttime="20201212 01:48:31.133"></status>
</kw>
<msg timestamp="20201212 01:48:31.136" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:48:31.136" starttime="20201212 01:48:31.133"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:48:31.137" starttime="20201212 01:48:31.137"></status>
</kw>
<msg timestamp="20201212 01:48:31.137" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 01:48:31.137" starttime="20201212 01:48:31.136"></status>
</kw>
<status status="PASS" endtime="20201212 01:48:31.138" starttime="20201212 01:48:31.132"></status>
</kw>
<msg timestamp="20201212 01:48:31.138" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:48:31.138" starttime="20201212 01:48:31.132"></status>
</kw>
<msg timestamp="20201212 01:48:31.138" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:48:31.138" starttime="20201212 01:48:31.131"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:48:31.142" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:49:07.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:49:07.964" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:48:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48...</msg>
<status status="PASS" endtime="20201212 01:49:07.965" starttime="20201212 01:48:31.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:49:07.966" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:48:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:33 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 01:48:33 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:48:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:48:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:48:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:48:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-993DAEAB72D5-&gt;31e5feb4-1380-486d-9606-2b8228bcfd5a
2020-12-12 01:48:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 01:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:34 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-12 01:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 01:48:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:35 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 01:48:35 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 01:48:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607737545812_0003
2020-12-12 01:48:35 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 01:48:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:35 INFO  Configuration:2752 - resource-types.xml not found
2020-12-12 01:48:35 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-12 01:48:35 INFO  YarnClientImpl:324 - Submitted application application_1607737545812_0003
2020-12-12 01:48:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607737545812_0003/
2020-12-12 01:48:35 INFO  Job:1619 - Running job: job_1607737545812_0003
2020-12-12 01:48:44 INFO  Job:1640 - Job job_1607737545812_0003 running in uber mode : false
2020-12-12 01:48:44 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 01:48:51 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 01:48:57 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 01:49:01 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 01:49:06 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 01:49:07 INFO  Job:1658 - Job job_1607737545812_0003 completed successfully
2020-12-12 01:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:07 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016137
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42388
		Total time spent by all reduces in occupied slots (ms)=15720
		Total time spent by all map tasks (ms)=10597
		Total time spent by all reduce tasks (ms)=3930
		Total vcore-milliseconds taken by all map tasks=10597
		Total vcore-milliseconds taken by all reduce tasks=3930
		Total megabyte-milliseconds taken by all map tasks=43405312
		Total megabyte-milliseconds taken by all reduce tasks=16097280
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=668
		CPU time spent (ms)=6990
		Physical memory (bytes) snapshot=1208852480
		Virtual memory (bytes) snapshot=15792922624
		Total committed heap usage (bytes)=1064828928
		Peak Map Physical memory (bytes)=313556992
		Peak Map Virtual memory (bytes)=3950682112
		Peak Reduce Physical memory (bytes)=301051904
		Peak Reduce Virtual memory (bytes)=3974713344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.894 seconds
2020-12-12 01:49:07 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-12 01:49:07 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 01:49:07.966" starttime="20201212 01:49:07.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:49:07.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:49:07.967" starttime="20201212 01:49:07.966"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:07.967" starttime="20201212 01:48:31.139"></status>
</kw>
<msg timestamp="20201212 01:49:07.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:49:07.967" starttime="20201212 01:48:31.139"></status>
</kw>
<msg timestamp="20201212 01:49:07.968" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:48:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48...</msg>
<status status="PASS" endtime="20201212 01:49:07.968" starttime="20201212 01:48:31.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:49:07.968" starttime="20201212 01:49:07.968"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:49:07.969" critical="yes" starttime="20201212 01:48:31.116"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:49:07.974" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:49:07.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:49:07.982" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:49:07.982" starttime="20201212 01:49:07.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:49:07.983" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:49:07.983" starttime="20201212 01:49:07.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:49:07.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:49:07.984" starttime="20201212 01:49:07.983"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:07.984" starttime="20201212 01:49:07.971"></status>
</kw>
<msg timestamp="20201212 01:49:07.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:49:07.984" starttime="20201212 01:49:07.971"></status>
</kw>
<msg timestamp="20201212 01:49:07.984" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:49:07.984" starttime="20201212 01:49:07.971"></status>
</kw>
<msg timestamp="20201212 01:49:07.985" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:49:07.985" starttime="20201212 01:49:07.970"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:49:07.985" level="INFO">${random} = 40</msg>
<status status="PASS" endtime="20201212 01:49:07.985" starttime="20201212 01:49:07.985"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:49:07.989" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:49:07.989" starttime="20201212 01:49:07.989"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:49:07.990" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:49:07.990" starttime="20201212 01:49:07.989"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:07.990" starttime="20201212 01:49:07.988"></status>
</kw>
<msg timestamp="20201212 01:49:07.990" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:49:07.990" starttime="20201212 01:49:07.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:49:07.991" starttime="20201212 01:49:07.991"></status>
</kw>
<msg timestamp="20201212 01:49:07.991" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 01:49:07.991" starttime="20201212 01:49:07.990"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:07.992" starttime="20201212 01:49:07.987"></status>
</kw>
<msg timestamp="20201212 01:49:07.992" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:49:07.992" starttime="20201212 01:49:07.986"></status>
</kw>
<msg timestamp="20201212 01:49:07.992" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:49:07.992" starttime="20201212 01:49:07.985"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:49:07.995" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:49:07.995" starttime="20201212 01:49:07.995"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:49:07.996" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:49:07.996" starttime="20201212 01:49:07.995"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:07.996" starttime="20201212 01:49:07.994"></status>
</kw>
<msg timestamp="20201212 01:49:07.996" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:49:07.996" starttime="20201212 01:49:07.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:49:07.998" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201212 01:49:07.998" starttime="20201212 01:49:07.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:49:07.998" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201212 01:49:07.998" starttime="20201212 01:49:07.998"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:07.999" starttime="20201212 01:49:07.997"></status>
</kw>
<msg timestamp="20201212 01:49:07.999" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201212 01:49:07.999" starttime="20201212 01:49:07.996"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:07.999" starttime="20201212 01:49:07.993"></status>
</kw>
<msg timestamp="20201212 01:49:07.999" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 01:49:07.999" starttime="20201212 01:49:07.993"></status>
</kw>
<msg timestamp="20201212 01:49:07.999" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 01:49:07.999" starttime="20201212 01:49:07.992"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:49:08.003" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:49:08.003" starttime="20201212 01:49:08.002"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:49:08.003" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:49:08.003" starttime="20201212 01:49:08.003"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:08.003" starttime="20201212 01:49:08.002"></status>
</kw>
<msg timestamp="20201212 01:49:08.003" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:49:08.004" starttime="20201212 01:49:08.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:49:08.005" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201212 01:49:08.005" starttime="20201212 01:49:08.005"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:49:08.006" level="INFO">${result} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201212 01:49:08.006" starttime="20201212 01:49:08.005"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:08.006" starttime="20201212 01:49:08.004"></status>
</kw>
<msg timestamp="20201212 01:49:08.006" level="INFO">${path_with_leading} = /wordcount-40.txt</msg>
<status status="PASS" endtime="20201212 01:49:08.006" starttime="20201212 01:49:08.004"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:08.006" starttime="20201212 01:49:08.001"></status>
</kw>
<msg timestamp="20201212 01:49:08.006" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201212 01:49:08.006" starttime="20201212 01:49:08.000"></status>
</kw>
<msg timestamp="20201212 01:49:08.007" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-40.txt</msg>
<status status="PASS" endtime="20201212 01:49:08.007" starttime="20201212 01:49:08.000"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:49:08.012" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-40.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:49:48.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:49:48.099" level="INFO">${output} = 2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:49:48.099" starttime="20201212 01:49:08.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:49:48.100" level="INFO">2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-12 01:49:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:10 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 01:49:10 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:10 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 01:49:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:49:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:49:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:49:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:49:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1D7746E3B8BF-&gt;31e5feb4-1380-486d-9606-2b8228bcfd5a
2020-12-12 01:49:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 01:49:11 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 01:49:14 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 01:49:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607737545812_0004
2020-12-12 01:49:14 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 01:49:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:15 INFO  Configuration:2752 - resource-types.xml not found
2020-12-12 01:49:15 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-12 01:49:15 INFO  YarnClientImpl:324 - Submitted application application_1607737545812_0004
2020-12-12 01:49:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607737545812_0004/
2020-12-12 01:49:15 INFO  Job:1619 - Running job: job_1607737545812_0004
2020-12-12 01:49:22 INFO  Job:1640 - Job job_1607737545812_0004 running in uber mode : false
2020-12-12 01:49:22 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 01:49:29 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 01:49:35 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 01:49:41 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 01:49:46 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 01:49:47 INFO  Job:1658 - Job job_1607737545812_0004 completed successfully
2020-12-12 01:49:47 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:47 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078787
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45000
		Total time spent by all reduces in occupied slots (ms)=15436
		Total time spent by all map tasks (ms)=11250
		Total time spent by all reduce tasks (ms)=3859
		Total vcore-milliseconds taken by all map tasks=11250
		Total vcore-milliseconds taken by all reduce tasks=3859
		Total megabyte-milliseconds taken by all map tasks=46080000
		Total megabyte-milliseconds taken by all reduce tasks=15806464
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=640
		CPU time spent (ms)=7490
		Physical memory (bytes) snapshot=1200373760
		Virtual memory (bytes) snapshot=15782109184
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=311296000
		Peak Map Virtual memory (bytes)=3946692608
		Peak Reduce Physical memory (bytes)=273944576
		Peak Reduce Virtual memory (bytes)=3950039040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-12 01:49:47 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 01:49:48.100" starttime="20201212 01:49:48.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:49:48.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:49:48.101" starttime="20201212 01:49:48.100"></status>
</kw>
<status status="PASS" endtime="20201212 01:49:48.101" starttime="20201212 01:49:08.008"></status>
</kw>
<msg timestamp="20201212 01:49:48.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:49:48.101" starttime="20201212 01:49:08.007"></status>
</kw>
<msg timestamp="20201212 01:49:48.102" level="INFO">${output} = 2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:49:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:49:48.102" starttime="20201212 01:49:08.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 01:49:48.103" starttime="20201212 01:49:48.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:49:48.103" starttime="20201212 01:49:48.103"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:49:48.103" critical="yes" starttime="20201212 01:49:07.969"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 01:49:48.105" starttime="20201212 01:48:31.055"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:52.697" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:46:52.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:46:52.701" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:46:52.701" starttime="20201212 01:46:52.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:46:52.702" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:46:52.702" starttime="20201212 01:46:52.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:46:52.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:46:52.703" starttime="20201212 01:46:52.702"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:52.703" starttime="20201212 01:46:52.691"></status>
</kw>
<msg timestamp="20201212 01:46:52.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:46:52.703" starttime="20201212 01:46:52.691"></status>
</kw>
<msg timestamp="20201212 01:46:52.703" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:46:52.703" starttime="20201212 01:46:52.690"></status>
</kw>
<msg timestamp="20201212 01:46:52.704" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:46:52.704" starttime="20201212 01:46:52.690"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:46:52.708" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:46:52.708" starttime="20201212 01:46:52.708"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:46:52.709" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:46:52.709" starttime="20201212 01:46:52.708"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:52.709" starttime="20201212 01:46:52.706"></status>
</kw>
<msg timestamp="20201212 01:46:52.709" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:46:52.709" starttime="20201212 01:46:52.706"></status>
</kw>
<status status="PASS" endtime="20201212 01:46:52.710" starttime="20201212 01:46:52.705"></status>
</kw>
<msg timestamp="20201212 01:46:52.710" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:46:52.710" starttime="20201212 01:46:52.705"></status>
</kw>
<msg timestamp="20201212 01:46:52.710" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:46:52.710" starttime="20201212 01:46:52.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:46:52.714" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:47:36.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:47:36.655" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46...</msg>
<status status="PASS" endtime="20201212 01:47:36.655" starttime="20201212 01:46:52.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:47:36.656" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:54 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 01:46:54 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:46:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:46:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:46:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:46:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-779006E710B6-&gt;31e5feb4-1380-486d-9606-2b8228bcfd5a
2020-12-12 01:46:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 01:46:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-12 01:46:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:58 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 01:46:59 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 01:46:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607737545812_0001
2020-12-12 01:46:59 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 01:46:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:59 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:59 INFO  Configuration:2752 - resource-types.xml not found
2020-12-12 01:46:59 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-12 01:47:00 INFO  YarnClientImpl:324 - Submitted application application_1607737545812_0001
2020-12-12 01:47:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607737545812_0001/
2020-12-12 01:47:00 INFO  Job:1619 - Running job: job_1607737545812_0001
2020-12-12 01:47:10 INFO  Job:1640 - Job job_1607737545812_0001 running in uber mode : false
2020-12-12 01:47:10 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 01:47:17 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 01:47:23 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 01:47:29 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 01:47:34 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 01:47:35 INFO  Job:1658 - Job job_1607737545812_0001 completed successfully
2020-12-12 01:47:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016349
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43848
		Total time spent by all reduces in occupied slots (ms)=15704
		Total time spent by all map tasks (ms)=10962
		Total time spent by all reduce tasks (ms)=3926
		Total vcore-milliseconds taken by all map tasks=10962
		Total vcore-milliseconds taken by all reduce tasks=3926
		Total megabyte-milliseconds taken by all map tasks=44900352
		Total megabyte-milliseconds taken by all reduce tasks=16080896
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=644
		CPU time spent (ms)=6690
		Physical memory (bytes) snapshot=1287823360
		Virtual memory (bytes) snapshot=15781699584
		Total committed heap usage (bytes)=1124073472
		Peak Map Physical memory (bytes)=384913408
		Peak Map Virtual memory (bytes)=3947327488
		Peak Reduce Physical memory (bytes)=283762688
		Peak Reduce Virtual memory (bytes)=3950518272
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.393 seconds
2020-12-12 01:47:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:36 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-12 01:47:36 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 01:47:36.656" starttime="20201212 01:47:36.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:47:36.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:47:36.657" starttime="20201212 01:47:36.656"></status>
</kw>
<status status="PASS" endtime="20201212 01:47:36.657" starttime="20201212 01:46:52.711"></status>
</kw>
<msg timestamp="20201212 01:47:36.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:47:36.657" starttime="20201212 01:46:52.711"></status>
</kw>
<msg timestamp="20201212 01:47:36.658" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:46...</msg>
<status status="PASS" endtime="20201212 01:47:36.658" starttime="20201212 01:46:52.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:47:36.658" starttime="20201212 01:47:36.658"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:47:36.659" critical="yes" starttime="20201212 01:46:52.689"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:47:36.666" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:47:36.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:47:36.672" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:47:36.672" starttime="20201212 01:47:36.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:47:36.673" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:47:36.673" starttime="20201212 01:47:36.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:47:36.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:47:36.674" starttime="20201212 01:47:36.673"></status>
</kw>
<status status="PASS" endtime="20201212 01:47:36.674" starttime="20201212 01:47:36.663"></status>
</kw>
<msg timestamp="20201212 01:47:36.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:47:36.674" starttime="20201212 01:47:36.662"></status>
</kw>
<msg timestamp="20201212 01:47:36.674" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:47:36.674" starttime="20201212 01:47:36.661"></status>
</kw>
<msg timestamp="20201212 01:47:36.675" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201212 01:47:36.675" starttime="20201212 01:47:36.661"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:47:36.675" level="INFO">${random} = 53</msg>
<status status="PASS" endtime="20201212 01:47:36.680" starttime="20201212 01:47:36.675"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:47:36.684" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:47:36.684" starttime="20201212 01:47:36.684"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:47:36.685" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:47:36.685" starttime="20201212 01:47:36.684"></status>
</kw>
<status status="PASS" endtime="20201212 01:47:36.685" starttime="20201212 01:47:36.683"></status>
</kw>
<msg timestamp="20201212 01:47:36.685" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:47:36.685" starttime="20201212 01:47:36.682"></status>
</kw>
<status status="PASS" endtime="20201212 01:47:36.685" starttime="20201212 01:47:36.682"></status>
</kw>
<msg timestamp="20201212 01:47:36.685" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:47:36.685" starttime="20201212 01:47:36.681"></status>
</kw>
<msg timestamp="20201212 01:47:36.686" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:47:36.686" starttime="20201212 01:47:36.680"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:47:36.689" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:47:36.689" starttime="20201212 01:47:36.688"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:47:36.690" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:47:36.690" starttime="20201212 01:47:36.689"></status>
</kw>
<status status="PASS" endtime="20201212 01:47:36.690" starttime="20201212 01:47:36.688"></status>
</kw>
<msg timestamp="20201212 01:47:36.690" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:47:36.690" starttime="20201212 01:47:36.688"></status>
</kw>
<status status="PASS" endtime="20201212 01:47:36.690" starttime="20201212 01:47:36.687"></status>
</kw>
<msg timestamp="20201212 01:47:36.690" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 01:47:36.691" starttime="20201212 01:47:36.686"></status>
</kw>
<msg timestamp="20201212 01:47:36.691" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 01:47:36.691" starttime="20201212 01:47:36.686"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:47:36.694" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:47:36.694" starttime="20201212 01:47:36.694"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:47:36.695" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:47:36.695" starttime="20201212 01:47:36.694"></status>
</kw>
<status status="PASS" endtime="20201212 01:47:36.695" starttime="20201212 01:47:36.693"></status>
</kw>
<msg timestamp="20201212 01:47:36.695" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:47:36.695" starttime="20201212 01:47:36.693"></status>
</kw>
<status status="PASS" endtime="20201212 01:47:36.695" starttime="20201212 01:47:36.692"></status>
</kw>
<msg timestamp="20201212 01:47:36.695" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-53.txt</msg>
<status status="PASS" endtime="20201212 01:47:36.696" starttime="20201212 01:47:36.692"></status>
</kw>
<msg timestamp="20201212 01:47:36.696" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-53.txt</msg>
<status status="PASS" endtime="20201212 01:47:36.696" starttime="20201212 01:47:36.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:47:36.700" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-53.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:48:15.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:48:15.268" level="INFO">${output} = 2020-12-12 01:47:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:48:15.268" starttime="20201212 01:47:36.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:48:15.269" level="INFO">2020-12-12 01:47:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:38 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.6:8032
2020-12-12 01:47:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 01:47:38 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:39 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-12 01:47:39 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-12 01:47:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:47:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:47:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:47:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-736566AFB898-&gt;31e5feb4-1380-486d-9606-2b8228bcfd5a
2020-12-12 01:47:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 01:47:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 01:47:40 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 01:47:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607737545812_0002
2020-12-12 01:47:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 01:47:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:41 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:41 INFO  Configuration:2752 - resource-types.xml not found
2020-12-12 01:47:41 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-12 01:47:41 INFO  YarnClientImpl:324 - Submitted application application_1607737545812_0002
2020-12-12 01:47:41 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607737545812_0002/
2020-12-12 01:47:41 INFO  Job:1619 - Running job: job_1607737545812_0002
2020-12-12 01:47:49 INFO  Job:1640 - Job job_1607737545812_0002 running in uber mode : false
2020-12-12 01:47:49 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 01:47:55 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 01:48:02 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 01:48:08 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 01:48:13 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 01:48:14 INFO  Job:1658 - Job job_1607737545812_0002 completed successfully
2020-12-12 01:48:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:48:14 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078871
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43084
		Total time spent by all reduces in occupied slots (ms)=16188
		Total time spent by all map tasks (ms)=10771
		Total time spent by all reduce tasks (ms)=4047
		Total vcore-milliseconds taken by all map tasks=10771
		Total vcore-milliseconds taken by all reduce tasks=4047
		Total megabyte-milliseconds taken by all map tasks=44118016
		Total megabyte-milliseconds taken by all reduce tasks=16576512
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=677
		CPU time spent (ms)=7560
		Physical memory (bytes) snapshot=1242259456
		Virtual memory (bytes) snapshot=15800930304
		Total committed heap usage (bytes)=1077411840
		Peak Map Physical memory (bytes)=318758912
		Peak Map Virtual memory (bytes)=3946610688
		Peak Reduce Physical memory (bytes)=294027264
		Peak Reduce Virtual memory (bytes)=3963293696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-12 01:48:14 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201212 01:48:15.269" starttime="20201212 01:48:15.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:48:15.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:48:15.270" starttime="20201212 01:48:15.269"></status>
</kw>
<status status="PASS" endtime="20201212 01:48:15.270" starttime="20201212 01:47:36.697"></status>
</kw>
<msg timestamp="20201212 01:48:15.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:48:15.270" starttime="20201212 01:47:36.697"></status>
</kw>
<msg timestamp="20201212 01:48:15.271" level="INFO">${output} = 2020-12-12 01:47:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:37 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-12 01:47:38 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201212 01:48:15.271" starttime="20201212 01:47:36.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 01:48:15.271" starttime="20201212 01:48:15.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:48:15.272" starttime="20201212 01:48:15.271"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:48:15.272" critical="yes" starttime="20201212 01:47:36.660"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 01:48:15.273" starttime="20201212 01:46:52.637"></status>
</suite>
<status status="PASS" elapsedtime="201181" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:50:58.065" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:03.649" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 01:51:03.649" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 01:51:03.649" starttime="20201212 01:50:58.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:03.650" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 01:51:03.650" starttime="20201212 01:51:03.649"></status>
</kw>
<msg timestamp="20201212 01:51:03.651" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 01:51:03.651" starttime="20201212 01:50:58.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:03.656" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:07.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:07.016" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:51:07.017" starttime="20201212 01:51:03.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:07.018" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:51:07.018" starttime="20201212 01:51:07.017"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:07.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:07.018" starttime="20201212 01:51:07.018"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:07.019" starttime="20201212 01:51:03.653"></status>
</kw>
<msg timestamp="20201212 01:51:07.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:07.019" starttime="20201212 01:51:03.652"></status>
</kw>
<msg timestamp="20201212 01:51:07.019" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201212 01:51:07.019" starttime="20201212 01:51:03.652"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201212 01:51:07.020" starttime="20201212 01:51:07.019"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:07.020" starttime="20201212 01:51:03.651"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:07.020" starttime="20201212 01:51:03.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:07.026" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:10.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:10.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:51:10.342" starttime="20201212 01:51:07.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:10.343" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:51:10.343" starttime="20201212 01:51:10.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:10.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:10.344" starttime="20201212 01:51:10.344"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:10.345" starttime="20201212 01:51:07.022"></status>
</kw>
<msg timestamp="20201212 01:51:10.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:10.345" starttime="20201212 01:51:07.021"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:10.345" starttime="20201212 01:51:07.021"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:10.345" starttime="20201212 01:51:07.021"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:10.345" starttime="20201212 01:51:07.020"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 01:51:10.346" starttime="20201212 01:51:10.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:10.350" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:13.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:13.701" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T01:51:10.036Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 01:51:13.701" starttime="20201212 01:51:10.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:13.702" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T01:51:10.036Z",
  "modificationTime" : "2020-12-12T01:51:10.036Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 01:51:13.702" starttime="20201212 01:51:13.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:13.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:13.703" starttime="20201212 01:51:13.702"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:13.703" starttime="20201212 01:51:10.347"></status>
</kw>
<msg timestamp="20201212 01:51:13.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:13.703" starttime="20201212 01:51:10.347"></status>
</kw>
<msg timestamp="20201212 01:51:13.703" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T01:51:10.036Z",
  "modificat...</msg>
<status status="PASS" endtime="20201212 01:51:13.703" starttime="20201212 01:51:10.346"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 01:51:13.710" starttime="20201212 01:51:13.704"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:51:13.714" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:51:13.714" starttime="20201212 01:51:13.713"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:51:13.715" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:51:13.715" starttime="20201212 01:51:13.714"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:13.715" starttime="20201212 01:51:13.713"></status>
</kw>
<msg timestamp="20201212 01:51:13.715" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:51:13.715" starttime="20201212 01:51:13.712"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:13.715" starttime="20201212 01:51:13.712"></status>
</kw>
<msg timestamp="20201212 01:51:13.715" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 01:51:13.715" starttime="20201212 01:51:13.711"></status>
</kw>
<msg timestamp="20201212 01:51:13.716" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 01:51:13.716" starttime="20201212 01:51:13.710"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:13.720" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:17.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:17.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:51:17.092" starttime="20201212 01:51:13.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:17.094" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:51:17.094" starttime="20201212 01:51:17.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:17.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:17.095" starttime="20201212 01:51:17.094"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:17.095" starttime="20201212 01:51:13.717"></status>
</kw>
<msg timestamp="20201212 01:51:17.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:17.095" starttime="20201212 01:51:13.716"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:17.095" starttime="20201212 01:51:13.716"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:17.099" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:24.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:24.484" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:51:24.484" starttime="20201212 01:51:17.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:24.485" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:51:24.485" starttime="20201212 01:51:24.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:24.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:24.486" starttime="20201212 01:51:24.485"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:24.486" starttime="20201212 01:51:17.097"></status>
</kw>
<msg timestamp="20201212 01:51:24.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:24.486" starttime="20201212 01:51:17.096"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:24.487" starttime="20201212 01:51:17.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:24.490" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:30.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:30.374" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:51:30.374" starttime="20201212 01:51:24.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:30.375" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:51:30.375" starttime="20201212 01:51:30.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:30.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:30.376" starttime="20201212 01:51:30.375"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:30.376" starttime="20201212 01:51:24.488"></status>
</kw>
<msg timestamp="20201212 01:51:30.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:30.376" starttime="20201212 01:51:24.487"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:30.376" starttime="20201212 01:51:24.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:30.382" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:35.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:35.638" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:51:35.638" starttime="20201212 01:51:30.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:35.639" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:51:35.640" starttime="20201212 01:51:35.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:35.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:35.640" starttime="20201212 01:51:35.640"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:35.640" starttime="20201212 01:51:30.378"></status>
</kw>
<msg timestamp="20201212 01:51:35.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:35.641" starttime="20201212 01:51:30.377"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:35.641" starttime="20201212 01:51:30.377"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 01:51:35.641" critical="yes" starttime="20201212 01:50:58.058"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:51:35.648" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:51:35.648" starttime="20201212 01:51:35.648"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:51:35.649" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:51:35.649" starttime="20201212 01:51:35.649"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:35.649" starttime="20201212 01:51:35.647"></status>
</kw>
<msg timestamp="20201212 01:51:35.649" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:51:35.649" starttime="20201212 01:51:35.647"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:35.650" starttime="20201212 01:51:35.646"></status>
</kw>
<msg timestamp="20201212 01:51:35.650" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 01:51:35.650" starttime="20201212 01:51:35.645"></status>
</kw>
<msg timestamp="20201212 01:51:35.650" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 01:51:35.650" starttime="20201212 01:51:35.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:35.655" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:38.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:38.937" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:51:38.937" starttime="20201212 01:51:35.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:38.939" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:51:38.940" starttime="20201212 01:51:38.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:38.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:38.940" starttime="20201212 01:51:38.940"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:38.941" starttime="20201212 01:51:35.651"></status>
</kw>
<msg timestamp="20201212 01:51:38.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:38.941" starttime="20201212 01:51:35.651"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:38.941" starttime="20201212 01:51:35.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:38.945" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:42.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:42.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 01:51:42.221" starttime="20201212 01:51:38.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:42.222" level="INFO"></msg>
<status status="PASS" endtime="20201212 01:51:42.222" starttime="20201212 01:51:42.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:42.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:42.223" starttime="20201212 01:51:42.222"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:42.223" starttime="20201212 01:51:38.942"></status>
</kw>
<msg timestamp="20201212 01:51:42.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:42.223" starttime="20201212 01:51:38.942"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:42.223" starttime="20201212 01:51:38.941"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 01:51:42.224" critical="yes" starttime="20201212 01:51:35.642"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201212 01:51:42.225" starttime="20201212 01:50:57.992"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:53:27.539" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:53:27.539" starttime="20201212 01:53:27.539"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:53:27.540" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:53:27.540" starttime="20201212 01:53:27.539"></status>
</kw>
<status status="PASS" endtime="20201212 01:53:27.540" starttime="20201212 01:53:27.538"></status>
</kw>
<msg timestamp="20201212 01:53:27.540" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:53:27.540" starttime="20201212 01:53:27.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:53:27.542" starttime="20201212 01:53:27.541"></status>
</kw>
<msg timestamp="20201212 01:53:27.542" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 01:53:27.542" starttime="20201212 01:53:27.540"></status>
</kw>
<status status="PASS" endtime="20201212 01:53:27.542" starttime="20201212 01:53:27.537"></status>
</kw>
<msg timestamp="20201212 01:53:27.542" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:53:27.542" starttime="20201212 01:53:27.536"></status>
</kw>
<msg timestamp="20201212 01:53:27.543" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:53:27.543" starttime="20201212 01:53:27.535"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:53:27.543" level="INFO">${random} = 50057</msg>
<status status="PASS" endtime="20201212 01:53:27.543" starttime="20201212 01:53:27.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:53:27.550" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-50057 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:53:31.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:53:31.172" level="INFO">${output} = 2020-12-12 01:53:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:53:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 01:53:31.172" starttime="20201212 01:53:27.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:53:31.173" level="INFO">2020-12-12 01:53:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:53:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:53:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:53:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:53:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F473025D5671-&gt;baca9d48-cc86-4638-af0c-1ecc668984e1
2020-12-12 01:53:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 01:53:31.173" starttime="20201212 01:53:31.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:53:31.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:53:31.174" starttime="20201212 01:53:31.173"></status>
</kw>
<status status="PASS" endtime="20201212 01:53:31.174" starttime="20201212 01:53:27.544"></status>
</kw>
<msg timestamp="20201212 01:53:31.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:53:31.174" starttime="20201212 01:53:27.544"></status>
</kw>
<msg timestamp="20201212 01:53:31.174" level="INFO">${result} = 2020-12-12 01:53:29 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:53:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 01:53:31.175" starttime="20201212 01:53:27.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:53:31.179" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:53:33.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:53:33.055" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 01:53 ofs://om/volume1/bucket1/ozone-50057
-rw-...</msg>
<status status="PASS" endtime="20201212 01:53:33.055" starttime="20201212 01:53:31.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:53:33.056" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 01:53 ofs://om/volume1/bucket1/ozone-50057
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 01:51 ofs://om/volume1/bucket1/ozone-84501
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:51 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:52 ofs://om/volume1/bucket1/wordcount-17.txt</msg>
<status status="PASS" endtime="20201212 01:53:33.056" starttime="20201212 01:53:33.055"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:53:33.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:53:33.057" starttime="20201212 01:53:33.056"></status>
</kw>
<status status="PASS" endtime="20201212 01:53:33.057" starttime="20201212 01:53:31.177"></status>
</kw>
<msg timestamp="20201212 01:53:33.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:53:33.058" starttime="20201212 01:53:31.176"></status>
</kw>
<msg timestamp="20201212 01:53:33.058" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 01:53 ofs://om/volume1/bucket1/ozone-50057
-rw-...</msg>
<status status="PASS" endtime="20201212 01:53:33.058" starttime="20201212 01:53:31.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:53:33.059" starttime="20201212 01:53:33.058"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 01:53:33.059" critical="yes" starttime="20201212 01:53:27.535"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 01:53:33.060" starttime="20201212 01:53:27.480"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:51:47.181" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:51:47.181" starttime="20201212 01:51:47.180"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:51:47.181" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:51:47.181" starttime="20201212 01:51:47.181"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:47.181" starttime="20201212 01:51:47.180"></status>
</kw>
<msg timestamp="20201212 01:51:47.182" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:51:47.182" starttime="20201212 01:51:47.179"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:47.182" starttime="20201212 01:51:47.178"></status>
</kw>
<msg timestamp="20201212 01:51:47.182" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:51:47.182" starttime="20201212 01:51:47.178"></status>
</kw>
<msg timestamp="20201212 01:51:47.182" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:51:47.182" starttime="20201212 01:51:47.177"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:51:47.183" level="INFO">${random} = 84501</msg>
<status status="PASS" endtime="20201212 01:51:47.183" starttime="20201212 01:51:47.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:47.189" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-84501 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:51.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:51.323" level="INFO">${output} = 2020-12-12 01:51:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:51:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 01:51:51.323" starttime="20201212 01:51:47.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:51.324" level="INFO">2020-12-12 01:51:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:51:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:51:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:51:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:51:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6D88F8CD99A7-&gt;baca9d48-cc86-4638-af0c-1ecc668984e1
2020-12-12 01:51:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 01:51:51.325" starttime="20201212 01:51:51.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:51.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:51.325" starttime="20201212 01:51:51.325"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:51.325" starttime="20201212 01:51:47.184"></status>
</kw>
<msg timestamp="20201212 01:51:51.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:51.326" starttime="20201212 01:51:47.183"></status>
</kw>
<msg timestamp="20201212 01:51:51.326" level="INFO">${result} = 2020-12-12 01:51:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:51:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 01:51:51.326" starttime="20201212 01:51:47.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:51.331" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:53.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:53.196" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 01:51 o3fs://bucket1.volume1.om/ozone-84501
dr...</msg>
<status status="PASS" endtime="20201212 01:51:53.197" starttime="20201212 01:51:51.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:53.198" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 01:51 o3fs://bucket1.volume1.om/ozone-84501
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:51 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 01:51:53.199" starttime="20201212 01:51:53.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:53.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:53.200" starttime="20201212 01:51:53.199"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:53.201" starttime="20201212 01:51:51.328"></status>
</kw>
<msg timestamp="20201212 01:51:53.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:53.201" starttime="20201212 01:51:51.327"></status>
</kw>
<msg timestamp="20201212 01:51:53.201" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 01:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 01:51 o3fs://bucket1.volume1.om/ozone-84501
dr...</msg>
<status status="PASS" endtime="20201212 01:51:53.201" starttime="20201212 01:51:51.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:51:53.202" starttime="20201212 01:51:53.201"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 01:51:53.202" critical="yes" starttime="20201212 01:51:47.176"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 01:51:53.203" starttime="20201212 01:51:47.123"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:53:38.125" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:53:38.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:53:38.129" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:53:38.129" starttime="20201212 01:53:38.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:53:38.130" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:53:38.130" starttime="20201212 01:53:38.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:53:38.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:53:38.131" starttime="20201212 01:53:38.130"></status>
</kw>
<status status="PASS" endtime="20201212 01:53:38.131" starttime="20201212 01:53:38.119"></status>
</kw>
<msg timestamp="20201212 01:53:38.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:53:38.131" starttime="20201212 01:53:38.119"></status>
</kw>
<msg timestamp="20201212 01:53:38.131" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:53:38.131" starttime="20201212 01:53:38.118"></status>
</kw>
<msg timestamp="20201212 01:53:38.131" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:53:38.132" starttime="20201212 01:53:38.118"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:53:38.136" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:53:38.136" starttime="20201212 01:53:38.136"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:53:38.137" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:53:38.137" starttime="20201212 01:53:38.137"></status>
</kw>
<status status="PASS" endtime="20201212 01:53:38.137" starttime="20201212 01:53:38.134"></status>
</kw>
<msg timestamp="20201212 01:53:38.137" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:53:38.137" starttime="20201212 01:53:38.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:53:38.138" starttime="20201212 01:53:38.138"></status>
</kw>
<msg timestamp="20201212 01:53:38.139" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 01:53:38.139" starttime="20201212 01:53:38.137"></status>
</kw>
<status status="PASS" endtime="20201212 01:53:38.139" starttime="20201212 01:53:38.133"></status>
</kw>
<msg timestamp="20201212 01:53:38.139" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:53:38.139" starttime="20201212 01:53:38.132"></status>
</kw>
<msg timestamp="20201212 01:53:38.139" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:53:38.139" starttime="20201212 01:53:38.132"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:53:38.144" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:54:16.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:54:16.136" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:53:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:53:40 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 01:54:16.137" starttime="20201212 01:53:38.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:54:16.138" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:53:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:53:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:53:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:53:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:53:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F7E5BEB33780-&gt;baca9d48-cc86-4638-af0c-1ecc668984e1
2020-12-12 01:53:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 01:53:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-12-12 01:53:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 01:53:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 01:53:42 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 01:53:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607737833397_0003
2020-12-12 01:53:42 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 01:53:42 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 01:53:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 01:53:42 INFO  YarnClientImpl:329 - Submitted application application_1607737833397_0003
2020-12-12 01:53:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607737833397_0003/
2020-12-12 01:53:43 INFO  Job:1619 - Running job: job_1607737833397_0003
2020-12-12 01:53:50 INFO  Job:1640 - Job job_1607737833397_0003 running in uber mode : false
2020-12-12 01:53:50 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 01:53:57 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 01:54:03 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 01:54:09 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 01:54:14 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 01:54:15 INFO  Job:1658 - Job job_1607737833397_0003 completed successfully
2020-12-12 01:54:15 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056241
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42988
		Total time spent by all reduces in occupied slots (ms)=16552
		Total time spent by all map tasks (ms)=10747
		Total time spent by all reduce tasks (ms)=4138
		Total vcore-milliseconds taken by all map tasks=10747
		Total vcore-milliseconds taken by all reduce tasks=4138
		Total megabyte-milliseconds taken by all map tasks=44019712
		Total megabyte-milliseconds taken by all reduce tasks=16949248
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=661
		CPU time spent (ms)=7860
		Physical memory (bytes) snapshot=1537134592
		Virtual memory (bytes) snapshot=15799836672
		Total committed heap usage (bytes)=1801453568
		Peak Map Physical memory (bytes)=395358208
		Peak Map Virtual memory (bytes)=3949539328
		Peak Reduce Physical memory (bytes)=397381632
		Peak Reduce Virtual memory (bytes)=3970424832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.986 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 01:54:16.138" starttime="20201212 01:54:16.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:54:16.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:54:16.139" starttime="20201212 01:54:16.138"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.139" starttime="20201212 01:53:38.140"></status>
</kw>
<msg timestamp="20201212 01:54:16.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:54:16.140" starttime="20201212 01:53:38.140"></status>
</kw>
<msg timestamp="20201212 01:54:16.141" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:53:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:53:40 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 01:54:16.141" starttime="20201212 01:53:38.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:54:16.142" starttime="20201212 01:54:16.141"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:54:16.142" critical="yes" starttime="20201212 01:53:38.117"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:54:16.150" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:54:16.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:54:16.155" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:54:16.155" starttime="20201212 01:54:16.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:54:16.156" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:54:16.156" starttime="20201212 01:54:16.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:54:16.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:54:16.157" starttime="20201212 01:54:16.156"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.157" starttime="20201212 01:54:16.146"></status>
</kw>
<msg timestamp="20201212 01:54:16.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:54:16.157" starttime="20201212 01:54:16.145"></status>
</kw>
<msg timestamp="20201212 01:54:16.158" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:54:16.158" starttime="20201212 01:54:16.145"></status>
</kw>
<msg timestamp="20201212 01:54:16.158" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:54:16.158" starttime="20201212 01:54:16.144"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:54:16.159" level="INFO">${random} = 01</msg>
<status status="PASS" endtime="20201212 01:54:16.159" starttime="20201212 01:54:16.158"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:54:16.162" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:54:16.162" starttime="20201212 01:54:16.162"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:54:16.163" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:54:16.163" starttime="20201212 01:54:16.163"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.163" starttime="20201212 01:54:16.161"></status>
</kw>
<msg timestamp="20201212 01:54:16.163" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:54:16.163" starttime="20201212 01:54:16.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 01:54:16.164" starttime="20201212 01:54:16.164"></status>
</kw>
<msg timestamp="20201212 01:54:16.164" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 01:54:16.164" starttime="20201212 01:54:16.164"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.165" starttime="20201212 01:54:16.160"></status>
</kw>
<msg timestamp="20201212 01:54:16.165" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:54:16.165" starttime="20201212 01:54:16.160"></status>
</kw>
<msg timestamp="20201212 01:54:16.165" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 01:54:16.165" starttime="20201212 01:54:16.159"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:54:16.169" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:54:16.169" starttime="20201212 01:54:16.168"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:54:16.169" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:54:16.169" starttime="20201212 01:54:16.169"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.169" starttime="20201212 01:54:16.168"></status>
</kw>
<msg timestamp="20201212 01:54:16.169" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:54:16.169" starttime="20201212 01:54:16.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:54:16.171" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201212 01:54:16.171" starttime="20201212 01:54:16.171"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:54:16.172" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201212 01:54:16.172" starttime="20201212 01:54:16.171"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.172" starttime="20201212 01:54:16.170"></status>
</kw>
<msg timestamp="20201212 01:54:16.172" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201212 01:54:16.172" starttime="20201212 01:54:16.170"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.172" starttime="20201212 01:54:16.166"></status>
</kw>
<msg timestamp="20201212 01:54:16.172" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 01:54:16.172" starttime="20201212 01:54:16.166"></status>
</kw>
<msg timestamp="20201212 01:54:16.173" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 01:54:16.173" starttime="20201212 01:54:16.165"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 01:54:16.176" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 01:54:16.176" starttime="20201212 01:54:16.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:54:16.177" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 01:54:16.177" starttime="20201212 01:54:16.176"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.177" starttime="20201212 01:54:16.175"></status>
</kw>
<msg timestamp="20201212 01:54:16.177" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 01:54:16.177" starttime="20201212 01:54:16.175"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:54:16.179" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201212 01:54:16.179" starttime="20201212 01:54:16.178"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:54:16.179" level="INFO">${result} = /wordcount-01.txt</msg>
<status status="PASS" endtime="20201212 01:54:16.179" starttime="20201212 01:54:16.179"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.179" starttime="20201212 01:54:16.178"></status>
</kw>
<msg timestamp="20201212 01:54:16.179" level="INFO">${path_with_leading} = /wordcount-01.txt</msg>
<status status="PASS" endtime="20201212 01:54:16.179" starttime="20201212 01:54:16.177"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:16.180" starttime="20201212 01:54:16.174"></status>
</kw>
<msg timestamp="20201212 01:54:16.180" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-01.txt</msg>
<status status="PASS" endtime="20201212 01:54:16.180" starttime="20201212 01:54:16.174"></status>
</kw>
<msg timestamp="20201212 01:54:16.180" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-01.txt</msg>
<status status="PASS" endtime="20201212 01:54:16.180" starttime="20201212 01:54:16.173"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:54:16.185" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-01.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:54:55.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:54:55.568" level="INFO">${output} = 2020-12-12 01:54:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-12-12 01:54:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201212 01:54:55.568" starttime="20201212 01:54:16.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:54:55.569" level="INFO">2020-12-12 01:54:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-12-12 01:54:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 01:54:18 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:54:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:54:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:54:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:54:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-216FFCF84D9D-&gt;baca9d48-cc86-4638-af0c-1ecc668984e1
2020-12-12 01:54:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 01:54:19 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 01:54:19 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 01:54:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607737833397_0004
2020-12-12 01:54:20 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 01:54:20 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 01:54:20 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 01:54:20 INFO  YarnClientImpl:329 - Submitted application application_1607737833397_0004
2020-12-12 01:54:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607737833397_0004/
2020-12-12 01:54:20 INFO  Job:1619 - Running job: job_1607737833397_0004
2020-12-12 01:54:28 INFO  Job:1640 - Job job_1607737833397_0004 running in uber mode : false
2020-12-12 01:54:28 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 01:54:35 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 01:54:40 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 01:54:46 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 01:54:52 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 01:54:55 INFO  Job:1658 - Job job_1607737833397_0004 completed successfully
2020-12-12 01:54:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118903
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44716
		Total time spent by all reduces in occupied slots (ms)=16300
		Total time spent by all map tasks (ms)=11179
		Total time spent by all reduce tasks (ms)=4075
		Total vcore-milliseconds taken by all map tasks=11179
		Total vcore-milliseconds taken by all reduce tasks=4075
		Total megabyte-milliseconds taken by all map tasks=45789184
		Total megabyte-milliseconds taken by all reduce tasks=16691200
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=718
		CPU time spent (ms)=7790
		Physical memory (bytes) snapshot=1446260736
		Virtual memory (bytes) snapshot=15765807104
		Total committed heap usage (bytes)=1637875712
		Peak Map Physical memory (bytes)=375631872
		Peak Map Virtual memory (bytes)=3947700224
		Peak Reduce Physical memory (bytes)=351506432
		Peak Reduce Virtual memory (bytes)=3949940736
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 01:54:55.569" starttime="20201212 01:54:55.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:54:55.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:54:55.570" starttime="20201212 01:54:55.569"></status>
</kw>
<status status="PASS" endtime="20201212 01:54:55.570" starttime="20201212 01:54:16.181"></status>
</kw>
<msg timestamp="20201212 01:54:55.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:54:55.571" starttime="20201212 01:54:16.181"></status>
</kw>
<msg timestamp="20201212 01:54:55.571" level="INFO">${output} = 2020-12-12 01:54:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-12-12 01:54:18 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201212 01:54:55.571" starttime="20201212 01:54:16.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 01:54:55.572" starttime="20201212 01:54:55.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:54:55.572" starttime="20201212 01:54:55.572"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:54:55.573" critical="yes" starttime="20201212 01:54:16.143"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 01:54:55.573" starttime="20201212 01:53:38.059"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:58.438" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:51:58.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:51:58.443" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:51:58.443" starttime="20201212 01:51:58.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:51:58.444" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:51:58.444" starttime="20201212 01:51:58.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:51:58.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:51:58.445" starttime="20201212 01:51:58.444"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:58.446" starttime="20201212 01:51:58.433"></status>
</kw>
<msg timestamp="20201212 01:51:58.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:51:58.446" starttime="20201212 01:51:58.433"></status>
</kw>
<msg timestamp="20201212 01:51:58.446" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:51:58.446" starttime="20201212 01:51:58.432"></status>
</kw>
<msg timestamp="20201212 01:51:58.446" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:51:58.447" starttime="20201212 01:51:58.431"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:51:58.455" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:51:58.455" starttime="20201212 01:51:58.455"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:51:58.456" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:51:58.456" starttime="20201212 01:51:58.456"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:58.456" starttime="20201212 01:51:58.450"></status>
</kw>
<msg timestamp="20201212 01:51:58.456" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:51:58.456" starttime="20201212 01:51:58.449"></status>
</kw>
<status status="PASS" endtime="20201212 01:51:58.457" starttime="20201212 01:51:58.448"></status>
</kw>
<msg timestamp="20201212 01:51:58.470" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:51:58.471" starttime="20201212 01:51:58.448"></status>
</kw>
<msg timestamp="20201212 01:51:58.471" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:51:58.471" starttime="20201212 01:51:58.447"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:51:58.476" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:52:44.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:52:44.447" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:52:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:52:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 01:52:44.447" starttime="20201212 01:51:58.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:52:44.448" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:52:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:52:00 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:52:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:52:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:52:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9F3168CF6E82-&gt;baca9d48-cc86-4638-af0c-1ecc668984e1
2020-12-12 01:52:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 01:52:04 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-12-12 01:52:04 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 01:52:05 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 01:52:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607737833397_0001
2020-12-12 01:52:05 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 01:52:05 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 01:52:05 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 01:52:05 INFO  YarnClientImpl:329 - Submitted application application_1607737833397_0001
2020-12-12 01:52:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607737833397_0001/
2020-12-12 01:52:05 INFO  Job:1619 - Running job: job_1607737833397_0001
2020-12-12 01:52:17 INFO  Job:1640 - Job job_1607737833397_0001 running in uber mode : false
2020-12-12 01:52:17 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 01:52:23 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 01:52:29 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 01:52:34 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 01:52:39 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 01:52:43 INFO  Job:1658 - Job job_1607737833397_0001 completed successfully
2020-12-12 01:52:43 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056437
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=801
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44080
		Total time spent by all reduces in occupied slots (ms)=15764
		Total time spent by all map tasks (ms)=11020
		Total time spent by all reduce tasks (ms)=3941
		Total vcore-milliseconds taken by all map tasks=11020
		Total vcore-milliseconds taken by all reduce tasks=3941
		Total megabyte-milliseconds taken by all map tasks=45137920
		Total megabyte-milliseconds taken by all reduce tasks=16142336
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=447
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=642
		CPU time spent (ms)=7380
		Physical memory (bytes) snapshot=1277018112
		Virtual memory (bytes) snapshot=15815757824
		Total committed heap usage (bytes)=1240989696
		Peak Map Physical memory (bytes)=372301824
		Peak Map Virtual memory (bytes)=3948974080
		Peak Reduce Physical memory (bytes)=312516608
		Peak Reduce Virtual memory (bytes)=3974103040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.53 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 01:52:44.449" starttime="20201212 01:52:44.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:52:44.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:52:44.449" starttime="20201212 01:52:44.449"></status>
</kw>
<status status="PASS" endtime="20201212 01:52:44.450" starttime="20201212 01:51:58.472"></status>
</kw>
<msg timestamp="20201212 01:52:44.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:52:44.450" starttime="20201212 01:51:58.472"></status>
</kw>
<msg timestamp="20201212 01:52:44.450" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 01:52:00 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:52:00 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 01:52:44.450" starttime="20201212 01:51:58.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:52:44.451" starttime="20201212 01:52:44.451"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:52:44.451" critical="yes" starttime="20201212 01:51:58.430"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:52:44.456" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:52:44.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:52:44.462" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:52:44.462" starttime="20201212 01:52:44.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:52:44.463" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:52:44.463" starttime="20201212 01:52:44.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:52:44.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:52:44.464" starttime="20201212 01:52:44.463"></status>
</kw>
<status status="PASS" endtime="20201212 01:52:44.464" starttime="20201212 01:52:44.454"></status>
</kw>
<msg timestamp="20201212 01:52:44.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:52:44.464" starttime="20201212 01:52:44.453"></status>
</kw>
<msg timestamp="20201212 01:52:44.465" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:52:44.465" starttime="20201212 01:52:44.453"></status>
</kw>
<msg timestamp="20201212 01:52:44.465" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 01:52:44.465" starttime="20201212 01:52:44.453"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 01:52:44.466" level="INFO">${random} = 17</msg>
<status status="PASS" endtime="20201212 01:52:44.466" starttime="20201212 01:52:44.465"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:52:44.470" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:52:44.470" starttime="20201212 01:52:44.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:52:44.470" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:52:44.470" starttime="20201212 01:52:44.470"></status>
</kw>
<status status="PASS" endtime="20201212 01:52:44.471" starttime="20201212 01:52:44.469"></status>
</kw>
<msg timestamp="20201212 01:52:44.471" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:52:44.471" starttime="20201212 01:52:44.468"></status>
</kw>
<status status="PASS" endtime="20201212 01:52:44.471" starttime="20201212 01:52:44.467"></status>
</kw>
<msg timestamp="20201212 01:52:44.471" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:52:44.471" starttime="20201212 01:52:44.467"></status>
</kw>
<msg timestamp="20201212 01:52:44.471" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 01:52:44.471" starttime="20201212 01:52:44.466"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:52:44.475" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:52:44.475" starttime="20201212 01:52:44.474"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:52:44.475" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:52:44.475" starttime="20201212 01:52:44.475"></status>
</kw>
<status status="PASS" endtime="20201212 01:52:44.476" starttime="20201212 01:52:44.474"></status>
</kw>
<msg timestamp="20201212 01:52:44.476" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:52:44.476" starttime="20201212 01:52:44.473"></status>
</kw>
<status status="PASS" endtime="20201212 01:52:44.476" starttime="20201212 01:52:44.473"></status>
</kw>
<msg timestamp="20201212 01:52:44.476" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 01:52:44.476" starttime="20201212 01:52:44.472"></status>
</kw>
<msg timestamp="20201212 01:52:44.476" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 01:52:44.476" starttime="20201212 01:52:44.472"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 01:52:44.480" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 01:52:44.480" starttime="20201212 01:52:44.479"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 01:52:44.480" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 01:52:44.480" starttime="20201212 01:52:44.480"></status>
</kw>
<status status="PASS" endtime="20201212 01:52:44.481" starttime="20201212 01:52:44.479"></status>
</kw>
<msg timestamp="20201212 01:52:44.481" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 01:52:44.481" starttime="20201212 01:52:44.478"></status>
</kw>
<status status="PASS" endtime="20201212 01:52:44.481" starttime="20201212 01:52:44.478"></status>
</kw>
<msg timestamp="20201212 01:52:44.481" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-17.txt</msg>
<status status="PASS" endtime="20201212 01:52:44.481" starttime="20201212 01:52:44.477"></status>
</kw>
<msg timestamp="20201212 01:52:44.481" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-17.txt</msg>
<status status="PASS" endtime="20201212 01:52:44.481" starttime="20201212 01:52:44.476"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 01:52:44.486" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-17.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 01:53:22.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 01:53:22.441" level="INFO">${output} = 2020-12-12 01:52:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-12-12 01:52:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201212 01:53:22.441" starttime="20201212 01:52:44.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 01:53:22.442" level="INFO">2020-12-12 01:52:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-12-12 01:52:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 01:52:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 01:52:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 01:52:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 01:52:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 01:52:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AA19340A5EE4-&gt;baca9d48-cc86-4638-af0c-1ecc668984e1
2020-12-12 01:52:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 01:52:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 01:52:48 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 01:52:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607737833397_0002
2020-12-12 01:52:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-12 01:52:49 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 01:52:49 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 01:52:49 INFO  YarnClientImpl:329 - Submitted application application_1607737833397_0002
2020-12-12 01:52:49 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607737833397_0002/
2020-12-12 01:52:49 INFO  Job:1619 - Running job: job_1607737833397_0002
2020-12-12 01:52:56 INFO  Job:1640 - Job job_1607737833397_0002 running in uber mode : false
2020-12-12 01:52:56 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 01:53:03 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 01:53:09 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 01:53:15 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 01:53:20 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 01:53:21 INFO  Job:1658 - Job job_1607737833397_0002 completed successfully
2020-12-12 01:53:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118991
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44684
		Total time spent by all reduces in occupied slots (ms)=16140
		Total time spent by all map tasks (ms)=11171
		Total time spent by all reduce tasks (ms)=4035
		Total vcore-milliseconds taken by all map tasks=11171
		Total vcore-milliseconds taken by all reduce tasks=4035
		Total megabyte-milliseconds taken by all map tasks=45756416
		Total megabyte-milliseconds taken by all reduce tasks=16527360
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=832
		CPU time spent (ms)=8240
		Physical memory (bytes) snapshot=1486671872
		Virtual memory (bytes) snapshot=15811944448
		Total committed heap usage (bytes)=1695023104
		Peak Map Physical memory (bytes)=373010432
		Peak Map Virtual memory (bytes)=3951980544
		Peak Reduce Physical memory (bytes)=380182528
		Peak Reduce Virtual memory (bytes)=3966451712
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 01:53:22.442" starttime="20201212 01:53:22.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 01:53:22.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 01:53:22.443" starttime="20201212 01:53:22.442"></status>
</kw>
<status status="PASS" endtime="20201212 01:53:22.443" starttime="20201212 01:52:44.482"></status>
</kw>
<msg timestamp="20201212 01:53:22.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 01:53:22.444" starttime="20201212 01:52:44.482"></status>
</kw>
<msg timestamp="20201212 01:53:22.444" level="INFO">${output} = 2020-12-12 01:52:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2020-12-12 01:52:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201212 01:53:22.444" starttime="20201212 01:52:44.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 01:53:22.445" starttime="20201212 01:53:22.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 01:53:22.445" starttime="20201212 01:53:22.445"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 01:53:22.445" critical="yes" starttime="20201212 01:52:44.452"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 01:53:22.446" starttime="20201212 01:51:58.373"></status>
</suite>
<status status="PASS" elapsedtime="217480" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="614458" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
