<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201212 02:27:07.072" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:22:47.005" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:22:51.725" level="INFO">${rc} = 255</msg>
<msg timestamp="20201212 02:22:51.725" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:22:51.725" starttime="20201212 02:22:47.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:22:51.727" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201212 02:22:51.727" starttime="20201212 02:22:51.726"></status>
</kw>
<msg timestamp="20201212 02:22:51.727" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:22:51.727" starttime="20201212 02:22:47.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:22:51.733" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:22:55.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:22:55.270" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:22:55.271" starttime="20201212 02:22:51.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:22:55.272" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:22:55.272" starttime="20201212 02:22:55.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:22:55.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:22:55.272" starttime="20201212 02:22:55.272"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:55.273" starttime="20201212 02:22:51.729"></status>
</kw>
<msg timestamp="20201212 02:22:55.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:22:55.273" starttime="20201212 02:22:51.729"></status>
</kw>
<msg timestamp="20201212 02:22:55.273" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:22:55.273" starttime="20201212 02:22:51.728"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201212 02:22:55.274" starttime="20201212 02:22:55.273"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:55.274" starttime="20201212 02:22:51.728"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:55.274" starttime="20201212 02:22:51.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:22:55.278" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:22:59.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:22:59.223" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:22:59.223" starttime="20201212 02:22:55.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:22:59.224" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:22:59.224" starttime="20201212 02:22:59.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:22:59.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:22:59.225" starttime="20201212 02:22:59.225"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:59.226" starttime="20201212 02:22:55.276"></status>
</kw>
<msg timestamp="20201212 02:22:59.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:22:59.226" starttime="20201212 02:22:55.275"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:59.226" starttime="20201212 02:22:55.275"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:59.226" starttime="20201212 02:22:55.274"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:59.226" starttime="20201212 02:22:55.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201212 02:22:59.227" starttime="20201212 02:22:59.227"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:22:59.231" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:23:03.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:23:03.039" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:23:03.039" starttime="20201212 02:22:59.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:23:03.040" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-12T02:22:58.904Z",
  "modificationTime" : "2020-12-12T02:22:58.904Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201212 02:23:03.040" starttime="20201212 02:23:03.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:23:03.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:23:03.041" starttime="20201212 02:23:03.040"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:03.041" starttime="20201212 02:22:59.228"></status>
</kw>
<msg timestamp="20201212 02:23:03.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:23:03.041" starttime="20201212 02:22:59.228"></status>
</kw>
<msg timestamp="20201212 02:23:03.042" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:23:03.042" starttime="20201212 02:22:59.227"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201212 02:23:03.042" starttime="20201212 02:23:03.042"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 02:23:03.046" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 02:23:03.046" starttime="20201212 02:23:03.046"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:23:03.047" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 02:23:03.047" starttime="20201212 02:23:03.046"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:03.047" starttime="20201212 02:23:03.045"></status>
</kw>
<msg timestamp="20201212 02:23:03.047" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 02:23:03.047" starttime="20201212 02:23:03.045"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:03.048" starttime="20201212 02:23:03.044"></status>
</kw>
<msg timestamp="20201212 02:23:03.048" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 02:23:03.048" starttime="20201212 02:23:03.043"></status>
</kw>
<msg timestamp="20201212 02:23:03.048" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201212 02:23:03.048" starttime="20201212 02:23:03.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:23:03.052" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:23:06.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:23:06.908" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:23:06.908" starttime="20201212 02:23:03.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:23:06.910" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:23:06.910" starttime="20201212 02:23:06.909"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:23:06.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:23:06.911" starttime="20201212 02:23:06.910"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:06.914" starttime="20201212 02:23:03.049"></status>
</kw>
<msg timestamp="20201212 02:23:06.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:23:06.914" starttime="20201212 02:23:03.048"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:06.915" starttime="20201212 02:23:03.048"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:23:06.919" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:23:15.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:23:15.343" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:23:15.343" starttime="20201212 02:23:06.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:23:15.344" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:23:15.344" starttime="20201212 02:23:15.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:23:15.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:23:15.345" starttime="20201212 02:23:15.344"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:15.346" starttime="20201212 02:23:06.916"></status>
</kw>
<msg timestamp="20201212 02:23:15.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:23:15.346" starttime="20201212 02:23:06.915"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:15.346" starttime="20201212 02:23:06.915"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:23:15.352" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:23:20.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:23:20.998" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:23:20.998" starttime="20201212 02:23:15.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:23:20.999" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:23:21.000" starttime="20201212 02:23:20.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:23:21.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:23:21.000" starttime="20201212 02:23:21.000"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:21.001" starttime="20201212 02:23:15.348"></status>
</kw>
<msg timestamp="20201212 02:23:21.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:23:21.001" starttime="20201212 02:23:15.347"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:21.001" starttime="20201212 02:23:15.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:23:21.005" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:23:26.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:23:26.631" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:23:26.631" starttime="20201212 02:23:21.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:23:26.632" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:23:26.633" starttime="20201212 02:23:26.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:23:26.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:23:26.634" starttime="20201212 02:23:26.633"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:26.634" starttime="20201212 02:23:21.002"></status>
</kw>
<msg timestamp="20201212 02:23:26.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:23:26.634" starttime="20201212 02:23:21.002"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:26.634" starttime="20201212 02:23:21.001"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:23:26.635" critical="yes" starttime="20201212 02:22:46.999"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 02:23:26.640" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 02:23:26.640" starttime="20201212 02:23:26.639"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:23:26.640" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 02:23:26.641" starttime="20201212 02:23:26.640"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:26.641" starttime="20201212 02:23:26.639"></status>
</kw>
<msg timestamp="20201212 02:23:26.641" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 02:23:26.641" starttime="20201212 02:23:26.638"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:26.641" starttime="20201212 02:23:26.637"></status>
</kw>
<msg timestamp="20201212 02:23:26.641" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 02:23:26.641" starttime="20201212 02:23:26.637"></status>
</kw>
<msg timestamp="20201212 02:23:26.641" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 02:23:26.642" starttime="20201212 02:23:26.636"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:23:26.645" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:23:30.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:23:30.132" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:23:30.132" starttime="20201212 02:23:26.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:23:30.134" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:23:30.134" starttime="20201212 02:23:30.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:23:30.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:23:30.135" starttime="20201212 02:23:30.134"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:30.135" starttime="20201212 02:23:26.642"></status>
</kw>
<msg timestamp="20201212 02:23:30.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:23:30.135" starttime="20201212 02:23:26.642"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:30.135" starttime="20201212 02:23:26.642"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:23:30.140" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:23:33.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:23:33.856" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201212 02:23:33.856" starttime="20201212 02:23:30.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:23:33.857" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201212 02:23:33.857" starttime="20201212 02:23:33.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:23:33.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:23:33.858" starttime="20201212 02:23:33.857"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:33.858" starttime="20201212 02:23:30.136"></status>
</kw>
<msg timestamp="20201212 02:23:33.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:23:33.858" starttime="20201212 02:23:30.136"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:33.858" starttime="20201212 02:23:30.135"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:23:33.859" critical="yes" starttime="20201212 02:23:26.635"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201212 02:23:33.860" starttime="20201212 02:22:46.938"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 02:25:35.375" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 02:25:35.375" starttime="20201212 02:25:35.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:25:35.375" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 02:25:35.376" starttime="20201212 02:25:35.375"></status>
</kw>
<status status="PASS" endtime="20201212 02:25:35.376" starttime="20201212 02:25:35.374"></status>
</kw>
<msg timestamp="20201212 02:25:35.376" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 02:25:35.376" starttime="20201212 02:25:35.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:25:35.377" starttime="20201212 02:25:35.376"></status>
</kw>
<msg timestamp="20201212 02:25:35.377" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 02:25:35.377" starttime="20201212 02:25:35.376"></status>
</kw>
<status status="PASS" endtime="20201212 02:25:35.377" starttime="20201212 02:25:35.372"></status>
</kw>
<msg timestamp="20201212 02:25:35.377" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 02:25:35.377" starttime="20201212 02:25:35.372"></status>
</kw>
<msg timestamp="20201212 02:25:35.378" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 02:25:35.378" starttime="20201212 02:25:35.371"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 02:25:35.378" level="INFO">${random} = 84587</msg>
<status status="PASS" endtime="20201212 02:25:35.378" starttime="20201212 02:25:35.378"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:25:35.386" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-84587 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:25:39.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:25:39.312" level="INFO">${output} = 2020-12-12 02:25:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:25:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 02:25:39.312" starttime="20201212 02:25:35.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:25:39.313" level="INFO">2020-12-12 02:25:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:25:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:25:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 02:25:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 02:25:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EA58C98B80B9-&gt;1a7ed462-9726-4d51-a7f0-19f802b212a0
2020-12-12 02:25:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 02:25:39.313" starttime="20201212 02:25:39.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:25:39.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:25:39.314" starttime="20201212 02:25:39.313"></status>
</kw>
<status status="PASS" endtime="20201212 02:25:39.314" starttime="20201212 02:25:35.379"></status>
</kw>
<msg timestamp="20201212 02:25:39.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:25:39.314" starttime="20201212 02:25:35.379"></status>
</kw>
<msg timestamp="20201212 02:25:39.314" level="INFO">${result} = 2020-12-12 02:25:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:25:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 02:25:39.314" starttime="20201212 02:25:35.378"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:25:39.319" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:25:41.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:25:41.415" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 02:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 02:24 ofs://om/volume1/bucket1/ozone-78846
-rw-...</msg>
<status status="PASS" endtime="20201212 02:25:41.415" starttime="20201212 02:25:39.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:25:41.416" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 02:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 02:24 ofs://om/volume1/bucket1/ozone-78846
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 02:25 ofs://om/volume1/bucket1/ozone-84587
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 02:23 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 02:25 ofs://om/volume1/bucket1/wordcount-04.txt</msg>
<status status="PASS" endtime="20201212 02:25:41.416" starttime="20201212 02:25:41.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:25:41.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:25:41.417" starttime="20201212 02:25:41.416"></status>
</kw>
<status status="PASS" endtime="20201212 02:25:41.417" starttime="20201212 02:25:39.317"></status>
</kw>
<msg timestamp="20201212 02:25:41.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:25:41.417" starttime="20201212 02:25:39.316"></status>
</kw>
<msg timestamp="20201212 02:25:41.418" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 02:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 02:24 ofs://om/volume1/bucket1/ozone-78846
-rw-...</msg>
<status status="PASS" endtime="20201212 02:25:41.418" starttime="20201212 02:25:39.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:25:41.418" starttime="20201212 02:25:41.418"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 02:25:41.419" critical="yes" starttime="20201212 02:25:35.370"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 02:25:41.420" starttime="20201212 02:25:35.317"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 02:24:00.620" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 02:24:00.620" starttime="20201212 02:24:00.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:24:00.620" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 02:24:00.620" starttime="20201212 02:24:00.620"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:00.621" starttime="20201212 02:24:00.619"></status>
</kw>
<msg timestamp="20201212 02:24:00.621" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 02:24:00.621" starttime="20201212 02:24:00.618"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:00.621" starttime="20201212 02:24:00.617"></status>
</kw>
<msg timestamp="20201212 02:24:00.621" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 02:24:00.621" starttime="20201212 02:24:00.617"></status>
</kw>
<msg timestamp="20201212 02:24:00.621" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 02:24:00.621" starttime="20201212 02:24:00.616"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 02:24:00.622" level="INFO">${random} = 78846</msg>
<status status="PASS" endtime="20201212 02:24:00.622" starttime="20201212 02:24:00.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:24:00.629" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-78846 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:24:04.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:24:04.940" level="INFO">${output} = 2020-12-12 02:24:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:24:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 02:24:04.941" starttime="20201212 02:24:00.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:24:04.942" level="INFO">2020-12-12 02:24:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:24:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:24:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 02:24:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 02:24:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8B8B392984E3-&gt;1a7ed462-9726-4d51-a7f0-19f802b212a0
2020-12-12 02:24:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201212 02:24:04.942" starttime="20201212 02:24:04.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:24:04.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:24:04.942" starttime="20201212 02:24:04.942"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:04.943" starttime="20201212 02:24:00.623"></status>
</kw>
<msg timestamp="20201212 02:24:04.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:24:04.943" starttime="20201212 02:24:00.623"></status>
</kw>
<msg timestamp="20201212 02:24:04.943" level="INFO">${result} = 2020-12-12 02:24:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:24:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201212 02:24:04.943" starttime="20201212 02:24:00.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:24:04.948" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:24:07.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:24:07.137" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 02:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 02:24 o3fs://bucket1.volume1.om/ozone-78846
dr...</msg>
<status status="PASS" endtime="20201212 02:24:07.137" starttime="20201212 02:24:04.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:24:07.138" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 02:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 02:24 o3fs://bucket1.volume1.om/ozone-78846
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 02:23 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201212 02:24:07.138" starttime="20201212 02:24:07.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:24:07.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:24:07.139" starttime="20201212 02:24:07.138"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:07.139" starttime="20201212 02:24:04.945"></status>
</kw>
<msg timestamp="20201212 02:24:07.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:24:07.139" starttime="20201212 02:24:04.944"></status>
</kw>
<msg timestamp="20201212 02:24:07.140" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-12 02:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-12 02:24 o3fs://bucket1.volume1.om/ozone-78846
dr...</msg>
<status status="PASS" endtime="20201212 02:24:07.140" starttime="20201212 02:24:04.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:24:07.140" starttime="20201212 02:24:07.140"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201212 02:24:07.140" critical="yes" starttime="20201212 02:24:00.615"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201212 02:24:07.143" starttime="20201212 02:24:00.561"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:23:54.850" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:23:54.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:23:54.853" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201212 02:23:54.853" starttime="20201212 02:23:54.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:23:54.854" level="INFO">rm</msg>
<status status="PASS" endtime="20201212 02:23:54.854" starttime="20201212 02:23:54.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:23:54.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:23:54.855" starttime="20201212 02:23:54.854"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:54.855" starttime="20201212 02:23:54.845"></status>
</kw>
<msg timestamp="20201212 02:23:54.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:23:54.855" starttime="20201212 02:23:54.845"></status>
</kw>
<msg timestamp="20201212 02:23:54.856" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201212 02:23:54.856" starttime="20201212 02:23:54.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:23:54.857" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:23:54.857" starttime="20201212 02:23:54.856"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:23:54.862" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:23:54.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:23:54.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:23:54.877" starttime="20201212 02:23:54.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:23:54.878" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:23:54.878" starttime="20201212 02:23:54.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:23:54.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:23:54.879" starttime="20201212 02:23:54.878"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:54.879" starttime="20201212 02:23:54.858"></status>
</kw>
<msg timestamp="20201212 02:23:54.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:23:54.879" starttime="20201212 02:23:54.858"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:54.879" starttime="20201212 02:23:54.858"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:54.879" starttime="20201212 02:23:54.857"></status>
</kw>
<status status="PASS" endtime="20201212 02:23:54.880" starttime="20201212 02:23:54.844"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:23:54.880" critical="yes" starttime="20201212 02:23:54.843"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201212 02:23:54.881" starttime="20201212 02:23:54.793"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:22:41.364" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:22:41.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:22:41.368" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201212 02:22:41.368" starttime="20201212 02:22:41.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:22:41.369" level="INFO">om</msg>
<status status="PASS" endtime="20201212 02:22:41.369" starttime="20201212 02:22:41.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:22:41.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:22:41.369" starttime="20201212 02:22:41.369"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:41.370" starttime="20201212 02:22:41.359"></status>
</kw>
<msg timestamp="20201212 02:22:41.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:22:41.370" starttime="20201212 02:22:41.359"></status>
</kw>
<msg timestamp="20201212 02:22:41.370" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201212 02:22:41.370" starttime="20201212 02:22:41.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201212 02:22:41.371" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201212 02:22:41.371" starttime="20201212 02:22:41.370"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:22:41.377" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:22:41.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:22:41.389" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201212 02:22:41.389" starttime="20201212 02:22:41.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:22:41.390" level="INFO"></msg>
<status status="PASS" endtime="20201212 02:22:41.390" starttime="20201212 02:22:41.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:22:41.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:22:41.391" starttime="20201212 02:22:41.390"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:41.391" starttime="20201212 02:22:41.373"></status>
</kw>
<msg timestamp="20201212 02:22:41.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:22:41.391" starttime="20201212 02:22:41.372"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:41.391" starttime="20201212 02:22:41.372"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:41.392" starttime="20201212 02:22:41.371"></status>
</kw>
<status status="PASS" endtime="20201212 02:22:41.392" starttime="20201212 02:22:41.358"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201212 02:22:41.392" critical="yes" starttime="20201212 02:22:41.357"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201212 02:22:41.393" starttime="20201212 02:22:41.308"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:25:47.185" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:25:47.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:25:47.190" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:25:47.190" starttime="20201212 02:25:47.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:25:47.191" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:25:47.191" starttime="20201212 02:25:47.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:25:47.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:25:47.192" starttime="20201212 02:25:47.191"></status>
</kw>
<status status="PASS" endtime="20201212 02:25:47.192" starttime="20201212 02:25:47.177"></status>
</kw>
<msg timestamp="20201212 02:25:47.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:25:47.192" starttime="20201212 02:25:47.177"></status>
</kw>
<msg timestamp="20201212 02:25:47.192" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:25:47.192" starttime="20201212 02:25:47.176"></status>
</kw>
<msg timestamp="20201212 02:25:47.193" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:25:47.193" starttime="20201212 02:25:47.176"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 02:25:47.197" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 02:25:47.197" starttime="20201212 02:25:47.197"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:25:47.198" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 02:25:47.198" starttime="20201212 02:25:47.197"></status>
</kw>
<status status="PASS" endtime="20201212 02:25:47.199" starttime="20201212 02:25:47.195"></status>
</kw>
<msg timestamp="20201212 02:25:47.199" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 02:25:47.199" starttime="20201212 02:25:47.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:25:47.200" starttime="20201212 02:25:47.200"></status>
</kw>
<msg timestamp="20201212 02:25:47.200" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 02:25:47.200" starttime="20201212 02:25:47.199"></status>
</kw>
<status status="PASS" endtime="20201212 02:25:47.201" starttime="20201212 02:25:47.194"></status>
</kw>
<msg timestamp="20201212 02:25:47.201" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 02:25:47.201" starttime="20201212 02:25:47.193"></status>
</kw>
<msg timestamp="20201212 02:25:47.201" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 02:25:47.201" starttime="20201212 02:25:47.193"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:25:47.206" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:26:23.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:26:23.566" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 02:25:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:25:49 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 02:26:23.566" starttime="20201212 02:25:47.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:26:23.567" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 02:25:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:25:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:25:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 02:25:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 02:25:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2E0C0DC0DE57-&gt;1a7ed462-9726-4d51-a7f0-19f802b212a0
2020-12-12 02:25:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 02:25:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-12-12 02:25:51 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-12-12 02:25:51 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739951583, maxDate=1608344751583, sequenceNumber=3, masterKeyId=2))
2020-12-12 02:25:51 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 85 93 93 a6 e5 2e 38 85 9b c5 c6 e7 2e 40 03 48 01 5a 0d 32 39 34 37 39 31 37 30 37 38 32 36 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-12 02:25:51 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739951583, maxDate=1608344751583, sequenceNumber=3, masterKeyId=2)
2020-12-12 02:25:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 02:25:52 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 02:25:52 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 02:25:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607739710319_0003
2020-12-12 02:25:52 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739951583, maxDate=1608344751583, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 85 93 93 a6 e5 2e 38 85 9b c5 c6 e7 2e 40 03 48 01 5a 0d 32 39 34 37 39 31 37 30 37 38 32 36 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-12 02:25:52 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 02:25:52 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 02:25:52 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-12 02:25:53 INFO  YarnClientImpl:329 - Submitted application application_1607739710319_0003
2020-12-12 02:25:53 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607739710319_0003/
2020-12-12 02:25:53 INFO  Job:1619 - Running job: job_1607739710319_0003
2020-12-12 02:26:01 INFO  Job:1640 - Job job_1607739710319_0003 running in uber mode : false
2020-12-12 02:26:01 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 02:26:12 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 02:26:14 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 02:26:22 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 02:26:22 INFO  Job:1658 - Job job_1607739710319_0003 completed successfully
2020-12-12 02:26:22 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065749
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49932
		Total time spent by all reduces in occupied slots (ms)=13078
		Total time spent by all map tasks (ms)=24966
		Total time spent by all reduce tasks (ms)=6539
		Total vcore-milliseconds taken by all map tasks=24966
		Total vcore-milliseconds taken by all reduce tasks=6539
		Total megabyte-milliseconds taken by all map tasks=51130368
		Total megabyte-milliseconds taken by all reduce tasks=13391872
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1063
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1388154880
		Virtual memory (bytes) snapshot=14030737408
		Total committed heap usage (bytes)=1337982976
		Peak Map Physical memory (bytes)=386375680
		Peak Map Virtual memory (bytes)=3511451648
		Peak Reduce Physical memory (bytes)=277491712
		Peak Reduce Virtual memory (bytes)=3510296576
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.944 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 02:26:23.568" starttime="20201212 02:26:23.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:26:23.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:26:23.568" starttime="20201212 02:26:23.568"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.569" starttime="20201212 02:25:47.202"></status>
</kw>
<msg timestamp="20201212 02:26:23.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:26:23.569" starttime="20201212 02:25:47.202"></status>
</kw>
<msg timestamp="20201212 02:26:23.570" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 02:25:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:25:49 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 02:26:23.570" starttime="20201212 02:25:47.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 02:26:23.570" starttime="20201212 02:26:23.570"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 02:26:23.570" critical="yes" starttime="20201212 02:25:47.175"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:26:23.587" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:26:23.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:26:23.595" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:26:23.595" starttime="20201212 02:26:23.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:26:23.596" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:26:23.596" starttime="20201212 02:26:23.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:26:23.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:26:23.596" starttime="20201212 02:26:23.596"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.597" starttime="20201212 02:26:23.573"></status>
</kw>
<msg timestamp="20201212 02:26:23.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:26:23.597" starttime="20201212 02:26:23.573"></status>
</kw>
<msg timestamp="20201212 02:26:23.597" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:26:23.597" starttime="20201212 02:26:23.573"></status>
</kw>
<msg timestamp="20201212 02:26:23.597" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:26:23.597" starttime="20201212 02:26:23.572"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 02:26:23.598" level="INFO">${random} = 51</msg>
<status status="PASS" endtime="20201212 02:26:23.598" starttime="20201212 02:26:23.598"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 02:26:23.602" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 02:26:23.602" starttime="20201212 02:26:23.601"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:26:23.602" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 02:26:23.602" starttime="20201212 02:26:23.602"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.603" starttime="20201212 02:26:23.601"></status>
</kw>
<msg timestamp="20201212 02:26:23.603" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 02:26:23.603" starttime="20201212 02:26:23.600"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201212 02:26:23.604" starttime="20201212 02:26:23.603"></status>
</kw>
<msg timestamp="20201212 02:26:23.604" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201212 02:26:23.604" starttime="20201212 02:26:23.603"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.604" starttime="20201212 02:26:23.600"></status>
</kw>
<msg timestamp="20201212 02:26:23.604" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 02:26:23.604" starttime="20201212 02:26:23.599"></status>
</kw>
<msg timestamp="20201212 02:26:23.604" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201212 02:26:23.605" starttime="20201212 02:26:23.598"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 02:26:23.608" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 02:26:23.608" starttime="20201212 02:26:23.608"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:26:23.609" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 02:26:23.609" starttime="20201212 02:26:23.608"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.609" starttime="20201212 02:26:23.607"></status>
</kw>
<msg timestamp="20201212 02:26:23.609" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 02:26:23.609" starttime="20201212 02:26:23.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 02:26:23.611" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201212 02:26:23.611" starttime="20201212 02:26:23.610"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:26:23.611" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201212 02:26:23.611" starttime="20201212 02:26:23.611"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.611" starttime="20201212 02:26:23.610"></status>
</kw>
<msg timestamp="20201212 02:26:23.611" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201212 02:26:23.611" starttime="20201212 02:26:23.609"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.612" starttime="20201212 02:26:23.606"></status>
</kw>
<msg timestamp="20201212 02:26:23.612" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 02:26:23.612" starttime="20201212 02:26:23.605"></status>
</kw>
<msg timestamp="20201212 02:26:23.612" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201212 02:26:23.612" starttime="20201212 02:26:23.605"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201212 02:26:23.615" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201212 02:26:23.615" starttime="20201212 02:26:23.615"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:26:23.616" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201212 02:26:23.616" starttime="20201212 02:26:23.616"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.616" starttime="20201212 02:26:23.615"></status>
</kw>
<msg timestamp="20201212 02:26:23.616" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201212 02:26:23.616" starttime="20201212 02:26:23.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 02:26:23.618" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201212 02:26:23.618" starttime="20201212 02:26:23.617"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:26:23.618" level="INFO">${result} = /wordcount-51.txt</msg>
<status status="PASS" endtime="20201212 02:26:23.619" starttime="20201212 02:26:23.618"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.619" starttime="20201212 02:26:23.617"></status>
</kw>
<msg timestamp="20201212 02:26:23.619" level="INFO">${path_with_leading} = /wordcount-51.txt</msg>
<status status="PASS" endtime="20201212 02:26:23.619" starttime="20201212 02:26:23.616"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:23.619" starttime="20201212 02:26:23.613"></status>
</kw>
<msg timestamp="20201212 02:26:23.619" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-51.txt</msg>
<status status="PASS" endtime="20201212 02:26:23.619" starttime="20201212 02:26:23.613"></status>
</kw>
<msg timestamp="20201212 02:26:23.620" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-51.txt</msg>
<status status="PASS" endtime="20201212 02:26:23.620" starttime="20201212 02:26:23.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:26:23.624" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-51.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:26:58.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:26:58.503" level="INFO">${output} = 2020-12-12 02:26:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-12-12 02:26:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
202...</msg>
<status status="PASS" endtime="20201212 02:26:58.503" starttime="20201212 02:26:23.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:26:58.504" level="INFO">2020-12-12 02:26:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-12-12 02:26:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-12-12 02:26:26 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739986139, maxDate=1608344786139, sequenceNumber=4, masterKeyId=2))
2020-12-12 02:26:26 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e6 a0 95 a6 e5 2e 38 e6 a8 c7 c6 e7 2e 40 04 48 01 5a 0d 32 39 34 37 39 31 37 30 37 38 32 36 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-12 02:26:26 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739986139, maxDate=1608344786139, sequenceNumber=4, masterKeyId=2)
2020-12-12 02:26:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 02:26:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:26:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:26:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 02:26:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 02:26:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-671BB9E1CBA5-&gt;1a7ed462-9726-4d51-a7f0-19f802b212a0
2020-12-12 02:26:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 02:26:27 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 02:26:28 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 02:26:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607739710319_0004
2020-12-12 02:26:28 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739986139, maxDate=1608344786139, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e6 a0 95 a6 e5 2e 38 e6 a8 c7 c6 e7 2e 40 04 48 01 5a 0d 32 39 34 37 39 31 37 30 37 38 32 36 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-12 02:26:28 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 02:26:28 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 02:26:28 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-12 02:26:29 INFO  YarnClientImpl:329 - Submitted application application_1607739710319_0004
2020-12-12 02:26:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607739710319_0004/
2020-12-12 02:26:29 INFO  Job:1619 - Running job: job_1607739710319_0004
2020-12-12 02:26:37 INFO  Job:1640 - Job job_1607739710319_0004 running in uber mode : false
2020-12-12 02:26:37 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 02:26:47 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 02:26:49 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 02:26:50 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 02:26:56 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 02:26:57 INFO  Job:1658 - Job job_1607739710319_0004 completed successfully
2020-12-12 02:26:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128407
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46966
		Total time spent by all reduces in occupied slots (ms)=13338
		Total time spent by all map tasks (ms)=23483
		Total time spent by all reduce tasks (ms)=6669
		Total vcore-milliseconds taken by all map tasks=23483
		Total vcore-milliseconds taken by all reduce tasks=6669
		Total megabyte-milliseconds taken by all map tasks=48093184
		Total megabyte-milliseconds taken by all reduce tasks=13658112
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1134
		CPU time spent (ms)=8300
		Physical memory (bytes) snapshot=1455886336
		Virtual memory (bytes) snapshot=14032023552
		Total committed heap usage (bytes)=1253572608
		Peak Map Physical memory (bytes)=401698816
		Peak Map Virtual memory (bytes)=3508932608
		Peak Reduce Physical memory (bytes)=305717248
		Peak Reduce Virtual memory (bytes)=3530571776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 02:26:58.505" starttime="20201212 02:26:58.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:26:58.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:26:58.505" starttime="20201212 02:26:58.505"></status>
</kw>
<status status="PASS" endtime="20201212 02:26:58.506" starttime="20201212 02:26:23.621"></status>
</kw>
<msg timestamp="20201212 02:26:58.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:26:58.506" starttime="20201212 02:26:23.620"></status>
</kw>
<msg timestamp="20201212 02:26:58.507" level="INFO">${output} = 2020-12-12 02:26:25 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-12-12 02:26:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
202...</msg>
<status status="PASS" endtime="20201212 02:26:58.507" starttime="20201212 02:26:23.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 02:26:58.507" starttime="20201212 02:26:58.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 02:26:58.508" starttime="20201212 02:26:58.507"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 02:26:58.508" critical="yes" starttime="20201212 02:26:23.571"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 02:26:58.509" starttime="20201212 02:25:47.121"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:24:13.218" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:24:13.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:24:13.223" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:24:13.223" starttime="20201212 02:24:13.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:24:13.224" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:24:13.224" starttime="20201212 02:24:13.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:24:13.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:24:13.225" starttime="20201212 02:24:13.224"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:13.225" starttime="20201212 02:24:13.213"></status>
</kw>
<msg timestamp="20201212 02:24:13.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:24:13.225" starttime="20201212 02:24:13.213"></status>
</kw>
<msg timestamp="20201212 02:24:13.226" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:24:13.226" starttime="20201212 02:24:13.212"></status>
</kw>
<msg timestamp="20201212 02:24:13.226" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:24:13.226" starttime="20201212 02:24:13.212"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 02:24:13.231" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 02:24:13.231" starttime="20201212 02:24:13.230"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:24:13.231" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 02:24:13.232" starttime="20201212 02:24:13.231"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:13.232" starttime="20201212 02:24:13.229"></status>
</kw>
<msg timestamp="20201212 02:24:13.232" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 02:24:13.232" starttime="20201212 02:24:13.228"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:13.232" starttime="20201212 02:24:13.228"></status>
</kw>
<msg timestamp="20201212 02:24:13.232" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 02:24:13.232" starttime="20201212 02:24:13.227"></status>
</kw>
<msg timestamp="20201212 02:24:13.232" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 02:24:13.232" starttime="20201212 02:24:13.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:24:13.237" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:24:53.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:24:53.950" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 02:24:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:24:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 02:24:53.950" starttime="20201212 02:24:13.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:24:53.951" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-12 02:24:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:24:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:24:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 02:24:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 02:24:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3E216609F744-&gt;1a7ed462-9726-4d51-a7f0-19f802b212a0
2020-12-12 02:24:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-12 02:24:17 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-12-12 02:24:17 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-12-12 02:24:18 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739858246, maxDate=1608344658246, sequenceNumber=1, masterKeyId=2))
2020-12-12 02:24:18 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 b6 8d a6 e5 2e 38 e9 be bf c6 e7 2e 40 01 48 01 5a 0d 32 39 34 37 39 31 37 30 37 38 32 36 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-12 02:24:18 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739858246, maxDate=1608344658246, sequenceNumber=1, masterKeyId=2)
2020-12-12 02:24:19 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 02:24:19 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 02:24:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607739710319_0001
2020-12-12 02:24:19 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739858246, maxDate=1608344658246, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 b6 8d a6 e5 2e 38 e9 be bf c6 e7 2e 40 01 48 01 5a 0d 32 39 34 37 39 31 37 30 37 38 32 36 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-12 02:24:20 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 02:24:20 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 02:24:20 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-12 02:24:21 INFO  YarnClientImpl:329 - Submitted application application_1607739710319_0001
2020-12-12 02:24:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607739710319_0001/
2020-12-12 02:24:21 INFO  Job:1619 - Running job: job_1607739710319_0001
2020-12-12 02:24:33 INFO  Job:1640 - Job job_1607739710319_0001 running in uber mode : false
2020-12-12 02:24:33 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 02:24:44 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 02:24:46 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 02:24:47 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 02:24:52 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 02:24:53 INFO  Job:1658 - Job job_1607739710319_0001 completed successfully
2020-12-12 02:24:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065977
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51460
		Total time spent by all reduces in occupied slots (ms)=8634
		Total time spent by all map tasks (ms)=25730
		Total time spent by all reduce tasks (ms)=4317
		Total vcore-milliseconds taken by all map tasks=25730
		Total vcore-milliseconds taken by all reduce tasks=4317
		Total megabyte-milliseconds taken by all map tasks=52695040
		Total megabyte-milliseconds taken by all reduce tasks=8841216
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1381
		CPU time spent (ms)=8020
		Physical memory (bytes) snapshot=1417433088
		Virtual memory (bytes) snapshot=14056058880
		Total committed heap usage (bytes)=1212678144
		Peak Map Physical memory (bytes)=398700544
		Peak Map Virtual memory (bytes)=3511341056
		Peak Reduce Physical memory (bytes)=306524160
		Peak Reduce Virtual memory (bytes)=3529089024
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.09 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201212 02:24:53.951" starttime="20201212 02:24:53.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:24:53.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:24:53.952" starttime="20201212 02:24:53.952"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:53.952" starttime="20201212 02:24:13.233"></status>
</kw>
<msg timestamp="20201212 02:24:53.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:24:53.953" starttime="20201212 02:24:13.233"></status>
</kw>
<msg timestamp="20201212 02:24:53.953" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-12 02:24:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:24:15 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201212 02:24:53.953" starttime="20201212 02:24:13.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 02:24:53.954" starttime="20201212 02:24:53.953"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 02:24:53.954" critical="yes" starttime="20201212 02:24:13.211"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:24:53.960" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:24:53.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:24:53.968" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:24:53.968" starttime="20201212 02:24:53.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:24:53.969" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:24:53.969" starttime="20201212 02:24:53.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:24:53.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:24:53.970" starttime="20201212 02:24:53.969"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:53.971" starttime="20201212 02:24:53.957"></status>
</kw>
<msg timestamp="20201212 02:24:53.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:24:53.971" starttime="20201212 02:24:53.957"></status>
</kw>
<msg timestamp="20201212 02:24:53.971" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:24:53.971" starttime="20201212 02:24:53.956"></status>
</kw>
<msg timestamp="20201212 02:24:53.972" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201212 02:24:53.972" starttime="20201212 02:24:53.956"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201212 02:24:53.972" level="INFO">${random} = 04</msg>
<status status="PASS" endtime="20201212 02:24:53.972" starttime="20201212 02:24:53.972"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 02:24:53.976" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 02:24:53.976" starttime="20201212 02:24:53.976"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:24:53.977" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 02:24:53.977" starttime="20201212 02:24:53.976"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:53.977" starttime="20201212 02:24:53.975"></status>
</kw>
<msg timestamp="20201212 02:24:53.977" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 02:24:53.977" starttime="20201212 02:24:53.974"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:53.977" starttime="20201212 02:24:53.974"></status>
</kw>
<msg timestamp="20201212 02:24:53.978" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 02:24:53.978" starttime="20201212 02:24:53.973"></status>
</kw>
<msg timestamp="20201212 02:24:53.978" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201212 02:24:53.978" starttime="20201212 02:24:53.972"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 02:24:53.981" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 02:24:53.981" starttime="20201212 02:24:53.981"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:24:53.982" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 02:24:53.982" starttime="20201212 02:24:53.982"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:53.982" starttime="20201212 02:24:53.980"></status>
</kw>
<msg timestamp="20201212 02:24:53.982" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 02:24:53.982" starttime="20201212 02:24:53.980"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:53.983" starttime="20201212 02:24:53.979"></status>
</kw>
<msg timestamp="20201212 02:24:53.983" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 02:24:53.983" starttime="20201212 02:24:53.979"></status>
</kw>
<msg timestamp="20201212 02:24:53.983" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201212 02:24:53.983" starttime="20201212 02:24:53.978"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201212 02:24:53.986" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201212 02:24:53.986" starttime="20201212 02:24:53.986"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201212 02:24:53.987" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201212 02:24:53.987" starttime="20201212 02:24:53.987"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:53.987" starttime="20201212 02:24:53.985"></status>
</kw>
<msg timestamp="20201212 02:24:53.987" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201212 02:24:53.987" starttime="20201212 02:24:53.985"></status>
</kw>
<status status="PASS" endtime="20201212 02:24:53.988" starttime="20201212 02:24:53.984"></status>
</kw>
<msg timestamp="20201212 02:24:53.988" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-04.txt</msg>
<status status="PASS" endtime="20201212 02:24:53.988" starttime="20201212 02:24:53.984"></status>
</kw>
<msg timestamp="20201212 02:24:53.988" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-04.txt</msg>
<status status="PASS" endtime="20201212 02:24:53.988" starttime="20201212 02:24:53.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201212 02:24:53.993" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-04.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201212 02:25:28.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20201212 02:25:28.915" level="INFO">${output} = 2020-12-12 02:24:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-12-12 02:24:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
202...</msg>
<status status="PASS" endtime="20201212 02:25:28.915" starttime="20201212 02:24:53.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201212 02:25:28.916" level="INFO">2020-12-12 02:24:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-12-12 02:24:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
2020-12-12 02:24:56 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739896699, maxDate=1608344696699, sequenceNumber=2, masterKeyId=2))
2020-12-12 02:24:56 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 e6 8f a6 e5 2e 38 92 ee c1 c6 e7 2e 40 02 48 01 5a 0d 32 39 34 37 39 31 37 30 37 38 32 36 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-12 02:24:56 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739896699, maxDate=1608344696699, sequenceNumber=2, masterKeyId=2)
2020-12-12 02:24:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-12 02:24:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-12 02:24:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-12 02:24:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-12 02:24:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-12 02:24:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DB2C4B8C5193-&gt;1a7ed462-9726-4d51-a7f0-19f802b212a0
2020-12-12 02:24:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-12 02:24:58 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-12 02:24:58 INFO  JobSubmitter:202 - number of splits:3
2020-12-12 02:24:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607739710319_0002
2020-12-12 02:24:59 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607739896699, maxDate=1608344696699, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 e6 8f a6 e5 2e 38 92 ee c1 c6 e7 2e 40 02 48 01 5a 0d 32 39 34 37 39 31 37 30 37 38 32 36 30 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-12 02:24:59 INFO  Configuration:2795 - resource-types.xml not found
2020-12-12 02:24:59 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-12 02:24:59 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-12 02:25:01 INFO  YarnClientImpl:329 - Submitted application application_1607739710319_0002
2020-12-12 02:25:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607739710319_0002/
2020-12-12 02:25:01 INFO  Job:1619 - Running job: job_1607739710319_0002
2020-12-12 02:25:09 INFO  Job:1640 - Job job_1607739710319_0002 running in uber mode : false
2020-12-12 02:25:09 INFO  Job:1647 -  map 0% reduce 0%
2020-12-12 02:25:21 INFO  Job:1647 -  map 33% reduce 0%
2020-12-12 02:25:22 INFO  Job:1647 -  map 67% reduce 0%
2020-12-12 02:25:23 INFO  Job:1647 -  map 100% reduce 0%
2020-12-12 02:25:27 INFO  Job:1647 -  map 100% reduce 100%
2020-12-12 02:25:28 INFO  Job:1658 - Job job_1607739710319_0002 completed successfully
2020-12-12 02:25:28 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128491
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52912
		Total time spent by all reduces in occupied slots (ms)=8042
		Total time spent by all map tasks (ms)=26456
		Total time spent by all reduce tasks (ms)=4021
		Total vcore-milliseconds taken by all map tasks=26456
		Total vcore-milliseconds taken by all reduce tasks=4021
		Total megabyte-milliseconds taken by all map tasks=54181888
		Total megabyte-milliseconds taken by all reduce tasks=8235008
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1420
		CPU time spent (ms)=8720
		Physical memory (bytes) snapshot=1642639360
		Virtual memory (bytes) snapshot=14052687872
		Total committed heap usage (bytes)=1468006400
		Peak Map Physical memory (bytes)=560500736
		Peak Map Virtual memory (bytes)=3511156736
		Peak Reduce Physical memory (bytes)=301371392
		Peak Reduce Virtual memory (bytes)=3524419584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201212 02:25:28.917" starttime="20201212 02:25:28.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201212 02:25:28.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201212 02:25:28.917" starttime="20201212 02:25:28.917"></status>
</kw>
<status status="PASS" endtime="20201212 02:25:28.918" starttime="20201212 02:24:53.989"></status>
</kw>
<msg timestamp="20201212 02:25:28.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201212 02:25:28.918" starttime="20201212 02:24:53.989"></status>
</kw>
<msg timestamp="20201212 02:25:28.918" level="INFO">${output} = 2020-12-12 02:24:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.8:8032
2020-12-12 02:24:56 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.2:10200
202...</msg>
<status status="PASS" endtime="20201212 02:25:28.918" starttime="20201212 02:24:53.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201212 02:25:28.919" starttime="20201212 02:25:28.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201212 02:25:28.919" starttime="20201212 02:25:28.919"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201212 02:25:28.920" critical="yes" starttime="20201212 02:24:53.955"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201212 02:25:28.921" starttime="20201212 02:24:13.157"></status>
</suite>
<status status="PASS" elapsedtime="206932" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
