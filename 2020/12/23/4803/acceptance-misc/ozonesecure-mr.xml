<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201223 14:02:17.691" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:10.120" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:14.339" level="INFO">${rc} = 255</msg>
<msg timestamp="20201223 13:58:14.339" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:14.339" starttime="20201223 13:58:10.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:14.340" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:58:14.341" starttime="20201223 13:58:14.340"></status>
</kw>
<msg timestamp="20201223 13:58:14.341" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:14.341" starttime="20201223 13:58:10.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:14.347" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:18.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:18.051" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:18.051" starttime="20201223 13:58:14.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:18.052" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 13:58:18.052" starttime="20201223 13:58:18.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:18.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:18.053" starttime="20201223 13:58:18.052"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:18.053" starttime="20201223 13:58:14.343"></status>
</kw>
<msg timestamp="20201223 13:58:18.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:18.053" starttime="20201223 13:58:14.343"></status>
</kw>
<msg timestamp="20201223 13:58:18.053" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:18.054" starttime="20201223 13:58:14.342"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201223 13:58:18.054" starttime="20201223 13:58:18.054"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:18.054" starttime="20201223 13:58:14.342"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:18.054" starttime="20201223 13:58:14.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:18.059" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:21.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:21.458" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:21.458" starttime="20201223 13:58:18.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:21.459" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 13:58:21.459" starttime="20201223 13:58:21.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:21.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:21.460" starttime="20201223 13:58:21.459"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:21.460" starttime="20201223 13:58:18.056"></status>
</kw>
<msg timestamp="20201223 13:58:21.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:21.460" starttime="20201223 13:58:18.056"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:21.461" starttime="20201223 13:58:18.055"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:21.461" starttime="20201223 13:58:18.055"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:21.461" starttime="20201223 13:58:18.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201223 13:58:21.461" starttime="20201223 13:58:21.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:21.466" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:25.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:25.204" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:25.204" starttime="20201223 13:58:21.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:25.205" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:58:21.264Z",
  "modificationTime" : "2020-12-23T13:58:21.264Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201223 13:58:25.205" starttime="20201223 13:58:25.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:25.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:25.206" starttime="20201223 13:58:25.205"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:25.206" starttime="20201223 13:58:21.463"></status>
</kw>
<msg timestamp="20201223 13:58:25.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:25.206" starttime="20201223 13:58:21.462"></status>
</kw>
<msg timestamp="20201223 13:58:25.207" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:25.207" starttime="20201223 13:58:21.462"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201223 13:58:25.207" starttime="20201223 13:58:25.207"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:58:25.211" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:58:25.211" starttime="20201223 13:58:25.211"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:58:25.212" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:58:25.212" starttime="20201223 13:58:25.211"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:25.212" starttime="20201223 13:58:25.210"></status>
</kw>
<msg timestamp="20201223 13:58:25.212" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:58:25.212" starttime="20201223 13:58:25.210"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:25.213" starttime="20201223 13:58:25.209"></status>
</kw>
<msg timestamp="20201223 13:58:25.213" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 13:58:25.213" starttime="20201223 13:58:25.208"></status>
</kw>
<msg timestamp="20201223 13:58:25.213" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 13:58:25.213" starttime="20201223 13:58:25.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:25.217" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:28.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:28.998" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:28.998" starttime="20201223 13:58:25.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:28.999" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 13:58:28.999" starttime="20201223 13:58:28.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:29.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:29.000" starttime="20201223 13:58:29.000"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:29.000" starttime="20201223 13:58:25.214"></status>
</kw>
<msg timestamp="20201223 13:58:29.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:29.001" starttime="20201223 13:58:25.214"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:29.001" starttime="20201223 13:58:25.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:29.005" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:36.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:36.831" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:36.832" starttime="20201223 13:58:29.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:36.833" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 13:58:36.833" starttime="20201223 13:58:36.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:36.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:36.833" starttime="20201223 13:58:36.833"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:36.834" starttime="20201223 13:58:29.002"></status>
</kw>
<msg timestamp="20201223 13:58:36.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:36.834" starttime="20201223 13:58:29.002"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:36.834" starttime="20201223 13:58:29.001"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:36.838" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:42.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:42.390" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:42.390" starttime="20201223 13:58:36.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:42.391" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 13:58:42.391" starttime="20201223 13:58:42.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:42.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:42.392" starttime="20201223 13:58:42.392"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:42.393" starttime="20201223 13:58:36.835"></status>
</kw>
<msg timestamp="20201223 13:58:42.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:42.393" starttime="20201223 13:58:36.835"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:42.393" starttime="20201223 13:58:36.834"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:42.398" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:48.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:48.093" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:48.093" starttime="20201223 13:58:42.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:48.094" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 13:58:48.094" starttime="20201223 13:58:48.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:48.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:48.095" starttime="20201223 13:58:48.094"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:48.095" starttime="20201223 13:58:42.394"></status>
</kw>
<msg timestamp="20201223 13:58:48.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:48.096" starttime="20201223 13:58:42.394"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:48.096" starttime="20201223 13:58:42.393"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:58:48.096" critical="yes" starttime="20201223 13:58:10.115"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:58:48.102" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:58:48.102" starttime="20201223 13:58:48.101"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:58:48.102" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:58:48.102" starttime="20201223 13:58:48.102"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:48.102" starttime="20201223 13:58:48.100"></status>
</kw>
<msg timestamp="20201223 13:58:48.103" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:58:48.103" starttime="20201223 13:58:48.100"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:48.103" starttime="20201223 13:58:48.099"></status>
</kw>
<msg timestamp="20201223 13:58:48.103" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:58:48.103" starttime="20201223 13:58:48.099"></status>
</kw>
<msg timestamp="20201223 13:58:48.103" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:58:48.103" starttime="20201223 13:58:48.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:48.107" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:51.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:51.518" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:51.518" starttime="20201223 13:58:48.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:51.519" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 13:58:51.520" starttime="20201223 13:58:51.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:51.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:51.520" starttime="20201223 13:58:51.520"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:51.521" starttime="20201223 13:58:48.104"></status>
</kw>
<msg timestamp="20201223 13:58:51.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:51.521" starttime="20201223 13:58:48.104"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:51.521" starttime="20201223 13:58:48.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:51.525" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:55.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:55.077" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 13:58:55.077" starttime="20201223 13:58:51.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:55.078" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 13:58:55.078" starttime="20201223 13:58:55.077"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:55.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:55.079" starttime="20201223 13:58:55.078"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:55.079" starttime="20201223 13:58:51.522"></status>
</kw>
<msg timestamp="20201223 13:58:55.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:55.080" starttime="20201223 13:58:51.522"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:55.080" starttime="20201223 13:58:51.521"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:58:55.080" critical="yes" starttime="20201223 13:58:48.097"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201223 13:58:55.081" starttime="20201223 13:58:10.058"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 14:00:52.483" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 14:00:52.483" starttime="20201223 14:00:52.483"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:00:52.484" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 14:00:52.484" starttime="20201223 14:00:52.483"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:52.484" starttime="20201223 14:00:52.482"></status>
</kw>
<msg timestamp="20201223 14:00:52.484" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 14:00:52.484" starttime="20201223 14:00:52.482"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 14:00:52.485" starttime="20201223 14:00:52.485"></status>
</kw>
<msg timestamp="20201223 14:00:52.485" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 14:00:52.485" starttime="20201223 14:00:52.484"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:52.486" starttime="20201223 14:00:52.481"></status>
</kw>
<msg timestamp="20201223 14:00:52.486" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 14:00:52.486" starttime="20201223 14:00:52.480"></status>
</kw>
<msg timestamp="20201223 14:00:52.486" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 14:00:52.486" starttime="20201223 14:00:52.479"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 14:00:52.486" level="INFO">${random} = 92351</msg>
<status status="PASS" endtime="20201223 14:00:52.487" starttime="20201223 14:00:52.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 14:00:52.491" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-92351 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 14:00:58.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 14:00:58.650" level="INFO">${output} = 2020-12-23 14:00:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 14:00:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 14:00:58.650" starttime="20201223 14:00:52.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 14:00:58.652" level="INFO">2020-12-23 14:00:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 14:00:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 14:00:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 14:00:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 14:00:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BBFD7A854655-&gt;2c9a5cbb-ecd8-44be-b9bc-38e1f8f53384
2020-12-23 14:00:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 14:00:58.652" starttime="20201223 14:00:58.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 14:00:58.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 14:00:58.653" starttime="20201223 14:00:58.652"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:58.653" starttime="20201223 14:00:52.487"></status>
</kw>
<msg timestamp="20201223 14:00:58.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 14:00:58.653" starttime="20201223 14:00:52.487"></status>
</kw>
<msg timestamp="20201223 14:00:58.653" level="INFO">${result} = 2020-12-23 14:00:54 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 14:00:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 14:00:58.653" starttime="20201223 14:00:52.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 14:00:58.658" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 14:01:00.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 14:01:00.656" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:59 ofs://om/volume1/bucket1/ozone-77138
-rw-...</msg>
<status status="PASS" endtime="20201223 14:01:00.657" starttime="20201223 14:00:58.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 14:01:00.658" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:59 ofs://om/volume1/bucket1/ozone-77138
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 14:00 ofs://om/volume1/bucket1/ozone-92351
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:58 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 14:00 ofs://om/volume1/bucket1/wordcount-54.txt</msg>
<status status="PASS" endtime="20201223 14:01:00.658" starttime="20201223 14:01:00.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 14:01:00.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 14:01:00.658" starttime="20201223 14:01:00.658"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:00.659" starttime="20201223 14:00:58.656"></status>
</kw>
<msg timestamp="20201223 14:01:00.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 14:01:00.659" starttime="20201223 14:00:58.655"></status>
</kw>
<msg timestamp="20201223 14:01:00.659" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:58 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:59 ofs://om/volume1/bucket1/ozone-77138
-rw-...</msg>
<status status="PASS" endtime="20201223 14:01:00.659" starttime="20201223 14:00:58.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 14:01:00.660" starttime="20201223 14:01:00.659"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 14:01:00.660" critical="yes" starttime="20201223 14:00:52.478"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 14:01:00.661" starttime="20201223 14:00:52.425"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:59:24.539" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:59:24.540" starttime="20201223 13:59:24.539"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:59:24.540" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:59:24.540" starttime="20201223 13:59:24.540"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:24.540" starttime="20201223 13:59:24.539"></status>
</kw>
<msg timestamp="20201223 13:59:24.540" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:59:24.540" starttime="20201223 13:59:24.538"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:24.541" starttime="20201223 13:59:24.537"></status>
</kw>
<msg timestamp="20201223 13:59:24.541" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:59:24.541" starttime="20201223 13:59:24.537"></status>
</kw>
<msg timestamp="20201223 13:59:24.541" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:59:24.541" starttime="20201223 13:59:24.536"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:59:24.542" level="INFO">${random} = 77138</msg>
<status status="PASS" endtime="20201223 13:59:24.542" starttime="20201223 13:59:24.541"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:59:24.546" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-77138 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:59:28.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:59:28.536" level="INFO">${output} = 2020-12-23 13:59:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:59:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 13:59:28.536" starttime="20201223 13:59:24.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:59:28.537" level="INFO">2020-12-23 13:59:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:59:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:59:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:59:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:59:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DAFAF255CDF4-&gt;2c9a5cbb-ecd8-44be-b9bc-38e1f8f53384
2020-12-23 13:59:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 13:59:28.537" starttime="20201223 13:59:28.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:59:28.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:59:28.538" starttime="20201223 13:59:28.538"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:28.538" starttime="20201223 13:59:24.543"></status>
</kw>
<msg timestamp="20201223 13:59:28.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:59:28.539" starttime="20201223 13:59:24.542"></status>
</kw>
<msg timestamp="20201223 13:59:28.539" level="INFO">${result} = 2020-12-23 13:59:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:59:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 13:59:28.539" starttime="20201223 13:59:24.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:59:28.545" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:59:30.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:59:30.656" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:59 o3fs://bucket1.volume1.om/ozone-77138
dr...</msg>
<status status="PASS" endtime="20201223 13:59:30.657" starttime="20201223 13:59:28.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:59:30.658" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:59 o3fs://bucket1.volume1.om/ozone-77138
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:58 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:59:30.658" starttime="20201223 13:59:30.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:59:30.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:59:30.658" starttime="20201223 13:59:30.658"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:30.659" starttime="20201223 13:59:28.541"></status>
</kw>
<msg timestamp="20201223 13:59:30.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:59:30.659" starttime="20201223 13:59:28.540"></status>
</kw>
<msg timestamp="20201223 13:59:30.659" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:58 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:59 o3fs://bucket1.volume1.om/ozone-77138
dr...</msg>
<status status="PASS" endtime="20201223 13:59:30.659" starttime="20201223 13:59:28.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:59:30.660" starttime="20201223 13:59:30.659"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 13:59:30.660" critical="yes" starttime="20201223 13:59:24.535"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 13:59:30.661" starttime="20201223 13:59:24.482"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:59:19.247" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:59:19.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:59:19.250" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201223 13:59:19.250" starttime="20201223 13:59:19.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:59:19.251" level="INFO">rm</msg>
<status status="PASS" endtime="20201223 13:59:19.251" starttime="20201223 13:59:19.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:59:19.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:59:19.252" starttime="20201223 13:59:19.251"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:19.252" starttime="20201223 13:59:19.242"></status>
</kw>
<msg timestamp="20201223 13:59:19.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:59:19.252" starttime="20201223 13:59:19.242"></status>
</kw>
<msg timestamp="20201223 13:59:19.252" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201223 13:59:19.252" starttime="20201223 13:59:19.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201223 13:59:19.254" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201223 13:59:19.254" starttime="20201223 13:59:19.253"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:59:19.257" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:59:19.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:59:19.274" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:59:19.274" starttime="20201223 13:59:19.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:59:19.275" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:59:19.275" starttime="20201223 13:59:19.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:59:19.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:59:19.276" starttime="20201223 13:59:19.275"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:19.276" starttime="20201223 13:59:19.255"></status>
</kw>
<msg timestamp="20201223 13:59:19.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:59:19.276" starttime="20201223 13:59:19.255"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:19.276" starttime="20201223 13:59:19.254"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:19.276" starttime="20201223 13:59:19.254"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:19.277" starttime="20201223 13:59:19.241"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:59:19.277" critical="yes" starttime="20201223 13:59:19.240"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201223 13:59:19.278" starttime="20201223 13:59:19.192"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:04.725" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:04.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:04.727" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201223 13:58:04.728" starttime="20201223 13:58:04.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:04.728" level="INFO">om</msg>
<status status="PASS" endtime="20201223 13:58:04.729" starttime="20201223 13:58:04.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:04.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:04.729" starttime="20201223 13:58:04.729"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:04.730" starttime="20201223 13:58:04.721"></status>
</kw>
<msg timestamp="20201223 13:58:04.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:04.730" starttime="20201223 13:58:04.720"></status>
</kw>
<msg timestamp="20201223 13:58:04.730" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201223 13:58:04.730" starttime="20201223 13:58:04.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201223 13:58:04.731" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201223 13:58:04.731" starttime="20201223 13:58:04.730"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:58:04.735" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:58:04.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:58:04.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:58:04.748" starttime="20201223 13:58:04.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:58:04.749" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:58:04.749" starttime="20201223 13:58:04.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:58:04.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:58:04.750" starttime="20201223 13:58:04.749"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:04.750" starttime="20201223 13:58:04.732"></status>
</kw>
<msg timestamp="20201223 13:58:04.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:58:04.750" starttime="20201223 13:58:04.732"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:04.750" starttime="20201223 13:58:04.732"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:04.750" starttime="20201223 13:58:04.731"></status>
</kw>
<status status="PASS" endtime="20201223 13:58:04.751" starttime="20201223 13:58:04.719"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:58:04.751" critical="yes" starttime="20201223 13:58:04.718"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201223 13:58:04.752" starttime="20201223 13:58:04.669"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 14:01:05.974" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 14:01:05.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 14:01:05.981" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:01:05.981" starttime="20201223 14:01:05.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 14:01:05.982" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:01:05.982" starttime="20201223 14:01:05.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 14:01:05.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 14:01:05.982" starttime="20201223 14:01:05.982"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:05.983" starttime="20201223 14:01:05.970"></status>
</kw>
<msg timestamp="20201223 14:01:05.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 14:01:05.983" starttime="20201223 14:01:05.969"></status>
</kw>
<msg timestamp="20201223 14:01:05.983" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:01:05.983" starttime="20201223 14:01:05.969"></status>
</kw>
<msg timestamp="20201223 14:01:05.983" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:01:05.983" starttime="20201223 14:01:05.969"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 14:01:05.988" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 14:01:05.988" starttime="20201223 14:01:05.988"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:01:05.989" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 14:01:05.989" starttime="20201223 14:01:05.989"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:05.989" starttime="20201223 14:01:05.986"></status>
</kw>
<msg timestamp="20201223 14:01:05.989" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 14:01:05.989" starttime="20201223 14:01:05.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 14:01:05.990" starttime="20201223 14:01:05.990"></status>
</kw>
<msg timestamp="20201223 14:01:05.991" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 14:01:05.991" starttime="20201223 14:01:05.990"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:05.991" starttime="20201223 14:01:05.985"></status>
</kw>
<msg timestamp="20201223 14:01:05.991" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 14:01:05.991" starttime="20201223 14:01:05.984"></status>
</kw>
<msg timestamp="20201223 14:01:05.991" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 14:01:05.991" starttime="20201223 14:01:05.983"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 14:01:05.994" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 14:01:38.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 14:01:38.067" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 14:01:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 14:01:08 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 14:01:38.067" starttime="20201223 14:01:05.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 14:01:38.068" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 14:01:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 14:01:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 14:01:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 14:01:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 14:01:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A44E5D56C801-&gt;2c9a5cbb-ecd8-44be-b9bc-38e1f8f53384
2020-12-23 14:01:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 14:01:09 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-23 14:01:09 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.10:10200
2020-12-23 14:01:09 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608732069922, maxDate=1609336869922, sequenceNumber=3, masterKeyId=2))
2020-12-23 14:01:09 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d1 9f 9d ff e8 2e 38 d1 a7 cf 9f eb 2e 40 03 48 01 5a 0d 32 30 34 30 31 38 33 37 33 32 33 35 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-23 14:01:09 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608732069922, maxDate=1609336869922, sequenceNumber=3, masterKeyId=2)
2020-12-23 14:01:10 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 14:01:10 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 14:01:10 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 14:01:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608731828432_0003
2020-12-23 14:01:10 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608732069922, maxDate=1609336869922, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d1 9f 9d ff e8 2e 38 d1 a7 cf 9f eb 2e 40 03 48 01 5a 0d 32 30 34 30 31 38 33 37 33 32 33 35 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-23 14:01:10 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 14:01:10 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 14:01:10 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-23 14:01:11 INFO  YarnClientImpl:329 - Submitted application application_1608731828432_0003
2020-12-23 14:01:11 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608731828432_0003/
2020-12-23 14:01:11 INFO  Job:1619 - Running job: job_1608731828432_0003
2020-12-23 14:01:20 INFO  Job:1640 - Job job_1608731828432_0003 running in uber mode : false
2020-12-23 14:01:20 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 14:01:31 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 14:01:32 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 14:01:33 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 14:01:37 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 14:01:37 INFO  Job:1658 - Job job_1608731828432_0003 completed successfully
2020-12-23 14:01:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065781
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48726
		Total time spent by all reduces in occupied slots (ms)=8170
		Total time spent by all map tasks (ms)=24363
		Total time spent by all reduce tasks (ms)=4085
		Total vcore-milliseconds taken by all map tasks=24363
		Total vcore-milliseconds taken by all reduce tasks=4085
		Total megabyte-milliseconds taken by all map tasks=49895424
		Total megabyte-milliseconds taken by all reduce tasks=8366080
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1690
		CPU time spent (ms)=7650
		Physical memory (bytes) snapshot=1587908608
		Virtual memory (bytes) snapshot=14033784832
		Total committed heap usage (bytes)=1380974592
		Peak Map Physical memory (bytes)=544202752
		Peak Map Virtual memory (bytes)=3509395456
		Peak Reduce Physical memory (bytes)=277409792
		Peak Reduce Virtual memory (bytes)=3508404224
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.075 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 14:01:38.069" starttime="20201223 14:01:38.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 14:01:38.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 14:01:38.069" starttime="20201223 14:01:38.069"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.070" starttime="20201223 14:01:05.992"></status>
</kw>
<msg timestamp="20201223 14:01:38.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 14:01:38.070" starttime="20201223 14:01:05.992"></status>
</kw>
<msg timestamp="20201223 14:01:38.070" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 14:01:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 14:01:08 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 14:01:38.070" starttime="20201223 14:01:05.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 14:01:38.071" starttime="20201223 14:01:38.071"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 14:01:38.071" critical="yes" starttime="20201223 14:01:05.967"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 14:01:38.077" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 14:01:38.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 14:01:38.082" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:01:38.082" starttime="20201223 14:01:38.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 14:01:38.083" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:01:38.083" starttime="20201223 14:01:38.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 14:01:38.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 14:01:38.084" starttime="20201223 14:01:38.083"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.084" starttime="20201223 14:01:38.074"></status>
</kw>
<msg timestamp="20201223 14:01:38.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 14:01:38.084" starttime="20201223 14:01:38.074"></status>
</kw>
<msg timestamp="20201223 14:01:38.084" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:01:38.084" starttime="20201223 14:01:38.073"></status>
</kw>
<msg timestamp="20201223 14:01:38.085" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:01:38.085" starttime="20201223 14:01:38.073"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 14:01:38.085" level="INFO">${random} = 45</msg>
<status status="PASS" endtime="20201223 14:01:38.085" starttime="20201223 14:01:38.085"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 14:01:38.090" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 14:01:38.090" starttime="20201223 14:01:38.089"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:01:38.090" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 14:01:38.090" starttime="20201223 14:01:38.090"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.090" starttime="20201223 14:01:38.088"></status>
</kw>
<msg timestamp="20201223 14:01:38.091" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 14:01:38.091" starttime="20201223 14:01:38.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 14:01:38.092" starttime="20201223 14:01:38.091"></status>
</kw>
<msg timestamp="20201223 14:01:38.092" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 14:01:38.092" starttime="20201223 14:01:38.091"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.092" starttime="20201223 14:01:38.087"></status>
</kw>
<msg timestamp="20201223 14:01:38.092" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 14:01:38.092" starttime="20201223 14:01:38.086"></status>
</kw>
<msg timestamp="20201223 14:01:38.093" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 14:01:38.093" starttime="20201223 14:01:38.086"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 14:01:38.096" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 14:01:38.096" starttime="20201223 14:01:38.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:01:38.097" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 14:01:38.097" starttime="20201223 14:01:38.096"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.097" starttime="20201223 14:01:38.095"></status>
</kw>
<msg timestamp="20201223 14:01:38.097" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 14:01:38.097" starttime="20201223 14:01:38.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 14:01:38.098" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201223 14:01:38.098" starttime="20201223 14:01:38.098"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:01:38.099" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201223 14:01:38.099" starttime="20201223 14:01:38.099"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.099" starttime="20201223 14:01:38.098"></status>
</kw>
<msg timestamp="20201223 14:01:38.099" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201223 14:01:38.099" starttime="20201223 14:01:38.097"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.100" starttime="20201223 14:01:38.094"></status>
</kw>
<msg timestamp="20201223 14:01:38.100" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 14:01:38.100" starttime="20201223 14:01:38.093"></status>
</kw>
<msg timestamp="20201223 14:01:38.100" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 14:01:38.100" starttime="20201223 14:01:38.093"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 14:01:38.103" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 14:01:38.104" starttime="20201223 14:01:38.103"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:01:38.104" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 14:01:38.104" starttime="20201223 14:01:38.104"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.104" starttime="20201223 14:01:38.103"></status>
</kw>
<msg timestamp="20201223 14:01:38.104" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 14:01:38.104" starttime="20201223 14:01:38.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 14:01:38.106" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201223 14:01:38.106" starttime="20201223 14:01:38.105"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:01:38.107" level="INFO">${result} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201223 14:01:38.107" starttime="20201223 14:01:38.106"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.107" starttime="20201223 14:01:38.105"></status>
</kw>
<msg timestamp="20201223 14:01:38.107" level="INFO">${path_with_leading} = /wordcount-45.txt</msg>
<status status="PASS" endtime="20201223 14:01:38.107" starttime="20201223 14:01:38.105"></status>
</kw>
<status status="PASS" endtime="20201223 14:01:38.107" starttime="20201223 14:01:38.101"></status>
</kw>
<msg timestamp="20201223 14:01:38.107" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201223 14:01:38.107" starttime="20201223 14:01:38.101"></status>
</kw>
<msg timestamp="20201223 14:01:38.108" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-45.txt</msg>
<status status="PASS" endtime="20201223 14:01:38.108" starttime="20201223 14:01:38.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 14:01:38.111" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-45.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 14:02:09.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 14:02:09.326" level="INFO">${output} = 2020-12-23 14:01:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-23 14:01:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.10:10200
2...</msg>
<status status="PASS" endtime="20201223 14:02:09.326" starttime="20201223 14:01:38.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 14:02:09.327" level="INFO">2020-12-23 14:01:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-23 14:01:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.10:10200
2020-12-23 14:01:40 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608732100515, maxDate=1609336900515, sequenceNumber=4, masterKeyId=2))
2020-12-23 14:01:40 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b1 8e 9f ff e8 2e 38 b1 96 d1 9f eb 2e 40 04 48 01 5a 0d 32 30 34 30 31 38 33 37 33 32 33 35 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-23 14:01:40 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608732100515, maxDate=1609336900515, sequenceNumber=4, masterKeyId=2)
2020-12-23 14:01:40 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 14:01:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 14:01:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 14:01:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 14:01:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 14:01:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BC69A0C1A8EE-&gt;2c9a5cbb-ecd8-44be-b9bc-38e1f8f53384
2020-12-23 14:01:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 14:01:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 14:01:42 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 14:01:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608731828432_0004
2020-12-23 14:01:42 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608732100515, maxDate=1609336900515, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 b1 8e 9f ff e8 2e 38 b1 96 d1 9f eb 2e 40 04 48 01 5a 0d 32 30 34 30 31 38 33 37 33 32 33 35 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-23 14:01:42 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 14:01:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 14:01:42 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-23 14:01:43 INFO  YarnClientImpl:329 - Submitted application application_1608731828432_0004
2020-12-23 14:01:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608731828432_0004/
2020-12-23 14:01:43 INFO  Job:1619 - Running job: job_1608731828432_0004
2020-12-23 14:01:51 INFO  Job:1640 - Job job_1608731828432_0004 running in uber mode : false
2020-12-23 14:01:51 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 14:02:01 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 14:02:03 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 14:02:04 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 14:02:08 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 14:02:08 INFO  Job:1658 - Job job_1608731828432_0004 completed successfully
2020-12-23 14:02:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128431
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48116
		Total time spent by all reduces in occupied slots (ms)=8060
		Total time spent by all map tasks (ms)=24058
		Total time spent by all reduce tasks (ms)=4030
		Total vcore-milliseconds taken by all map tasks=24058
		Total vcore-milliseconds taken by all reduce tasks=4030
		Total megabyte-milliseconds taken by all map tasks=49270784
		Total megabyte-milliseconds taken by all reduce tasks=8253440
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1540
		CPU time spent (ms)=8280
		Physical memory (bytes) snapshot=1617448960
		Virtual memory (bytes) snapshot=14053617664
		Total committed heap usage (bytes)=1435500544
		Peak Map Physical memory (bytes)=546902016
		Peak Map Virtual memory (bytes)=3509243904
		Peak Reduce Physical memory (bytes)=302542848
		Peak Reduce Virtual memory (bytes)=3526893568
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 14:02:09.327" starttime="20201223 14:02:09.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 14:02:09.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 14:02:09.328" starttime="20201223 14:02:09.327"></status>
</kw>
<status status="PASS" endtime="20201223 14:02:09.328" starttime="20201223 14:01:38.109"></status>
</kw>
<msg timestamp="20201223 14:02:09.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 14:02:09.328" starttime="20201223 14:01:38.108"></status>
</kw>
<msg timestamp="20201223 14:02:09.329" level="INFO">${output} = 2020-12-23 14:01:40 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-23 14:01:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.10:10200
2...</msg>
<status status="PASS" endtime="20201223 14:02:09.329" starttime="20201223 14:01:38.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 14:02:09.330" starttime="20201223 14:02:09.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 14:02:09.330" starttime="20201223 14:02:09.330"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 14:02:09.330" critical="yes" starttime="20201223 14:01:38.072"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 14:02:09.332" starttime="20201223 14:01:05.912"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:59:36.008" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:59:36.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:59:36.014" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:59:36.014" starttime="20201223 13:59:36.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:59:36.015" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:59:36.015" starttime="20201223 13:59:36.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:59:36.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:59:36.015" starttime="20201223 13:59:36.015"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:36.016" starttime="20201223 13:59:36.003"></status>
</kw>
<msg timestamp="20201223 13:59:36.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:59:36.016" starttime="20201223 13:59:36.003"></status>
</kw>
<msg timestamp="20201223 13:59:36.016" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:59:36.016" starttime="20201223 13:59:36.003"></status>
</kw>
<msg timestamp="20201223 13:59:36.016" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:59:36.016" starttime="20201223 13:59:36.002"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:59:36.021" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:59:36.021" starttime="20201223 13:59:36.021"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:59:36.022" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:59:36.022" starttime="20201223 13:59:36.021"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:36.022" starttime="20201223 13:59:36.019"></status>
</kw>
<msg timestamp="20201223 13:59:36.022" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:59:36.022" starttime="20201223 13:59:36.019"></status>
</kw>
<status status="PASS" endtime="20201223 13:59:36.022" starttime="20201223 13:59:36.018"></status>
</kw>
<msg timestamp="20201223 13:59:36.022" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:59:36.022" starttime="20201223 13:59:36.017"></status>
</kw>
<msg timestamp="20201223 13:59:36.023" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:59:36.023" starttime="20201223 13:59:36.017"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:59:36.026" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 14:00:13.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 14:00:13.235" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:59:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:59:38 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 14:00:13.235" starttime="20201223 13:59:36.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 14:00:13.237" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:59:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:59:38 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:59:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:59:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:59:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-92E7D15F2D55-&gt;2c9a5cbb-ecd8-44be-b9bc-38e1f8f53384
2020-12-23 13:59:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 13:59:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-23 13:59:39 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.10:10200
2020-12-23 13:59:40 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608731980162, maxDate=1609336780162, sequenceNumber=1, masterKeyId=2))
2020-12-23 13:59:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d4 e0 97 ff e8 2e 38 d4 e8 c9 9f eb 2e 40 01 48 01 5a 0d 32 30 34 30 31 38 33 37 33 32 33 35 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-23 13:59:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608731980162, maxDate=1609336780162, sequenceNumber=1, masterKeyId=2)
2020-12-23 13:59:40 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 13:59:40 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 13:59:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608731828432_0001
2020-12-23 13:59:41 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608731980162, maxDate=1609336780162, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d4 e0 97 ff e8 2e 38 d4 e8 c9 9f eb 2e 40 01 48 01 5a 0d 32 30 34 30 31 38 33 37 33 32 33 35 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-23 13:59:41 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 13:59:41 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 13:59:41 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-23 13:59:42 INFO  YarnClientImpl:329 - Submitted application application_1608731828432_0001
2020-12-23 13:59:42 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608731828432_0001/
2020-12-23 13:59:42 INFO  Job:1619 - Running job: job_1608731828432_0001
2020-12-23 13:59:54 INFO  Job:1640 - Job job_1608731828432_0001 running in uber mode : false
2020-12-23 13:59:54 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 14:00:04 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 14:00:06 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 14:00:07 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 14:00:11 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 14:00:12 INFO  Job:1658 - Job job_1608731828432_0001 completed successfully
2020-12-23 14:00:12 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065993
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46972
		Total time spent by all reduces in occupied slots (ms)=8152
		Total time spent by all map tasks (ms)=23486
		Total time spent by all reduce tasks (ms)=4076
		Total vcore-milliseconds taken by all map tasks=23486
		Total vcore-milliseconds taken by all reduce tasks=4076
		Total megabyte-milliseconds taken by all map tasks=48099328
		Total megabyte-milliseconds taken by all reduce tasks=8347648
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1233
		CPU time spent (ms)=7540
		Physical memory (bytes) snapshot=1467650048
		Virtual memory (bytes) snapshot=14052122624
		Total committed heap usage (bytes)=1264058368
		Peak Map Physical memory (bytes)=394280960
		Peak Map Virtual memory (bytes)=3511214080
		Peak Reduce Physical memory (bytes)=305893376
		Peak Reduce Virtual memory (bytes)=3525615616
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.257 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 14:00:13.237" starttime="20201223 14:00:13.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 14:00:13.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 14:00:13.238" starttime="20201223 14:00:13.237"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:13.238" starttime="20201223 13:59:36.024"></status>
</kw>
<msg timestamp="20201223 14:00:13.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 14:00:13.238" starttime="20201223 13:59:36.023"></status>
</kw>
<msg timestamp="20201223 14:00:13.239" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:59:38 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:59:38 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 14:00:13.239" starttime="20201223 13:59:36.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 14:00:13.239" starttime="20201223 14:00:13.239"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 14:00:13.240" critical="yes" starttime="20201223 13:59:36.002"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 14:00:13.245" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 14:00:13.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 14:00:13.251" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:00:13.251" starttime="20201223 14:00:13.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 14:00:13.252" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:00:13.252" starttime="20201223 14:00:13.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 14:00:13.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 14:00:13.253" starttime="20201223 14:00:13.252"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:13.253" starttime="20201223 14:00:13.243"></status>
</kw>
<msg timestamp="20201223 14:00:13.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 14:00:13.253" starttime="20201223 14:00:13.242"></status>
</kw>
<msg timestamp="20201223 14:00:13.253" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:00:13.253" starttime="20201223 14:00:13.242"></status>
</kw>
<msg timestamp="20201223 14:00:13.254" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 14:00:13.254" starttime="20201223 14:00:13.241"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 14:00:13.254" level="INFO">${random} = 54</msg>
<status status="PASS" endtime="20201223 14:00:13.254" starttime="20201223 14:00:13.254"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 14:00:13.258" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 14:00:13.258" starttime="20201223 14:00:13.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:00:13.259" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 14:00:13.259" starttime="20201223 14:00:13.258"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:13.259" starttime="20201223 14:00:13.257"></status>
</kw>
<msg timestamp="20201223 14:00:13.259" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 14:00:13.259" starttime="20201223 14:00:13.257"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:13.260" starttime="20201223 14:00:13.256"></status>
</kw>
<msg timestamp="20201223 14:00:13.260" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 14:00:13.260" starttime="20201223 14:00:13.255"></status>
</kw>
<msg timestamp="20201223 14:00:13.260" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 14:00:13.260" starttime="20201223 14:00:13.254"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 14:00:13.263" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 14:00:13.263" starttime="20201223 14:00:13.263"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:00:13.264" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 14:00:13.264" starttime="20201223 14:00:13.263"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:13.264" starttime="20201223 14:00:13.262"></status>
</kw>
<msg timestamp="20201223 14:00:13.264" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 14:00:13.264" starttime="20201223 14:00:13.262"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:13.265" starttime="20201223 14:00:13.261"></status>
</kw>
<msg timestamp="20201223 14:00:13.265" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 14:00:13.265" starttime="20201223 14:00:13.261"></status>
</kw>
<msg timestamp="20201223 14:00:13.265" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 14:00:13.265" starttime="20201223 14:00:13.260"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 14:00:13.268" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 14:00:13.268" starttime="20201223 14:00:13.268"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 14:00:13.269" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 14:00:13.269" starttime="20201223 14:00:13.268"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:13.269" starttime="20201223 14:00:13.267"></status>
</kw>
<msg timestamp="20201223 14:00:13.269" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 14:00:13.269" starttime="20201223 14:00:13.267"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:13.269" starttime="20201223 14:00:13.266"></status>
</kw>
<msg timestamp="20201223 14:00:13.270" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-54.txt</msg>
<status status="PASS" endtime="20201223 14:00:13.270" starttime="20201223 14:00:13.266"></status>
</kw>
<msg timestamp="20201223 14:00:13.270" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-54.txt</msg>
<status status="PASS" endtime="20201223 14:00:13.270" starttime="20201223 14:00:13.265"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 14:00:13.273" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-54.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 14:00:46.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 14:00:46.391" level="INFO">${output} = 2020-12-23 14:00:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-23 14:00:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.10:10200
2...</msg>
<status status="PASS" endtime="20201223 14:00:46.391" starttime="20201223 14:00:13.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 14:00:46.393" level="INFO">2020-12-23 14:00:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-23 14:00:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.10:10200
2020-12-23 14:00:15 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608732015741, maxDate=1609336815741, sequenceNumber=2, masterKeyId=2))
2020-12-23 14:00:15 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8e f8 99 ff e8 2e 38 8e 80 cc 9f eb 2e 40 02 48 01 5a 0d 32 30 34 30 31 38 33 37 33 32 33 35 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-23 14:00:15 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608732015741, maxDate=1609336815741, sequenceNumber=2, masterKeyId=2)
2020-12-23 14:00:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 14:00:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 14:00:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 14:00:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 14:00:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 14:00:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-163EB3A84F45-&gt;2c9a5cbb-ecd8-44be-b9bc-38e1f8f53384
2020-12-23 14:00:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 14:00:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 14:00:17 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 14:00:17 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608731828432_0002
2020-12-23 14:00:17 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608732015741, maxDate=1609336815741, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.12:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8e f8 99 ff e8 2e 38 8e 80 cc 9f eb 2e 40 02 48 01 5a 0d 32 30 34 30 31 38 33 37 33 32 33 35 37 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-23 14:00:18 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 14:00:18 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 14:00:18 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-23 14:00:19 INFO  YarnClientImpl:329 - Submitted application application_1608731828432_0002
2020-12-23 14:00:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608731828432_0002/
2020-12-23 14:00:19 INFO  Job:1619 - Running job: job_1608731828432_0002
2020-12-23 14:00:27 INFO  Job:1640 - Job job_1608731828432_0002 running in uber mode : false
2020-12-23 14:00:27 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 14:00:38 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 14:00:39 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 14:00:40 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 14:00:44 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 14:00:45 INFO  Job:1658 - Job job_1608731828432_0002 completed successfully
2020-12-23 14:00:46 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128515
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47286
		Total time spent by all reduces in occupied slots (ms)=7644
		Total time spent by all map tasks (ms)=23643
		Total time spent by all reduce tasks (ms)=3822
		Total vcore-milliseconds taken by all map tasks=23643
		Total vcore-milliseconds taken by all reduce tasks=3822
		Total megabyte-milliseconds taken by all map tasks=48420864
		Total megabyte-milliseconds taken by all reduce tasks=7827456
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1118
		CPU time spent (ms)=7500
		Physical memory (bytes) snapshot=1450061824
		Virtual memory (bytes) snapshot=14030557184
		Total committed heap usage (bytes)=1246756864
		Peak Map Physical memory (bytes)=408596480
		Peak Map Virtual memory (bytes)=3509514240
		Peak Reduce Physical memory (bytes)=278540288
		Peak Reduce Virtual memory (bytes)=3508150272
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 14:00:46.393" starttime="20201223 14:00:46.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 14:00:46.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 14:00:46.394" starttime="20201223 14:00:46.393"></status>
</kw>
<status status="PASS" endtime="20201223 14:00:46.394" starttime="20201223 14:00:13.271"></status>
</kw>
<msg timestamp="20201223 14:00:46.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 14:00:46.394" starttime="20201223 14:00:13.271"></status>
</kw>
<msg timestamp="20201223 14:00:46.395" level="INFO">${output} = 2020-12-23 14:00:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.11:8032
2020-12-23 14:00:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.10:10200
2...</msg>
<status status="PASS" endtime="20201223 14:00:46.395" starttime="20201223 14:00:13.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 14:00:46.395" starttime="20201223 14:00:46.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 14:00:46.396" starttime="20201223 14:00:46.396"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 14:00:46.396" critical="yes" starttime="20201223 14:00:13.240"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 14:00:46.398" starttime="20201223 13:59:35.946"></status>
</suite>
<status status="PASS" elapsedtime="193479" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
