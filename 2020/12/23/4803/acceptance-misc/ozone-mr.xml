<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201223 13:43:59.506" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:05.404" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:07.772" level="INFO">${rc} = 255</msg>
<msg timestamp="20201223 13:31:07.772" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:31:07.772" starttime="20201223 13:31:05.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:07.773" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:31:07.773" starttime="20201223 13:31:07.772"></status>
</kw>
<msg timestamp="20201223 13:31:07.773" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:31:07.773" starttime="20201223 13:31:05.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:07.779" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:09.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:09.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:31:09.877" starttime="20201223 13:31:07.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:09.879" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:31:09.879" starttime="20201223 13:31:09.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:09.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:09.880" starttime="20201223 13:31:09.880"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:09.881" starttime="20201223 13:31:07.775"></status>
</kw>
<msg timestamp="20201223 13:31:09.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:09.881" starttime="20201223 13:31:07.775"></status>
</kw>
<msg timestamp="20201223 13:31:09.882" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201223 13:31:09.882" starttime="20201223 13:31:07.775"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201223 13:31:09.882" starttime="20201223 13:31:09.882"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:09.882" starttime="20201223 13:31:07.774"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:09.882" starttime="20201223 13:31:07.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:09.887" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:11.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:11.934" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:31:11.934" starttime="20201223 13:31:09.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:11.935" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:31:11.935" starttime="20201223 13:31:11.934"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:11.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:11.936" starttime="20201223 13:31:11.935"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:11.936" starttime="20201223 13:31:09.884"></status>
</kw>
<msg timestamp="20201223 13:31:11.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:11.936" starttime="20201223 13:31:09.884"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:11.936" starttime="20201223 13:31:09.884"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:11.937" starttime="20201223 13:31:09.883"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:11.937" starttime="20201223 13:31:09.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201223 13:31:11.937" starttime="20201223 13:31:11.937"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:11.941" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:14.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:14.251" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:31:11.808Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 13:31:14.251" starttime="20201223 13:31:11.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:14.252" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:31:11.808Z",
  "modificationTime" : "2020-12-23T13:31:11.808Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201223 13:31:14.252" starttime="20201223 13:31:14.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:14.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:14.253" starttime="20201223 13:31:14.252"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:14.253" starttime="20201223 13:31:11.938"></status>
</kw>
<msg timestamp="20201223 13:31:14.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:14.253" starttime="20201223 13:31:11.938"></status>
</kw>
<msg timestamp="20201223 13:31:14.254" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:31:11.808Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 13:31:14.254" starttime="20201223 13:31:11.937"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201223 13:31:14.254" starttime="20201223 13:31:14.254"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:31:14.258" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:31:14.258" starttime="20201223 13:31:14.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:31:14.259" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:31:14.259" starttime="20201223 13:31:14.258"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:14.259" starttime="20201223 13:31:14.257"></status>
</kw>
<msg timestamp="20201223 13:31:14.259" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:31:14.259" starttime="20201223 13:31:14.257"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:14.259" starttime="20201223 13:31:14.256"></status>
</kw>
<msg timestamp="20201223 13:31:14.260" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 13:31:14.260" starttime="20201223 13:31:14.255"></status>
</kw>
<msg timestamp="20201223 13:31:14.260" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 13:31:14.260" starttime="20201223 13:31:14.254"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:14.263" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:16.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:16.482" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:31:16.482" starttime="20201223 13:31:14.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:16.484" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:31:16.484" starttime="20201223 13:31:16.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:16.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:16.484" starttime="20201223 13:31:16.484"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:16.485" starttime="20201223 13:31:14.261"></status>
</kw>
<msg timestamp="20201223 13:31:16.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:16.485" starttime="20201223 13:31:14.260"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:16.485" starttime="20201223 13:31:14.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:16.489" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:22.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:22.072" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:31:22.072" starttime="20201223 13:31:16.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:22.073" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:31:22.074" starttime="20201223 13:31:22.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:22.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:22.074" starttime="20201223 13:31:22.074"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:22.075" starttime="20201223 13:31:16.486"></status>
</kw>
<msg timestamp="20201223 13:31:22.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:22.075" starttime="20201223 13:31:16.486"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:22.075" starttime="20201223 13:31:16.485"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:22.079" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:26.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:26.074" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:31:26.074" starttime="20201223 13:31:22.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:26.075" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:31:26.075" starttime="20201223 13:31:26.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:26.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:26.076" starttime="20201223 13:31:26.075"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:26.076" starttime="20201223 13:31:22.076"></status>
</kw>
<msg timestamp="20201223 13:31:26.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:26.076" starttime="20201223 13:31:22.076"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:26.077" starttime="20201223 13:31:22.075"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:26.080" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:29.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:29.985" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:31:29.985" starttime="20201223 13:31:26.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:29.986" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:31:29.986" starttime="20201223 13:31:29.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:29.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:29.987" starttime="20201223 13:31:29.986"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:29.987" starttime="20201223 13:31:26.078"></status>
</kw>
<msg timestamp="20201223 13:31:29.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:29.987" starttime="20201223 13:31:26.077"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:29.987" starttime="20201223 13:31:26.077"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:31:29.988" critical="yes" starttime="20201223 13:31:05.398"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:31:29.993" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:31:29.993" starttime="20201223 13:31:29.992"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:31:29.994" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:31:29.994" starttime="20201223 13:31:29.993"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:29.994" starttime="20201223 13:31:29.992"></status>
</kw>
<msg timestamp="20201223 13:31:29.994" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:31:29.994" starttime="20201223 13:31:29.991"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:29.994" starttime="20201223 13:31:29.991"></status>
</kw>
<msg timestamp="20201223 13:31:29.994" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:31:29.994" starttime="20201223 13:31:29.990"></status>
</kw>
<msg timestamp="20201223 13:31:29.995" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:31:29.995" starttime="20201223 13:31:29.989"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:29.998" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:32.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:32.154" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:31:32.154" starttime="20201223 13:31:29.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:32.156" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:31:32.156" starttime="20201223 13:31:32.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:32.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:32.156" starttime="20201223 13:31:32.156"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:32.157" starttime="20201223 13:31:29.996"></status>
</kw>
<msg timestamp="20201223 13:31:32.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:32.157" starttime="20201223 13:31:29.995"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:32.157" starttime="20201223 13:31:29.995"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:32.161" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:34.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:34.248" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:31:34.249" starttime="20201223 13:31:32.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:34.250" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:31:34.250" starttime="20201223 13:31:34.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:34.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:34.251" starttime="20201223 13:31:34.250"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:34.251" starttime="20201223 13:31:32.158"></status>
</kw>
<msg timestamp="20201223 13:31:34.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:34.252" starttime="20201223 13:31:32.158"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:34.252" starttime="20201223 13:31:32.157"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:31:34.252" critical="yes" starttime="20201223 13:31:29.988"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201223 13:31:34.254" starttime="20201223 13:31:05.338"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:33:16.112" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:33:16.112" starttime="20201223 13:33:16.112"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:33:16.113" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:33:16.113" starttime="20201223 13:33:16.112"></status>
</kw>
<status status="PASS" endtime="20201223 13:33:16.113" starttime="20201223 13:33:16.111"></status>
</kw>
<msg timestamp="20201223 13:33:16.113" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:33:16.113" starttime="20201223 13:33:16.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:33:16.114" starttime="20201223 13:33:16.114"></status>
</kw>
<msg timestamp="20201223 13:33:16.114" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 13:33:16.114" starttime="20201223 13:33:16.113"></status>
</kw>
<status status="PASS" endtime="20201223 13:33:16.114" starttime="20201223 13:33:16.110"></status>
</kw>
<msg timestamp="20201223 13:33:16.115" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:33:16.115" starttime="20201223 13:33:16.109"></status>
</kw>
<msg timestamp="20201223 13:33:16.115" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:33:16.115" starttime="20201223 13:33:16.108"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:33:16.115" level="INFO">${random} = 99903</msg>
<status status="PASS" endtime="20201223 13:33:16.115" starttime="20201223 13:33:16.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:33:16.120" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-99903 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:33:19.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:33:19.433" level="INFO">${output} = 2020-12-23 13:33:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:33:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 ...</msg>
<status status="PASS" endtime="20201223 13:33:19.433" starttime="20201223 13:33:16.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:33:19.434" level="INFO">2020-12-23 13:33:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:33:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 13:33:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 13:33:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:33:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A29DBAB707AC-&gt;bb29a19a-0deb-49ba-9cac-e315f7e109b5
2020-12-23 13:33:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 13:33:19.434" starttime="20201223 13:33:19.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:33:19.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:33:19.435" starttime="20201223 13:33:19.435"></status>
</kw>
<status status="PASS" endtime="20201223 13:33:19.435" starttime="20201223 13:33:16.116"></status>
</kw>
<msg timestamp="20201223 13:33:19.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:33:19.436" starttime="20201223 13:33:16.116"></status>
</kw>
<msg timestamp="20201223 13:33:19.436" level="INFO">${result} = 2020-12-23 13:33:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:33:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 ...</msg>
<status status="PASS" endtime="20201223 13:33:19.436" starttime="20201223 13:33:16.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:33:19.441" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:33:21.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:33:21.189" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 13:31 ofs://om/volume1/bucket1/ozone-03020
-rw-...</msg>
<status status="PASS" endtime="20201223 13:33:21.189" starttime="20201223 13:33:19.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:33:21.190" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 13:31 ofs://om/volume1/bucket1/ozone-03020
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 13:33 ofs://om/volume1/bucket1/ozone-99903
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:31 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:32 ofs://om/volume1/bucket1/wordcount-61.txt</msg>
<status status="PASS" endtime="20201223 13:33:21.190" starttime="20201223 13:33:21.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:33:21.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:33:21.191" starttime="20201223 13:33:21.190"></status>
</kw>
<status status="PASS" endtime="20201223 13:33:21.191" starttime="20201223 13:33:19.438"></status>
</kw>
<msg timestamp="20201223 13:33:21.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:33:21.191" starttime="20201223 13:33:19.438"></status>
</kw>
<msg timestamp="20201223 13:33:21.192" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 13:31 ofs://om/volume1/bucket1/ozone-03020
-rw-...</msg>
<status status="PASS" endtime="20201223 13:33:21.192" starttime="20201223 13:33:19.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:33:21.192" starttime="20201223 13:33:21.192"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 13:33:21.192" critical="yes" starttime="20201223 13:33:16.108"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 13:33:21.194" starttime="20201223 13:33:16.055"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:31:39.300" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:31:39.300" starttime="20201223 13:31:39.299"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:31:39.300" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:31:39.300" starttime="20201223 13:31:39.300"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:39.301" starttime="20201223 13:31:39.299"></status>
</kw>
<msg timestamp="20201223 13:31:39.301" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:31:39.301" starttime="20201223 13:31:39.298"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:39.301" starttime="20201223 13:31:39.298"></status>
</kw>
<msg timestamp="20201223 13:31:39.301" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:31:39.301" starttime="20201223 13:31:39.297"></status>
</kw>
<msg timestamp="20201223 13:31:39.301" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:31:39.301" starttime="20201223 13:31:39.296"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:31:39.302" level="INFO">${random} = 03020</msg>
<status status="PASS" endtime="20201223 13:31:39.302" starttime="20201223 13:31:39.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:39.307" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-03020 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:43.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:43.087" level="INFO">${output} = 2020-12-23 13:31:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:31:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 ...</msg>
<status status="PASS" endtime="20201223 13:31:43.087" starttime="20201223 13:31:39.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:43.088" level="INFO">2020-12-23 13:31:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:31:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 13:31:41 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 13:31:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:31:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D3C1E5868E10-&gt;bb29a19a-0deb-49ba-9cac-e315f7e109b5
2020-12-23 13:31:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 13:31:43.088" starttime="20201223 13:31:43.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:43.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:43.089" starttime="20201223 13:31:43.088"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:43.089" starttime="20201223 13:31:39.303"></status>
</kw>
<msg timestamp="20201223 13:31:43.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:43.089" starttime="20201223 13:31:39.303"></status>
</kw>
<msg timestamp="20201223 13:31:43.090" level="INFO">${result} = 2020-12-23 13:31:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:31:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 ...</msg>
<status status="PASS" endtime="20201223 13:31:43.090" starttime="20201223 13:31:39.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:43.094" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:44.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:44.852" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 13:31 o3fs://bucket1.volume1.om/ozone-03020
dr...</msg>
<status status="PASS" endtime="20201223 13:31:44.853" starttime="20201223 13:31:43.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:44.854" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 13:31 o3fs://bucket1.volume1.om/ozone-03020
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:31 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:31:44.854" starttime="20201223 13:31:44.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:44.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:44.855" starttime="20201223 13:31:44.854"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:44.855" starttime="20201223 13:31:43.092"></status>
</kw>
<msg timestamp="20201223 13:31:44.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:44.855" starttime="20201223 13:31:43.090"></status>
</kw>
<msg timestamp="20201223 13:31:44.855" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 13:31 o3fs://bucket1.volume1.om/ozone-03020
dr...</msg>
<status status="PASS" endtime="20201223 13:31:44.855" starttime="20201223 13:31:43.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:31:44.856" starttime="20201223 13:31:44.855"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 13:31:44.856" critical="yes" starttime="20201223 13:31:39.295"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 13:31:44.858" starttime="20201223 13:31:39.240"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:33:25.970" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:33:25.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:33:25.976" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:33:25.976" starttime="20201223 13:33:25.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:33:25.977" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:33:25.977" starttime="20201223 13:33:25.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:33:25.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:33:25.978" starttime="20201223 13:33:25.978"></status>
</kw>
<status status="PASS" endtime="20201223 13:33:25.978" starttime="20201223 13:33:25.965"></status>
</kw>
<msg timestamp="20201223 13:33:25.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:33:25.978" starttime="20201223 13:33:25.965"></status>
</kw>
<msg timestamp="20201223 13:33:25.979" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:33:25.979" starttime="20201223 13:33:25.965"></status>
</kw>
<msg timestamp="20201223 13:33:25.979" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:33:25.979" starttime="20201223 13:33:25.964"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:33:25.984" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:33:25.984" starttime="20201223 13:33:25.983"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:33:25.984" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:33:25.985" starttime="20201223 13:33:25.984"></status>
</kw>
<status status="PASS" endtime="20201223 13:33:25.985" starttime="20201223 13:33:25.982"></status>
</kw>
<msg timestamp="20201223 13:33:25.985" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:33:25.985" starttime="20201223 13:33:25.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:33:25.986" starttime="20201223 13:33:25.985"></status>
</kw>
<msg timestamp="20201223 13:33:25.986" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 13:33:25.986" starttime="20201223 13:33:25.985"></status>
</kw>
<status status="PASS" endtime="20201223 13:33:25.986" starttime="20201223 13:33:25.981"></status>
</kw>
<msg timestamp="20201223 13:33:25.986" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:33:25.986" starttime="20201223 13:33:25.980"></status>
</kw>
<msg timestamp="20201223 13:33:25.987" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:33:25.987" starttime="20201223 13:33:25.979"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:33:25.990" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:34:03.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:34:03.639" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:33:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:33:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201223 13:34:03.639" starttime="20201223 13:33:25.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:34:03.640" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:33:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:33:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 13:33:28 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 13:33:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:33:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-23A704385485-&gt;bb29a19a-0deb-49ba-9cac-e315f7e109b5
2020-12-23 13:33:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 13:33:29 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-12-23 13:33:29 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 13:33:32 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-23 13:33:32 INFO  JobSubmitter:198 - number of splits:3
2020-12-23 13:33:32 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608730226029_0003
2020-12-23 13:33:32 INFO  YarnClientImpl:273 - Submitted application application_1608730226029_0003
2020-12-23 13:33:32 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608730226029_0003/
2020-12-23 13:33:32 INFO  Job:1339 - Running job: job_1608730226029_0003
2020-12-23 13:33:39 INFO  Job:1360 - Job job_1608730226029_0003 running in uber mode : false
2020-12-23 13:33:39 INFO  Job:1367 -  map 0% reduce 0%
2020-12-23 13:33:45 INFO  Job:1367 -  map 33% reduce 0%
2020-12-23 13:33:49 INFO  Job:1367 -  map 67% reduce 0%
2020-12-23 13:33:54 INFO  Job:1367 -  map 100% reduce 0%
2020-12-23 13:33:59 INFO  Job:1367 -  map 100% reduce 100%
2020-12-23 13:34:02 INFO  Job:1378 - Job job_1608730226029_0003 completed successfully
2020-12-23 13:34:03 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610709
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39212
		Total time spent by all reduces in occupied slots (ms)=14876
		Total time spent by all map tasks (ms)=9803
		Total time spent by all reduce tasks (ms)=3719
		Total vcore-milliseconds taken by all map tasks=9803
		Total vcore-milliseconds taken by all reduce tasks=3719
		Total megabyte-milliseconds taken by all map tasks=40153088
		Total megabyte-milliseconds taken by all reduce tasks=15233024
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=574
		CPU time spent (ms)=6460
		Physical memory (bytes) snapshot=1140019200
		Virtual memory (bytes) snapshot=15763742720
		Total committed heap usage (bytes)=1052770304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.979 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 13:34:03.640" starttime="20201223 13:34:03.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:34:03.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:34:03.641" starttime="20201223 13:34:03.640"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.641" starttime="20201223 13:33:25.988"></status>
</kw>
<msg timestamp="20201223 13:34:03.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:34:03.641" starttime="20201223 13:33:25.987"></status>
</kw>
<msg timestamp="20201223 13:34:03.642" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:33:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:33:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201223 13:34:03.642" starttime="20201223 13:33:25.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:34:03.642" starttime="20201223 13:34:03.642"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:34:03.643" critical="yes" starttime="20201223 13:33:25.964"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:34:03.647" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:34:03.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:34:03.653" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:34:03.653" starttime="20201223 13:34:03.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:34:03.654" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:34:03.654" starttime="20201223 13:34:03.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:34:03.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:34:03.655" starttime="20201223 13:34:03.654"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.655" starttime="20201223 13:34:03.645"></status>
</kw>
<msg timestamp="20201223 13:34:03.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:34:03.655" starttime="20201223 13:34:03.645"></status>
</kw>
<msg timestamp="20201223 13:34:03.655" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:34:03.655" starttime="20201223 13:34:03.644"></status>
</kw>
<msg timestamp="20201223 13:34:03.656" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:34:03.656" starttime="20201223 13:34:03.644"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:34:03.656" level="INFO">${random} = 77</msg>
<status status="PASS" endtime="20201223 13:34:03.656" starttime="20201223 13:34:03.656"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:34:03.660" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:34:03.660" starttime="20201223 13:34:03.660"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:34:03.661" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:34:03.661" starttime="20201223 13:34:03.661"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.661" starttime="20201223 13:34:03.659"></status>
</kw>
<msg timestamp="20201223 13:34:03.661" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:34:03.661" starttime="20201223 13:34:03.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:34:03.662" starttime="20201223 13:34:03.662"></status>
</kw>
<msg timestamp="20201223 13:34:03.662" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 13:34:03.662" starttime="20201223 13:34:03.662"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.663" starttime="20201223 13:34:03.658"></status>
</kw>
<msg timestamp="20201223 13:34:03.663" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:34:03.663" starttime="20201223 13:34:03.657"></status>
</kw>
<msg timestamp="20201223 13:34:03.663" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:34:03.663" starttime="20201223 13:34:03.657"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:34:03.666" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:34:03.667" starttime="20201223 13:34:03.666"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:34:03.667" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:34:03.667" starttime="20201223 13:34:03.667"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.667" starttime="20201223 13:34:03.666"></status>
</kw>
<msg timestamp="20201223 13:34:03.668" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:34:03.668" starttime="20201223 13:34:03.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:34:03.669" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201223 13:34:03.669" starttime="20201223 13:34:03.669"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:34:03.670" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201223 13:34:03.670" starttime="20201223 13:34:03.669"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.671" starttime="20201223 13:34:03.668"></status>
</kw>
<msg timestamp="20201223 13:34:03.671" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201223 13:34:03.671" starttime="20201223 13:34:03.668"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.671" starttime="20201223 13:34:03.665"></status>
</kw>
<msg timestamp="20201223 13:34:03.671" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 13:34:03.671" starttime="20201223 13:34:03.664"></status>
</kw>
<msg timestamp="20201223 13:34:03.671" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 13:34:03.671" starttime="20201223 13:34:03.663"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:34:03.675" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:34:03.675" starttime="20201223 13:34:03.675"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:34:03.676" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:34:03.676" starttime="20201223 13:34:03.676"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.676" starttime="20201223 13:34:03.675"></status>
</kw>
<msg timestamp="20201223 13:34:03.676" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:34:03.676" starttime="20201223 13:34:03.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:34:03.678" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201223 13:34:03.678" starttime="20201223 13:34:03.677"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:34:03.679" level="INFO">${result} = /wordcount-77.txt</msg>
<status status="PASS" endtime="20201223 13:34:03.679" starttime="20201223 13:34:03.678"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.679" starttime="20201223 13:34:03.677"></status>
</kw>
<msg timestamp="20201223 13:34:03.679" level="INFO">${path_with_leading} = /wordcount-77.txt</msg>
<status status="PASS" endtime="20201223 13:34:03.679" starttime="20201223 13:34:03.677"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:03.679" starttime="20201223 13:34:03.673"></status>
</kw>
<msg timestamp="20201223 13:34:03.679" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-77.txt</msg>
<status status="PASS" endtime="20201223 13:34:03.679" starttime="20201223 13:34:03.673"></status>
</kw>
<msg timestamp="20201223 13:34:03.680" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-77.txt</msg>
<status status="PASS" endtime="20201223 13:34:03.680" starttime="20201223 13:34:03.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:34:03.683" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-77.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:34:36.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:34:36.275" level="INFO">${output} = 2020-12-23 13:34:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-12-23 13:34:05 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201223 13:34:36.275" starttime="20201223 13:34:03.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:34:36.276" level="INFO">2020-12-23 13:34:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-12-23 13:34:05 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 13:34:05 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:34:05 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 13:34:05 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 13:34:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:34:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C7865B433075-&gt;bb29a19a-0deb-49ba-9cac-e315f7e109b5
2020-12-23 13:34:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 13:34:06 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-23 13:34:07 INFO  JobSubmitter:198 - number of splits:3
2020-12-23 13:34:07 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608730226029_0004
2020-12-23 13:34:07 INFO  YarnClientImpl:273 - Submitted application application_1608730226029_0004
2020-12-23 13:34:07 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608730226029_0004/
2020-12-23 13:34:07 INFO  Job:1339 - Running job: job_1608730226029_0004
2020-12-23 13:34:15 INFO  Job:1360 - Job job_1608730226029_0004 running in uber mode : false
2020-12-23 13:34:15 INFO  Job:1367 -  map 0% reduce 0%
2020-12-23 13:34:20 INFO  Job:1367 -  map 33% reduce 0%
2020-12-23 13:34:25 INFO  Job:1367 -  map 67% reduce 0%
2020-12-23 13:34:30 INFO  Job:1367 -  map 100% reduce 0%
2020-12-23 13:34:34 INFO  Job:1367 -  map 100% reduce 100%
2020-12-23 13:34:35 INFO  Job:1378 - Job job_1608730226029_0004 completed successfully
2020-12-23 13:34:35 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673471
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39372
		Total time spent by all reduces in occupied slots (ms)=14412
		Total time spent by all map tasks (ms)=9843
		Total time spent by all reduce tasks (ms)=3603
		Total vcore-milliseconds taken by all map tasks=9843
		Total vcore-milliseconds taken by all reduce tasks=3603
		Total megabyte-milliseconds taken by all map tasks=40316928
		Total megabyte-milliseconds taken by all reduce tasks=14757888
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=579
		CPU time spent (ms)=6910
		Physical memory (bytes) snapshot=1177534464
		Virtual memory (bytes) snapshot=15790669824
		Total committed heap usage (bytes)=1048576000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 13:34:36.277" starttime="20201223 13:34:36.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:34:36.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:34:36.277" starttime="20201223 13:34:36.277"></status>
</kw>
<status status="PASS" endtime="20201223 13:34:36.278" starttime="20201223 13:34:03.681"></status>
</kw>
<msg timestamp="20201223 13:34:36.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:34:36.278" starttime="20201223 13:34:03.680"></status>
</kw>
<msg timestamp="20201223 13:34:36.278" level="INFO">${output} = 2020-12-23 13:34:05 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-12-23 13:34:05 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201223 13:34:36.278" starttime="20201223 13:34:03.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 13:34:36.279" starttime="20201223 13:34:36.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:34:36.279" starttime="20201223 13:34:36.279"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:34:36.280" critical="yes" starttime="20201223 13:34:03.643"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 13:34:36.281" starttime="20201223 13:33:25.912"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:49.624" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:31:49.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:31:49.629" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:31:49.629" starttime="20201223 13:31:49.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:31:49.630" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:31:49.631" starttime="20201223 13:31:49.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:31:49.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:31:49.631" starttime="20201223 13:31:49.631"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:49.631" starttime="20201223 13:31:49.620"></status>
</kw>
<msg timestamp="20201223 13:31:49.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:31:49.632" starttime="20201223 13:31:49.620"></status>
</kw>
<msg timestamp="20201223 13:31:49.632" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:31:49.632" starttime="20201223 13:31:49.619"></status>
</kw>
<msg timestamp="20201223 13:31:49.632" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:31:49.632" starttime="20201223 13:31:49.619"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:31:49.637" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:31:49.637" starttime="20201223 13:31:49.636"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:31:49.637" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:31:49.637" starttime="20201223 13:31:49.637"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:49.638" starttime="20201223 13:31:49.635"></status>
</kw>
<msg timestamp="20201223 13:31:49.638" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:31:49.638" starttime="20201223 13:31:49.634"></status>
</kw>
<status status="PASS" endtime="20201223 13:31:49.638" starttime="20201223 13:31:49.634"></status>
</kw>
<msg timestamp="20201223 13:31:49.638" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:31:49.638" starttime="20201223 13:31:49.633"></status>
</kw>
<msg timestamp="20201223 13:31:49.638" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:31:49.638" starttime="20201223 13:31:49.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:31:49.642" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:32:31.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:32:31.527" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:31:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:31:51 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201223 13:32:31.528" starttime="20201223 13:31:49.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:32:31.529" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:31:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:31:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 13:31:51 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 13:31:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:31:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FB0059835C00-&gt;bb29a19a-0deb-49ba-9cac-e315f7e109b5
2020-12-23 13:31:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 13:31:55 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-12-23 13:31:55 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-23 13:31:55 INFO  JobSubmitter:198 - number of splits:3
2020-12-23 13:31:55 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608730226029_0001
2020-12-23 13:31:56 INFO  YarnClientImpl:273 - Submitted application application_1608730226029_0001
2020-12-23 13:31:56 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608730226029_0001/
2020-12-23 13:31:56 INFO  Job:1339 - Running job: job_1608730226029_0001
2020-12-23 13:32:05 INFO  Job:1360 - Job job_1608730226029_0001 running in uber mode : false
2020-12-23 13:32:05 INFO  Job:1367 -  map 0% reduce 0%
2020-12-23 13:32:12 INFO  Job:1367 -  map 33% reduce 0%
2020-12-23 13:32:18 INFO  Job:1367 -  map 67% reduce 0%
2020-12-23 13:32:23 INFO  Job:1367 -  map 100% reduce 0%
2020-12-23 13:32:27 INFO  Job:1367 -  map 100% reduce 100%
2020-12-23 13:32:30 INFO  Job:1378 - Job job_1608730226029_0001 completed successfully
2020-12-23 13:32:31 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42164
		Total time spent by all reduces in occupied slots (ms)=15532
		Total time spent by all map tasks (ms)=10541
		Total time spent by all reduce tasks (ms)=3883
		Total vcore-milliseconds taken by all map tasks=10541
		Total vcore-milliseconds taken by all reduce tasks=3883
		Total megabyte-milliseconds taken by all map tasks=43175936
		Total megabyte-milliseconds taken by all reduce tasks=15904768
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1306
		CPU time spent (ms)=7510
		Physical memory (bytes) snapshot=1790316544
		Virtual memory (bytes) snapshot=15767994368
		Total committed heap usage (bytes)=1641021440
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.827 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 13:32:31.529" starttime="20201223 13:32:31.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:32:31.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:32:31.530" starttime="20201223 13:32:31.529"></status>
</kw>
<status status="PASS" endtime="20201223 13:32:31.530" starttime="20201223 13:31:49.639"></status>
</kw>
<msg timestamp="20201223 13:32:31.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:32:31.530" starttime="20201223 13:31:49.639"></status>
</kw>
<msg timestamp="20201223 13:32:31.531" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:31:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:31:51 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201223 13:32:31.531" starttime="20201223 13:31:49.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:32:31.531" starttime="20201223 13:32:31.531"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:32:31.532" critical="yes" starttime="20201223 13:31:49.618"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:32:31.537" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:32:31.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:32:31.543" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:32:31.543" starttime="20201223 13:32:31.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:32:31.544" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:32:31.544" starttime="20201223 13:32:31.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:32:31.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:32:31.545" starttime="20201223 13:32:31.544"></status>
</kw>
<status status="PASS" endtime="20201223 13:32:31.545" starttime="20201223 13:32:31.534"></status>
</kw>
<msg timestamp="20201223 13:32:31.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:32:31.545" starttime="20201223 13:32:31.534"></status>
</kw>
<msg timestamp="20201223 13:32:31.545" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:32:31.545" starttime="20201223 13:32:31.534"></status>
</kw>
<msg timestamp="20201223 13:32:31.546" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 13:32:31.546" starttime="20201223 13:32:31.533"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:32:31.546" level="INFO">${random} = 61</msg>
<status status="PASS" endtime="20201223 13:32:31.546" starttime="20201223 13:32:31.546"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:32:31.550" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:32:31.550" starttime="20201223 13:32:31.550"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:32:31.551" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:32:31.551" starttime="20201223 13:32:31.550"></status>
</kw>
<status status="PASS" endtime="20201223 13:32:31.551" starttime="20201223 13:32:31.549"></status>
</kw>
<msg timestamp="20201223 13:32:31.551" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:32:31.551" starttime="20201223 13:32:31.548"></status>
</kw>
<status status="PASS" endtime="20201223 13:32:31.552" starttime="20201223 13:32:31.548"></status>
</kw>
<msg timestamp="20201223 13:32:31.552" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:32:31.552" starttime="20201223 13:32:31.547"></status>
</kw>
<msg timestamp="20201223 13:32:31.552" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:32:31.552" starttime="20201223 13:32:31.546"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:32:31.555" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:32:31.555" starttime="20201223 13:32:31.555"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:32:31.556" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:32:31.556" starttime="20201223 13:32:31.555"></status>
</kw>
<status status="PASS" endtime="20201223 13:32:31.556" starttime="20201223 13:32:31.554"></status>
</kw>
<msg timestamp="20201223 13:32:31.556" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:32:31.556" starttime="20201223 13:32:31.554"></status>
</kw>
<status status="PASS" endtime="20201223 13:32:31.556" starttime="20201223 13:32:31.553"></status>
</kw>
<msg timestamp="20201223 13:32:31.557" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 13:32:31.557" starttime="20201223 13:32:31.553"></status>
</kw>
<msg timestamp="20201223 13:32:31.557" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 13:32:31.557" starttime="20201223 13:32:31.552"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:32:31.560" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:32:31.560" starttime="20201223 13:32:31.560"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:32:31.561" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:32:31.561" starttime="20201223 13:32:31.560"></status>
</kw>
<status status="PASS" endtime="20201223 13:32:31.561" starttime="20201223 13:32:31.559"></status>
</kw>
<msg timestamp="20201223 13:32:31.561" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:32:31.561" starttime="20201223 13:32:31.559"></status>
</kw>
<status status="PASS" endtime="20201223 13:32:31.561" starttime="20201223 13:32:31.558"></status>
</kw>
<msg timestamp="20201223 13:32:31.562" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201223 13:32:31.562" starttime="20201223 13:32:31.558"></status>
</kw>
<msg timestamp="20201223 13:32:31.562" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-61.txt</msg>
<status status="PASS" endtime="20201223 13:32:31.562" starttime="20201223 13:32:31.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:32:31.565" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-61.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:33:11.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:33:11.257" level="INFO">${output} = 2020-12-23 13:32:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-12-23 13:32:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201223 13:33:11.257" starttime="20201223 13:32:31.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:33:11.259" level="INFO">2020-12-23 13:32:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-12-23 13:32:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 13:32:33 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:32:33 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 13:32:33 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 13:32:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:32:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B8C8DD1B6F44-&gt;bb29a19a-0deb-49ba-9cac-e315f7e109b5
2020-12-23 13:32:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 13:32:34 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-23 13:32:34 INFO  JobSubmitter:198 - number of splits:3
2020-12-23 13:32:35 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608730226029_0002
2020-12-23 13:32:35 INFO  YarnClientImpl:273 - Submitted application application_1608730226029_0002
2020-12-23 13:32:35 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608730226029_0002/
2020-12-23 13:32:35 INFO  Job:1339 - Running job: job_1608730226029_0002
2020-12-23 13:32:43 INFO  Job:1360 - Job job_1608730226029_0002 running in uber mode : false
2020-12-23 13:32:43 INFO  Job:1367 -  map 0% reduce 0%
2020-12-23 13:32:50 INFO  Job:1367 -  map 33% reduce 0%
2020-12-23 13:32:55 INFO  Job:1367 -  map 67% reduce 0%
2020-12-23 13:33:00 INFO  Job:1367 -  map 100% reduce 0%
2020-12-23 13:33:06 INFO  Job:1367 -  map 100% reduce 100%
2020-12-23 13:33:10 INFO  Job:1378 - Job job_1608730226029_0002 completed successfully
2020-12-23 13:33:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673555
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39708
		Total time spent by all reduces in occupied slots (ms)=24568
		Total time spent by all map tasks (ms)=9927
		Total time spent by all reduce tasks (ms)=6142
		Total vcore-milliseconds taken by all map tasks=9927
		Total vcore-milliseconds taken by all reduce tasks=6142
		Total megabyte-milliseconds taken by all map tasks=40660992
		Total megabyte-milliseconds taken by all reduce tasks=25157632
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=583
		CPU time spent (ms)=6890
		Physical memory (bytes) snapshot=1165594624
		Virtual memory (bytes) snapshot=15782682624
		Total committed heap usage (bytes)=1047003136
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 13:33:11.259" starttime="20201223 13:33:11.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:33:11.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:33:11.260" starttime="20201223 13:33:11.259"></status>
</kw>
<status status="PASS" endtime="20201223 13:33:11.260" starttime="20201223 13:32:31.563"></status>
</kw>
<msg timestamp="20201223 13:33:11.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:33:11.260" starttime="20201223 13:32:31.563"></status>
</kw>
<msg timestamp="20201223 13:33:11.261" level="INFO">${output} = 2020-12-23 13:32:33 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.6:8032
2020-12-23 13:32:33 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201223 13:33:11.261" starttime="20201223 13:32:31.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 13:33:11.261" starttime="20201223 13:33:11.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:33:11.262" starttime="20201223 13:33:11.261"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:33:11.262" critical="yes" starttime="20201223 13:32:31.532"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 13:33:11.263" starttime="20201223 13:31:49.565"></status>
</suite>
<status status="PASS" elapsedtime="191740" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:35:45.569" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:35:47.774" level="INFO">${rc} = 255</msg>
<msg timestamp="20201223 13:35:47.774" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:35:47.774" starttime="20201223 13:35:45.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:35:47.775" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:35:47.775" starttime="20201223 13:35:47.774"></status>
</kw>
<msg timestamp="20201223 13:35:47.775" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:35:47.775" starttime="20201223 13:35:45.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:35:47.781" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:35:49.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:35:49.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:35:49.932" starttime="20201223 13:35:47.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:35:49.933" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:35:49.933" starttime="20201223 13:35:49.932"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:35:49.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:35:49.934" starttime="20201223 13:35:49.933"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:49.934" starttime="20201223 13:35:47.777"></status>
</kw>
<msg timestamp="20201223 13:35:49.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:35:49.934" starttime="20201223 13:35:47.777"></status>
</kw>
<msg timestamp="20201223 13:35:49.934" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201223 13:35:49.934" starttime="20201223 13:35:47.777"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201223 13:35:49.935" starttime="20201223 13:35:49.935"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:49.935" starttime="20201223 13:35:47.776"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:49.935" starttime="20201223 13:35:47.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:35:49.940" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:35:51.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:35:51.888" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:35:51.888" starttime="20201223 13:35:49.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:35:51.889" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:35:51.889" starttime="20201223 13:35:51.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:35:51.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:35:51.890" starttime="20201223 13:35:51.890"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:51.890" starttime="20201223 13:35:49.937"></status>
</kw>
<msg timestamp="20201223 13:35:51.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:35:51.890" starttime="20201223 13:35:49.937"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:51.891" starttime="20201223 13:35:49.936"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:51.891" starttime="20201223 13:35:49.936"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:51.891" starttime="20201223 13:35:49.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201223 13:35:51.891" starttime="20201223 13:35:51.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:35:51.895" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:35:54.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:35:54.012" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:35:51.854Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 13:35:54.012" starttime="20201223 13:35:51.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:35:54.013" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:35:51.854Z",
  "modificationTime" : "2020-12-23T13:35:51.854Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201223 13:35:54.013" starttime="20201223 13:35:54.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:35:54.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:35:54.014" starttime="20201223 13:35:54.013"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:54.014" starttime="20201223 13:35:51.893"></status>
</kw>
<msg timestamp="20201223 13:35:54.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:35:54.014" starttime="20201223 13:35:51.892"></status>
</kw>
<msg timestamp="20201223 13:35:54.015" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:35:51.854Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 13:35:54.015" starttime="20201223 13:35:51.892"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201223 13:35:54.015" starttime="20201223 13:35:54.015"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:35:54.022" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:35:54.022" starttime="20201223 13:35:54.022"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:35:54.023" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:35:54.023" starttime="20201223 13:35:54.022"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:54.023" starttime="20201223 13:35:54.021"></status>
</kw>
<msg timestamp="20201223 13:35:54.023" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:35:54.023" starttime="20201223 13:35:54.018"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:54.023" starttime="20201223 13:35:54.017"></status>
</kw>
<msg timestamp="20201223 13:35:54.024" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 13:35:54.024" starttime="20201223 13:35:54.016"></status>
</kw>
<msg timestamp="20201223 13:35:54.024" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 13:35:54.024" starttime="20201223 13:35:54.015"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:35:54.027" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:35:56.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:35:56.288" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:35:56.288" starttime="20201223 13:35:54.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:35:56.290" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:35:56.290" starttime="20201223 13:35:56.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:35:56.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:35:56.290" starttime="20201223 13:35:56.290"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:56.291" starttime="20201223 13:35:54.025"></status>
</kw>
<msg timestamp="20201223 13:35:56.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:35:56.291" starttime="20201223 13:35:54.024"></status>
</kw>
<status status="PASS" endtime="20201223 13:35:56.291" starttime="20201223 13:35:54.024"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:35:56.295" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:36:01.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:36:01.770" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:36:01.770" starttime="20201223 13:35:56.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:36:01.771" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:36:01.771" starttime="20201223 13:36:01.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:36:01.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:36:01.772" starttime="20201223 13:36:01.771"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:01.772" starttime="20201223 13:35:56.292"></status>
</kw>
<msg timestamp="20201223 13:36:01.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:36:01.772" starttime="20201223 13:35:56.292"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:01.772" starttime="20201223 13:35:56.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:36:01.776" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:36:05.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:36:05.707" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:36:05.707" starttime="20201223 13:36:01.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:36:05.709" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:36:05.709" starttime="20201223 13:36:05.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:36:05.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:36:05.709" starttime="20201223 13:36:05.709"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:05.710" starttime="20201223 13:36:01.773"></status>
</kw>
<msg timestamp="20201223 13:36:05.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:36:05.710" starttime="20201223 13:36:01.773"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:05.710" starttime="20201223 13:36:01.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:36:05.714" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:36:09.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:36:09.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:36:09.784" starttime="20201223 13:36:05.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:36:09.785" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:36:09.785" starttime="20201223 13:36:09.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:36:09.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:36:09.786" starttime="20201223 13:36:09.786"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:09.786" starttime="20201223 13:36:05.711"></status>
</kw>
<msg timestamp="20201223 13:36:09.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:36:09.787" starttime="20201223 13:36:05.711"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:09.787" starttime="20201223 13:36:05.710"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:36:09.787" critical="yes" starttime="20201223 13:35:45.563"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:36:09.792" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:36:09.792" starttime="20201223 13:36:09.792"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:36:09.793" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:36:09.793" starttime="20201223 13:36:09.793"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:09.793" starttime="20201223 13:36:09.791"></status>
</kw>
<msg timestamp="20201223 13:36:09.793" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:36:09.793" starttime="20201223 13:36:09.791"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:09.794" starttime="20201223 13:36:09.790"></status>
</kw>
<msg timestamp="20201223 13:36:09.794" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:36:09.794" starttime="20201223 13:36:09.789"></status>
</kw>
<msg timestamp="20201223 13:36:09.794" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:36:09.794" starttime="20201223 13:36:09.789"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:36:09.798" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:36:11.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:36:11.937" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:36:11.937" starttime="20201223 13:36:09.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:36:11.938" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:36:11.938" starttime="20201223 13:36:11.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:36:11.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:36:11.939" starttime="20201223 13:36:11.938"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:11.939" starttime="20201223 13:36:09.795"></status>
</kw>
<msg timestamp="20201223 13:36:11.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:36:11.939" starttime="20201223 13:36:09.795"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:11.940" starttime="20201223 13:36:09.794"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:36:11.943" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:36:14.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:36:14.220" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:36:14.221" starttime="20201223 13:36:11.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:36:14.222" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:36:14.222" starttime="20201223 13:36:14.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:36:14.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:36:14.223" starttime="20201223 13:36:14.222"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:14.223" starttime="20201223 13:36:11.941"></status>
</kw>
<msg timestamp="20201223 13:36:14.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:36:14.223" starttime="20201223 13:36:11.940"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:14.223" starttime="20201223 13:36:11.940"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:36:14.223" critical="yes" starttime="20201223 13:36:09.788"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201223 13:36:14.225" starttime="20201223 13:35:45.509"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:38:01.099" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:38:01.099" starttime="20201223 13:38:01.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:38:01.100" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:38:01.100" starttime="20201223 13:38:01.099"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:01.100" starttime="20201223 13:38:01.098"></status>
</kw>
<msg timestamp="20201223 13:38:01.100" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:38:01.100" starttime="20201223 13:38:01.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:38:01.101" starttime="20201223 13:38:01.101"></status>
</kw>
<msg timestamp="20201223 13:38:01.101" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 13:38:01.101" starttime="20201223 13:38:01.100"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:01.101" starttime="20201223 13:38:01.097"></status>
</kw>
<msg timestamp="20201223 13:38:01.101" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:38:01.102" starttime="20201223 13:38:01.096"></status>
</kw>
<msg timestamp="20201223 13:38:01.102" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:38:01.102" starttime="20201223 13:38:01.095"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:38:01.102" level="INFO">${random} = 83143</msg>
<status status="PASS" endtime="20201223 13:38:01.102" starttime="20201223 13:38:01.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:38:01.107" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-83143 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:38:04.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:38:04.784" level="INFO">${output} = 2020-12-23 13:38:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:38:04.784" starttime="20201223 13:38:01.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:38:04.785" level="INFO">2020-12-23 13:38:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 13:38:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:38:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:38:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:38:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:38:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-650B64DDF139-&gt;5c116a79-d751-42d8-808d-79bdd7558642
2020-12-23 13:38:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 13:38:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 13:38:04.785" starttime="20201223 13:38:04.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:38:04.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:38:04.786" starttime="20201223 13:38:04.785"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:04.786" starttime="20201223 13:38:01.103"></status>
</kw>
<msg timestamp="20201223 13:38:04.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:38:04.786" starttime="20201223 13:38:01.103"></status>
</kw>
<msg timestamp="20201223 13:38:04.787" level="INFO">${result} = 2020-12-23 13:38:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:02 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:38:04.787" starttime="20201223 13:38:01.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:38:04.792" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:38:06.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:38:06.775" level="INFO">${output} = 2020-12-23 13:38:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:38:06.775" starttime="20201223 13:38:04.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:38:06.776" level="INFO">2020-12-23 13:38:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:06 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:35 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-23 13:36 ofs://om/volume1/bucket1/ozone-73707
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-23 13:38 ofs://om/volume1/bucket1/ozone-83143
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:36 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:37 ofs://om/volume1/bucket1/wordcount-00.txt
2020-12-23 13:38:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 13:38:06.776" starttime="20201223 13:38:06.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:38:06.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:38:06.777" starttime="20201223 13:38:06.776"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:06.777" starttime="20201223 13:38:04.789"></status>
</kw>
<msg timestamp="20201223 13:38:06.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:38:06.777" starttime="20201223 13:38:04.789"></status>
</kw>
<msg timestamp="20201223 13:38:06.777" level="INFO">${result} = 2020-12-23 13:38:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:38:06.777" starttime="20201223 13:38:04.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:38:06.778" starttime="20201223 13:38:06.778"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 13:38:06.778" critical="yes" starttime="20201223 13:38:01.094"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 13:38:06.780" starttime="20201223 13:38:01.040"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:36:19.002" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:36:19.002" starttime="20201223 13:36:19.001"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:36:19.002" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:36:19.002" starttime="20201223 13:36:19.002"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:19.003" starttime="20201223 13:36:19.001"></status>
</kw>
<msg timestamp="20201223 13:36:19.003" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:36:19.003" starttime="20201223 13:36:19.000"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:19.003" starttime="20201223 13:36:19.000"></status>
</kw>
<msg timestamp="20201223 13:36:19.003" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:36:19.003" starttime="20201223 13:36:18.999"></status>
</kw>
<msg timestamp="20201223 13:36:19.003" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:36:19.003" starttime="20201223 13:36:18.998"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:36:19.004" level="INFO">${random} = 73707</msg>
<status status="PASS" endtime="20201223 13:36:19.004" starttime="20201223 13:36:19.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:36:19.009" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-73707 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:36:22.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:36:22.631" level="INFO">${output} = 2020-12-23 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:36:22.631" starttime="20201223 13:36:19.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:36:22.632" level="INFO">2020-12-23 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 13:36:21 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:36:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:36:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:36:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:36:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D0FFA374E6F3-&gt;5c116a79-d751-42d8-808d-79bdd7558642
2020-12-23 13:36:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 13:36:22 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 13:36:22.632" starttime="20201223 13:36:22.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:36:22.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:36:22.633" starttime="20201223 13:36:22.632"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:22.633" starttime="20201223 13:36:19.005"></status>
</kw>
<msg timestamp="20201223 13:36:22.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:36:22.633" starttime="20201223 13:36:19.005"></status>
</kw>
<msg timestamp="20201223 13:36:22.633" level="INFO">${result} = 2020-12-23 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:20 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:36:22.633" starttime="20201223 13:36:19.004"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:36:22.638" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:36:24.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:36:24.578" level="INFO">${output} = 2020-12-23 13:36:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:36:24.578" starttime="20201223 13:36:22.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:36:24.579" level="INFO">2020-12-23 13:36:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:24 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:35 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-23 13:36 o3fs://bucket1.volume1.om/ozone-73707
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:36 o3fs://bucket1.volume1.om/user
2020-12-23 13:36:24 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 13:36:24.579" starttime="20201223 13:36:24.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:36:24.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:36:24.580" starttime="20201223 13:36:24.579"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:24.580" starttime="20201223 13:36:22.636"></status>
</kw>
<msg timestamp="20201223 13:36:24.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:36:24.580" starttime="20201223 13:36:22.634"></status>
</kw>
<msg timestamp="20201223 13:36:24.580" level="INFO">${result} = 2020-12-23 13:36:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:23 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:24 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:36:24.580" starttime="20201223 13:36:22.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:36:24.581" starttime="20201223 13:36:24.581"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 13:36:24.581" critical="yes" starttime="20201223 13:36:18.997"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 13:36:24.582" starttime="20201223 13:36:18.944"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:38:11.551" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:38:11.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:38:11.558" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:38:11.558" starttime="20201223 13:38:11.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:38:11.559" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:38:11.559" starttime="20201223 13:38:11.558"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:38:11.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:38:11.560" starttime="20201223 13:38:11.559"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:11.560" starttime="20201223 13:38:11.547"></status>
</kw>
<msg timestamp="20201223 13:38:11.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:38:11.560" starttime="20201223 13:38:11.547"></status>
</kw>
<msg timestamp="20201223 13:38:11.560" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:38:11.560" starttime="20201223 13:38:11.546"></status>
</kw>
<msg timestamp="20201223 13:38:11.561" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:38:11.561" starttime="20201223 13:38:11.546"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:38:11.565" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:38:11.566" starttime="20201223 13:38:11.565"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:38:11.566" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:38:11.566" starttime="20201223 13:38:11.566"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:11.566" starttime="20201223 13:38:11.564"></status>
</kw>
<msg timestamp="20201223 13:38:11.566" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:38:11.567" starttime="20201223 13:38:11.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:38:11.567" starttime="20201223 13:38:11.567"></status>
</kw>
<msg timestamp="20201223 13:38:11.568" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 13:38:11.568" starttime="20201223 13:38:11.567"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:11.568" starttime="20201223 13:38:11.562"></status>
</kw>
<msg timestamp="20201223 13:38:11.568" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:38:11.568" starttime="20201223 13:38:11.562"></status>
</kw>
<msg timestamp="20201223 13:38:11.568" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:38:11.568" starttime="20201223 13:38:11.561"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:38:11.572" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:38:53.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:38:53.763" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:38:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38...</msg>
<status status="PASS" endtime="20201223 13:38:53.763" starttime="20201223 13:38:11.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:38:53.764" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:38:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:13 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 13:38:13 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:38:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:38:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:38:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:38:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A7C88D083F48-&gt;5c116a79-d751-42d8-808d-79bdd7558642
2020-12-23 13:38:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 13:38:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-12-23 13:38:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 13:38:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 13:38:17 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 13:38:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608730517981_0003
2020-12-23 13:38:18 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 13:38:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:18 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:18 INFO  Configuration:2752 - resource-types.xml not found
2020-12-23 13:38:18 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-23 13:38:18 INFO  YarnClientImpl:324 - Submitted application application_1608730517981_0003
2020-12-23 13:38:18 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608730517981_0003/
2020-12-23 13:38:18 INFO  Job:1619 - Running job: job_1608730517981_0003
2020-12-23 13:38:26 INFO  Job:1640 - Job job_1608730517981_0003 running in uber mode : false
2020-12-23 13:38:26 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 13:38:32 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 13:38:39 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 13:38:44 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 13:38:52 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 13:38:53 INFO  Job:1658 - Job job_1608730517981_0003 completed successfully
2020-12-23 13:38:53 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016165
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40800
		Total time spent by all reduces in occupied slots (ms)=25288
		Total time spent by all map tasks (ms)=10200
		Total time spent by all reduce tasks (ms)=6322
		Total vcore-milliseconds taken by all map tasks=10200
		Total vcore-milliseconds taken by all reduce tasks=6322
		Total megabyte-milliseconds taken by all map tasks=41779200
		Total megabyte-milliseconds taken by all reduce tasks=25894912
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=621
		CPU time spent (ms)=6500
		Physical memory (bytes) snapshot=1225330688
		Virtual memory (bytes) snapshot=15777378304
		Total committed heap usage (bytes)=1067450368
		Peak Map Physical memory (bytes)=316002304
		Peak Map Virtual memory (bytes)=3942084608
		Peak Reduce Physical memory (bytes)=306085888
		Peak Reduce Virtual memory (bytes)=3969081344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.575 seconds
2020-12-23 13:38:53 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-23 13:38:53 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 13:38:53.764" starttime="20201223 13:38:53.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:38:53.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:38:53.765" starttime="20201223 13:38:53.765"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.765" starttime="20201223 13:38:11.569"></status>
</kw>
<msg timestamp="20201223 13:38:53.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:38:53.766" starttime="20201223 13:38:11.569"></status>
</kw>
<msg timestamp="20201223 13:38:53.766" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:38:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38...</msg>
<status status="PASS" endtime="20201223 13:38:53.766" starttime="20201223 13:38:11.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:38:53.767" starttime="20201223 13:38:53.766"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:38:53.767" critical="yes" starttime="20201223 13:38:11.545"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:38:53.772" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:38:53.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:38:53.777" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:38:53.777" starttime="20201223 13:38:53.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:38:53.778" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:38:53.778" starttime="20201223 13:38:53.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:38:53.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:38:53.779" starttime="20201223 13:38:53.779"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.779" starttime="20201223 13:38:53.770"></status>
</kw>
<msg timestamp="20201223 13:38:53.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:38:53.780" starttime="20201223 13:38:53.769"></status>
</kw>
<msg timestamp="20201223 13:38:53.780" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:38:53.780" starttime="20201223 13:38:53.769"></status>
</kw>
<msg timestamp="20201223 13:38:53.780" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:38:53.780" starttime="20201223 13:38:53.769"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:38:53.781" level="INFO">${random} = 00</msg>
<status status="PASS" endtime="20201223 13:38:53.781" starttime="20201223 13:38:53.780"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:38:53.785" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:38:53.785" starttime="20201223 13:38:53.784"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:38:53.785" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:38:53.785" starttime="20201223 13:38:53.785"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.786" starttime="20201223 13:38:53.784"></status>
</kw>
<msg timestamp="20201223 13:38:53.786" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:38:53.786" starttime="20201223 13:38:53.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:38:53.788" starttime="20201223 13:38:53.788"></status>
</kw>
<msg timestamp="20201223 13:38:53.788" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 13:38:53.788" starttime="20201223 13:38:53.787"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.789" starttime="20201223 13:38:53.782"></status>
</kw>
<msg timestamp="20201223 13:38:53.789" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:38:53.789" starttime="20201223 13:38:53.782"></status>
</kw>
<msg timestamp="20201223 13:38:53.789" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:38:53.789" starttime="20201223 13:38:53.781"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:38:53.793" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:38:53.793" starttime="20201223 13:38:53.792"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:38:53.793" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:38:53.794" starttime="20201223 13:38:53.793"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.794" starttime="20201223 13:38:53.792"></status>
</kw>
<msg timestamp="20201223 13:38:53.794" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:38:53.794" starttime="20201223 13:38:53.791"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:38:53.795" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201223 13:38:53.795" starttime="20201223 13:38:53.795"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:38:53.796" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201223 13:38:53.796" starttime="20201223 13:38:53.796"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.796" starttime="20201223 13:38:53.794"></status>
</kw>
<msg timestamp="20201223 13:38:53.796" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201223 13:38:53.796" starttime="20201223 13:38:53.794"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.797" starttime="20201223 13:38:53.790"></status>
</kw>
<msg timestamp="20201223 13:38:53.797" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 13:38:53.797" starttime="20201223 13:38:53.790"></status>
</kw>
<msg timestamp="20201223 13:38:53.797" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 13:38:53.797" starttime="20201223 13:38:53.789"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:38:53.801" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:38:53.801" starttime="20201223 13:38:53.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:38:53.801" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:38:53.801" starttime="20201223 13:38:53.801"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.802" starttime="20201223 13:38:53.800"></status>
</kw>
<msg timestamp="20201223 13:38:53.802" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:38:53.802" starttime="20201223 13:38:53.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:38:53.803" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201223 13:38:53.803" starttime="20201223 13:38:53.803"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:38:53.804" level="INFO">${result} = /wordcount-00.txt</msg>
<status status="PASS" endtime="20201223 13:38:53.804" starttime="20201223 13:38:53.804"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.804" starttime="20201223 13:38:53.802"></status>
</kw>
<msg timestamp="20201223 13:38:53.804" level="INFO">${path_with_leading} = /wordcount-00.txt</msg>
<status status="PASS" endtime="20201223 13:38:53.804" starttime="20201223 13:38:53.802"></status>
</kw>
<status status="PASS" endtime="20201223 13:38:53.805" starttime="20201223 13:38:53.798"></status>
</kw>
<msg timestamp="20201223 13:38:53.805" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-00.txt</msg>
<status status="PASS" endtime="20201223 13:38:53.805" starttime="20201223 13:38:53.798"></status>
</kw>
<msg timestamp="20201223 13:38:53.805" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-00.txt</msg>
<status status="PASS" endtime="20201223 13:38:53.805" starttime="20201223 13:38:53.797"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:38:53.809" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-00.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:38:55.834" level="INFO">${rc} = 255</msg>
<msg timestamp="20201223 13:38:55.834" level="INFO">${output} = 2020-12-23 13:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:38:55.834" starttime="20201223 13:38:53.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:38:55.835" level="INFO">2020-12-23 13:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-12-23 13:38:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:38:55 INFO  Configuration:3318 - Removed undeclared tags:
org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory ofs://om/volume1/bucket1/wordcount-00.txt already exists
	at org.apache.hadoop.mapreduce.lib.output.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:164)
	at org.apache.hadoop.mapreduce.JobSubmitter.checkSpecs(JobSubmitter.java:277)
	at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:143)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1570)
	at org.apache.hadoop.mapreduce.Job$11.run(Job.java:1567)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1729)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1567)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1588)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:318)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:232)
2020-12-23 13:38:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 13:38:55.835" starttime="20201223 13:38:55.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:38:55.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201223 13:38:55.836" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20201223 13:38:55.836" starttime="20201223 13:38:55.836"></status>
</kw>
<status status="FAIL" endtime="20201223 13:38:55.837" starttime="20201223 13:38:53.806"></status>
</kw>
<msg timestamp="20201223 13:38:55.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201223 13:38:55.837" starttime="20201223 13:38:53.806"></status>
</kw>
<status status="FAIL" endtime="20201223 13:38:55.837" starttime="20201223 13:38:53.805"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20201223 13:38:55.838" critical="yes" starttime="20201223 13:38:53.768">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20201223 13:38:55.839" starttime="20201223 13:38:11.492"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:36:29.416" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:36:29.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:36:29.423" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:36:29.423" starttime="20201223 13:36:29.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:36:29.424" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:36:29.424" starttime="20201223 13:36:29.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:36:29.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:36:29.424" starttime="20201223 13:36:29.424"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:29.425" starttime="20201223 13:36:29.412"></status>
</kw>
<msg timestamp="20201223 13:36:29.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:36:29.425" starttime="20201223 13:36:29.411"></status>
</kw>
<msg timestamp="20201223 13:36:29.425" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:36:29.425" starttime="20201223 13:36:29.411"></status>
</kw>
<msg timestamp="20201223 13:36:29.425" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:36:29.425" starttime="20201223 13:36:29.411"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:36:29.430" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:36:29.430" starttime="20201223 13:36:29.429"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:36:29.430" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:36:29.431" starttime="20201223 13:36:29.430"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:29.431" starttime="20201223 13:36:29.428"></status>
</kw>
<msg timestamp="20201223 13:36:29.431" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:36:29.431" starttime="20201223 13:36:29.428"></status>
</kw>
<status status="PASS" endtime="20201223 13:36:29.431" starttime="20201223 13:36:29.427"></status>
</kw>
<msg timestamp="20201223 13:36:29.431" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:36:29.431" starttime="20201223 13:36:29.426"></status>
</kw>
<msg timestamp="20201223 13:36:29.432" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:36:29.432" starttime="20201223 13:36:29.425"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:36:29.435" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:37:13.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:37:13.647" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36...</msg>
<status status="PASS" endtime="20201223 13:37:13.647" starttime="20201223 13:36:29.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:37:13.649" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:31 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:31 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 13:36:31 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:36:31 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:36:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:36:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:36:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B011C50E6F12-&gt;5c116a79-d751-42d8-808d-79bdd7558642
2020-12-23 13:36:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 13:36:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-12-23 13:36:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:33 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 13:36:33 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 13:36:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608730517981_0001
2020-12-23 13:36:33 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 13:36:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:33 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:34 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:34 INFO  Configuration:2752 - resource-types.xml not found
2020-12-23 13:36:34 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-23 13:36:34 INFO  YarnClientImpl:324 - Submitted application application_1608730517981_0001
2020-12-23 13:36:34 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608730517981_0001/
2020-12-23 13:36:34 INFO  Job:1619 - Running job: job_1608730517981_0001
2020-12-23 13:36:44 INFO  Job:1640 - Job job_1608730517981_0001 running in uber mode : false
2020-12-23 13:36:44 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 13:36:51 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 13:36:57 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 13:37:02 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 13:37:06 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 13:37:12 INFO  Job:1658 - Job job_1608730517981_0001 completed successfully
2020-12-23 13:37:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016377
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40944
		Total time spent by all reduces in occupied slots (ms)=15824
		Total time spent by all map tasks (ms)=10236
		Total time spent by all reduce tasks (ms)=3956
		Total vcore-milliseconds taken by all map tasks=10236
		Total vcore-milliseconds taken by all reduce tasks=3956
		Total megabyte-milliseconds taken by all map tasks=41926656
		Total megabyte-milliseconds taken by all reduce tasks=16203776
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=606
		CPU time spent (ms)=6180
		Physical memory (bytes) snapshot=1265975296
		Virtual memory (bytes) snapshot=15800811520
		Total committed heap usage (bytes)=1017118720
		Peak Map Physical memory (bytes)=321118208
		Peak Map Virtual memory (bytes)=3945889792
		Peak Reduce Physical memory (bytes)=306049024
		Peak Reduce Virtual memory (bytes)=3971465216
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.346 seconds
2020-12-23 13:37:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:13 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-23 13:37:13 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 13:37:13.649" starttime="20201223 13:37:13.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:37:13.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:37:13.650" starttime="20201223 13:37:13.649"></status>
</kw>
<status status="PASS" endtime="20201223 13:37:13.650" starttime="20201223 13:36:29.433"></status>
</kw>
<msg timestamp="20201223 13:37:13.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:37:13.650" starttime="20201223 13:36:29.432"></status>
</kw>
<msg timestamp="20201223 13:37:13.651" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36:30 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:36...</msg>
<status status="PASS" endtime="20201223 13:37:13.651" starttime="20201223 13:36:29.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:37:13.651" starttime="20201223 13:37:13.651"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:37:13.651" critical="yes" starttime="20201223 13:36:29.410"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:37:13.657" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:37:13.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:37:13.662" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:37:13.662" starttime="20201223 13:37:13.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:37:13.663" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:37:13.663" starttime="20201223 13:37:13.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:37:13.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:37:13.664" starttime="20201223 13:37:13.663"></status>
</kw>
<status status="PASS" endtime="20201223 13:37:13.664" starttime="20201223 13:37:13.654"></status>
</kw>
<msg timestamp="20201223 13:37:13.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:37:13.664" starttime="20201223 13:37:13.654"></status>
</kw>
<msg timestamp="20201223 13:37:13.665" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:37:13.665" starttime="20201223 13:37:13.654"></status>
</kw>
<msg timestamp="20201223 13:37:13.665" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 13:37:13.665" starttime="20201223 13:37:13.653"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:37:13.665" level="INFO">${random} = 00</msg>
<status status="PASS" endtime="20201223 13:37:13.665" starttime="20201223 13:37:13.665"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:37:13.669" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:37:13.669" starttime="20201223 13:37:13.669"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:37:13.670" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:37:13.670" starttime="20201223 13:37:13.670"></status>
</kw>
<status status="PASS" endtime="20201223 13:37:13.670" starttime="20201223 13:37:13.668"></status>
</kw>
<msg timestamp="20201223 13:37:13.670" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:37:13.670" starttime="20201223 13:37:13.668"></status>
</kw>
<status status="PASS" endtime="20201223 13:37:13.671" starttime="20201223 13:37:13.667"></status>
</kw>
<msg timestamp="20201223 13:37:13.671" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:37:13.671" starttime="20201223 13:37:13.666"></status>
</kw>
<msg timestamp="20201223 13:37:13.671" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:37:13.671" starttime="20201223 13:37:13.666"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:37:13.674" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:37:13.674" starttime="20201223 13:37:13.674"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:37:13.675" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:37:13.675" starttime="20201223 13:37:13.675"></status>
</kw>
<status status="PASS" endtime="20201223 13:37:13.675" starttime="20201223 13:37:13.674"></status>
</kw>
<msg timestamp="20201223 13:37:13.675" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:37:13.675" starttime="20201223 13:37:13.673"></status>
</kw>
<status status="PASS" endtime="20201223 13:37:13.676" starttime="20201223 13:37:13.672"></status>
</kw>
<msg timestamp="20201223 13:37:13.676" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 13:37:13.676" starttime="20201223 13:37:13.672"></status>
</kw>
<msg timestamp="20201223 13:37:13.676" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 13:37:13.676" starttime="20201223 13:37:13.671"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:37:13.680" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:37:13.680" starttime="20201223 13:37:13.679"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:37:13.680" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:37:13.680" starttime="20201223 13:37:13.680"></status>
</kw>
<status status="PASS" endtime="20201223 13:37:13.680" starttime="20201223 13:37:13.679"></status>
</kw>
<msg timestamp="20201223 13:37:13.680" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:37:13.681" starttime="20201223 13:37:13.678"></status>
</kw>
<status status="PASS" endtime="20201223 13:37:13.681" starttime="20201223 13:37:13.677"></status>
</kw>
<msg timestamp="20201223 13:37:13.681" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-00.txt</msg>
<status status="PASS" endtime="20201223 13:37:13.681" starttime="20201223 13:37:13.677"></status>
</kw>
<msg timestamp="20201223 13:37:13.681" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-00.txt</msg>
<status status="PASS" endtime="20201223 13:37:13.681" starttime="20201223 13:37:13.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:37:13.686" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-00.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:37:56.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:37:56.253" level="INFO">${output} = 2020-12-23 13:37:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:37:56.253" starttime="20201223 13:37:13.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:37:56.255" level="INFO">2020-12-23 13:37:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.3:8032
2020-12-23 13:37:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 13:37:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 13:37:15 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 13:37:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:37:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:37:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:37:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D323F3132176-&gt;5c116a79-d751-42d8-808d-79bdd7558642
2020-12-23 13:37:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 13:37:17 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 13:37:17 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 13:37:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608730517981_0002
2020-12-23 13:37:20 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 13:37:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:20 INFO  Configuration:2752 - resource-types.xml not found
2020-12-23 13:37:20 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-23 13:37:20 INFO  YarnClientImpl:324 - Submitted application application_1608730517981_0002
2020-12-23 13:37:20 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608730517981_0002/
2020-12-23 13:37:20 INFO  Job:1619 - Running job: job_1608730517981_0002
2020-12-23 13:37:27 INFO  Job:1640 - Job job_1608730517981_0002 running in uber mode : false
2020-12-23 13:37:27 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 13:37:34 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 13:37:39 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 13:37:44 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 13:37:49 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 13:37:55 INFO  Job:1658 - Job job_1608730517981_0002 completed successfully
2020-12-23 13:37:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078891
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41052
		Total time spent by all reduces in occupied slots (ms)=14820
		Total time spent by all map tasks (ms)=10263
		Total time spent by all reduce tasks (ms)=3705
		Total vcore-milliseconds taken by all map tasks=10263
		Total vcore-milliseconds taken by all reduce tasks=3705
		Total megabyte-milliseconds taken by all map tasks=42037248
		Total megabyte-milliseconds taken by all reduce tasks=15175680
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=613
		CPU time spent (ms)=6780
		Physical memory (bytes) snapshot=1218093056
		Virtual memory (bytes) snapshot=15787601920
		Total committed heap usage (bytes)=1060634624
		Peak Map Physical memory (bytes)=317476864
		Peak Map Virtual memory (bytes)=3948294144
		Peak Reduce Physical memory (bytes)=289091584
		Peak Reduce Virtual memory (bytes)=3961470976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-23 13:37:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 13:37:56.255" starttime="20201223 13:37:56.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:37:56.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:37:56.256" starttime="20201223 13:37:56.255"></status>
</kw>
<status status="PASS" endtime="20201223 13:37:56.256" starttime="20201223 13:37:13.682"></status>
</kw>
<msg timestamp="20201223 13:37:56.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:37:56.256" starttime="20201223 13:37:13.682"></status>
</kw>
<msg timestamp="20201223 13:37:56.257" level="INFO">${output} = 2020-12-23 13:37:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:14 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 13:37:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 13:37:56.257" starttime="20201223 13:37:13.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 13:37:56.257" starttime="20201223 13:37:56.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:37:56.258" starttime="20201223 13:37:56.257"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:37:56.258" critical="yes" starttime="20201223 13:37:13.652"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 13:37:56.259" starttime="20201223 13:36:29.357"></status>
</suite>
<status status="FAIL" elapsedtime="171343" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:05.302" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:09.559" level="INFO">${rc} = 255</msg>
<msg timestamp="20201223 13:40:09.559" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:40:09.559" starttime="20201223 13:40:05.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:09.561" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:40:09.561" starttime="20201223 13:40:09.560"></status>
</kw>
<msg timestamp="20201223 13:40:09.561" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 13:40:09.561" starttime="20201223 13:40:05.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:09.567" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:12.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:12.425" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:40:12.425" starttime="20201223 13:40:09.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:12.426" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:40:12.426" starttime="20201223 13:40:12.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:12.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:12.427" starttime="20201223 13:40:12.426"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:12.427" starttime="20201223 13:40:09.563"></status>
</kw>
<msg timestamp="20201223 13:40:12.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:12.428" starttime="20201223 13:40:09.563"></status>
</kw>
<msg timestamp="20201223 13:40:12.428" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201223 13:40:12.428" starttime="20201223 13:40:09.563"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201223 13:40:12.428" starttime="20201223 13:40:12.428"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:12.428" starttime="20201223 13:40:09.562"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:12.429" starttime="20201223 13:40:09.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:12.433" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:15.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:15.587" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:40:15.587" starttime="20201223 13:40:12.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:15.588" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:40:15.589" starttime="20201223 13:40:15.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:15.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:15.590" starttime="20201223 13:40:15.589"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:15.590" starttime="20201223 13:40:12.430"></status>
</kw>
<msg timestamp="20201223 13:40:15.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:15.590" starttime="20201223 13:40:12.430"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:15.590" starttime="20201223 13:40:12.430"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:15.591" starttime="20201223 13:40:12.429"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:15.591" starttime="20201223 13:40:12.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201223 13:40:15.591" starttime="20201223 13:40:15.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:15.595" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:18.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:18.972" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:40:15.261Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 13:40:18.972" starttime="20201223 13:40:15.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:18.974" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:40:15.261Z",
  "modificationTime" : "2020-12-23T13:40:15.261Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201223 13:40:18.974" starttime="20201223 13:40:18.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:18.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:18.975" starttime="20201223 13:40:18.974"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:18.975" starttime="20201223 13:40:15.593"></status>
</kw>
<msg timestamp="20201223 13:40:18.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:18.975" starttime="20201223 13:40:15.592"></status>
</kw>
<msg timestamp="20201223 13:40:18.975" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T13:40:15.261Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 13:40:18.975" starttime="20201223 13:40:15.591"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201223 13:40:18.976" starttime="20201223 13:40:18.976"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:40:18.980" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:40:18.980" starttime="20201223 13:40:18.980"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:40:18.981" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:40:18.981" starttime="20201223 13:40:18.980"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:18.981" starttime="20201223 13:40:18.979"></status>
</kw>
<msg timestamp="20201223 13:40:18.981" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:40:18.981" starttime="20201223 13:40:18.979"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:18.982" starttime="20201223 13:40:18.978"></status>
</kw>
<msg timestamp="20201223 13:40:18.982" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 13:40:18.982" starttime="20201223 13:40:18.977"></status>
</kw>
<msg timestamp="20201223 13:40:18.982" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 13:40:18.982" starttime="20201223 13:40:18.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:18.986" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:22.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:22.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:40:22.668" starttime="20201223 13:40:18.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:22.669" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:40:22.669" starttime="20201223 13:40:22.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:22.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:22.670" starttime="20201223 13:40:22.670"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:22.670" starttime="20201223 13:40:18.983"></status>
</kw>
<msg timestamp="20201223 13:40:22.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:22.671" starttime="20201223 13:40:18.983"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:22.671" starttime="20201223 13:40:18.982"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:22.675" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:29.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:29.331" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:40:29.332" starttime="20201223 13:40:22.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:29.333" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:40:29.333" starttime="20201223 13:40:29.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:29.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:29.333" starttime="20201223 13:40:29.333"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:29.334" starttime="20201223 13:40:22.672"></status>
</kw>
<msg timestamp="20201223 13:40:29.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:29.334" starttime="20201223 13:40:22.672"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:29.334" starttime="20201223 13:40:22.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:29.338" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:34.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:34.954" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:40:34.954" starttime="20201223 13:40:29.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:34.955" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:40:34.956" starttime="20201223 13:40:34.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:34.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:34.956" starttime="20201223 13:40:34.956"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:34.957" starttime="20201223 13:40:29.335"></status>
</kw>
<msg timestamp="20201223 13:40:34.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:34.957" starttime="20201223 13:40:29.335"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:34.957" starttime="20201223 13:40:29.334"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:34.961" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:40.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:40.232" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:40:40.232" starttime="20201223 13:40:34.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:40.233" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:40:40.234" starttime="20201223 13:40:40.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:40.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:40.234" starttime="20201223 13:40:40.234"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:40.235" starttime="20201223 13:40:34.958"></status>
</kw>
<msg timestamp="20201223 13:40:40.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:40.235" starttime="20201223 13:40:34.958"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:40.235" starttime="20201223 13:40:34.957"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:40:40.235" critical="yes" starttime="20201223 13:40:05.296"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:40:40.241" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:40:40.241" starttime="20201223 13:40:40.241"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:40:40.242" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:40:40.242" starttime="20201223 13:40:40.241"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:40.242" starttime="20201223 13:40:40.240"></status>
</kw>
<msg timestamp="20201223 13:40:40.242" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:40:40.242" starttime="20201223 13:40:40.240"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:40.243" starttime="20201223 13:40:40.239"></status>
</kw>
<msg timestamp="20201223 13:40:40.243" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:40:40.243" starttime="20201223 13:40:40.238"></status>
</kw>
<msg timestamp="20201223 13:40:40.243" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:40:40.243" starttime="20201223 13:40:40.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:40.246" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:43.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:43.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:40:43.376" starttime="20201223 13:40:40.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:43.377" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:40:43.377" starttime="20201223 13:40:43.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:43.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:43.378" starttime="20201223 13:40:43.377"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:43.378" starttime="20201223 13:40:40.244"></status>
</kw>
<msg timestamp="20201223 13:40:43.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:43.378" starttime="20201223 13:40:40.244"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:43.378" starttime="20201223 13:40:40.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:43.382" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:46.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:46.597" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 13:40:46.597" starttime="20201223 13:40:43.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:46.598" level="INFO"></msg>
<status status="PASS" endtime="20201223 13:40:46.599" starttime="20201223 13:40:46.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:46.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:46.599" starttime="20201223 13:40:46.599"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:46.600" starttime="20201223 13:40:43.380"></status>
</kw>
<msg timestamp="20201223 13:40:46.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:46.600" starttime="20201223 13:40:43.379"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:46.600" starttime="20201223 13:40:43.379"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 13:40:46.600" critical="yes" starttime="20201223 13:40:40.237"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201223 13:40:46.602" starttime="20201223 13:40:05.238"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:42:23.220" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:42:23.220" starttime="20201223 13:42:23.219"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:42:23.220" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:42:23.220" starttime="20201223 13:42:23.220"></status>
</kw>
<status status="PASS" endtime="20201223 13:42:23.221" starttime="20201223 13:42:23.219"></status>
</kw>
<msg timestamp="20201223 13:42:23.221" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:42:23.221" starttime="20201223 13:42:23.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:42:23.222" starttime="20201223 13:42:23.221"></status>
</kw>
<msg timestamp="20201223 13:42:23.222" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 13:42:23.222" starttime="20201223 13:42:23.221"></status>
</kw>
<status status="PASS" endtime="20201223 13:42:23.222" starttime="20201223 13:42:23.217"></status>
</kw>
<msg timestamp="20201223 13:42:23.222" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:42:23.222" starttime="20201223 13:42:23.217"></status>
</kw>
<msg timestamp="20201223 13:42:23.222" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:42:23.223" starttime="20201223 13:42:23.216"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:42:23.223" level="INFO">${random} = 72185</msg>
<status status="PASS" endtime="20201223 13:42:23.223" starttime="20201223 13:42:23.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:42:23.228" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-72185 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:42:26.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:42:26.743" level="INFO">${output} = 2020-12-23 13:42:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:42:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 13:42:26.743" starttime="20201223 13:42:23.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:42:26.744" level="INFO">2020-12-23 13:42:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:42:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:42:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:42:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:42:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4FE65C89124C-&gt;990be3a0-6a57-4e17-966d-d0b3633c2b4e
2020-12-23 13:42:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 13:42:26.745" starttime="20201223 13:42:26.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:42:26.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:42:26.745" starttime="20201223 13:42:26.745"></status>
</kw>
<status status="PASS" endtime="20201223 13:42:26.745" starttime="20201223 13:42:23.224"></status>
</kw>
<msg timestamp="20201223 13:42:26.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:42:26.746" starttime="20201223 13:42:23.224"></status>
</kw>
<msg timestamp="20201223 13:42:26.746" level="INFO">${result} = 2020-12-23 13:42:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:42:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 13:42:26.746" starttime="20201223 13:42:23.223"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:42:26.751" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:42:28.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:42:28.736" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:40 ofs://om/volume1/bucket1/ozone-36686
-rw-...</msg>
<status status="PASS" endtime="20201223 13:42:28.736" starttime="20201223 13:42:26.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:42:28.737" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:40 ofs://om/volume1/bucket1/ozone-36686
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:42 ofs://om/volume1/bucket1/ozone-72185
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:40 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:41 ofs://om/volume1/bucket1/wordcount-55.txt</msg>
<status status="PASS" endtime="20201223 13:42:28.737" starttime="20201223 13:42:28.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:42:28.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:42:28.738" starttime="20201223 13:42:28.738"></status>
</kw>
<status status="PASS" endtime="20201223 13:42:28.738" starttime="20201223 13:42:26.748"></status>
</kw>
<msg timestamp="20201223 13:42:28.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:42:28.739" starttime="20201223 13:42:26.748"></status>
</kw>
<msg timestamp="20201223 13:42:28.739" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:40 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:40 ofs://om/volume1/bucket1/ozone-36686
-rw-...</msg>
<status status="PASS" endtime="20201223 13:42:28.739" starttime="20201223 13:42:26.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:42:28.740" starttime="20201223 13:42:28.739"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 13:42:28.740" critical="yes" starttime="20201223 13:42:23.215"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 13:42:28.741" starttime="20201223 13:42:23.162"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:40:51.415" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:40:51.415" starttime="20201223 13:40:51.415"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:40:51.416" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:40:51.416" starttime="20201223 13:40:51.415"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:51.416" starttime="20201223 13:40:51.414"></status>
</kw>
<msg timestamp="20201223 13:40:51.416" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:40:51.416" starttime="20201223 13:40:51.414"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:51.416" starttime="20201223 13:40:51.413"></status>
</kw>
<msg timestamp="20201223 13:40:51.416" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:40:51.416" starttime="20201223 13:40:51.412"></status>
</kw>
<msg timestamp="20201223 13:40:51.417" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:40:51.417" starttime="20201223 13:40:51.411"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:40:51.417" level="INFO">${random} = 36686</msg>
<status status="PASS" endtime="20201223 13:40:51.417" starttime="20201223 13:40:51.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:51.422" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-36686 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:55.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:55.079" level="INFO">${output} = 2020-12-23 13:40:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:40:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 13:40:55.079" starttime="20201223 13:40:51.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:55.080" level="INFO">2020-12-23 13:40:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:40:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:40:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:40:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:40:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9E5DA4C19892-&gt;990be3a0-6a57-4e17-966d-d0b3633c2b4e
2020-12-23 13:40:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 13:40:55.080" starttime="20201223 13:40:55.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:55.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:55.081" starttime="20201223 13:40:55.080"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:55.081" starttime="20201223 13:40:51.418"></status>
</kw>
<msg timestamp="20201223 13:40:55.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:55.081" starttime="20201223 13:40:51.418"></status>
</kw>
<msg timestamp="20201223 13:40:55.081" level="INFO">${result} = 2020-12-23 13:40:53 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:40:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 13:40:55.081" starttime="20201223 13:40:51.417"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:40:55.086" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:40:56.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:40:56.948" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:40 o3fs://bucket1.volume1.om/ozone-36686
dr...</msg>
<status status="PASS" endtime="20201223 13:40:56.948" starttime="20201223 13:40:55.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:40:56.949" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:40 o3fs://bucket1.volume1.om/ozone-36686
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:40 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 13:40:56.949" starttime="20201223 13:40:56.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:40:56.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:40:56.950" starttime="20201223 13:40:56.949"></status>
</kw>
<status status="PASS" endtime="20201223 13:40:56.950" starttime="20201223 13:40:55.084"></status>
</kw>
<msg timestamp="20201223 13:40:56.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:40:56.950" starttime="20201223 13:40:55.082"></status>
</kw>
<msg timestamp="20201223 13:40:56.951" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 13:40 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 13:40 o3fs://bucket1.volume1.om/ozone-36686
dr...</msg>
<status status="PASS" endtime="20201223 13:40:56.951" starttime="20201223 13:40:55.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:40:56.951" starttime="20201223 13:40:56.951"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 13:40:56.951" critical="yes" starttime="20201223 13:40:51.411"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 13:40:56.953" starttime="20201223 13:40:51.358"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:42:33.513" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:42:33.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:42:33.519" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:42:33.519" starttime="20201223 13:42:33.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:42:33.520" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:42:33.520" starttime="20201223 13:42:33.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:42:33.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:42:33.521" starttime="20201223 13:42:33.520"></status>
</kw>
<status status="PASS" endtime="20201223 13:42:33.521" starttime="20201223 13:42:33.508"></status>
</kw>
<msg timestamp="20201223 13:42:33.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:42:33.521" starttime="20201223 13:42:33.508"></status>
</kw>
<msg timestamp="20201223 13:42:33.522" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:42:33.522" starttime="20201223 13:42:33.507"></status>
</kw>
<msg timestamp="20201223 13:42:33.522" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:42:33.522" starttime="20201223 13:42:33.507"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:42:33.527" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:42:33.527" starttime="20201223 13:42:33.526"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:42:33.527" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:42:33.527" starttime="20201223 13:42:33.527"></status>
</kw>
<status status="PASS" endtime="20201223 13:42:33.528" starttime="20201223 13:42:33.525"></status>
</kw>
<msg timestamp="20201223 13:42:33.528" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:42:33.528" starttime="20201223 13:42:33.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:42:33.529" starttime="20201223 13:42:33.528"></status>
</kw>
<msg timestamp="20201223 13:42:33.529" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 13:42:33.529" starttime="20201223 13:42:33.528"></status>
</kw>
<status status="PASS" endtime="20201223 13:42:33.529" starttime="20201223 13:42:33.524"></status>
</kw>
<msg timestamp="20201223 13:42:33.529" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:42:33.529" starttime="20201223 13:42:33.523"></status>
</kw>
<msg timestamp="20201223 13:42:33.530" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:42:33.530" starttime="20201223 13:42:33.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:42:33.533" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:43:14.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:43:14.589" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:42:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:42:35 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 13:43:14.589" starttime="20201223 13:42:33.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:43:14.591" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:42:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:42:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:42:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:42:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:42:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-912A9359B254-&gt;990be3a0-6a57-4e17-966d-d0b3633c2b4e
2020-12-23 13:42:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 13:42:36 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-23 13:42:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 13:42:37 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 13:42:37 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 13:42:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608730777898_0003
2020-12-23 13:42:40 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 13:42:40 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 13:42:40 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 13:42:40 INFO  YarnClientImpl:329 - Submitted application application_1608730777898_0003
2020-12-23 13:42:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608730777898_0003/
2020-12-23 13:42:40 INFO  Job:1619 - Running job: job_1608730777898_0003
2020-12-23 13:42:47 INFO  Job:1640 - Job job_1608730777898_0003 running in uber mode : false
2020-12-23 13:42:47 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 13:42:54 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 13:42:59 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 13:43:05 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 13:43:10 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 13:43:13 INFO  Job:1658 - Job job_1608730777898_0003 completed successfully
2020-12-23 13:43:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056261
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40904
		Total time spent by all reduces in occupied slots (ms)=15148
		Total time spent by all map tasks (ms)=10226
		Total time spent by all reduce tasks (ms)=3787
		Total vcore-milliseconds taken by all map tasks=10226
		Total vcore-milliseconds taken by all reduce tasks=3787
		Total megabyte-milliseconds taken by all map tasks=41885696
		Total megabyte-milliseconds taken by all reduce tasks=15511552
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=696
		CPU time spent (ms)=7110
		Physical memory (bytes) snapshot=1400303616
		Virtual memory (bytes) snapshot=15784665088
		Total committed heap usage (bytes)=1559232512
		Peak Map Physical memory (bytes)=379219968
		Peak Map Virtual memory (bytes)=3945844736
		Peak Reduce Physical memory (bytes)=299147264
		Peak Reduce Virtual memory (bytes)=3963346944
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.312 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 13:43:14.591" starttime="20201223 13:43:14.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:43:14.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:43:14.591" starttime="20201223 13:43:14.591"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.592" starttime="20201223 13:42:33.531"></status>
</kw>
<msg timestamp="20201223 13:43:14.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:43:14.592" starttime="20201223 13:42:33.530"></status>
</kw>
<msg timestamp="20201223 13:43:14.593" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:42:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:42:35 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 13:43:14.593" starttime="20201223 13:42:33.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:43:14.593" starttime="20201223 13:43:14.593"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:43:14.593" critical="yes" starttime="20201223 13:42:33.506"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:43:14.600" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:43:14.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:43:14.606" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:43:14.606" starttime="20201223 13:43:14.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:43:14.607" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:43:14.607" starttime="20201223 13:43:14.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:43:14.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:43:14.607" starttime="20201223 13:43:14.607"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.608" starttime="20201223 13:43:14.597"></status>
</kw>
<msg timestamp="20201223 13:43:14.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:43:14.608" starttime="20201223 13:43:14.597"></status>
</kw>
<msg timestamp="20201223 13:43:14.608" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:43:14.608" starttime="20201223 13:43:14.596"></status>
</kw>
<msg timestamp="20201223 13:43:14.608" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:43:14.608" starttime="20201223 13:43:14.595"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:43:14.609" level="INFO">${random} = 07</msg>
<status status="PASS" endtime="20201223 13:43:14.609" starttime="20201223 13:43:14.609"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:43:14.613" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:43:14.613" starttime="20201223 13:43:14.613"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:43:14.614" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:43:14.614" starttime="20201223 13:43:14.614"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.614" starttime="20201223 13:43:14.612"></status>
</kw>
<msg timestamp="20201223 13:43:14.614" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:43:14.614" starttime="20201223 13:43:14.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 13:43:14.615" starttime="20201223 13:43:14.615"></status>
</kw>
<msg timestamp="20201223 13:43:14.615" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 13:43:14.615" starttime="20201223 13:43:14.614"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.616" starttime="20201223 13:43:14.611"></status>
</kw>
<msg timestamp="20201223 13:43:14.616" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:43:14.616" starttime="20201223 13:43:14.610"></status>
</kw>
<msg timestamp="20201223 13:43:14.616" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 13:43:14.616" starttime="20201223 13:43:14.609"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:43:14.619" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:43:14.620" starttime="20201223 13:43:14.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:43:14.620" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:43:14.620" starttime="20201223 13:43:14.620"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.620" starttime="20201223 13:43:14.619"></status>
</kw>
<msg timestamp="20201223 13:43:14.620" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:43:14.620" starttime="20201223 13:43:14.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:43:14.622" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201223 13:43:14.622" starttime="20201223 13:43:14.622"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:43:14.623" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201223 13:43:14.623" starttime="20201223 13:43:14.622"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.623" starttime="20201223 13:43:14.621"></status>
</kw>
<msg timestamp="20201223 13:43:14.623" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201223 13:43:14.623" starttime="20201223 13:43:14.621"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.623" starttime="20201223 13:43:14.618"></status>
</kw>
<msg timestamp="20201223 13:43:14.624" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 13:43:14.624" starttime="20201223 13:43:14.617"></status>
</kw>
<msg timestamp="20201223 13:43:14.624" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 13:43:14.624" starttime="20201223 13:43:14.616"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 13:43:14.627" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 13:43:14.627" starttime="20201223 13:43:14.627"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:43:14.628" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 13:43:14.628" starttime="20201223 13:43:14.627"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.628" starttime="20201223 13:43:14.626"></status>
</kw>
<msg timestamp="20201223 13:43:14.628" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 13:43:14.628" starttime="20201223 13:43:14.626"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:43:14.630" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201223 13:43:14.630" starttime="20201223 13:43:14.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:43:14.630" level="INFO">${result} = /wordcount-07.txt</msg>
<status status="PASS" endtime="20201223 13:43:14.630" starttime="20201223 13:43:14.630"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.631" starttime="20201223 13:43:14.629"></status>
</kw>
<msg timestamp="20201223 13:43:14.631" level="INFO">${path_with_leading} = /wordcount-07.txt</msg>
<status status="PASS" endtime="20201223 13:43:14.631" starttime="20201223 13:43:14.628"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:14.631" starttime="20201223 13:43:14.625"></status>
</kw>
<msg timestamp="20201223 13:43:14.631" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-07.txt</msg>
<status status="PASS" endtime="20201223 13:43:14.631" starttime="20201223 13:43:14.625"></status>
</kw>
<msg timestamp="20201223 13:43:14.631" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-07.txt</msg>
<status status="PASS" endtime="20201223 13:43:14.631" starttime="20201223 13:43:14.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:43:14.635" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-07.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:43:52.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:43:52.179" level="INFO">${output} = 2020-12-23 13:43:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-23 13:43:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201223 13:43:52.180" starttime="20201223 13:43:14.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:43:52.181" level="INFO">2020-12-23 13:43:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-23 13:43:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 13:43:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:43:17 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:43:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:43:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:43:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E9E57B76D644-&gt;990be3a0-6a57-4e17-966d-d0b3633c2b4e
2020-12-23 13:43:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 13:43:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 13:43:18 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 13:43:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608730777898_0004
2020-12-23 13:43:20 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 13:43:21 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 13:43:21 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 13:43:21 INFO  YarnClientImpl:329 - Submitted application application_1608730777898_0004
2020-12-23 13:43:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608730777898_0004/
2020-12-23 13:43:21 INFO  Job:1619 - Running job: job_1608730777898_0004
2020-12-23 13:43:28 INFO  Job:1640 - Job job_1608730777898_0004 running in uber mode : false
2020-12-23 13:43:28 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 13:43:35 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 13:43:41 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 13:43:46 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 13:43:50 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 13:43:51 INFO  Job:1658 - Job job_1608730777898_0004 completed successfully
2020-12-23 13:43:51 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118923
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41412
		Total time spent by all reduces in occupied slots (ms)=14812
		Total time spent by all map tasks (ms)=10353
		Total time spent by all reduce tasks (ms)=3703
		Total vcore-milliseconds taken by all map tasks=10353
		Total vcore-milliseconds taken by all reduce tasks=3703
		Total megabyte-milliseconds taken by all map tasks=42405888
		Total megabyte-milliseconds taken by all reduce tasks=15167488
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=679
		CPU time spent (ms)=7460
		Physical memory (bytes) snapshot=1462530048
		Virtual memory (bytes) snapshot=15791464448
		Total committed heap usage (bytes)=1698168832
		Peak Map Physical memory (bytes)=380432384
		Peak Map Virtual memory (bytes)=3950284800
		Peak Reduce Physical memory (bytes)=351711232
		Peak Reduce Virtual memory (bytes)=3950841856
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 13:43:52.181" starttime="20201223 13:43:52.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:43:52.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:43:52.182" starttime="20201223 13:43:52.181"></status>
</kw>
<status status="PASS" endtime="20201223 13:43:52.182" starttime="20201223 13:43:14.632"></status>
</kw>
<msg timestamp="20201223 13:43:52.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:43:52.182" starttime="20201223 13:43:14.632"></status>
</kw>
<msg timestamp="20201223 13:43:52.183" level="INFO">${output} = 2020-12-23 13:43:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-23 13:43:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201223 13:43:52.183" starttime="20201223 13:43:14.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 13:43:52.183" starttime="20201223 13:43:52.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:43:52.184" starttime="20201223 13:43:52.183"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:43:52.184" critical="yes" starttime="20201223 13:43:14.594"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 13:43:52.185" starttime="20201223 13:42:33.453"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:41:01.780" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:41:01.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:41:01.787" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:41:01.787" starttime="20201223 13:41:01.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:41:01.788" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:41:01.788" starttime="20201223 13:41:01.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:41:01.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:41:01.788" starttime="20201223 13:41:01.788"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:01.789" starttime="20201223 13:41:01.776"></status>
</kw>
<msg timestamp="20201223 13:41:01.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:41:01.789" starttime="20201223 13:41:01.775"></status>
</kw>
<msg timestamp="20201223 13:41:01.789" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:41:01.789" starttime="20201223 13:41:01.775"></status>
</kw>
<msg timestamp="20201223 13:41:01.789" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:41:01.789" starttime="20201223 13:41:01.774"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:41:01.794" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:41:01.794" starttime="20201223 13:41:01.794"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:41:01.795" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:41:01.795" starttime="20201223 13:41:01.794"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:01.795" starttime="20201223 13:41:01.792"></status>
</kw>
<msg timestamp="20201223 13:41:01.795" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:41:01.795" starttime="20201223 13:41:01.792"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:01.795" starttime="20201223 13:41:01.791"></status>
</kw>
<msg timestamp="20201223 13:41:01.795" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:41:01.795" starttime="20201223 13:41:01.790"></status>
</kw>
<msg timestamp="20201223 13:41:01.796" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:41:01.796" starttime="20201223 13:41:01.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:41:01.799" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:41:40.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:41:40.840" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:41:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:41:03 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 13:41:40.840" starttime="20201223 13:41:01.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:41:40.841" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:41:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:41:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:41:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:41:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:41:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2B1EC5789A70-&gt;990be3a0-6a57-4e17-966d-d0b3633c2b4e
2020-12-23 13:41:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 13:41:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-23 13:41:05 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 13:41:05 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 13:41:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608730777898_0001
2020-12-23 13:41:06 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 13:41:06 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 13:41:06 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 13:41:06 INFO  YarnClientImpl:329 - Submitted application application_1608730777898_0001
2020-12-23 13:41:06 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608730777898_0001/
2020-12-23 13:41:06 INFO  Job:1619 - Running job: job_1608730777898_0001
2020-12-23 13:41:16 INFO  Job:1640 - Job job_1608730777898_0001 running in uber mode : false
2020-12-23 13:41:16 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 13:41:24 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 13:41:29 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 13:41:34 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 13:41:39 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 13:41:40 INFO  Job:1658 - Job job_1608730777898_0001 completed successfully
2020-12-23 13:41:40 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056481
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40608
		Total time spent by all reduces in occupied slots (ms)=15380
		Total time spent by all map tasks (ms)=10152
		Total time spent by all reduce tasks (ms)=3845
		Total vcore-milliseconds taken by all map tasks=10152
		Total vcore-milliseconds taken by all reduce tasks=3845
		Total megabyte-milliseconds taken by all map tasks=41582592
		Total megabyte-milliseconds taken by all reduce tasks=15749120
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=689
		CPU time spent (ms)=6860
		Physical memory (bytes) snapshot=1347428352
		Virtual memory (bytes) snapshot=15801171968
		Total committed heap usage (bytes)=1391984640
		Peak Map Physical memory (bytes)=372899840
		Peak Map Virtual memory (bytes)=3947569152
		Peak Reduce Physical memory (bytes)=300650496
		Peak Reduce Virtual memory (bytes)=3967193088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.194 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 13:41:40.842" starttime="20201223 13:41:40.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:41:40.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:41:40.842" starttime="20201223 13:41:40.842"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:40.843" starttime="20201223 13:41:01.797"></status>
</kw>
<msg timestamp="20201223 13:41:40.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:41:40.843" starttime="20201223 13:41:01.796"></status>
</kw>
<msg timestamp="20201223 13:41:40.843" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 13:41:03 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:41:03 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 13:41:40.843" starttime="20201223 13:41:01.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:41:40.844" starttime="20201223 13:41:40.844"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:41:40.844" critical="yes" starttime="20201223 13:41:01.774"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:41:40.849" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:41:40.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:41:40.855" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:41:40.855" starttime="20201223 13:41:40.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:41:40.856" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:41:40.856" starttime="20201223 13:41:40.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:41:40.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:41:40.857" starttime="20201223 13:41:40.857"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:40.857" starttime="20201223 13:41:40.847"></status>
</kw>
<msg timestamp="20201223 13:41:40.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:41:40.858" starttime="20201223 13:41:40.846"></status>
</kw>
<msg timestamp="20201223 13:41:40.858" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:41:40.858" starttime="20201223 13:41:40.846"></status>
</kw>
<msg timestamp="20201223 13:41:40.858" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 13:41:40.858" starttime="20201223 13:41:40.846"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 13:41:40.859" level="INFO">${random} = 55</msg>
<status status="PASS" endtime="20201223 13:41:40.859" starttime="20201223 13:41:40.858"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:41:40.863" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:41:40.863" starttime="20201223 13:41:40.862"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:41:40.863" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:41:40.863" starttime="20201223 13:41:40.863"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:40.864" starttime="20201223 13:41:40.862"></status>
</kw>
<msg timestamp="20201223 13:41:40.864" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:41:40.864" starttime="20201223 13:41:40.861"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:40.864" starttime="20201223 13:41:40.860"></status>
</kw>
<msg timestamp="20201223 13:41:40.864" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:41:40.864" starttime="20201223 13:41:40.860"></status>
</kw>
<msg timestamp="20201223 13:41:40.864" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 13:41:40.864" starttime="20201223 13:41:40.859"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:41:40.868" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:41:40.868" starttime="20201223 13:41:40.867"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:41:40.868" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:41:40.868" starttime="20201223 13:41:40.868"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:40.869" starttime="20201223 13:41:40.867"></status>
</kw>
<msg timestamp="20201223 13:41:40.869" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:41:40.869" starttime="20201223 13:41:40.866"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:40.869" starttime="20201223 13:41:40.866"></status>
</kw>
<msg timestamp="20201223 13:41:40.869" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 13:41:40.869" starttime="20201223 13:41:40.865"></status>
</kw>
<msg timestamp="20201223 13:41:40.869" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 13:41:40.869" starttime="20201223 13:41:40.864"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 13:41:40.873" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 13:41:40.873" starttime="20201223 13:41:40.872"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 13:41:40.873" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 13:41:40.873" starttime="20201223 13:41:40.873"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:40.874" starttime="20201223 13:41:40.872"></status>
</kw>
<msg timestamp="20201223 13:41:40.874" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 13:41:40.874" starttime="20201223 13:41:40.871"></status>
</kw>
<status status="PASS" endtime="20201223 13:41:40.874" starttime="20201223 13:41:40.871"></status>
</kw>
<msg timestamp="20201223 13:41:40.874" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-55.txt</msg>
<status status="PASS" endtime="20201223 13:41:40.874" starttime="20201223 13:41:40.870"></status>
</kw>
<msg timestamp="20201223 13:41:40.874" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-55.txt</msg>
<status status="PASS" endtime="20201223 13:41:40.874" starttime="20201223 13:41:40.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 13:41:40.878" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-55.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 13:42:18.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 13:42:18.352" level="INFO">${output} = 2020-12-23 13:41:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-23 13:41:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201223 13:42:18.352" starttime="20201223 13:41:40.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 13:42:18.353" level="INFO">2020-12-23 13:41:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-23 13:41:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 13:41:43 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 13:41:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 13:41:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 13:41:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 13:41:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CCA57E741778-&gt;990be3a0-6a57-4e17-966d-d0b3633c2b4e
2020-12-23 13:41:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 13:41:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 13:41:44 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 13:41:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608730777898_0002
2020-12-23 13:41:44 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 13:41:45 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 13:41:45 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 13:41:45 INFO  YarnClientImpl:329 - Submitted application application_1608730777898_0002
2020-12-23 13:41:45 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608730777898_0002/
2020-12-23 13:41:45 INFO  Job:1619 - Running job: job_1608730777898_0002
2020-12-23 13:41:53 INFO  Job:1640 - Job job_1608730777898_0002 running in uber mode : false
2020-12-23 13:41:53 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 13:41:59 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 13:42:05 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 13:42:10 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 13:42:14 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 13:42:17 INFO  Job:1658 - Job job_1608730777898_0002 completed successfully
2020-12-23 13:42:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1119011
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40800
		Total time spent by all reduces in occupied slots (ms)=14712
		Total time spent by all map tasks (ms)=10200
		Total time spent by all reduce tasks (ms)=3678
		Total vcore-milliseconds taken by all map tasks=10200
		Total vcore-milliseconds taken by all reduce tasks=3678
		Total megabyte-milliseconds taken by all map tasks=41779200
		Total megabyte-milliseconds taken by all reduce tasks=15065088
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=607
		CPU time spent (ms)=6580
		Physical memory (bytes) snapshot=1473585152
		Virtual memory (bytes) snapshot=15777710080
		Total committed heap usage (bytes)=1677721600
		Peak Map Physical memory (bytes)=375214080
		Peak Map Virtual memory (bytes)=3944275968
		Peak Reduce Physical memory (bytes)=371208192
		Peak Reduce Virtual memory (bytes)=3967741952
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 13:42:18.353" starttime="20201223 13:42:18.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 13:42:18.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 13:42:18.354" starttime="20201223 13:42:18.353"></status>
</kw>
<status status="PASS" endtime="20201223 13:42:18.354" starttime="20201223 13:41:40.876"></status>
</kw>
<msg timestamp="20201223 13:42:18.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 13:42:18.354" starttime="20201223 13:41:40.875"></status>
</kw>
<msg timestamp="20201223 13:42:18.355" level="INFO">${output} = 2020-12-23 13:41:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2020-12-23 13:41:42 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201223 13:42:18.355" starttime="20201223 13:41:40.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 13:42:18.355" starttime="20201223 13:42:18.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 13:42:18.356" starttime="20201223 13:42:18.356"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 13:42:18.356" critical="yes" starttime="20201223 13:41:40.845"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 13:42:18.357" starttime="20201223 13:41:01.721"></status>
</suite>
<status status="PASS" elapsedtime="207906" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="FAIL" elapsedtime="570989" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="23">Critical Tests</stat>
<stat fail="1" pass="23">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="ozone-mr" pass="23">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="1" id="s1-s2" name="hadoop31" pass="7">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="1" id="s1-s2-s4" name="mapreduce-ofs" pass="1">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
