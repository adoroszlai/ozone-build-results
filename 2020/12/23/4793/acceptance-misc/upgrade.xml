<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201223 02:36:36.638" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="upgrade">
<suite source="/opt/ozone/smoketest/freon/generate.robot" id="s1-s1" name="Generate">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:35:10.170" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:35:16.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:35:16.049" level="INFO">${output} = 2020-12-23 02:35:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:35:16.049" starttime="20201223 02:35:10.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:35:16.050" level="INFO">2020-12-23 02:35:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:35:11 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2020-12-23 02:35:11 INFO  BaseFreonGenerator:244 - Executing test with prefix ockgpre
2020-12-23 02:35:11 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-23 02:35:11 WARN  NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2020-12-23 02:35:12 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-23 02:35:12 INFO  RpcClient:288 - Creating Volume: vol1, with hadoop as owner.
2020-12-23 02:35:12 INFO  RpcClient:427 - Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2020-12-23 02:35:13 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
2020-12-23 02:35:13 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-23 02:35:14 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-23 02:35:15 INFO  ProgressBar:163 - Progress: 100.00 % (1 out of 1)
2020-12-23 02:35:15 INFO  metrics:107 - type=TIMER, name=key-create, count=1, min=1910.452919, max=1910.452919, mean=1910.452919, stddev=0.0, median=1910.452919, p75=1910.452919, p95=1910.452919, p98=1910.452919, p99=1910.452919, p999=1910.452919, mean_rate=0.35775313735951564, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-23 02:35:15 INFO  BaseFreonGenerator:75 - Total execution time (sec): 4
2020-12-23 02:35:15 INFO  BaseFreonGenerator:75 - Failures: 0
2020-12-23 02:35:15 INFO  BaseFreonGenerator:75 - Successful executions: 1</msg>
<status status="PASS" endtime="20201223 02:35:16.050" starttime="20201223 02:35:16.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:35:16.050" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:35:16.051" starttime="20201223 02:35:16.050"></status>
</kw>
<status status="PASS" endtime="20201223 02:35:16.051" starttime="20201223 02:35:10.168"></status>
</kw>
<msg timestamp="20201223 02:35:16.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:35:16.051" starttime="20201223 02:35:10.168"></status>
</kw>
<msg timestamp="20201223 02:35:16.051" level="INFO">${result} = 2020-12-23 02:35:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:35:16.051" starttime="20201223 02:35:10.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201223 02:35:16.052" starttime="20201223 02:35:16.051"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:35:16.052" critical="yes" starttime="20201223 02:35:10.167"></status>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:35:16.055" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:35:18.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:35:18.962" level="INFO">${output} = 2020-12-23 02:35:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:35:18.963" starttime="20201223 02:35:16.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:35:18.963" level="INFO">2020-12-23 02:35:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:35:16 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2020-12-23 02:35:17 INFO  BaseFreonGenerator:244 - Executing test with prefix omkgpre
2020-12-23 02:35:17 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-23 02:35:17 WARN  NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2020-12-23 02:35:18 INFO  ProgressBar:163 - Progress: 100.00 % (1 out of 1)
2020-12-23 02:35:18 INFO  metrics:107 - type=TIMER, name=key-create, count=1, min=34.889781, max=34.889781, mean=34.889781, stddev=0.0, median=34.889781, p75=34.889781, p95=34.889781, p98=34.889781, p99=34.889781, p999=34.889781, mean_rate=0.987242612054322, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-23 02:35:18 INFO  BaseFreonGenerator:75 - Total execution time (sec): 2
2020-12-23 02:35:18 INFO  BaseFreonGenerator:75 - Failures: 0
2020-12-23 02:35:18 INFO  BaseFreonGenerator:75 - Successful executions: 1</msg>
<status status="PASS" endtime="20201223 02:35:18.964" starttime="20201223 02:35:18.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:35:18.964" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:35:18.964" starttime="20201223 02:35:18.964"></status>
</kw>
<status status="PASS" endtime="20201223 02:35:18.965" starttime="20201223 02:35:16.054"></status>
</kw>
<msg timestamp="20201223 02:35:18.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:35:18.965" starttime="20201223 02:35:16.054"></status>
</kw>
<msg timestamp="20201223 02:35:18.965" level="INFO">${result} = 2020-12-23 02:35:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:35:18.965" starttime="20201223 02:35:16.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201223 02:35:18.966" starttime="20201223 02:35:18.965"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:35:18.966" critical="yes" starttime="20201223 02:35:16.052"></status>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:35:18.969" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:35:21.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:35:21.838" level="INFO">${output} = 2020-12-23 02:35:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:35:21.838" starttime="20201223 02:35:18.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:35:21.839" level="INFO">2020-12-23 02:35:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:35:19 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2020-12-23 02:35:20 INFO  BaseFreonGenerator:244 - Executing test with prefix ombgpre
2020-12-23 02:35:20 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-23 02:35:20 WARN  NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2020-12-23 02:35:21 INFO  ProgressBar:163 - Progress: 100.00 % (1 out of 1)
2020-12-23 02:35:21 INFO  metrics:107 - type=TIMER, name=bucket-create, count=1, min=7.825318, max=7.825318, mean=7.825318, stddev=0.0, median=7.825318, p75=7.825318, p95=7.825318, p98=7.825318, p99=7.825318, p999=7.825318, mean_rate=0.9922673301548166, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-23 02:35:21 INFO  BaseFreonGenerator:75 - Total execution time (sec): 2
2020-12-23 02:35:21 INFO  BaseFreonGenerator:75 - Failures: 0
2020-12-23 02:35:21 INFO  BaseFreonGenerator:75 - Successful executions: 1</msg>
<status status="PASS" endtime="20201223 02:35:21.839" starttime="20201223 02:35:21.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:35:21.840" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:35:21.840" starttime="20201223 02:35:21.839"></status>
</kw>
<status status="PASS" endtime="20201223 02:35:21.840" starttime="20201223 02:35:18.967"></status>
</kw>
<msg timestamp="20201223 02:35:21.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:35:21.840" starttime="20201223 02:35:18.967"></status>
</kw>
<msg timestamp="20201223 02:35:21.841" level="INFO">${result} = 2020-12-23 02:35:19 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:19 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:35:21.841" starttime="20201223 02:35:18.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201223 02:35:21.841" starttime="20201223 02:35:21.841"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:35:21.841" critical="yes" starttime="20201223 02:35:18.966"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20201223 02:35:21.842" starttime="20201223 02:35:10.137"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s2" name="Validate">
<test id="s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:36:24.280" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:36:28.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:36:28.939" level="INFO">${output} = 2020-12-23 02:36:25,199 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-23 02:36:25,358 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201223 02:36:28.939" starttime="20201223 02:36:24.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:36:28.940" level="INFO">2020-12-23 02:36:25,199 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-23 02:36:25,358 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:36:25,358 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2020-12-23 02:36:25,499 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2020-12-23 02:36:25,516 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-23 02:36:26,517 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-23 02:36:26,989 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2020-12-23 02:36:27,520 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2020-12-23 02:36:28,520 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2020-12-23 02:36:28,614 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=47.301409, max=47.301409, mean=47.301409, stddev=0.0, median=47.301409, p75=47.301409, p95=47.301409, p98=47.301409, p99=47.301409, p999=47.301409, mean_rate=0.9862326585743495, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-23 02:36:28,615 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2020-12-23 02:36:28,615 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2020-12-23 02:36:28,615 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20201223 02:36:28.940" starttime="20201223 02:36:28.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:36:28.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:36:28.941" starttime="20201223 02:36:28.940"></status>
</kw>
<status status="PASS" endtime="20201223 02:36:28.941" starttime="20201223 02:36:24.277"></status>
</kw>
<msg timestamp="20201223 02:36:28.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:36:28.941" starttime="20201223 02:36:24.276"></status>
</kw>
<msg timestamp="20201223 02:36:28.942" level="INFO">${result} = 2020-12-23 02:36:25,199 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2020-12-23 02:36:25,358 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20201223 02:36:28.942" starttime="20201223 02:36:24.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201223 02:36:28.942" starttime="20201223 02:36:28.942"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:36:28.942" critical="yes" starttime="20201223 02:36:24.275"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20201223 02:36:28.943" starttime="20201223 02:36:24.241"></status>
</suite>
<suite source="/opt/ozone/smoketest/freon/validate.robot" id="s1-s3" name="Validate">
<test id="s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:35:25.666" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:35:29.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:35:29.835" level="INFO">${output} = 2020-12-23 02:35:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:35:29.835" starttime="20201223 02:35:25.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:35:29.836" level="INFO">2020-12-23 02:35:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:35:26 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2020-12-23 02:35:26 INFO  BaseFreonGenerator:244 - Executing test with prefix ockgpre
2020-12-23 02:35:26 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-23 02:35:26 WARN  NativeCodeLoader:60 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2020-12-23 02:35:27 INFO  ProgressBar:163 - Progress: 0.00 % (0 out of 1)
2020-12-23 02:35:27 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
2020-12-23 02:35:28 INFO  ProgressBar:163 - Progress: 100.00 % (1 out of 1)
2020-12-23 02:35:29 INFO  metrics:107 - type=TIMER, name=key-validate, count=1, min=34.923081, max=34.923081, mean=34.923081, stddev=0.0, median=34.923081, p75=34.923081, p95=34.923081, p98=34.923081, p99=34.923081, p999=34.923081, mean_rate=0.9887524113496057, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2020-12-23 02:35:29 INFO  BaseFreonGenerator:75 - Total execution time (sec): 3
2020-12-23 02:35:29 INFO  BaseFreonGenerator:75 - Failures: 0
2020-12-23 02:35:29 INFO  BaseFreonGenerator:75 - Successful executions: 1</msg>
<status status="PASS" endtime="20201223 02:35:29.836" starttime="20201223 02:35:29.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:35:29.837" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:35:29.837" starttime="20201223 02:35:29.836"></status>
</kw>
<status status="PASS" endtime="20201223 02:35:29.837" starttime="20201223 02:35:25.665"></status>
</kw>
<msg timestamp="20201223 02:35:29.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:35:29.837" starttime="20201223 02:35:25.664"></status>
</kw>
<msg timestamp="20201223 02:35:29.838" level="INFO">${result} = 2020-12-23 02:35:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:35:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:35:29.838" starttime="20201223 02:35:25.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20201223 02:35:29.838" starttime="20201223 02:35:29.838"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:35:29.838" critical="yes" starttime="20201223 02:35:25.663"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20201223 02:35:29.839" starttime="20201223 02:35:25.637"></status>
</suite>
<status status="PASS" elapsedtime="20609" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="5">Critical Tests</stat>
<stat fail="0" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="upgrade" pass="5">upgrade</stat>
<stat fail="0" id="s1-s1" name="Generate" pass="3">upgrade.Generate</stat>
<stat fail="0" id="s1-s2" name="Validate" pass="1">upgrade.Validate</stat>
<stat fail="0" id="s1-s3" name="Validate" pass="1">upgrade.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
