<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201223 02:28:31.895" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:24:46.162" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:24:49.764" level="INFO">${rc} = 255</msg>
<msg timestamp="20201223 02:24:49.765" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:24:49.765" starttime="20201223 02:24:46.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:24:49.766" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 02:24:49.766" starttime="20201223 02:24:49.765"></status>
</kw>
<msg timestamp="20201223 02:24:49.766" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:24:49.766" starttime="20201223 02:24:46.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:24:49.771" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:24:52.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:24:52.827" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:24:52.827" starttime="20201223 02:24:49.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:24:52.828" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 02:24:52.828" starttime="20201223 02:24:52.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:24:52.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:24:52.828" starttime="20201223 02:24:52.828"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:52.829" starttime="20201223 02:24:49.768"></status>
</kw>
<msg timestamp="20201223 02:24:52.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:24:52.829" starttime="20201223 02:24:49.768"></status>
</kw>
<msg timestamp="20201223 02:24:52.829" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:24:52.829" starttime="20201223 02:24:49.767"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201223 02:24:52.829" starttime="20201223 02:24:52.829"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:52.830" starttime="20201223 02:24:49.767"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:52.830" starttime="20201223 02:24:49.766"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:24:52.833" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:24:55.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:24:55.902" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:24:55.902" starttime="20201223 02:24:52.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:24:55.903" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 02:24:55.903" starttime="20201223 02:24:55.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:24:55.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:24:55.904" starttime="20201223 02:24:55.903"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:55.904" starttime="20201223 02:24:52.831"></status>
</kw>
<msg timestamp="20201223 02:24:55.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:24:55.904" starttime="20201223 02:24:52.831"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:55.904" starttime="20201223 02:24:52.831"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:55.904" starttime="20201223 02:24:52.830"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:55.904" starttime="20201223 02:24:52.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201223 02:24:55.905" starttime="20201223 02:24:55.905"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:24:55.908" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:24:58.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:24:58.870" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:24:58.870" starttime="20201223 02:24:55.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:24:58.871" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T02:24:55.583Z",
  "modificationTime" : "2020-12-23T02:24:55.583Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201223 02:24:58.871" starttime="20201223 02:24:58.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:24:58.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:24:58.872" starttime="20201223 02:24:58.871"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:58.872" starttime="20201223 02:24:55.906"></status>
</kw>
<msg timestamp="20201223 02:24:58.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:24:58.872" starttime="20201223 02:24:55.905"></status>
</kw>
<msg timestamp="20201223 02:24:58.873" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:24:58.873" starttime="20201223 02:24:55.905"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201223 02:24:58.873" starttime="20201223 02:24:58.873"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:24:58.876" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:24:58.876" starttime="20201223 02:24:58.876"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:24:58.877" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:24:58.877" starttime="20201223 02:24:58.877"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:58.877" starttime="20201223 02:24:58.876"></status>
</kw>
<msg timestamp="20201223 02:24:58.877" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:24:58.877" starttime="20201223 02:24:58.875"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:58.878" starttime="20201223 02:24:58.875"></status>
</kw>
<msg timestamp="20201223 02:24:58.878" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 02:24:58.878" starttime="20201223 02:24:58.874"></status>
</kw>
<msg timestamp="20201223 02:24:58.878" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 02:24:58.878" starttime="20201223 02:24:58.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:24:58.881" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:01.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:01.899" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:25:01.899" starttime="20201223 02:24:58.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:01.900" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 02:25:01.900" starttime="20201223 02:25:01.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:01.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:01.901" starttime="20201223 02:25:01.901"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:01.901" starttime="20201223 02:24:58.879"></status>
</kw>
<msg timestamp="20201223 02:25:01.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:01.902" starttime="20201223 02:24:58.878"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:01.902" starttime="20201223 02:24:58.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:01.905" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:08.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:08.930" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:25:08.930" starttime="20201223 02:25:01.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:08.931" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 02:25:08.931" starttime="20201223 02:25:08.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:08.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:08.932" starttime="20201223 02:25:08.932"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:08.932" starttime="20201223 02:25:01.903"></status>
</kw>
<msg timestamp="20201223 02:25:08.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:08.932" starttime="20201223 02:25:01.902"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:08.933" starttime="20201223 02:25:01.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:08.936" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:13.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:13.431" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:25:13.431" starttime="20201223 02:25:08.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:13.432" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 02:25:13.432" starttime="20201223 02:25:13.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:13.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:13.433" starttime="20201223 02:25:13.432"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:13.433" starttime="20201223 02:25:08.934"></status>
</kw>
<msg timestamp="20201223 02:25:13.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:13.433" starttime="20201223 02:25:08.933"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:13.434" starttime="20201223 02:25:08.933"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:13.437" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:18.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:18.050" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:25:18.050" starttime="20201223 02:25:13.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:18.051" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 02:25:18.052" starttime="20201223 02:25:18.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:18.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:18.052" starttime="20201223 02:25:18.052"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:18.052" starttime="20201223 02:25:13.434"></status>
</kw>
<msg timestamp="20201223 02:25:18.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:18.053" starttime="20201223 02:25:13.434"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:18.053" starttime="20201223 02:25:13.434"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 02:25:18.053" critical="yes" starttime="20201223 02:24:46.157"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:25:18.057" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:25:18.058" starttime="20201223 02:25:18.057"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:25:18.058" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:25:18.058" starttime="20201223 02:25:18.058"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:18.058" starttime="20201223 02:25:18.057"></status>
</kw>
<msg timestamp="20201223 02:25:18.058" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:25:18.058" starttime="20201223 02:25:18.056"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:18.059" starttime="20201223 02:25:18.056"></status>
</kw>
<msg timestamp="20201223 02:25:18.059" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 02:25:18.059" starttime="20201223 02:25:18.055"></status>
</kw>
<msg timestamp="20201223 02:25:18.059" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 02:25:18.059" starttime="20201223 02:25:18.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:18.062" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:21.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:21.096" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:25:21.096" starttime="20201223 02:25:18.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:21.097" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 02:25:21.097" starttime="20201223 02:25:21.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:21.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:21.098" starttime="20201223 02:25:21.097"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:21.098" starttime="20201223 02:25:18.060"></status>
</kw>
<msg timestamp="20201223 02:25:21.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:21.099" starttime="20201223 02:25:18.059"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:21.099" starttime="20201223 02:25:18.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:21.102" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:24.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:24.105" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201223 02:25:24.105" starttime="20201223 02:25:21.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:24.106" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201223 02:25:24.107" starttime="20201223 02:25:24.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:24.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:24.107" starttime="20201223 02:25:24.107"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:24.107" starttime="20201223 02:25:21.100"></status>
</kw>
<msg timestamp="20201223 02:25:24.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:24.108" starttime="20201223 02:25:21.099"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:24.108" starttime="20201223 02:25:21.099"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 02:25:24.108" critical="yes" starttime="20201223 02:25:18.054"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201223 02:25:24.109" starttime="20201223 02:24:46.109"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:27:09.654" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:27:09.654" starttime="20201223 02:27:09.654"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:27:09.654" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:27:09.655" starttime="20201223 02:27:09.654"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:09.655" starttime="20201223 02:27:09.653"></status>
</kw>
<msg timestamp="20201223 02:27:09.655" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:27:09.655" starttime="20201223 02:27:09.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:27:09.656" starttime="20201223 02:27:09.655"></status>
</kw>
<msg timestamp="20201223 02:27:09.656" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 02:27:09.656" starttime="20201223 02:27:09.655"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:09.656" starttime="20201223 02:27:09.652"></status>
</kw>
<msg timestamp="20201223 02:27:09.656" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:27:09.656" starttime="20201223 02:27:09.652"></status>
</kw>
<msg timestamp="20201223 02:27:09.656" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:27:09.656" starttime="20201223 02:27:09.651"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:27:09.657" level="INFO">${random} = 83432</msg>
<status status="PASS" endtime="20201223 02:27:09.657" starttime="20201223 02:27:09.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:27:09.661" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-83432 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:27:12.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:27:12.961" level="INFO">${output} = 2020-12-23 02:27:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:27:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:27:12.961" starttime="20201223 02:27:09.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:27:12.962" level="INFO">2020-12-23 02:27:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:27:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:27:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:27:11 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:27:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CCC9C95CE671-&gt;e665bff8-6f60-42ac-81f1-ffb4eb6651ef
2020-12-23 02:27:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 02:27:12.962" starttime="20201223 02:27:12.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:27:12.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:27:12.963" starttime="20201223 02:27:12.963"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:12.963" starttime="20201223 02:27:09.658"></status>
</kw>
<msg timestamp="20201223 02:27:12.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:27:12.963" starttime="20201223 02:27:09.657"></status>
</kw>
<msg timestamp="20201223 02:27:12.964" level="INFO">${result} = 2020-12-23 02:27:11 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:27:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:27:12.964" starttime="20201223 02:27:09.657"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:27:12.968" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:27:14.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:27:14.765" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:25 ofs://om/volume1/bucket1/ozone-73629
-rw-...</msg>
<status status="PASS" endtime="20201223 02:27:14.766" starttime="20201223 02:27:12.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:27:14.766" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:25 ofs://om/volume1/bucket1/ozone-73629
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:27 ofs://om/volume1/bucket1/ozone-83432
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:25 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:26 ofs://om/volume1/bucket1/wordcount-64.txt</msg>
<status status="PASS" endtime="20201223 02:27:14.767" starttime="20201223 02:27:14.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:27:14.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:27:14.767" starttime="20201223 02:27:14.767"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:14.767" starttime="20201223 02:27:12.966"></status>
</kw>
<msg timestamp="20201223 02:27:14.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:27:14.768" starttime="20201223 02:27:12.965"></status>
</kw>
<msg timestamp="20201223 02:27:14.768" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:25 ofs://om/volume1/bucket1/ozone-73629
-rw-...</msg>
<status status="PASS" endtime="20201223 02:27:14.768" starttime="20201223 02:27:12.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:27:14.768" starttime="20201223 02:27:14.768"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:27:14.769" critical="yes" starttime="20201223 02:27:09.650"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 02:27:14.770" starttime="20201223 02:27:09.604"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:25:43.815" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:25:43.815" starttime="20201223 02:25:43.815"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:25:43.816" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:25:43.816" starttime="20201223 02:25:43.815"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:43.816" starttime="20201223 02:25:43.814"></status>
</kw>
<msg timestamp="20201223 02:25:43.816" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:25:43.816" starttime="20201223 02:25:43.814"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:43.816" starttime="20201223 02:25:43.813"></status>
</kw>
<msg timestamp="20201223 02:25:43.816" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:25:43.816" starttime="20201223 02:25:43.813"></status>
</kw>
<msg timestamp="20201223 02:25:43.817" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:25:43.817" starttime="20201223 02:25:43.812"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:25:43.817" level="INFO">${random} = 73629</msg>
<status status="PASS" endtime="20201223 02:25:43.817" starttime="20201223 02:25:43.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:43.822" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-73629 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:48.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:48.853" level="INFO">${output} = 2020-12-23 02:25:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:25:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:25:48.853" starttime="20201223 02:25:43.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:48.854" level="INFO">2020-12-23 02:25:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:25:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:25:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:25:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:25:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9A38D559502B-&gt;e665bff8-6f60-42ac-81f1-ffb4eb6651ef
2020-12-23 02:25:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 02:25:48.854" starttime="20201223 02:25:48.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:48.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:48.855" starttime="20201223 02:25:48.854"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:48.855" starttime="20201223 02:25:43.818"></status>
</kw>
<msg timestamp="20201223 02:25:48.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:48.855" starttime="20201223 02:25:43.818"></status>
</kw>
<msg timestamp="20201223 02:25:48.855" level="INFO">${result} = 2020-12-23 02:25:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:25:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:25:48.856" starttime="20201223 02:25:43.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:48.860" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:50.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:50.654" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:25 o3fs://bucket1.volume1.om/ozone-73629
dr...</msg>
<status status="PASS" endtime="20201223 02:25:50.654" starttime="20201223 02:25:48.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:50.655" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:25 o3fs://bucket1.volume1.om/ozone-73629
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:25 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 02:25:50.655" starttime="20201223 02:25:50.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:50.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:50.656" starttime="20201223 02:25:50.655"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:50.656" starttime="20201223 02:25:48.857"></status>
</kw>
<msg timestamp="20201223 02:25:50.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:50.656" starttime="20201223 02:25:48.856"></status>
</kw>
<msg timestamp="20201223 02:25:50.656" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:25 o3fs://bucket1.volume1.om/ozone-73629
dr...</msg>
<status status="PASS" endtime="20201223 02:25:50.656" starttime="20201223 02:25:48.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:25:50.657" starttime="20201223 02:25:50.656"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:25:50.657" critical="yes" starttime="20201223 02:25:43.812"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 02:25:50.658" starttime="20201223 02:25:43.768"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:39.245" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:39.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:39.247" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201223 02:25:39.247" starttime="20201223 02:25:39.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:39.248" level="INFO">rm</msg>
<status status="PASS" endtime="20201223 02:25:39.248" starttime="20201223 02:25:39.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:39.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:39.249" starttime="20201223 02:25:39.248"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:39.249" starttime="20201223 02:25:39.240"></status>
</kw>
<msg timestamp="20201223 02:25:39.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:39.249" starttime="20201223 02:25:39.240"></status>
</kw>
<msg timestamp="20201223 02:25:39.250" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201223 02:25:39.250" starttime="20201223 02:25:39.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201223 02:25:39.251" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201223 02:25:39.251" starttime="20201223 02:25:39.250"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:39.254" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:39.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:39.270" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:25:39.270" starttime="20201223 02:25:39.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:39.271" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:25:39.271" starttime="20201223 02:25:39.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:39.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:39.271" starttime="20201223 02:25:39.271"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:39.272" starttime="20201223 02:25:39.252"></status>
</kw>
<msg timestamp="20201223 02:25:39.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:39.272" starttime="20201223 02:25:39.252"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:39.272" starttime="20201223 02:25:39.251"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:39.272" starttime="20201223 02:25:39.251"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:39.272" starttime="20201223 02:25:39.239"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 02:25:39.272" critical="yes" starttime="20201223 02:25:39.238"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201223 02:25:39.273" starttime="20201223 02:25:39.197"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:24:41.561" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:24:41.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:24:41.563" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201223 02:24:41.563" starttime="20201223 02:24:41.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:24:41.564" level="INFO">om</msg>
<status status="PASS" endtime="20201223 02:24:41.564" starttime="20201223 02:24:41.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:24:41.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:24:41.564" starttime="20201223 02:24:41.564"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:41.565" starttime="20201223 02:24:41.557"></status>
</kw>
<msg timestamp="20201223 02:24:41.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:24:41.565" starttime="20201223 02:24:41.557"></status>
</kw>
<msg timestamp="20201223 02:24:41.565" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201223 02:24:41.565" starttime="20201223 02:24:41.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201223 02:24:41.565" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201223 02:24:41.566" starttime="20201223 02:24:41.565"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:24:41.569" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:24:41.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:24:41.585" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:24:41.585" starttime="20201223 02:24:41.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:24:41.586" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:24:41.586" starttime="20201223 02:24:41.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:24:41.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:24:41.587" starttime="20201223 02:24:41.586"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:41.587" starttime="20201223 02:24:41.567"></status>
</kw>
<msg timestamp="20201223 02:24:41.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:24:41.587" starttime="20201223 02:24:41.566"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:41.587" starttime="20201223 02:24:41.566"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:41.587" starttime="20201223 02:24:41.566"></status>
</kw>
<status status="PASS" endtime="20201223 02:24:41.588" starttime="20201223 02:24:41.555"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 02:24:41.588" critical="yes" starttime="20201223 02:24:41.554"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201223 02:24:41.588" starttime="20201223 02:24:41.512"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:27:19.320" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:27:19.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:27:19.326" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:27:19.326" starttime="20201223 02:27:19.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:27:19.327" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:27:19.327" starttime="20201223 02:27:19.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:27:19.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:27:19.328" starttime="20201223 02:27:19.327"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:19.328" starttime="20201223 02:27:19.316"></status>
</kw>
<msg timestamp="20201223 02:27:19.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:27:19.328" starttime="20201223 02:27:19.316"></status>
</kw>
<msg timestamp="20201223 02:27:19.328" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:27:19.328" starttime="20201223 02:27:19.315"></status>
</kw>
<msg timestamp="20201223 02:27:19.329" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:27:19.329" starttime="20201223 02:27:19.315"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:27:19.333" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:27:19.333" starttime="20201223 02:27:19.332"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:27:19.333" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:27:19.333" starttime="20201223 02:27:19.333"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:19.333" starttime="20201223 02:27:19.331"></status>
</kw>
<msg timestamp="20201223 02:27:19.333" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:27:19.333" starttime="20201223 02:27:19.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:27:19.334" starttime="20201223 02:27:19.334"></status>
</kw>
<msg timestamp="20201223 02:27:19.334" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 02:27:19.334" starttime="20201223 02:27:19.333"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:19.335" starttime="20201223 02:27:19.330"></status>
</kw>
<msg timestamp="20201223 02:27:19.335" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:27:19.335" starttime="20201223 02:27:19.329"></status>
</kw>
<msg timestamp="20201223 02:27:19.335" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:27:19.335" starttime="20201223 02:27:19.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:27:19.338" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:27:56.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:27:56.249" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:27:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:27:21 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 02:27:56.249" starttime="20201223 02:27:19.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:27:56.250" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:27:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:27:21 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:27:21 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:27:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:27:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-97A14B0ACEE0-&gt;e665bff8-6f60-42ac-81f1-ffb4eb6651ef
2020-12-23 02:27:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 02:27:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-12-23 02:27:25 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-23 02:27:25 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690445199, maxDate=1609295245199, sequenceNumber=3, masterKeyId=2))
2020-12-23 02:27:25 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c7 d6 b0 eb e8 2e 38 c7 de e2 8b eb 2e 40 03 48 01 5a 0d 32 30 34 37 38 33 30 39 31 38 35 32 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-23 02:27:25 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690445199, maxDate=1609295245199, sequenceNumber=3, masterKeyId=2)
2020-12-23 02:27:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 02:27:25 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:27:28 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:27:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608690236444_0003
2020-12-23 02:27:28 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c7 d6 b0 eb e8 2e 38 c7 de e2 8b eb 2e 40 03 48 01 5a 0d 32 30 34 37 38 33 30 39 31 38 35 32 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690445199, maxDate=1609295245199, sequenceNumber=3, masterKeyId=2)]
2020-12-23 02:27:28 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 02:27:28 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 02:27:28 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-23 02:27:29 INFO  YarnClientImpl:329 - Submitted application application_1608690236444_0003
2020-12-23 02:27:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608690236444_0003/
2020-12-23 02:27:29 INFO  Job:1619 - Running job: job_1608690236444_0003
2020-12-23 02:27:36 INFO  Job:1640 - Job job_1608690236444_0003 running in uber mode : false
2020-12-23 02:27:36 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:27:45 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:27:47 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:27:48 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:27:54 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:27:55 INFO  Job:1658 - Job job_1608690236444_0003 completed successfully
2020-12-23 02:27:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065785
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=38782
		Total time spent by all reduces in occupied slots (ms)=11362
		Total time spent by all map tasks (ms)=19391
		Total time spent by all reduce tasks (ms)=5681
		Total vcore-milliseconds taken by all map tasks=19391
		Total vcore-milliseconds taken by all reduce tasks=5681
		Total megabyte-milliseconds taken by all map tasks=39712768
		Total megabyte-milliseconds taken by all reduce tasks=11634688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=847
		CPU time spent (ms)=6730
		Physical memory (bytes) snapshot=1409527808
		Virtual memory (bytes) snapshot=14056263680
		Total committed heap usage (bytes)=1171259392
		Peak Map Physical memory (bytes)=388812800
		Peak Map Virtual memory (bytes)=3511066624
		Peak Reduce Physical memory (bytes)=304021504
		Peak Reduce Virtual memory (bytes)=3529236480
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.939 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 02:27:56.250" starttime="20201223 02:27:56.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:27:56.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:27:56.251" starttime="20201223 02:27:56.251"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.251" starttime="20201223 02:27:19.336"></status>
</kw>
<msg timestamp="20201223 02:27:56.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:27:56.252" starttime="20201223 02:27:19.335"></status>
</kw>
<msg timestamp="20201223 02:27:56.252" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:27:21 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:27:21 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 02:27:56.252" starttime="20201223 02:27:19.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:27:56.252" starttime="20201223 02:27:56.252"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:27:56.253" critical="yes" starttime="20201223 02:27:19.314"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:27:56.257" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:27:56.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:27:56.262" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:27:56.262" starttime="20201223 02:27:56.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:27:56.263" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:27:56.263" starttime="20201223 02:27:56.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:27:56.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:27:56.263" starttime="20201223 02:27:56.263"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.264" starttime="20201223 02:27:56.255"></status>
</kw>
<msg timestamp="20201223 02:27:56.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:27:56.264" starttime="20201223 02:27:56.255"></status>
</kw>
<msg timestamp="20201223 02:27:56.264" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:27:56.264" starttime="20201223 02:27:56.254"></status>
</kw>
<msg timestamp="20201223 02:27:56.264" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:27:56.264" starttime="20201223 02:27:56.254"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:27:56.265" level="INFO">${random} = 10</msg>
<status status="PASS" endtime="20201223 02:27:56.265" starttime="20201223 02:27:56.264"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:27:56.268" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:27:56.268" starttime="20201223 02:27:56.268"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:27:56.269" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:27:56.269" starttime="20201223 02:27:56.268"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.269" starttime="20201223 02:27:56.267"></status>
</kw>
<msg timestamp="20201223 02:27:56.269" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:27:56.269" starttime="20201223 02:27:56.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:27:56.270" starttime="20201223 02:27:56.269"></status>
</kw>
<msg timestamp="20201223 02:27:56.270" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 02:27:56.270" starttime="20201223 02:27:56.269"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.270" starttime="20201223 02:27:56.266"></status>
</kw>
<msg timestamp="20201223 02:27:56.270" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:27:56.270" starttime="20201223 02:27:56.266"></status>
</kw>
<msg timestamp="20201223 02:27:56.270" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:27:56.270" starttime="20201223 02:27:56.265"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:27:56.273" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:27:56.273" starttime="20201223 02:27:56.273"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:27:56.274" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:27:56.274" starttime="20201223 02:27:56.273"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.274" starttime="20201223 02:27:56.272"></status>
</kw>
<msg timestamp="20201223 02:27:56.274" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:27:56.274" starttime="20201223 02:27:56.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:27:56.275" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201223 02:27:56.275" starttime="20201223 02:27:56.275"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:27:56.276" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201223 02:27:56.276" starttime="20201223 02:27:56.275"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.276" starttime="20201223 02:27:56.275"></status>
</kw>
<msg timestamp="20201223 02:27:56.276" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201223 02:27:56.276" starttime="20201223 02:27:56.274"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.276" starttime="20201223 02:27:56.271"></status>
</kw>
<msg timestamp="20201223 02:27:56.276" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 02:27:56.276" starttime="20201223 02:27:56.271"></status>
</kw>
<msg timestamp="20201223 02:27:56.277" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 02:27:56.277" starttime="20201223 02:27:56.270"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:27:56.279" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:27:56.279" starttime="20201223 02:27:56.279"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:27:56.280" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:27:56.280" starttime="20201223 02:27:56.280"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.280" starttime="20201223 02:27:56.279"></status>
</kw>
<msg timestamp="20201223 02:27:56.280" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:27:56.280" starttime="20201223 02:27:56.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:27:56.282" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201223 02:27:56.282" starttime="20201223 02:27:56.281"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:27:56.282" level="INFO">${result} = /wordcount-10.txt</msg>
<status status="PASS" endtime="20201223 02:27:56.282" starttime="20201223 02:27:56.282"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.282" starttime="20201223 02:27:56.281"></status>
</kw>
<msg timestamp="20201223 02:27:56.282" level="INFO">${path_with_leading} = /wordcount-10.txt</msg>
<status status="PASS" endtime="20201223 02:27:56.282" starttime="20201223 02:27:56.280"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:56.283" starttime="20201223 02:27:56.278"></status>
</kw>
<msg timestamp="20201223 02:27:56.283" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-10.txt</msg>
<status status="PASS" endtime="20201223 02:27:56.283" starttime="20201223 02:27:56.277"></status>
</kw>
<msg timestamp="20201223 02:27:56.283" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-10.txt</msg>
<status status="PASS" endtime="20201223 02:27:56.283" starttime="20201223 02:27:56.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:27:56.286" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-10.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:28:24.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:28:24.613" level="INFO">${output} = 2020-12-23 02:27:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-12-23 02:27:58 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
202...</msg>
<status status="PASS" endtime="20201223 02:28:24.613" starttime="20201223 02:27:56.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:28:24.614" level="INFO">2020-12-23 02:27:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-12-23 02:27:58 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-23 02:27:58 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690478299, maxDate=1609295278299, sequenceNumber=4, masterKeyId=2))
2020-12-23 02:27:58 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 80 d9 b2 eb e8 2e 38 80 e1 e4 8b eb 2e 40 04 48 01 5a 0d 32 30 34 37 38 33 30 39 31 38 35 32 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-23 02:27:58 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690478299, maxDate=1609295278299, sequenceNumber=4, masterKeyId=2)
2020-12-23 02:27:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 02:27:58 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:27:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:27:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:27:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:27:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-103BA1BEA30F-&gt;e665bff8-6f60-42ac-81f1-ffb4eb6651ef
2020-12-23 02:27:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 02:27:59 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:27:59 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:28:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608690236444_0004
2020-12-23 02:28:00 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 80 d9 b2 eb e8 2e 38 80 e1 e4 8b eb 2e 40 04 48 01 5a 0d 32 30 34 37 38 33 30 39 31 38 35 32 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690478299, maxDate=1609295278299, sequenceNumber=4, masterKeyId=2)]
2020-12-23 02:28:00 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 02:28:00 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 02:28:00 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-23 02:28:00 INFO  YarnClientImpl:329 - Submitted application application_1608690236444_0004
2020-12-23 02:28:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608690236444_0004/
2020-12-23 02:28:00 INFO  Job:1619 - Running job: job_1608690236444_0004
2020-12-23 02:28:08 INFO  Job:1640 - Job job_1608690236444_0004 running in uber mode : false
2020-12-23 02:28:08 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:28:15 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:28:17 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:28:18 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:28:21 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:28:24 INFO  Job:1658 - Job job_1608690236444_0004 completed successfully
2020-12-23 02:28:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128427
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35780
		Total time spent by all reduces in occupied slots (ms)=6632
		Total time spent by all map tasks (ms)=17890
		Total time spent by all reduce tasks (ms)=3316
		Total vcore-milliseconds taken by all map tasks=17890
		Total vcore-milliseconds taken by all reduce tasks=3316
		Total megabyte-milliseconds taken by all map tasks=36638720
		Total megabyte-milliseconds taken by all reduce tasks=6791168
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=911
		CPU time spent (ms)=6420
		Physical memory (bytes) snapshot=1385443328
		Virtual memory (bytes) snapshot=14012399616
		Total committed heap usage (bytes)=1160773632
		Peak Map Physical memory (bytes)=384913408
		Peak Map Virtual memory (bytes)=3506200576
		Peak Reduce Physical memory (bytes)=304984064
		Peak Reduce Virtual memory (bytes)=3528982528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 02:28:24.614" starttime="20201223 02:28:24.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:28:24.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:28:24.615" starttime="20201223 02:28:24.614"></status>
</kw>
<status status="PASS" endtime="20201223 02:28:24.615" starttime="20201223 02:27:56.284"></status>
</kw>
<msg timestamp="20201223 02:28:24.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:28:24.615" starttime="20201223 02:27:56.284"></status>
</kw>
<msg timestamp="20201223 02:28:24.616" level="INFO">${output} = 2020-12-23 02:27:58 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-12-23 02:27:58 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
202...</msg>
<status status="PASS" endtime="20201223 02:28:24.616" starttime="20201223 02:27:56.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 02:28:24.616" starttime="20201223 02:28:24.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:28:24.617" starttime="20201223 02:28:24.617"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:28:24.617" critical="yes" starttime="20201223 02:27:56.253"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 02:28:24.618" starttime="20201223 02:27:19.270"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:55.178" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:25:55.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:25:55.184" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:25:55.184" starttime="20201223 02:25:55.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:25:55.184" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:25:55.185" starttime="20201223 02:25:55.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:25:55.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:25:55.185" starttime="20201223 02:25:55.185"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:55.185" starttime="20201223 02:25:55.174"></status>
</kw>
<msg timestamp="20201223 02:25:55.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:25:55.185" starttime="20201223 02:25:55.174"></status>
</kw>
<msg timestamp="20201223 02:25:55.186" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:25:55.186" starttime="20201223 02:25:55.174"></status>
</kw>
<msg timestamp="20201223 02:25:55.186" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:25:55.186" starttime="20201223 02:25:55.173"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:25:55.190" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:25:55.190" starttime="20201223 02:25:55.189"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:25:55.190" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:25:55.190" starttime="20201223 02:25:55.190"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:55.190" starttime="20201223 02:25:55.188"></status>
</kw>
<msg timestamp="20201223 02:25:55.191" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:25:55.191" starttime="20201223 02:25:55.188"></status>
</kw>
<status status="PASS" endtime="20201223 02:25:55.191" starttime="20201223 02:25:55.187"></status>
</kw>
<msg timestamp="20201223 02:25:55.191" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:25:55.191" starttime="20201223 02:25:55.187"></status>
</kw>
<msg timestamp="20201223 02:25:55.191" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:25:55.191" starttime="20201223 02:25:55.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:25:55.194" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:26:33.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:26:33.079" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:25:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:25:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 02:26:33.079" starttime="20201223 02:25:55.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:26:33.080" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:25:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:25:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:25:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:25:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:25:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0687CB8AD2AD-&gt;e665bff8-6f60-42ac-81f1-ffb4eb6651ef
2020-12-23 02:25:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 02:26:00 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-12-23 02:26:01 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-23 02:26:01 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690361378, maxDate=1609295161378, sequenceNumber=1, masterKeyId=2))
2020-12-23 02:26:01 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a2 c6 ab eb e8 2e 38 a2 ce dd 8b eb 2e 40 01 48 01 5a 0d 32 30 34 37 38 33 30 39 31 38 35 32 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-23 02:26:01 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690361378, maxDate=1609295161378, sequenceNumber=1, masterKeyId=2)
2020-12-23 02:26:01 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:26:02 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:26:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608690236444_0001
2020-12-23 02:26:02 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a2 c6 ab eb e8 2e 38 a2 ce dd 8b eb 2e 40 01 48 01 5a 0d 32 30 34 37 38 33 30 39 31 38 35 32 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690361378, maxDate=1609295161378, sequenceNumber=1, masterKeyId=2)]
2020-12-23 02:26:02 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 02:26:02 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 02:26:02 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-23 02:26:03 INFO  YarnClientImpl:329 - Submitted application application_1608690236444_0001
2020-12-23 02:26:03 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608690236444_0001/
2020-12-23 02:26:03 INFO  Job:1619 - Running job: job_1608690236444_0001
2020-12-23 02:26:14 INFO  Job:1640 - Job job_1608690236444_0001 running in uber mode : false
2020-12-23 02:26:14 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:26:23 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:26:24 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:26:25 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:26:32 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:26:32 INFO  Job:1658 - Job job_1608690236444_0001 completed successfully
2020-12-23 02:26:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065981
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=804
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39732
		Total time spent by all reduces in occupied slots (ms)=12248
		Total time spent by all map tasks (ms)=19866
		Total time spent by all reduce tasks (ms)=6124
		Total vcore-milliseconds taken by all map tasks=19866
		Total vcore-milliseconds taken by all reduce tasks=6124
		Total megabyte-milliseconds taken by all map tasks=40685568
		Total megabyte-milliseconds taken by all reduce tasks=12541952
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=450
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1565
		CPU time spent (ms)=6450
		Physical memory (bytes) snapshot=1504088064
		Virtual memory (bytes) snapshot=14041645056
		Total committed heap usage (bytes)=1311244288
		Peak Map Physical memory (bytes)=532656128
		Peak Map Virtual memory (bytes)=3509383168
		Peak Reduce Physical memory (bytes)=308215808
		Peak Reduce Virtual memory (bytes)=3528454144
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.754 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 02:26:33.081" starttime="20201223 02:26:33.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:26:33.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:26:33.081" starttime="20201223 02:26:33.081"></status>
</kw>
<status status="PASS" endtime="20201223 02:26:33.082" starttime="20201223 02:25:55.192"></status>
</kw>
<msg timestamp="20201223 02:26:33.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:26:33.082" starttime="20201223 02:25:55.192"></status>
</kw>
<msg timestamp="20201223 02:26:33.082" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:25:57 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:25:57 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 02:26:33.082" starttime="20201223 02:25:55.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:26:33.083" starttime="20201223 02:26:33.082"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:26:33.083" critical="yes" starttime="20201223 02:25:55.173"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:26:33.088" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:26:33.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:26:33.095" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:26:33.095" starttime="20201223 02:26:33.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:26:33.095" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:26:33.096" starttime="20201223 02:26:33.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:26:33.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:26:33.096" starttime="20201223 02:26:33.096"></status>
</kw>
<status status="PASS" endtime="20201223 02:26:33.096" starttime="20201223 02:26:33.085"></status>
</kw>
<msg timestamp="20201223 02:26:33.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:26:33.097" starttime="20201223 02:26:33.085"></status>
</kw>
<msg timestamp="20201223 02:26:33.097" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:26:33.097" starttime="20201223 02:26:33.085"></status>
</kw>
<msg timestamp="20201223 02:26:33.097" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:26:33.097" starttime="20201223 02:26:33.084"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:26:33.097" level="INFO">${random} = 64</msg>
<status status="PASS" endtime="20201223 02:26:33.098" starttime="20201223 02:26:33.097"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:26:33.101" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:26:33.101" starttime="20201223 02:26:33.100"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:26:33.101" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:26:33.101" starttime="20201223 02:26:33.101"></status>
</kw>
<status status="PASS" endtime="20201223 02:26:33.101" starttime="20201223 02:26:33.100"></status>
</kw>
<msg timestamp="20201223 02:26:33.102" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:26:33.102" starttime="20201223 02:26:33.099"></status>
</kw>
<status status="PASS" endtime="20201223 02:26:33.102" starttime="20201223 02:26:33.099"></status>
</kw>
<msg timestamp="20201223 02:26:33.102" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:26:33.102" starttime="20201223 02:26:33.098"></status>
</kw>
<msg timestamp="20201223 02:26:33.102" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:26:33.102" starttime="20201223 02:26:33.098"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:26:33.105" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:26:33.105" starttime="20201223 02:26:33.105"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:26:33.106" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:26:33.106" starttime="20201223 02:26:33.105"></status>
</kw>
<status status="PASS" endtime="20201223 02:26:33.106" starttime="20201223 02:26:33.104"></status>
</kw>
<msg timestamp="20201223 02:26:33.106" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:26:33.106" starttime="20201223 02:26:33.104"></status>
</kw>
<status status="PASS" endtime="20201223 02:26:33.106" starttime="20201223 02:26:33.103"></status>
</kw>
<msg timestamp="20201223 02:26:33.106" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 02:26:33.106" starttime="20201223 02:26:33.103"></status>
</kw>
<msg timestamp="20201223 02:26:33.106" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 02:26:33.106" starttime="20201223 02:26:33.102"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:26:33.109" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:26:33.109" starttime="20201223 02:26:33.109"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:26:33.110" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:26:33.110" starttime="20201223 02:26:33.109"></status>
</kw>
<status status="PASS" endtime="20201223 02:26:33.110" starttime="20201223 02:26:33.108"></status>
</kw>
<msg timestamp="20201223 02:26:33.110" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:26:33.110" starttime="20201223 02:26:33.108"></status>
</kw>
<status status="PASS" endtime="20201223 02:26:33.110" starttime="20201223 02:26:33.108"></status>
</kw>
<msg timestamp="20201223 02:26:33.110" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-64.txt</msg>
<status status="PASS" endtime="20201223 02:26:33.110" starttime="20201223 02:26:33.107"></status>
</kw>
<msg timestamp="20201223 02:26:33.111" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-64.txt</msg>
<status status="PASS" endtime="20201223 02:26:33.111" starttime="20201223 02:26:33.107"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:26:33.113" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-64.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:27:04.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:27:04.381" level="INFO">${output} = 2020-12-23 02:26:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-12-23 02:26:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
202...</msg>
<status status="PASS" endtime="20201223 02:27:04.381" starttime="20201223 02:26:33.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:27:04.382" level="INFO">2020-12-23 02:26:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-12-23 02:26:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
2020-12-23 02:26:35 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690395387, maxDate=1609295195387, sequenceNumber=2, masterKeyId=2))
2020-12-23 02:26:35 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 98 d1 ad eb e8 2e 38 98 d9 df 8b eb 2e 40 02 48 01 5a 0d 32 30 34 37 38 33 30 39 31 38 35 32 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-23 02:26:35 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690395387, maxDate=1609295195387, sequenceNumber=2, masterKeyId=2)
2020-12-23 02:26:35 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 02:26:35 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:26:35 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:26:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:26:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:26:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-738F097C286F-&gt;e665bff8-6f60-42ac-81f1-ffb4eb6651ef
2020-12-23 02:26:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 02:26:36 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:26:39 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:26:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608690236444_0002
2020-12-23 02:26:39 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.25.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 98 d1 ad eb e8 2e 38 98 d9 df 8b eb 2e 40 02 48 01 5a 0d 32 30 34 37 38 33 30 39 31 38 35 32 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1608690395387, maxDate=1609295195387, sequenceNumber=2, masterKeyId=2)]
2020-12-23 02:26:39 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 02:26:39 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 02:26:39 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-23 02:26:40 INFO  YarnClientImpl:329 - Submitted application application_1608690236444_0002
2020-12-23 02:26:40 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608690236444_0002/
2020-12-23 02:26:40 INFO  Job:1619 - Running job: job_1608690236444_0002
2020-12-23 02:26:47 INFO  Job:1640 - Job job_1608690236444_0002 running in uber mode : false
2020-12-23 02:26:47 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:26:56 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:26:58 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:27:02 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:27:03 INFO  Job:1658 - Job job_1608690236444_0002 completed successfully
2020-12-23 02:27:04 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128511
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39342
		Total time spent by all reduces in occupied slots (ms)=6648
		Total time spent by all map tasks (ms)=19671
		Total time spent by all reduce tasks (ms)=3324
		Total vcore-milliseconds taken by all map tasks=19671
		Total vcore-milliseconds taken by all reduce tasks=3324
		Total megabyte-milliseconds taken by all map tasks=40286208
		Total megabyte-milliseconds taken by all reduce tasks=6807552
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=962
		CPU time spent (ms)=6310
		Physical memory (bytes) snapshot=1458192384
		Virtual memory (bytes) snapshot=14040907776
		Total committed heap usage (bytes)=1267204096
		Peak Map Physical memory (bytes)=389885952
		Peak Map Virtual memory (bytes)=3506995200
		Peak Reduce Physical memory (bytes)=299270144
		Peak Reduce Virtual memory (bytes)=3524554752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 02:27:04.382" starttime="20201223 02:27:04.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:27:04.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:27:04.383" starttime="20201223 02:27:04.382"></status>
</kw>
<status status="PASS" endtime="20201223 02:27:04.383" starttime="20201223 02:26:33.112"></status>
</kw>
<msg timestamp="20201223 02:27:04.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:27:04.383" starttime="20201223 02:26:33.111"></status>
</kw>
<msg timestamp="20201223 02:27:04.384" level="INFO">${output} = 2020-12-23 02:26:35 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.3:8032
2020-12-23 02:26:35 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.4:10200
202...</msg>
<status status="PASS" endtime="20201223 02:27:04.384" starttime="20201223 02:26:33.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 02:27:04.384" starttime="20201223 02:27:04.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:27:04.385" starttime="20201223 02:27:04.384"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:27:04.385" critical="yes" starttime="20201223 02:26:33.084"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 02:27:04.386" starttime="20201223 02:25:55.125"></status>
</suite>
<status status="PASS" elapsedtime="184817" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
