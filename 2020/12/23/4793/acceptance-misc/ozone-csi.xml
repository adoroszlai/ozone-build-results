<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201223 01:52:41.993" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/csi.robot" id="s1" name="ozone-csi">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
</arguments>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:52:28.899" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:52:28.900" level="INFO">${rc} = 1</msg>
<msg timestamp="20201223 01:52:28.901" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:52:28.901" starttime="20201223 01:52:28.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:52:28.901" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:52:28.901" starttime="20201223 01:52:28.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:52:28.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201223 01:52:28.902" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201223 01:52:28.902" starttime="20201223 01:52:28.902"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:28.902" starttime="20201223 01:52:28.896"></status>
</kw>
<msg timestamp="20201223 01:52:28.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201223 01:52:28.903" starttime="20201223 01:52:28.895"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:28.903" starttime="20201223 01:52:28.895"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:28.903" starttime="20201223 01:52:28.895"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:52:29.908" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:52:29.910" level="INFO">${rc} = 1</msg>
<msg timestamp="20201223 01:52:29.910" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:52:29.910" starttime="20201223 01:52:29.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:52:29.911" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:52:29.911" starttime="20201223 01:52:29.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:52:29.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201223 01:52:29.911" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201223 01:52:29.911" starttime="20201223 01:52:29.911"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:29.912" starttime="20201223 01:52:29.905"></status>
</kw>
<msg timestamp="20201223 01:52:29.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201223 01:52:29.912" starttime="20201223 01:52:29.904"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:29.912" starttime="20201223 01:52:29.904"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:29.912" starttime="20201223 01:52:29.903"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:52:30.920" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:52:30.922" level="INFO">${rc} = 1</msg>
<msg timestamp="20201223 01:52:30.922" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:52:30.922" starttime="20201223 01:52:30.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:52:30.924" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:52:30.924" starttime="20201223 01:52:30.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:52:30.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201223 01:52:30.925" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201223 01:52:30.925" starttime="20201223 01:52:30.925"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:30.926" starttime="20201223 01:52:30.915"></status>
</kw>
<msg timestamp="20201223 01:52:30.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201223 01:52:30.926" starttime="20201223 01:52:30.915"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:30.926" starttime="20201223 01:52:30.913"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:30.926" starttime="20201223 01:52:30.913"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:52:31.931" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:52:31.932" level="INFO">${rc} = 1</msg>
<msg timestamp="20201223 01:52:31.932" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:52:31.933" starttime="20201223 01:52:31.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:52:31.933" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:52:31.933" starttime="20201223 01:52:31.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:52:31.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201223 01:52:31.934" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201223 01:52:31.934" starttime="20201223 01:52:31.934"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:31.935" starttime="20201223 01:52:31.928"></status>
</kw>
<msg timestamp="20201223 01:52:31.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201223 01:52:31.935" starttime="20201223 01:52:31.928"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:31.935" starttime="20201223 01:52:31.928"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:31.935" starttime="20201223 01:52:31.927"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:52:32.939" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:52:32.941" level="INFO">${rc} = 1</msg>
<msg timestamp="20201223 01:52:32.941" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:52:32.941" starttime="20201223 01:52:32.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:52:32.942" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:52:32.942" starttime="20201223 01:52:32.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:52:32.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201223 01:52:32.943" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201223 01:52:32.943" starttime="20201223 01:52:32.942"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:32.943" starttime="20201223 01:52:32.937"></status>
</kw>
<msg timestamp="20201223 01:52:32.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201223 01:52:32.943" starttime="20201223 01:52:32.937"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:32.943" starttime="20201223 01:52:32.936"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:32.944" starttime="20201223 01:52:32.935"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:52:33.948" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:52:33.950" level="INFO">${rc} = 1</msg>
<msg timestamp="20201223 01:52:33.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:52:33.950" starttime="20201223 01:52:33.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:52:33.951" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:52:33.951" starttime="20201223 01:52:33.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:52:33.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201223 01:52:33.952" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201223 01:52:33.952" starttime="20201223 01:52:33.951"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:33.952" starttime="20201223 01:52:33.946"></status>
</kw>
<msg timestamp="20201223 01:52:33.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201223 01:52:33.952" starttime="20201223 01:52:33.945"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:33.952" starttime="20201223 01:52:33.945"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:33.953" starttime="20201223 01:52:33.944"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:52:34.957" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:52:34.959" level="INFO">${rc} = 1</msg>
<msg timestamp="20201223 01:52:34.959" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:52:34.959" starttime="20201223 01:52:34.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:52:34.960" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:52:34.961" starttime="20201223 01:52:34.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:52:34.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20201223 01:52:34.962" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20201223 01:52:34.962" starttime="20201223 01:52:34.962"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:34.963" starttime="20201223 01:52:34.955"></status>
</kw>
<msg timestamp="20201223 01:52:34.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20201223 01:52:34.963" starttime="20201223 01:52:34.954"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:34.963" starttime="20201223 01:52:34.954"></status>
</kw>
<status status="FAIL" endtime="20201223 01:52:34.963" starttime="20201223 01:52:34.953"></status>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arguments>
<arg>[ -S /tmp/csi.sock ]</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:52:35.967" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:52:35.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:52:35.969" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:52:35.969" starttime="20201223 01:52:35.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:52:35.970" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:52:35.970" starttime="20201223 01:52:35.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:52:35.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:52:35.970" starttime="20201223 01:52:35.970"></status>
</kw>
<status status="PASS" endtime="20201223 01:52:35.970" starttime="20201223 01:52:35.965"></status>
</kw>
<msg timestamp="20201223 01:52:35.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:52:35.971" starttime="20201223 01:52:35.965"></status>
</kw>
<status status="PASS" endtime="20201223 01:52:35.971" starttime="20201223 01:52:35.964"></status>
</kw>
<status status="PASS" endtime="20201223 01:52:35.971" starttime="20201223 01:52:35.964"></status>
</kw>
<status status="PASS" endtime="20201223 01:52:35.971" starttime="20201223 01:52:28.894"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201223 01:52:35.971" critical="yes" starttime="20201223 01:52:28.894"></status>
</test>
<test id="s1-t2" name="Test CSI identitiy service">
<kw name="Execute" library="os">
<arguments>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:52:35.975" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:52:36.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:52:36.212" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201223 01:52:36.212" starttime="20201223 01:52:35.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:52:36.213" level="INFO">"org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201223 01:52:36.213" starttime="20201223 01:52:36.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:52:36.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:52:36.214" starttime="20201223 01:52:36.213"></status>
</kw>
<status status="PASS" endtime="20201223 01:52:36.214" starttime="20201223 01:52:35.973"></status>
</kw>
<msg timestamp="20201223 01:52:36.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:52:36.214" starttime="20201223 01:52:35.973"></status>
</kw>
<msg timestamp="20201223 01:52:36.214" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.1.0-SNAPSHOT"</msg>
<status status="PASS" endtime="20201223 01:52:36.214" starttime="20201223 01:52:35.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
</arguments>
<status status="PASS" endtime="20201223 01:52:36.215" starttime="20201223 01:52:36.214"></status>
</kw>
<timeout value="1 minute"></timeout>
<status status="PASS" endtime="20201223 01:52:36.215" critical="yes" starttime="20201223 01:52:35.972"></status>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" endtime="20201223 01:52:36.216" starttime="20201223 01:52:28.846"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-csi" pass="2">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
