<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201223 02:09:27.181" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:27.301" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:29.314" level="INFO">${rc} = 255</msg>
<msg timestamp="20201223 01:57:29.314" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 01:57:29.314" starttime="20201223 01:57:27.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:29.315" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 01:57:29.315" starttime="20201223 01:57:29.314"></status>
</kw>
<msg timestamp="20201223 01:57:29.315" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 01:57:29.315" starttime="20201223 01:57:27.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:29.320" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:31.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:57:31.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:57:31.238" starttime="20201223 01:57:29.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:31.239" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:57:31.239" starttime="20201223 01:57:31.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:57:31.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:57:31.239" starttime="20201223 01:57:31.239"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:31.240" starttime="20201223 01:57:29.317"></status>
</kw>
<msg timestamp="20201223 01:57:31.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:57:31.240" starttime="20201223 01:57:29.317"></status>
</kw>
<msg timestamp="20201223 01:57:31.240" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201223 01:57:31.240" starttime="20201223 01:57:29.316"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201223 01:57:31.241" starttime="20201223 01:57:31.240"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:31.241" starttime="20201223 01:57:29.316"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:31.241" starttime="20201223 01:57:29.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:31.246" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:32.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:57:32.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:57:32.950" starttime="20201223 01:57:31.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:32.951" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:57:32.951" starttime="20201223 01:57:32.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:57:32.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:57:32.952" starttime="20201223 01:57:32.952"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:32.952" starttime="20201223 01:57:31.243"></status>
</kw>
<msg timestamp="20201223 01:57:32.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:57:32.952" starttime="20201223 01:57:31.242"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:32.953" starttime="20201223 01:57:31.242"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:32.953" starttime="20201223 01:57:31.241"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:32.953" starttime="20201223 01:57:31.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201223 01:57:32.953" starttime="20201223 01:57:32.953"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:32.957" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:34.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:57:34.697" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T01:57:32.913Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 01:57:34.697" starttime="20201223 01:57:32.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:34.698" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T01:57:32.913Z",
  "modificationTime" : "2020-12-23T01:57:32.913Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201223 01:57:34.698" starttime="20201223 01:57:34.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:57:34.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:57:34.699" starttime="20201223 01:57:34.698"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:34.699" starttime="20201223 01:57:32.954"></status>
</kw>
<msg timestamp="20201223 01:57:34.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:57:34.699" starttime="20201223 01:57:32.954"></status>
</kw>
<msg timestamp="20201223 01:57:34.699" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T01:57:32.913Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 01:57:34.699" starttime="20201223 01:57:32.953"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201223 01:57:34.700" starttime="20201223 01:57:34.700"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 01:57:34.703" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 01:57:34.703" starttime="20201223 01:57:34.703"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:57:34.704" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 01:57:34.704" starttime="20201223 01:57:34.704"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:34.704" starttime="20201223 01:57:34.703"></status>
</kw>
<msg timestamp="20201223 01:57:34.704" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 01:57:34.704" starttime="20201223 01:57:34.702"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:34.705" starttime="20201223 01:57:34.701"></status>
</kw>
<msg timestamp="20201223 01:57:34.705" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 01:57:34.705" starttime="20201223 01:57:34.701"></status>
</kw>
<msg timestamp="20201223 01:57:34.705" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 01:57:34.705" starttime="20201223 01:57:34.700"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:34.708" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:36.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:57:36.670" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:57:36.670" starttime="20201223 01:57:34.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:36.671" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:57:36.671" starttime="20201223 01:57:36.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:57:36.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:57:36.672" starttime="20201223 01:57:36.672"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:36.672" starttime="20201223 01:57:34.706"></status>
</kw>
<msg timestamp="20201223 01:57:36.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:57:36.673" starttime="20201223 01:57:34.705"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:36.673" starttime="20201223 01:57:34.705"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:36.677" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:41.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:57:41.657" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:57:41.657" starttime="20201223 01:57:36.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:41.658" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:57:41.658" starttime="20201223 01:57:41.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:57:41.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:57:41.659" starttime="20201223 01:57:41.658"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:41.659" starttime="20201223 01:57:36.675"></status>
</kw>
<msg timestamp="20201223 01:57:41.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:57:41.659" starttime="20201223 01:57:36.674"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:41.659" starttime="20201223 01:57:36.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:41.663" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:45.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:57:45.142" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:57:45.142" starttime="20201223 01:57:41.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:45.143" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:57:45.143" starttime="20201223 01:57:45.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:57:45.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:57:45.144" starttime="20201223 01:57:45.144"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:45.144" starttime="20201223 01:57:41.660"></status>
</kw>
<msg timestamp="20201223 01:57:45.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:57:45.144" starttime="20201223 01:57:41.660"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:45.145" starttime="20201223 01:57:41.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:45.148" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:48.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:57:48.523" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:57:48.523" starttime="20201223 01:57:45.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:48.524" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:57:48.525" starttime="20201223 01:57:48.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:57:48.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:57:48.525" starttime="20201223 01:57:48.525"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:48.525" starttime="20201223 01:57:45.146"></status>
</kw>
<msg timestamp="20201223 01:57:48.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:57:48.526" starttime="20201223 01:57:45.145"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:48.526" starttime="20201223 01:57:45.145"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 01:57:48.526" critical="yes" starttime="20201223 01:57:27.296"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 01:57:48.530" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 01:57:48.530" starttime="20201223 01:57:48.530"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:57:48.531" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 01:57:48.531" starttime="20201223 01:57:48.530"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:48.531" starttime="20201223 01:57:48.529"></status>
</kw>
<msg timestamp="20201223 01:57:48.531" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 01:57:48.531" starttime="20201223 01:57:48.529"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:48.531" starttime="20201223 01:57:48.528"></status>
</kw>
<msg timestamp="20201223 01:57:48.531" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 01:57:48.531" starttime="20201223 01:57:48.528"></status>
</kw>
<msg timestamp="20201223 01:57:48.532" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 01:57:48.532" starttime="20201223 01:57:48.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:48.536" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:50.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:57:50.287" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:57:50.287" starttime="20201223 01:57:48.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:50.288" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:57:50.288" starttime="20201223 01:57:50.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:57:50.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:57:50.289" starttime="20201223 01:57:50.288"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:50.289" starttime="20201223 01:57:48.532"></status>
</kw>
<msg timestamp="20201223 01:57:50.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:57:50.289" starttime="20201223 01:57:48.532"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:50.290" starttime="20201223 01:57:48.532"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:50.294" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:57:52.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:57:52.244" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 01:57:52.244" starttime="20201223 01:57:50.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:57:52.245" level="INFO"></msg>
<status status="PASS" endtime="20201223 01:57:52.245" starttime="20201223 01:57:52.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:57:52.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:57:52.246" starttime="20201223 01:57:52.245"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:52.246" starttime="20201223 01:57:50.290"></status>
</kw>
<msg timestamp="20201223 01:57:52.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:57:52.247" starttime="20201223 01:57:50.290"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:52.247" starttime="20201223 01:57:50.290"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 01:57:52.247" critical="yes" starttime="20201223 01:57:48.527"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201223 01:57:52.248" starttime="20201223 01:57:27.250"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 01:59:18.366" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 01:59:18.366" starttime="20201223 01:59:18.365"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:59:18.366" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 01:59:18.366" starttime="20201223 01:59:18.366"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:18.366" starttime="20201223 01:59:18.365"></status>
</kw>
<msg timestamp="20201223 01:59:18.367" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 01:59:18.367" starttime="20201223 01:59:18.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 01:59:18.367" starttime="20201223 01:59:18.367"></status>
</kw>
<msg timestamp="20201223 01:59:18.367" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 01:59:18.368" starttime="20201223 01:59:18.367"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:18.368" starttime="20201223 01:59:18.364"></status>
</kw>
<msg timestamp="20201223 01:59:18.368" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 01:59:18.368" starttime="20201223 01:59:18.363"></status>
</kw>
<msg timestamp="20201223 01:59:18.368" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 01:59:18.368" starttime="20201223 01:59:18.363"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 01:59:18.369" level="INFO">${random} = 97360</msg>
<status status="PASS" endtime="20201223 01:59:18.369" starttime="20201223 01:59:18.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:59:18.373" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-97360 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:59:21.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:59:21.229" level="INFO">${output} = 2020-12-23 01:59:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:59:20 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 ...</msg>
<status status="PASS" endtime="20201223 01:59:21.229" starttime="20201223 01:59:18.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:59:21.230" level="INFO">2020-12-23 01:59:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:59:20 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 01:59:20 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 01:59:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 01:59:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E38F53E0F3A0-&gt;1d7a30e0-6bf8-47ec-b756-eba7394b6498
2020-12-23 01:59:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 01:59:21.231" starttime="20201223 01:59:21.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:59:21.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:59:21.231" starttime="20201223 01:59:21.231"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:21.232" starttime="20201223 01:59:18.369"></status>
</kw>
<msg timestamp="20201223 01:59:21.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:59:21.232" starttime="20201223 01:59:18.369"></status>
</kw>
<msg timestamp="20201223 01:59:21.232" level="INFO">${result} = 2020-12-23 01:59:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:59:20 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 ...</msg>
<status status="PASS" endtime="20201223 01:59:21.232" starttime="20201223 01:59:18.369"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:59:21.237" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:59:22.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:59:22.681" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 01:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 01:58 ofs://om/volume1/bucket1/ozone-38206
-rw-...</msg>
<status status="PASS" endtime="20201223 01:59:22.681" starttime="20201223 01:59:21.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:59:22.682" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 01:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 01:58 ofs://om/volume1/bucket1/ozone-38206
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 01:59 ofs://om/volume1/bucket1/ozone-97360
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 01:57 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 01:58 ofs://om/volume1/bucket1/wordcount-28.txt</msg>
<status status="PASS" endtime="20201223 01:59:22.682" starttime="20201223 01:59:22.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:59:22.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:59:22.683" starttime="20201223 01:59:22.682"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:22.683" starttime="20201223 01:59:21.234"></status>
</kw>
<msg timestamp="20201223 01:59:22.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:59:22.683" starttime="20201223 01:59:21.234"></status>
</kw>
<msg timestamp="20201223 01:59:22.683" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 01:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 01:58 ofs://om/volume1/bucket1/ozone-38206
-rw-...</msg>
<status status="PASS" endtime="20201223 01:59:22.684" starttime="20201223 01:59:21.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 01:59:22.684" starttime="20201223 01:59:22.684"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 01:59:22.684" critical="yes" starttime="20201223 01:59:18.362"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 01:59:22.685" starttime="20201223 01:59:18.318"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 01:57:56.628" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 01:57:56.628" starttime="20201223 01:57:56.627"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:57:56.628" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 01:57:56.628" starttime="20201223 01:57:56.628"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:56.629" starttime="20201223 01:57:56.627"></status>
</kw>
<msg timestamp="20201223 01:57:56.629" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 01:57:56.629" starttime="20201223 01:57:56.627"></status>
</kw>
<status status="PASS" endtime="20201223 01:57:56.629" starttime="20201223 01:57:56.626"></status>
</kw>
<msg timestamp="20201223 01:57:56.629" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 01:57:56.629" starttime="20201223 01:57:56.626"></status>
</kw>
<msg timestamp="20201223 01:57:56.629" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 01:57:56.629" starttime="20201223 01:57:56.625"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 01:57:56.630" level="INFO">${random} = 38206</msg>
<status status="PASS" endtime="20201223 01:57:56.630" starttime="20201223 01:57:56.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:57:56.634" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-38206 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:58:02.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:58:02.125" level="INFO">${output} = 2020-12-23 01:57:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:57:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 ...</msg>
<status status="PASS" endtime="20201223 01:58:02.125" starttime="20201223 01:57:56.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:58:02.126" level="INFO">2020-12-23 01:57:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:57:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 01:57:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 01:57:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 01:57:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FD66828C548B-&gt;1d7a30e0-6bf8-47ec-b756-eba7394b6498
2020-12-23 01:57:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 01:58:02.126" starttime="20201223 01:58:02.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:58:02.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:58:02.127" starttime="20201223 01:58:02.126"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:02.127" starttime="20201223 01:57:56.630"></status>
</kw>
<msg timestamp="20201223 01:58:02.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:58:02.127" starttime="20201223 01:57:56.630"></status>
</kw>
<msg timestamp="20201223 01:58:02.127" level="INFO">${result} = 2020-12-23 01:57:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:57:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 ...</msg>
<status status="PASS" endtime="20201223 01:58:02.127" starttime="20201223 01:57:56.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:58:02.132" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:58:03.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:58:03.650" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 01:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 01:58 o3fs://bucket1.volume1.om/ozone-38206
dr...</msg>
<status status="PASS" endtime="20201223 01:58:03.650" starttime="20201223 01:58:02.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:58:03.651" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 01:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 01:58 o3fs://bucket1.volume1.om/ozone-38206
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 01:57 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 01:58:03.651" starttime="20201223 01:58:03.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:58:03.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:58:03.652" starttime="20201223 01:58:03.651"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:03.652" starttime="20201223 01:58:02.129"></status>
</kw>
<msg timestamp="20201223 01:58:03.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:58:03.652" starttime="20201223 01:58:02.128"></status>
</kw>
<msg timestamp="20201223 01:58:03.652" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 01:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2020-12-23 01:58 o3fs://bucket1.volume1.om/ozone-38206
dr...</msg>
<status status="PASS" endtime="20201223 01:58:03.652" starttime="20201223 01:58:02.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 01:58:03.653" starttime="20201223 01:58:03.653"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 01:58:03.653" critical="yes" starttime="20201223 01:57:56.624"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 01:58:03.654" starttime="20201223 01:57:56.580"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:59:26.827" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:59:26.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:59:26.831" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:59:26.831" starttime="20201223 01:59:26.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:59:26.832" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:59:26.832" starttime="20201223 01:59:26.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:59:26.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:59:26.832" starttime="20201223 01:59:26.832"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:26.833" starttime="20201223 01:59:26.823"></status>
</kw>
<msg timestamp="20201223 01:59:26.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:59:26.833" starttime="20201223 01:59:26.823"></status>
</kw>
<msg timestamp="20201223 01:59:26.833" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:59:26.833" starttime="20201223 01:59:26.822"></status>
</kw>
<msg timestamp="20201223 01:59:26.833" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:59:26.833" starttime="20201223 01:59:26.822"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 01:59:26.837" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 01:59:26.837" starttime="20201223 01:59:26.837"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:59:26.838" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 01:59:26.838" starttime="20201223 01:59:26.838"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:26.838" starttime="20201223 01:59:26.836"></status>
</kw>
<msg timestamp="20201223 01:59:26.838" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 01:59:26.838" starttime="20201223 01:59:26.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 01:59:26.839" starttime="20201223 01:59:26.839"></status>
</kw>
<msg timestamp="20201223 01:59:26.839" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 01:59:26.839" starttime="20201223 01:59:26.838"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:26.839" starttime="20201223 01:59:26.835"></status>
</kw>
<msg timestamp="20201223 01:59:26.840" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 01:59:26.840" starttime="20201223 01:59:26.834"></status>
</kw>
<msg timestamp="20201223 01:59:26.840" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 01:59:26.840" starttime="20201223 01:59:26.833"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:59:26.843" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:59:57.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:59:57.100" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 01:59:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:59:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201223 01:59:57.100" starttime="20201223 01:59:26.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:59:57.101" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 01:59:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:59:28 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 01:59:28 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 01:59:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 01:59:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C4332E113F34-&gt;1d7a30e0-6bf8-47ec-b756-eba7394b6498
2020-12-23 01:59:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 01:59:29 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-12-23 01:59:29 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 01:59:29 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-23 01:59:29 INFO  JobSubmitter:198 - number of splits:3
2020-12-23 01:59:30 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608688614393_0003
2020-12-23 01:59:30 INFO  YarnClientImpl:273 - Submitted application application_1608688614393_0003
2020-12-23 01:59:30 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608688614393_0003/
2020-12-23 01:59:30 INFO  Job:1339 - Running job: job_1608688614393_0003
2020-12-23 01:59:37 INFO  Job:1360 - Job job_1608688614393_0003 running in uber mode : false
2020-12-23 01:59:37 INFO  Job:1367 -  map 0% reduce 0%
2020-12-23 01:59:42 INFO  Job:1367 -  map 33% reduce 0%
2020-12-23 01:59:47 INFO  Job:1367 -  map 67% reduce 0%
2020-12-23 01:59:51 INFO  Job:1367 -  map 100% reduce 0%
2020-12-23 01:59:56 INFO  Job:1367 -  map 100% reduce 100%
2020-12-23 01:59:56 INFO  Job:1378 - Job job_1608688614393_0003 completed successfully
2020-12-23 01:59:56 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610709
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=32568
		Total time spent by all reduces in occupied slots (ms)=12828
		Total time spent by all map tasks (ms)=8142
		Total time spent by all reduce tasks (ms)=3207
		Total vcore-milliseconds taken by all map tasks=8142
		Total vcore-milliseconds taken by all reduce tasks=3207
		Total megabyte-milliseconds taken by all map tasks=33349632
		Total megabyte-milliseconds taken by all reduce tasks=13135872
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=544
		CPU time spent (ms)=5590
		Physical memory (bytes) snapshot=1148051456
		Virtual memory (bytes) snapshot=15772860416
		Total committed heap usage (bytes)=1059586048
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 27.174 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 01:59:57.101" starttime="20201223 01:59:57.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:59:57.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:59:57.102" starttime="20201223 01:59:57.102"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.102" starttime="20201223 01:59:26.841"></status>
</kw>
<msg timestamp="20201223 01:59:57.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:59:57.102" starttime="20201223 01:59:26.840"></status>
</kw>
<msg timestamp="20201223 01:59:57.103" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 01:59:28 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:59:28 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201223 01:59:57.103" starttime="20201223 01:59:26.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 01:59:57.103" starttime="20201223 01:59:57.103"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 01:59:57.103" critical="yes" starttime="20201223 01:59:26.821"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:59:57.108" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:59:57.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:59:57.113" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:59:57.113" starttime="20201223 01:59:57.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:59:57.113" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:59:57.114" starttime="20201223 01:59:57.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:59:57.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:59:57.114" starttime="20201223 01:59:57.114"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.114" starttime="20201223 01:59:57.106"></status>
</kw>
<msg timestamp="20201223 01:59:57.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:59:57.115" starttime="20201223 01:59:57.106"></status>
</kw>
<msg timestamp="20201223 01:59:57.115" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:59:57.115" starttime="20201223 01:59:57.105"></status>
</kw>
<msg timestamp="20201223 01:59:57.115" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:59:57.115" starttime="20201223 01:59:57.105"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 01:59:57.116" level="INFO">${random} = 89</msg>
<status status="PASS" endtime="20201223 01:59:57.116" starttime="20201223 01:59:57.115"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 01:59:57.119" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 01:59:57.119" starttime="20201223 01:59:57.119"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:59:57.120" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 01:59:57.120" starttime="20201223 01:59:57.119"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.120" starttime="20201223 01:59:57.118"></status>
</kw>
<msg timestamp="20201223 01:59:57.120" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 01:59:57.120" starttime="20201223 01:59:57.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 01:59:57.121" starttime="20201223 01:59:57.120"></status>
</kw>
<msg timestamp="20201223 01:59:57.121" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 01:59:57.121" starttime="20201223 01:59:57.120"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.121" starttime="20201223 01:59:57.117"></status>
</kw>
<msg timestamp="20201223 01:59:57.121" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 01:59:57.121" starttime="20201223 01:59:57.116"></status>
</kw>
<msg timestamp="20201223 01:59:57.121" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 01:59:57.121" starttime="20201223 01:59:57.116"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 01:59:57.124" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 01:59:57.124" starttime="20201223 01:59:57.124"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:59:57.125" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 01:59:57.125" starttime="20201223 01:59:57.124"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.125" starttime="20201223 01:59:57.124"></status>
</kw>
<msg timestamp="20201223 01:59:57.125" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 01:59:57.125" starttime="20201223 01:59:57.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 01:59:57.126" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201223 01:59:57.126" starttime="20201223 01:59:57.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:59:57.127" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201223 01:59:57.127" starttime="20201223 01:59:57.127"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.127" starttime="20201223 01:59:57.126"></status>
</kw>
<msg timestamp="20201223 01:59:57.127" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201223 01:59:57.127" starttime="20201223 01:59:57.125"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.128" starttime="20201223 01:59:57.123"></status>
</kw>
<msg timestamp="20201223 01:59:57.128" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 01:59:57.128" starttime="20201223 01:59:57.122"></status>
</kw>
<msg timestamp="20201223 01:59:57.128" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 01:59:57.128" starttime="20201223 01:59:57.122"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 01:59:57.131" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 01:59:57.131" starttime="20201223 01:59:57.131"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:59:57.132" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 01:59:57.132" starttime="20201223 01:59:57.131"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.132" starttime="20201223 01:59:57.130"></status>
</kw>
<msg timestamp="20201223 01:59:57.132" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 01:59:57.132" starttime="20201223 01:59:57.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 01:59:57.133" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201223 01:59:57.133" starttime="20201223 01:59:57.133"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:59:57.134" level="INFO">${result} = /wordcount-89.txt</msg>
<status status="PASS" endtime="20201223 01:59:57.134" starttime="20201223 01:59:57.133"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.134" starttime="20201223 01:59:57.132"></status>
</kw>
<msg timestamp="20201223 01:59:57.134" level="INFO">${path_with_leading} = /wordcount-89.txt</msg>
<status status="PASS" endtime="20201223 01:59:57.134" starttime="20201223 01:59:57.132"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:57.134" starttime="20201223 01:59:57.129"></status>
</kw>
<msg timestamp="20201223 01:59:57.134" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-89.txt</msg>
<status status="PASS" endtime="20201223 01:59:57.134" starttime="20201223 01:59:57.129"></status>
</kw>
<msg timestamp="20201223 01:59:57.135" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-89.txt</msg>
<status status="PASS" endtime="20201223 01:59:57.135" starttime="20201223 01:59:57.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:59:57.138" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-89.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:00:29.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:00:29.066" level="INFO">${output} = 2020-12-23 01:59:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-12-23 01:59:58 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201223 02:00:29.066" starttime="20201223 01:59:57.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:00:29.067" level="INFO">2020-12-23 01:59:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-12-23 01:59:58 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 01:59:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:59:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 01:59:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 01:59:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 01:59:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DE70B6E991DE-&gt;1d7a30e0-6bf8-47ec-b756-eba7394b6498
2020-12-23 01:59:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 01:59:59 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-23 02:00:00 INFO  JobSubmitter:198 - number of splits:3
2020-12-23 02:00:00 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608688614393_0004
2020-12-23 02:00:00 INFO  YarnClientImpl:273 - Submitted application application_1608688614393_0004
2020-12-23 02:00:00 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608688614393_0004/
2020-12-23 02:00:00 INFO  Job:1339 - Running job: job_1608688614393_0004
2020-12-23 02:00:08 INFO  Job:1360 - Job job_1608688614393_0004 running in uber mode : false
2020-12-23 02:00:08 INFO  Job:1367 -  map 0% reduce 0%
2020-12-23 02:00:14 INFO  Job:1367 -  map 33% reduce 0%
2020-12-23 02:00:18 INFO  Job:1367 -  map 67% reduce 0%
2020-12-23 02:00:22 INFO  Job:1367 -  map 100% reduce 0%
2020-12-23 02:00:25 INFO  Job:1367 -  map 100% reduce 100%
2020-12-23 02:00:28 INFO  Job:1378 - Job job_1608688614393_0004 completed successfully
2020-12-23 02:00:28 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673471
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33872
		Total time spent by all reduces in occupied slots (ms)=12424
		Total time spent by all map tasks (ms)=8468
		Total time spent by all reduce tasks (ms)=3106
		Total vcore-milliseconds taken by all map tasks=8468
		Total vcore-milliseconds taken by all reduce tasks=3106
		Total megabyte-milliseconds taken by all map tasks=34684928
		Total megabyte-milliseconds taken by all reduce tasks=12722176
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=5670
		Physical memory (bytes) snapshot=1178841088
		Virtual memory (bytes) snapshot=15753347072
		Total committed heap usage (bytes)=1101529088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 02:00:29.067" starttime="20201223 02:00:29.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:00:29.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:00:29.068" starttime="20201223 02:00:29.067"></status>
</kw>
<status status="PASS" endtime="20201223 02:00:29.068" starttime="20201223 01:59:57.135"></status>
</kw>
<msg timestamp="20201223 02:00:29.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:00:29.068" starttime="20201223 01:59:57.135"></status>
</kw>
<msg timestamp="20201223 02:00:29.068" level="INFO">${output} = 2020-12-23 01:59:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-12-23 01:59:58 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201223 02:00:29.068" starttime="20201223 01:59:57.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 02:00:29.069" starttime="20201223 02:00:29.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:00:29.069" starttime="20201223 02:00:29.069"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:00:29.070" critical="yes" starttime="20201223 01:59:57.104"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 02:00:29.071" starttime="20201223 01:59:26.775"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:58:07.691" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:58:07.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:58:07.697" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:58:07.697" starttime="20201223 01:58:07.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:58:07.697" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:58:07.697" starttime="20201223 01:58:07.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:58:07.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:58:07.698" starttime="20201223 01:58:07.698"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:07.698" starttime="20201223 01:58:07.687"></status>
</kw>
<msg timestamp="20201223 01:58:07.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:58:07.698" starttime="20201223 01:58:07.686"></status>
</kw>
<msg timestamp="20201223 01:58:07.699" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:58:07.699" starttime="20201223 01:58:07.686"></status>
</kw>
<msg timestamp="20201223 01:58:07.699" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:58:07.699" starttime="20201223 01:58:07.686"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 01:58:07.703" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 01:58:07.703" starttime="20201223 01:58:07.702"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:58:07.703" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 01:58:07.703" starttime="20201223 01:58:07.703"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:07.704" starttime="20201223 01:58:07.701"></status>
</kw>
<msg timestamp="20201223 01:58:07.704" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 01:58:07.704" starttime="20201223 01:58:07.701"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:07.704" starttime="20201223 01:58:07.700"></status>
</kw>
<msg timestamp="20201223 01:58:07.704" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 01:58:07.705" starttime="20201223 01:58:07.700"></status>
</kw>
<msg timestamp="20201223 01:58:07.705" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 01:58:07.705" starttime="20201223 01:58:07.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:58:07.708" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:58:42.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:58:42.630" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 01:58:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:58:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201223 01:58:42.631" starttime="20201223 01:58:07.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:58:42.632" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 01:58:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:58:09 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 01:58:09 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 01:58:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 01:58:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-531696A3DEC8-&gt;1d7a30e0-6bf8-47ec-b756-eba7394b6498
2020-12-23 01:58:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 01:58:10 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-12-23 01:58:10 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-23 01:58:10 INFO  JobSubmitter:198 - number of splits:3
2020-12-23 01:58:11 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608688614393_0001
2020-12-23 01:58:11 INFO  YarnClientImpl:273 - Submitted application application_1608688614393_0001
2020-12-23 01:58:11 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608688614393_0001/
2020-12-23 01:58:11 INFO  Job:1339 - Running job: job_1608688614393_0001
2020-12-23 01:58:20 INFO  Job:1360 - Job job_1608688614393_0001 running in uber mode : false
2020-12-23 01:58:20 INFO  Job:1367 -  map 0% reduce 0%
2020-12-23 01:58:26 INFO  Job:1367 -  map 33% reduce 0%
2020-12-23 01:58:31 INFO  Job:1367 -  map 67% reduce 0%
2020-12-23 01:58:35 INFO  Job:1367 -  map 100% reduce 0%
2020-12-23 01:58:38 INFO  Job:1367 -  map 100% reduce 100%
2020-12-23 01:58:42 INFO  Job:1378 - Job job_1608688614393_0001 completed successfully
2020-12-23 01:58:42 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33488
		Total time spent by all reduces in occupied slots (ms)=13068
		Total time spent by all map tasks (ms)=8372
		Total time spent by all reduce tasks (ms)=3267
		Total vcore-milliseconds taken by all map tasks=8372
		Total vcore-milliseconds taken by all reduce tasks=3267
		Total megabyte-milliseconds taken by all map tasks=34291712
		Total megabyte-milliseconds taken by all reduce tasks=13381632
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=553
		CPU time spent (ms)=5240
		Physical memory (bytes) snapshot=1127849984
		Virtual memory (bytes) snapshot=15757787136
		Total committed heap usage (bytes)=1054343168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.807 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 01:58:42.632" starttime="20201223 01:58:42.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:58:42.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:58:42.633" starttime="20201223 01:58:42.632"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:42.633" starttime="20201223 01:58:07.706"></status>
</kw>
<msg timestamp="20201223 01:58:42.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:58:42.633" starttime="20201223 01:58:07.705"></status>
</kw>
<msg timestamp="20201223 01:58:42.633" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 01:58:09 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:58:09 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20201223 01:58:42.633" starttime="20201223 01:58:07.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 01:58:42.634" starttime="20201223 01:58:42.634"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 01:58:42.634" critical="yes" starttime="20201223 01:58:07.685"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:58:42.638" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:58:42.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:58:42.644" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:58:42.644" starttime="20201223 01:58:42.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:58:42.645" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:58:42.645" starttime="20201223 01:58:42.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:58:42.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:58:42.646" starttime="20201223 01:58:42.645"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:42.646" starttime="20201223 01:58:42.636"></status>
</kw>
<msg timestamp="20201223 01:58:42.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:58:42.646" starttime="20201223 01:58:42.636"></status>
</kw>
<msg timestamp="20201223 01:58:42.646" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:58:42.646" starttime="20201223 01:58:42.636"></status>
</kw>
<msg timestamp="20201223 01:58:42.646" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20201223 01:58:42.647" starttime="20201223 01:58:42.635"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 01:58:42.647" level="INFO">${random} = 28</msg>
<status status="PASS" endtime="20201223 01:58:42.647" starttime="20201223 01:58:42.647"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 01:58:42.650" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 01:58:42.650" starttime="20201223 01:58:42.650"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:58:42.651" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 01:58:42.651" starttime="20201223 01:58:42.651"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:42.651" starttime="20201223 01:58:42.650"></status>
</kw>
<msg timestamp="20201223 01:58:42.651" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 01:58:42.651" starttime="20201223 01:58:42.649"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:42.652" starttime="20201223 01:58:42.648"></status>
</kw>
<msg timestamp="20201223 01:58:42.652" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 01:58:42.652" starttime="20201223 01:58:42.648"></status>
</kw>
<msg timestamp="20201223 01:58:42.652" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 01:58:42.652" starttime="20201223 01:58:42.647"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 01:58:42.655" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 01:58:42.655" starttime="20201223 01:58:42.655"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:58:42.655" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 01:58:42.655" starttime="20201223 01:58:42.655"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:42.656" starttime="20201223 01:58:42.654"></status>
</kw>
<msg timestamp="20201223 01:58:42.656" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 01:58:42.656" starttime="20201223 01:58:42.654"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:42.656" starttime="20201223 01:58:42.653"></status>
</kw>
<msg timestamp="20201223 01:58:42.656" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 01:58:42.656" starttime="20201223 01:58:42.653"></status>
</kw>
<msg timestamp="20201223 01:58:42.656" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 01:58:42.656" starttime="20201223 01:58:42.652"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 01:58:42.659" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 01:58:42.659" starttime="20201223 01:58:42.659"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 01:58:42.660" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 01:58:42.660" starttime="20201223 01:58:42.659"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:42.660" starttime="20201223 01:58:42.658"></status>
</kw>
<msg timestamp="20201223 01:58:42.660" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 01:58:42.660" starttime="20201223 01:58:42.658"></status>
</kw>
<status status="PASS" endtime="20201223 01:58:42.660" starttime="20201223 01:58:42.657"></status>
</kw>
<msg timestamp="20201223 01:58:42.661" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-28.txt</msg>
<status status="PASS" endtime="20201223 01:58:42.661" starttime="20201223 01:58:42.657"></status>
</kw>
<msg timestamp="20201223 01:58:42.661" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-28.txt</msg>
<status status="PASS" endtime="20201223 01:58:42.661" starttime="20201223 01:58:42.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 01:58:42.664" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-28.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 01:59:14.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 01:59:14.221" level="INFO">${output} = 2020-12-23 01:58:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-12-23 01:58:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201223 01:59:14.221" starttime="20201223 01:58:42.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 01:59:14.223" level="INFO">2020-12-23 01:58:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-12-23 01:58:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 01:58:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2020-12-23 01:58:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2020-12-23 01:58:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2020-12-23 01:58:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 01:58:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-85ACBBAAFA37-&gt;1d7a30e0-6bf8-47ec-b756-eba7394b6498
2020-12-23 01:58:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 01:58:45 INFO  FileInputFormat:283 - Total input paths to process : 3
2020-12-23 01:58:45 INFO  JobSubmitter:198 - number of splits:3
2020-12-23 01:58:48 INFO  JobSubmitter:287 - Submitting tokens for job: job_1608688614393_0002
2020-12-23 01:58:48 INFO  YarnClientImpl:273 - Submitted application application_1608688614393_0002
2020-12-23 01:58:48 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1608688614393_0002/
2020-12-23 01:58:48 INFO  Job:1339 - Running job: job_1608688614393_0002
2020-12-23 01:58:55 INFO  Job:1360 - Job job_1608688614393_0002 running in uber mode : false
2020-12-23 01:58:55 INFO  Job:1367 -  map 0% reduce 0%
2020-12-23 01:59:01 INFO  Job:1367 -  map 33% reduce 0%
2020-12-23 01:59:05 INFO  Job:1367 -  map 67% reduce 0%
2020-12-23 01:59:09 INFO  Job:1367 -  map 100% reduce 0%
2020-12-23 01:59:13 INFO  Job:1367 -  map 100% reduce 100%
2020-12-23 01:59:13 INFO  Job:1378 - Job job_1608688614393_0002 completed successfully
2020-12-23 01:59:13 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673555
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34116
		Total time spent by all reduces in occupied slots (ms)=12132
		Total time spent by all map tasks (ms)=8529
		Total time spent by all reduce tasks (ms)=3033
		Total vcore-milliseconds taken by all map tasks=8529
		Total vcore-milliseconds taken by all reduce tasks=3033
		Total megabyte-milliseconds taken by all map tasks=34934784
		Total megabyte-milliseconds taken by all reduce tasks=12423168
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=535
		CPU time spent (ms)=6190
		Physical memory (bytes) snapshot=1180356608
		Virtual memory (bytes) snapshot=15789780992
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 01:59:14.223" starttime="20201223 01:59:14.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 01:59:14.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 01:59:14.224" starttime="20201223 01:59:14.223"></status>
</kw>
<status status="PASS" endtime="20201223 01:59:14.224" starttime="20201223 01:58:42.662"></status>
</kw>
<msg timestamp="20201223 01:59:14.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 01:59:14.224" starttime="20201223 01:58:42.661"></status>
</kw>
<msg timestamp="20201223 01:59:14.225" level="INFO">${output} = 2020-12-23 01:58:44 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.20.0.7:8032
2020-12-23 01:58:44 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20201223 01:59:14.225" starttime="20201223 01:58:42.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 01:59:14.225" starttime="20201223 01:59:14.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 01:59:14.226" starttime="20201223 01:59:14.225"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 01:59:14.226" critical="yes" starttime="20201223 01:58:42.635"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 01:59:14.227" starttime="20201223 01:58:07.640"></status>
</suite>
<status status="PASS" elapsedtime="165322" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:33.113" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:35.096" level="INFO">${rc} = 255</msg>
<msg timestamp="20201223 02:01:35.096" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 02:01:35.096" starttime="20201223 02:01:33.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:35.097" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 02:01:35.098" starttime="20201223 02:01:35.097"></status>
</kw>
<msg timestamp="20201223 02:01:35.098" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 02:01:35.098" starttime="20201223 02:01:33.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:35.103" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:36.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:01:36.875" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:01:36.875" starttime="20201223 02:01:35.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:36.876" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:01:36.876" starttime="20201223 02:01:36.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:01:36.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:01:36.877" starttime="20201223 02:01:36.877"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:36.877" starttime="20201223 02:01:35.100"></status>
</kw>
<msg timestamp="20201223 02:01:36.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:01:36.877" starttime="20201223 02:01:35.099"></status>
</kw>
<msg timestamp="20201223 02:01:36.878" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201223 02:01:36.878" starttime="20201223 02:01:35.099"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201223 02:01:36.878" starttime="20201223 02:01:36.878"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:36.878" starttime="20201223 02:01:35.099"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:36.878" starttime="20201223 02:01:35.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:36.882" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:38.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:01:38.782" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:01:38.782" starttime="20201223 02:01:36.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:38.783" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:01:38.783" starttime="20201223 02:01:38.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:01:38.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:01:38.784" starttime="20201223 02:01:38.783"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:38.784" starttime="20201223 02:01:36.880"></status>
</kw>
<msg timestamp="20201223 02:01:38.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:01:38.784" starttime="20201223 02:01:36.880"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:38.784" starttime="20201223 02:01:36.879"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:38.784" starttime="20201223 02:01:36.879"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:38.784" starttime="20201223 02:01:36.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201223 02:01:38.785" starttime="20201223 02:01:38.785"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:38.788" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:40.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:01:40.684" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T02:01:38.642Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 02:01:40.684" starttime="20201223 02:01:38.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:40.685" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T02:01:38.642Z",
  "modificationTime" : "2020-12-23T02:01:38.642Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201223 02:01:40.685" starttime="20201223 02:01:40.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:01:40.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:01:40.686" starttime="20201223 02:01:40.685"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:40.686" starttime="20201223 02:01:38.786"></status>
</kw>
<msg timestamp="20201223 02:01:40.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:01:40.686" starttime="20201223 02:01:38.786"></status>
</kw>
<msg timestamp="20201223 02:01:40.686" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T02:01:38.642Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 02:01:40.686" starttime="20201223 02:01:38.785"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201223 02:01:40.687" starttime="20201223 02:01:40.687"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:01:40.690" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:01:40.690" starttime="20201223 02:01:40.690"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:01:40.691" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:01:40.691" starttime="20201223 02:01:40.690"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:40.691" starttime="20201223 02:01:40.689"></status>
</kw>
<msg timestamp="20201223 02:01:40.691" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:01:40.691" starttime="20201223 02:01:40.689"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:40.691" starttime="20201223 02:01:40.688"></status>
</kw>
<msg timestamp="20201223 02:01:40.691" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 02:01:40.691" starttime="20201223 02:01:40.688"></status>
</kw>
<msg timestamp="20201223 02:01:40.692" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 02:01:40.692" starttime="20201223 02:01:40.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:40.695" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:42.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:01:42.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:01:42.677" starttime="20201223 02:01:40.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:42.678" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:01:42.678" starttime="20201223 02:01:42.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:01:42.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:01:42.679" starttime="20201223 02:01:42.678"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:42.679" starttime="20201223 02:01:40.692"></status>
</kw>
<msg timestamp="20201223 02:01:42.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:01:42.679" starttime="20201223 02:01:40.692"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:42.679" starttime="20201223 02:01:40.692"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:42.686" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:47.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:01:47.379" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:01:47.379" starttime="20201223 02:01:42.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:47.380" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:01:47.380" starttime="20201223 02:01:47.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:01:47.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:01:47.381" starttime="20201223 02:01:47.380"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:47.381" starttime="20201223 02:01:42.680"></status>
</kw>
<msg timestamp="20201223 02:01:47.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:01:47.382" starttime="20201223 02:01:42.680"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:47.382" starttime="20201223 02:01:42.679"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:47.385" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:50.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:01:50.725" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:01:50.725" starttime="20201223 02:01:47.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:50.726" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:01:50.726" starttime="20201223 02:01:50.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:01:50.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:01:50.727" starttime="20201223 02:01:50.726"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:50.727" starttime="20201223 02:01:47.383"></status>
</kw>
<msg timestamp="20201223 02:01:50.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:01:50.728" starttime="20201223 02:01:47.382"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:50.728" starttime="20201223 02:01:47.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:50.731" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:53.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:01:53.953" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:01:53.953" starttime="20201223 02:01:50.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:53.954" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:01:53.954" starttime="20201223 02:01:53.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:01:53.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:01:53.955" starttime="20201223 02:01:53.955"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:53.955" starttime="20201223 02:01:50.729"></status>
</kw>
<msg timestamp="20201223 02:01:53.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:01:53.956" starttime="20201223 02:01:50.728"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:53.956" starttime="20201223 02:01:50.728"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 02:01:53.956" critical="yes" starttime="20201223 02:01:33.109"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:01:53.961" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:01:53.961" starttime="20201223 02:01:53.961"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:01:53.962" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:01:53.962" starttime="20201223 02:01:53.962"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:53.962" starttime="20201223 02:01:53.960"></status>
</kw>
<msg timestamp="20201223 02:01:53.962" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:01:53.962" starttime="20201223 02:01:53.960"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:53.962" starttime="20201223 02:01:53.959"></status>
</kw>
<msg timestamp="20201223 02:01:53.963" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 02:01:53.963" starttime="20201223 02:01:53.959"></status>
</kw>
<msg timestamp="20201223 02:01:53.963" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 02:01:53.963" starttime="20201223 02:01:53.958"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:53.971" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:55.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:01:55.841" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:01:55.841" starttime="20201223 02:01:53.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:55.842" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:01:55.842" starttime="20201223 02:01:55.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:01:55.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:01:55.842" starttime="20201223 02:01:55.842"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:55.843" starttime="20201223 02:01:53.964"></status>
</kw>
<msg timestamp="20201223 02:01:55.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:01:55.843" starttime="20201223 02:01:53.963"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:55.843" starttime="20201223 02:01:53.963"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:01:55.846" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:01:57.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:01:57.771" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:01:57.771" starttime="20201223 02:01:55.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:01:57.772" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:01:57.772" starttime="20201223 02:01:57.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:01:57.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:01:57.773" starttime="20201223 02:01:57.772"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:57.773" starttime="20201223 02:01:55.844"></status>
</kw>
<msg timestamp="20201223 02:01:57.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:01:57.773" starttime="20201223 02:01:55.844"></status>
</kw>
<status status="PASS" endtime="20201223 02:01:57.773" starttime="20201223 02:01:55.843"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 02:01:57.773" critical="yes" starttime="20201223 02:01:53.957"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201223 02:01:57.775" starttime="20201223 02:01:33.062"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:03:31.202" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:03:31.203" starttime="20201223 02:03:31.202"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:03:31.203" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:03:31.203" starttime="20201223 02:03:31.203"></status>
</kw>
<status status="PASS" endtime="20201223 02:03:31.203" starttime="20201223 02:03:31.202"></status>
</kw>
<msg timestamp="20201223 02:03:31.203" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:03:31.203" starttime="20201223 02:03:31.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:03:31.204" starttime="20201223 02:03:31.204"></status>
</kw>
<msg timestamp="20201223 02:03:31.204" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 02:03:31.204" starttime="20201223 02:03:31.203"></status>
</kw>
<status status="PASS" endtime="20201223 02:03:31.205" starttime="20201223 02:03:31.201"></status>
</kw>
<msg timestamp="20201223 02:03:31.205" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:03:31.205" starttime="20201223 02:03:31.200"></status>
</kw>
<msg timestamp="20201223 02:03:31.205" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:03:31.205" starttime="20201223 02:03:31.199"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:03:31.205" level="INFO">${random} = 54950</msg>
<status status="PASS" endtime="20201223 02:03:31.205" starttime="20201223 02:03:31.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:03:31.210" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-54950 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:03:34.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:03:34.350" level="INFO">${output} = 2020-12-23 02:03:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:03:34.350" starttime="20201223 02:03:31.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:03:34.351" level="INFO">2020-12-23 02:03:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:32 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 02:03:32 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 02:03:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:03:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:03:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:03:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B4CEBAB858D7-&gt;157b5479-cc84-4272-9cf6-809af298682a
2020-12-23 02:03:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 02:03:34 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 02:03:34.351" starttime="20201223 02:03:34.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:03:34.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:03:34.352" starttime="20201223 02:03:34.351"></status>
</kw>
<status status="PASS" endtime="20201223 02:03:34.352" starttime="20201223 02:03:31.206"></status>
</kw>
<msg timestamp="20201223 02:03:34.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:03:34.352" starttime="20201223 02:03:31.206"></status>
</kw>
<msg timestamp="20201223 02:03:34.352" level="INFO">${result} = 2020-12-23 02:03:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:32 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:03:34.353" starttime="20201223 02:03:31.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:03:34.357" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:03:35.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:03:35.990" level="INFO">${output} = 2020-12-23 02:03:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:03:35.990" starttime="20201223 02:03:34.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:03:35.991" level="INFO">2020-12-23 02:03:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:35 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:01 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-23 02:02 ofs://om/volume1/bucket1/ozone-50134
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-23 02:03 ofs://om/volume1/bucket1/ozone-54950
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:01 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:03 ofs://om/volume1/bucket1/wordcount-23.txt
2020-12-23 02:03:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 02:03:35.991" starttime="20201223 02:03:35.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:03:35.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:03:35.992" starttime="20201223 02:03:35.991"></status>
</kw>
<status status="PASS" endtime="20201223 02:03:35.992" starttime="20201223 02:03:34.354"></status>
</kw>
<msg timestamp="20201223 02:03:35.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:03:35.992" starttime="20201223 02:03:34.354"></status>
</kw>
<msg timestamp="20201223 02:03:35.993" level="INFO">${result} = 2020-12-23 02:03:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:35 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:35 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:03:35.993" starttime="20201223 02:03:34.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:03:35.993" starttime="20201223 02:03:35.993"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:03:35.993" critical="yes" starttime="20201223 02:03:31.198"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 02:03:35.994" starttime="20201223 02:03:31.155"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:02:01.853" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:02:01.854" starttime="20201223 02:02:01.853"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:02:01.854" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:02:01.854" starttime="20201223 02:02:01.854"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:01.854" starttime="20201223 02:02:01.853"></status>
</kw>
<msg timestamp="20201223 02:02:01.854" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:02:01.854" starttime="20201223 02:02:01.852"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:01.855" starttime="20201223 02:02:01.852"></status>
</kw>
<msg timestamp="20201223 02:02:01.855" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:02:01.855" starttime="20201223 02:02:01.851"></status>
</kw>
<msg timestamp="20201223 02:02:01.855" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:02:01.855" starttime="20201223 02:02:01.850"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:02:01.855" level="INFO">${random} = 50134</msg>
<status status="PASS" endtime="20201223 02:02:01.855" starttime="20201223 02:02:01.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:02:01.859" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-50134 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:02:05.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:02:05.120" level="INFO">${output} = 2020-12-23 02:02:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:02:05.120" starttime="20201223 02:02:01.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:02:05.121" level="INFO">2020-12-23 02:02:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:03 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:03 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 02:02:03 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 02:02:03 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:02:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:02:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:02:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-788EA0261C57-&gt;157b5479-cc84-4272-9cf6-809af298682a
2020-12-23 02:02:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 02:02:04 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 02:02:05.121" starttime="20201223 02:02:05.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:02:05.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:02:05.122" starttime="20201223 02:02:05.121"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:05.122" starttime="20201223 02:02:01.856"></status>
</kw>
<msg timestamp="20201223 02:02:05.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:02:05.122" starttime="20201223 02:02:01.856"></status>
</kw>
<msg timestamp="20201223 02:02:05.122" level="INFO">${result} = 2020-12-23 02:02:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:02 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:03 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:02:05.122" starttime="20201223 02:02:01.855"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:02:05.126" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:02:06.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:02:06.672" level="INFO">${output} = 2020-12-23 02:02:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:02:06.672" starttime="20201223 02:02:05.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:02:06.673" level="INFO">2020-12-23 02:02:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:06 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:01 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2020-12-23 02:02 o3fs://bucket1.volume1.om/ozone-50134
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:01 o3fs://bucket1.volume1.om/user
2020-12-23 02:02:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 02:02:06.673" starttime="20201223 02:02:06.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:02:06.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:02:06.674" starttime="20201223 02:02:06.673"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:06.674" starttime="20201223 02:02:05.124"></status>
</kw>
<msg timestamp="20201223 02:02:06.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:02:06.674" starttime="20201223 02:02:05.123"></status>
</kw>
<msg timestamp="20201223 02:02:06.674" level="INFO">${result} = 2020-12-23 02:02:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:05 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:06 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:02:06.674" starttime="20201223 02:02:05.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:02:06.675" starttime="20201223 02:02:06.674"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:02:06.675" critical="yes" starttime="20201223 02:02:01.850"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 02:02:06.676" starttime="20201223 02:02:01.806"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:03:41.700" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:03:41.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:03:41.706" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:03:41.706" starttime="20201223 02:03:41.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:03:41.707" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:03:41.707" starttime="20201223 02:03:41.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:03:41.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:03:41.708" starttime="20201223 02:03:41.707"></status>
</kw>
<status status="PASS" endtime="20201223 02:03:41.708" starttime="20201223 02:03:41.697"></status>
</kw>
<msg timestamp="20201223 02:03:41.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:03:41.708" starttime="20201223 02:03:41.697"></status>
</kw>
<msg timestamp="20201223 02:03:41.708" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:03:41.708" starttime="20201223 02:03:41.696"></status>
</kw>
<msg timestamp="20201223 02:03:41.708" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:03:41.708" starttime="20201223 02:03:41.696"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:03:41.713" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:03:41.713" starttime="20201223 02:03:41.712"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:03:41.713" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:03:41.713" starttime="20201223 02:03:41.713"></status>
</kw>
<status status="PASS" endtime="20201223 02:03:41.713" starttime="20201223 02:03:41.711"></status>
</kw>
<msg timestamp="20201223 02:03:41.713" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:03:41.713" starttime="20201223 02:03:41.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:03:41.714" starttime="20201223 02:03:41.714"></status>
</kw>
<msg timestamp="20201223 02:03:41.714" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 02:03:41.714" starttime="20201223 02:03:41.714"></status>
</kw>
<status status="PASS" endtime="20201223 02:03:41.715" starttime="20201223 02:03:41.710"></status>
</kw>
<msg timestamp="20201223 02:03:41.715" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:03:41.715" starttime="20201223 02:03:41.709"></status>
</kw>
<msg timestamp="20201223 02:03:41.715" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:03:41.715" starttime="20201223 02:03:41.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:03:41.718" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:04:18.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:04:18.514" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:03:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03...</msg>
<status status="PASS" endtime="20201223 02:04:18.514" starttime="20201223 02:03:41.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:04:18.515" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:03:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:43 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:43 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 02:03:43 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 02:03:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:03:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:03:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:03:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CF6AA3C1299E-&gt;157b5479-cc84-4272-9cf6-809af298682a
2020-12-23 02:03:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 02:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:44 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-12-23 02:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:44 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 02:03:44 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:44 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:03:47 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:03:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608688872073_0003
2020-12-23 02:03:50 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 02:03:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:50 INFO  Configuration:2752 - resource-types.xml not found
2020-12-23 02:03:50 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-23 02:03:50 INFO  YarnClientImpl:324 - Submitted application application_1608688872073_0003
2020-12-23 02:03:50 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608688872073_0003/
2020-12-23 02:03:50 INFO  Job:1619 - Running job: job_1608688872073_0003
2020-12-23 02:03:57 INFO  Job:1640 - Job job_1608688872073_0003 running in uber mode : false
2020-12-23 02:03:57 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:04:03 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:04:07 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:04:12 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:04:17 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:04:17 INFO  Job:1658 - Job job_1608688872073_0003 completed successfully
2020-12-23 02:04:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:17 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016157
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34180
		Total time spent by all reduces in occupied slots (ms)=12332
		Total time spent by all map tasks (ms)=8545
		Total time spent by all reduce tasks (ms)=3083
		Total vcore-milliseconds taken by all map tasks=8545
		Total vcore-milliseconds taken by all reduce tasks=3083
		Total megabyte-milliseconds taken by all map tasks=35000320
		Total megabyte-milliseconds taken by all reduce tasks=12627968
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=526
		CPU time spent (ms)=5370
		Physical memory (bytes) snapshot=1210761216
		Virtual memory (bytes) snapshot=15773798400
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=313110528
		Peak Map Virtual memory (bytes)=3943337984
		Peak Reduce Physical memory (bytes)=295874560
		Peak Reduce Virtual memory (bytes)=3962343424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.549 seconds
2020-12-23 02:04:17 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-23 02:04:18 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 02:04:18.515" starttime="20201223 02:04:18.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:04:18.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:04:18.516" starttime="20201223 02:04:18.515"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.516" starttime="20201223 02:03:41.716"></status>
</kw>
<msg timestamp="20201223 02:04:18.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:04:18.516" starttime="20201223 02:03:41.715"></status>
</kw>
<msg timestamp="20201223 02:04:18.517" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:03:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:42 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03...</msg>
<status status="PASS" endtime="20201223 02:04:18.517" starttime="20201223 02:03:41.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:04:18.517" starttime="20201223 02:04:18.517"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:04:18.517" critical="yes" starttime="20201223 02:03:41.695"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:04:18.523" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:04:18.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:04:18.529" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:04:18.529" starttime="20201223 02:04:18.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:04:18.529" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:04:18.529" starttime="20201223 02:04:18.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:04:18.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:04:18.530" starttime="20201223 02:04:18.530"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.530" starttime="20201223 02:04:18.521"></status>
</kw>
<msg timestamp="20201223 02:04:18.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:04:18.531" starttime="20201223 02:04:18.520"></status>
</kw>
<msg timestamp="20201223 02:04:18.531" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:04:18.531" starttime="20201223 02:04:18.520"></status>
</kw>
<msg timestamp="20201223 02:04:18.531" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:04:18.531" starttime="20201223 02:04:18.519"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:04:18.531" level="INFO">${random} = 06</msg>
<status status="PASS" endtime="20201223 02:04:18.532" starttime="20201223 02:04:18.531"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:04:18.535" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:04:18.535" starttime="20201223 02:04:18.535"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:04:18.536" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:04:18.536" starttime="20201223 02:04:18.535"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.536" starttime="20201223 02:04:18.534"></status>
</kw>
<msg timestamp="20201223 02:04:18.536" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:04:18.536" starttime="20201223 02:04:18.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:04:18.537" starttime="20201223 02:04:18.536"></status>
</kw>
<msg timestamp="20201223 02:04:18.537" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 02:04:18.537" starttime="20201223 02:04:18.536"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.537" starttime="20201223 02:04:18.533"></status>
</kw>
<msg timestamp="20201223 02:04:18.537" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:04:18.537" starttime="20201223 02:04:18.532"></status>
</kw>
<msg timestamp="20201223 02:04:18.537" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:04:18.537" starttime="20201223 02:04:18.532"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:04:18.540" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:04:18.541" starttime="20201223 02:04:18.540"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:04:18.541" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:04:18.541" starttime="20201223 02:04:18.541"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.541" starttime="20201223 02:04:18.540"></status>
</kw>
<msg timestamp="20201223 02:04:18.541" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:04:18.542" starttime="20201223 02:04:18.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:04:18.543" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201223 02:04:18.543" starttime="20201223 02:04:18.542"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:04:18.543" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201223 02:04:18.543" starttime="20201223 02:04:18.543"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.544" starttime="20201223 02:04:18.542"></status>
</kw>
<msg timestamp="20201223 02:04:18.544" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201223 02:04:18.544" starttime="20201223 02:04:18.542"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.544" starttime="20201223 02:04:18.539"></status>
</kw>
<msg timestamp="20201223 02:04:18.544" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 02:04:18.544" starttime="20201223 02:04:18.538"></status>
</kw>
<msg timestamp="20201223 02:04:18.545" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 02:04:18.545" starttime="20201223 02:04:18.537"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:04:18.548" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:04:18.548" starttime="20201223 02:04:18.548"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:04:18.549" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:04:18.549" starttime="20201223 02:04:18.548"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.549" starttime="20201223 02:04:18.547"></status>
</kw>
<msg timestamp="20201223 02:04:18.549" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:04:18.549" starttime="20201223 02:04:18.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:04:18.550" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201223 02:04:18.550" starttime="20201223 02:04:18.550"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:04:18.551" level="INFO">${result} = /wordcount-06.txt</msg>
<status status="PASS" endtime="20201223 02:04:18.551" starttime="20201223 02:04:18.550"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.551" starttime="20201223 02:04:18.550"></status>
</kw>
<msg timestamp="20201223 02:04:18.551" level="INFO">${path_with_leading} = /wordcount-06.txt</msg>
<status status="PASS" endtime="20201223 02:04:18.551" starttime="20201223 02:04:18.549"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:18.551" starttime="20201223 02:04:18.546"></status>
</kw>
<msg timestamp="20201223 02:04:18.551" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-06.txt</msg>
<status status="PASS" endtime="20201223 02:04:18.552" starttime="20201223 02:04:18.545"></status>
</kw>
<msg timestamp="20201223 02:04:18.552" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-06.txt</msg>
<status status="PASS" endtime="20201223 02:04:18.552" starttime="20201223 02:04:18.545"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:04:18.555" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-06.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:04:55.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:04:55.950" level="INFO">${output} = 2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:04:55.950" starttime="20201223 02:04:18.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:04:55.951" level="INFO">2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-12-23 02:04:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 02:04:20 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 02:04:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 02:04:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:04:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:04:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:04:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CEEA77B681AE-&gt;157b5479-cc84-4272-9cf6-809af298682a
2020-12-23 02:04:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 02:04:21 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:04:21 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:04:21 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608688872073_0004
2020-12-23 02:04:21 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 02:04:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:21 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:22 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:22 INFO  Configuration:2752 - resource-types.xml not found
2020-12-23 02:04:22 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-23 02:04:22 INFO  YarnClientImpl:324 - Submitted application application_1608688872073_0004
2020-12-23 02:04:22 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608688872073_0004/
2020-12-23 02:04:22 INFO  Job:1619 - Running job: job_1608688872073_0004
2020-12-23 02:04:30 INFO  Job:1640 - Job job_1608688872073_0004 running in uber mode : false
2020-12-23 02:04:30 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:04:36 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:04:41 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:04:46 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:04:50 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:04:55 INFO  Job:1658 - Job job_1608688872073_0004 completed successfully
2020-12-23 02:04:55 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078807
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36276
		Total time spent by all reduces in occupied slots (ms)=12656
		Total time spent by all map tasks (ms)=9069
		Total time spent by all reduce tasks (ms)=3164
		Total vcore-milliseconds taken by all map tasks=9069
		Total vcore-milliseconds taken by all reduce tasks=3164
		Total megabyte-milliseconds taken by all map tasks=37146624
		Total megabyte-milliseconds taken by all reduce tasks=12959744
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=548
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1243176960
		Virtual memory (bytes) snapshot=15804850176
		Total committed heap usage (bytes)=1066926080
		Peak Map Physical memory (bytes)=316252160
		Peak Map Virtual memory (bytes)=3947032576
		Peak Reduce Physical memory (bytes)=295608320
		Peak Reduce Virtual memory (bytes)=3966410752
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-23 02:04:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 02:04:55.951" starttime="20201223 02:04:55.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:04:55.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:04:55.952" starttime="20201223 02:04:55.952"></status>
</kw>
<status status="PASS" endtime="20201223 02:04:55.952" starttime="20201223 02:04:18.553"></status>
</kw>
<msg timestamp="20201223 02:04:55.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:04:55.952" starttime="20201223 02:04:18.552"></status>
</kw>
<msg timestamp="20201223 02:04:55.953" level="INFO">${output} = 2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:04:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:04:55.953" starttime="20201223 02:04:18.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 02:04:55.953" starttime="20201223 02:04:55.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:04:55.954" starttime="20201223 02:04:55.954"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:04:55.954" critical="yes" starttime="20201223 02:04:18.519"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 02:04:55.955" starttime="20201223 02:03:41.651"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:02:10.793" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:02:10.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:02:10.797" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:02:10.797" starttime="20201223 02:02:10.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:02:10.798" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:02:10.798" starttime="20201223 02:02:10.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:02:10.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:02:10.799" starttime="20201223 02:02:10.798"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:10.799" starttime="20201223 02:02:10.789"></status>
</kw>
<msg timestamp="20201223 02:02:10.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:02:10.799" starttime="20201223 02:02:10.789"></status>
</kw>
<msg timestamp="20201223 02:02:10.799" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:02:10.799" starttime="20201223 02:02:10.789"></status>
</kw>
<msg timestamp="20201223 02:02:10.800" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:02:10.800" starttime="20201223 02:02:10.789"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:02:10.803" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:02:10.804" starttime="20201223 02:02:10.803"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:02:10.804" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:02:10.804" starttime="20201223 02:02:10.804"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:10.804" starttime="20201223 02:02:10.802"></status>
</kw>
<msg timestamp="20201223 02:02:10.804" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:02:10.804" starttime="20201223 02:02:10.802"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:10.805" starttime="20201223 02:02:10.801"></status>
</kw>
<msg timestamp="20201223 02:02:10.805" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:02:10.805" starttime="20201223 02:02:10.800"></status>
</kw>
<msg timestamp="20201223 02:02:10.805" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:02:10.805" starttime="20201223 02:02:10.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:02:10.808" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:02:50.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:02:50.936" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:02:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02...</msg>
<status status="PASS" endtime="20201223 02:02:50.936" starttime="20201223 02:02:10.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:02:50.937" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:02:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:12 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:12 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 02:02:12 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 02:02:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:02:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:02:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:02:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7D49B52EDF71-&gt;157b5479-cc84-4272-9cf6-809af298682a
2020-12-23 02:02:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 02:02:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:13 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-12-23 02:02:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:13 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:16 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:02:16 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:02:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608688872073_0001
2020-12-23 02:02:16 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 02:02:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:17 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:17 INFO  Configuration:2752 - resource-types.xml not found
2020-12-23 02:02:17 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-23 02:02:17 INFO  YarnClientImpl:324 - Submitted application application_1608688872073_0001
2020-12-23 02:02:17 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608688872073_0001/
2020-12-23 02:02:17 INFO  Job:1619 - Running job: job_1608688872073_0001
2020-12-23 02:02:26 INFO  Job:1640 - Job job_1608688872073_0001 running in uber mode : false
2020-12-23 02:02:26 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:02:33 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:02:37 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:02:42 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:02:49 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:02:50 INFO  Job:1658 - Job job_1608688872073_0001 completed successfully
2020-12-23 02:02:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:50 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35056
		Total time spent by all reduces in occupied slots (ms)=22628
		Total time spent by all map tasks (ms)=8764
		Total time spent by all reduce tasks (ms)=5657
		Total vcore-milliseconds taken by all map tasks=8764
		Total vcore-milliseconds taken by all reduce tasks=5657
		Total megabyte-milliseconds taken by all map tasks=35897344
		Total megabyte-milliseconds taken by all reduce tasks=23171072
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=799
		CPU time spent (ms)=6160
		Physical memory (bytes) snapshot=1494036480
		Virtual memory (bytes) snapshot=15817039872
		Total committed heap usage (bytes)=1278214144
		Peak Map Physical memory (bytes)=530423808
		Peak Map Virtual memory (bytes)=3956723712
		Peak Reduce Physical memory (bytes)=317292544
		Peak Reduce Virtual memory (bytes)=3971473408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.829 seconds
2020-12-23 02:02:50 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:50 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2020-12-23 02:02:50 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 02:02:50.938" starttime="20201223 02:02:50.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:02:50.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:02:50.938" starttime="20201223 02:02:50.938"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:50.939" starttime="20201223 02:02:10.806"></status>
</kw>
<msg timestamp="20201223 02:02:50.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:02:50.939" starttime="20201223 02:02:10.806"></status>
</kw>
<msg timestamp="20201223 02:02:50.939" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:02:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:11 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02...</msg>
<status status="PASS" endtime="20201223 02:02:50.939" starttime="20201223 02:02:10.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:02:50.940" starttime="20201223 02:02:50.939"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:02:50.940" critical="yes" starttime="20201223 02:02:10.788"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:02:50.945" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:02:50.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:02:50.950" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:02:50.950" starttime="20201223 02:02:50.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:02:50.951" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:02:50.951" starttime="20201223 02:02:50.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:02:50.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:02:50.951" starttime="20201223 02:02:50.951"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:50.952" starttime="20201223 02:02:50.943"></status>
</kw>
<msg timestamp="20201223 02:02:50.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:02:50.952" starttime="20201223 02:02:50.943"></status>
</kw>
<msg timestamp="20201223 02:02:50.952" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:02:50.952" starttime="20201223 02:02:50.942"></status>
</kw>
<msg timestamp="20201223 02:02:50.953" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20201223 02:02:50.953" starttime="20201223 02:02:50.942"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:02:50.953" level="INFO">${random} = 23</msg>
<status status="PASS" endtime="20201223 02:02:50.953" starttime="20201223 02:02:50.953"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:02:50.956" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:02:50.956" starttime="20201223 02:02:50.956"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:02:50.957" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:02:50.957" starttime="20201223 02:02:50.957"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:50.957" starttime="20201223 02:02:50.956"></status>
</kw>
<msg timestamp="20201223 02:02:50.957" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:02:50.957" starttime="20201223 02:02:50.955"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:50.957" starttime="20201223 02:02:50.954"></status>
</kw>
<msg timestamp="20201223 02:02:50.958" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:02:50.958" starttime="20201223 02:02:50.954"></status>
</kw>
<msg timestamp="20201223 02:02:50.958" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:02:50.958" starttime="20201223 02:02:50.953"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:02:50.961" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:02:50.961" starttime="20201223 02:02:50.960"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:02:50.961" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:02:50.961" starttime="20201223 02:02:50.961"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:50.961" starttime="20201223 02:02:50.960"></status>
</kw>
<msg timestamp="20201223 02:02:50.961" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:02:50.961" starttime="20201223 02:02:50.959"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:50.962" starttime="20201223 02:02:50.959"></status>
</kw>
<msg timestamp="20201223 02:02:50.962" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 02:02:50.962" starttime="20201223 02:02:50.959"></status>
</kw>
<msg timestamp="20201223 02:02:50.962" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 02:02:50.962" starttime="20201223 02:02:50.958"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:02:50.965" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:02:50.965" starttime="20201223 02:02:50.965"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:02:50.965" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:02:50.966" starttime="20201223 02:02:50.965"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:50.966" starttime="20201223 02:02:50.964"></status>
</kw>
<msg timestamp="20201223 02:02:50.966" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:02:50.966" starttime="20201223 02:02:50.964"></status>
</kw>
<status status="PASS" endtime="20201223 02:02:50.966" starttime="20201223 02:02:50.963"></status>
</kw>
<msg timestamp="20201223 02:02:50.966" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-23.txt</msg>
<status status="PASS" endtime="20201223 02:02:50.966" starttime="20201223 02:02:50.963"></status>
</kw>
<msg timestamp="20201223 02:02:50.966" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-23.txt</msg>
<status status="PASS" endtime="20201223 02:02:50.966" starttime="20201223 02:02:50.962"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:02:50.969" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-23.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:03:26.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:03:26.356" level="INFO">${output} = 2020-12-23 02:02:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:03:26.356" starttime="20201223 02:02:50.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:03:26.357" level="INFO">2020-12-23 02:02:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.21.0.7:8032
2020-12-23 02:02:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 02:02:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2020-12-23 02:02:52 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2020-12-23 02:02:53 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:02:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:02:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:02:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EB83D02AD735-&gt;157b5479-cc84-4272-9cf6-809af298682a
2020-12-23 02:02:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 02:02:53 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:02:54 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:02:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608688872073_0002
2020-12-23 02:02:54 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 02:02:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:54 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:54 INFO  Configuration:2752 - resource-types.xml not found
2020-12-23 02:02:54 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2020-12-23 02:02:54 INFO  YarnClientImpl:324 - Submitted application application_1608688872073_0002
2020-12-23 02:02:54 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608688872073_0002/
2020-12-23 02:02:54 INFO  Job:1619 - Running job: job_1608688872073_0002
2020-12-23 02:03:02 INFO  Job:1640 - Job job_1608688872073_0002 running in uber mode : false
2020-12-23 02:03:02 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:03:08 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:03:13 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:03:17 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:03:22 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:03:25 INFO  Job:1658 - Job job_1608688872073_0002 completed successfully
2020-12-23 02:03:25 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:03:25 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078891
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34572
		Total time spent by all reduces in occupied slots (ms)=12596
		Total time spent by all map tasks (ms)=8643
		Total time spent by all reduce tasks (ms)=3149
		Total vcore-milliseconds taken by all map tasks=8643
		Total vcore-milliseconds taken by all reduce tasks=3149
		Total megabyte-milliseconds taken by all map tasks=35401728
		Total megabyte-milliseconds taken by all reduce tasks=12898304
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=544
		CPU time spent (ms)=5490
		Physical memory (bytes) snapshot=1224536064
		Virtual memory (bytes) snapshot=15785099264
		Total committed heap usage (bytes)=1062731776
		Peak Map Physical memory (bytes)=318754816
		Peak Map Virtual memory (bytes)=3945107456
		Peak Reduce Physical memory (bytes)=297398272
		Peak Reduce Virtual memory (bytes)=3969986560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2020-12-23 02:03:26 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20201223 02:03:26.357" starttime="20201223 02:03:26.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:03:26.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:03:26.358" starttime="20201223 02:03:26.357"></status>
</kw>
<status status="PASS" endtime="20201223 02:03:26.358" starttime="20201223 02:02:50.967"></status>
</kw>
<msg timestamp="20201223 02:03:26.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:03:26.358" starttime="20201223 02:02:50.967"></status>
</kw>
<msg timestamp="20201223 02:03:26.359" level="INFO">${output} = 2020-12-23 02:02:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:51 INFO  Configuration:3318 - Removed undeclared tags:
2020-12-23 02:02:52 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20201223 02:03:26.359" starttime="20201223 02:02:50.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 02:03:26.359" starttime="20201223 02:03:26.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:03:26.360" starttime="20201223 02:03:26.359"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:03:26.360" critical="yes" starttime="20201223 02:02:50.941"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 02:03:26.361" starttime="20201223 02:02:10.744"></status>
</suite>
<status status="PASS" elapsedtime="184343" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:00.078" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:03.667" level="INFO">${rc} = 255</msg>
<msg timestamp="20201223 02:06:03.667" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 02:06:03.667" starttime="20201223 02:06:00.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:03.668" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 02:06:03.668" starttime="20201223 02:06:03.668"></status>
</kw>
<msg timestamp="20201223 02:06:03.669" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201223 02:06:03.669" starttime="20201223 02:06:00.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:03.674" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:06.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:06.513" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:06:06.513" starttime="20201223 02:06:03.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:06.514" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:06:06.514" starttime="20201223 02:06:06.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:06.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:06.515" starttime="20201223 02:06:06.515"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:06.515" starttime="20201223 02:06:03.671"></status>
</kw>
<msg timestamp="20201223 02:06:06.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:06.515" starttime="20201223 02:06:03.670"></status>
</kw>
<msg timestamp="20201223 02:06:06.516" level="INFO">${result} = </msg>
<status status="PASS" endtime="20201223 02:06:06.516" starttime="20201223 02:06:03.670"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201223 02:06:06.516" starttime="20201223 02:06:06.516"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:06.516" starttime="20201223 02:06:03.669"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:06.516" starttime="20201223 02:06:03.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:06.520" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:09.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:09.069" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:06:09.069" starttime="20201223 02:06:06.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:09.070" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:06:09.070" starttime="20201223 02:06:09.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:09.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:09.071" starttime="20201223 02:06:09.071"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:09.071" starttime="20201223 02:06:06.518"></status>
</kw>
<msg timestamp="20201223 02:06:09.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:09.072" starttime="20201223 02:06:06.518"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:09.072" starttime="20201223 02:06:06.518"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:09.072" starttime="20201223 02:06:06.517"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:09.072" starttime="20201223 02:06:06.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201223 02:06:09.072" starttime="20201223 02:06:09.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:09.076" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:11.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:11.908" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T02:06:08.883Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 02:06:11.908" starttime="20201223 02:06:09.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:11.909" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T02:06:08.883Z",
  "modificationTime" : "2020-12-23T02:06:08.883Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20201223 02:06:11.909" starttime="20201223 02:06:11.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:11.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:11.910" starttime="20201223 02:06:11.909"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:11.910" starttime="20201223 02:06:09.074"></status>
</kw>
<msg timestamp="20201223 02:06:11.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:11.910" starttime="20201223 02:06:09.073"></status>
</kw>
<msg timestamp="20201223 02:06:11.910" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-23T02:06:08.883Z",
  "modificat...</msg>
<status status="PASS" endtime="20201223 02:06:11.910" starttime="20201223 02:06:09.073"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201223 02:06:11.911" starttime="20201223 02:06:11.911"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:06:11.914" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:06:11.914" starttime="20201223 02:06:11.914"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:06:11.915" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:06:11.915" starttime="20201223 02:06:11.914"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:11.915" starttime="20201223 02:06:11.913"></status>
</kw>
<msg timestamp="20201223 02:06:11.915" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:06:11.915" starttime="20201223 02:06:11.913"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:11.915" starttime="20201223 02:06:11.912"></status>
</kw>
<msg timestamp="20201223 02:06:11.915" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 02:06:11.915" starttime="20201223 02:06:11.912"></status>
</kw>
<msg timestamp="20201223 02:06:11.916" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201223 02:06:11.916" starttime="20201223 02:06:11.911"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:11.919" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:14.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:14.788" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:06:14.788" starttime="20201223 02:06:11.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:14.789" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:06:14.789" starttime="20201223 02:06:14.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:14.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:14.790" starttime="20201223 02:06:14.789"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:14.790" starttime="20201223 02:06:11.916"></status>
</kw>
<msg timestamp="20201223 02:06:14.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:14.790" starttime="20201223 02:06:11.916"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:14.790" starttime="20201223 02:06:11.916"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:14.794" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:20.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:20.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:06:20.846" starttime="20201223 02:06:14.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:20.847" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:06:20.848" starttime="20201223 02:06:20.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:20.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:20.848" starttime="20201223 02:06:20.848"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:20.849" starttime="20201223 02:06:14.791"></status>
</kw>
<msg timestamp="20201223 02:06:20.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:20.849" starttime="20201223 02:06:14.791"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:20.849" starttime="20201223 02:06:14.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:20.852" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:25.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:25.377" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:06:25.377" starttime="20201223 02:06:20.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:25.379" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:06:25.379" starttime="20201223 02:06:25.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:25.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:25.380" starttime="20201223 02:06:25.379"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:25.380" starttime="20201223 02:06:20.850"></status>
</kw>
<msg timestamp="20201223 02:06:25.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:25.380" starttime="20201223 02:06:20.850"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:25.380" starttime="20201223 02:06:20.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:25.384" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:29.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:29.693" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:06:29.693" starttime="20201223 02:06:25.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:29.695" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:06:29.695" starttime="20201223 02:06:29.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:29.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:29.696" starttime="20201223 02:06:29.696"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:29.696" starttime="20201223 02:06:25.381"></status>
</kw>
<msg timestamp="20201223 02:06:29.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:29.696" starttime="20201223 02:06:25.381"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:29.697" starttime="20201223 02:06:25.381"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 02:06:29.697" critical="yes" starttime="20201223 02:06:00.073"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:06:29.702" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:06:29.702" starttime="20201223 02:06:29.702"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:06:29.703" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:06:29.703" starttime="20201223 02:06:29.702"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:29.703" starttime="20201223 02:06:29.701"></status>
</kw>
<msg timestamp="20201223 02:06:29.703" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:06:29.703" starttime="20201223 02:06:29.701"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:29.703" starttime="20201223 02:06:29.700"></status>
</kw>
<msg timestamp="20201223 02:06:29.703" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 02:06:29.703" starttime="20201223 02:06:29.699"></status>
</kw>
<msg timestamp="20201223 02:06:29.704" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 02:06:29.704" starttime="20201223 02:06:29.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:29.707" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:32.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:32.298" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:06:32.298" starttime="20201223 02:06:29.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:32.299" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:06:32.299" starttime="20201223 02:06:32.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:32.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:32.300" starttime="20201223 02:06:32.299"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:32.300" starttime="20201223 02:06:29.705"></status>
</kw>
<msg timestamp="20201223 02:06:32.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:32.300" starttime="20201223 02:06:29.704"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:32.300" starttime="20201223 02:06:29.704"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:32.304" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:35.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:35.115" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201223 02:06:35.115" starttime="20201223 02:06:32.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:35.120" level="INFO"></msg>
<status status="PASS" endtime="20201223 02:06:35.120" starttime="20201223 02:06:35.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:35.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:35.121" starttime="20201223 02:06:35.121"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:35.121" starttime="20201223 02:06:32.301"></status>
</kw>
<msg timestamp="20201223 02:06:35.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:35.122" starttime="20201223 02:06:32.301"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:35.122" starttime="20201223 02:06:32.301"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201223 02:06:35.122" critical="yes" starttime="20201223 02:06:29.698"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201223 02:06:35.124" starttime="20201223 02:06:00.027"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:08:02.903" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:08:02.903" starttime="20201223 02:08:02.903"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:08:02.904" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:08:02.904" starttime="20201223 02:08:02.903"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:02.904" starttime="20201223 02:08:02.903"></status>
</kw>
<msg timestamp="20201223 02:08:02.904" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:08:02.904" starttime="20201223 02:08:02.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:08:02.905" starttime="20201223 02:08:02.905"></status>
</kw>
<msg timestamp="20201223 02:08:02.905" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 02:08:02.905" starttime="20201223 02:08:02.904"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:02.905" starttime="20201223 02:08:02.902"></status>
</kw>
<msg timestamp="20201223 02:08:02.905" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:08:02.906" starttime="20201223 02:08:02.901"></status>
</kw>
<msg timestamp="20201223 02:08:02.906" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:08:02.906" starttime="20201223 02:08:02.900"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:08:02.906" level="INFO">${random} = 88498</msg>
<status status="PASS" endtime="20201223 02:08:02.906" starttime="20201223 02:08:02.906"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:08:02.910" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-88498 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:08:06.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:08:06.028" level="INFO">${output} = 2020-12-23 02:08:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:08:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:08:06.028" starttime="20201223 02:08:02.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:08:06.029" level="INFO">2020-12-23 02:08:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:08:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:08:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:08:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:08:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D766A25EC5C8-&gt;56690a3c-8739-4256-8829-8cd5ab8980d9
2020-12-23 02:08:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 02:08:06.029" starttime="20201223 02:08:06.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:08:06.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:08:06.029" starttime="20201223 02:08:06.029"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:06.030" starttime="20201223 02:08:02.907"></status>
</kw>
<msg timestamp="20201223 02:08:06.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:08:06.030" starttime="20201223 02:08:02.907"></status>
</kw>
<msg timestamp="20201223 02:08:06.030" level="INFO">${result} = 2020-12-23 02:08:04 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:08:04 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:08:06.030" starttime="20201223 02:08:02.906"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:08:06.034" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:08:07.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:08:07.567" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:06 ofs://om/volume1/bucket1/ozone-11702
-rw-...</msg>
<status status="PASS" endtime="20201223 02:08:07.567" starttime="20201223 02:08:06.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:08:07.568" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:06 ofs://om/volume1/bucket1/ozone-11702
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:08 ofs://om/volume1/bucket1/ozone-88498
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:06 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:07 ofs://om/volume1/bucket1/wordcount-46.txt</msg>
<status status="PASS" endtime="20201223 02:08:07.568" starttime="20201223 02:08:07.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:08:07.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:08:07.569" starttime="20201223 02:08:07.568"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:07.569" starttime="20201223 02:08:06.032"></status>
</kw>
<msg timestamp="20201223 02:08:07.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:08:07.569" starttime="20201223 02:08:06.032"></status>
</kw>
<msg timestamp="20201223 02:08:07.569" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:06 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:06 ofs://om/volume1/bucket1/ozone-11702
-rw-...</msg>
<status status="PASS" endtime="20201223 02:08:07.569" starttime="20201223 02:08:06.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:08:07.570" starttime="20201223 02:08:07.569"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:08:07.570" critical="yes" starttime="20201223 02:08:02.900"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 02:08:07.571" starttime="20201223 02:08:02.856"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:06:39.245" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:06:39.245" starttime="20201223 02:06:39.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:06:39.246" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:06:39.246" starttime="20201223 02:06:39.245"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:39.246" starttime="20201223 02:06:39.245"></status>
</kw>
<msg timestamp="20201223 02:06:39.246" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:06:39.246" starttime="20201223 02:06:39.244"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:39.246" starttime="20201223 02:06:39.243"></status>
</kw>
<msg timestamp="20201223 02:06:39.246" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:06:39.247" starttime="20201223 02:06:39.243"></status>
</kw>
<msg timestamp="20201223 02:06:39.247" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:06:39.247" starttime="20201223 02:06:39.242"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:06:39.247" level="INFO">${random} = 11702</msg>
<status status="PASS" endtime="20201223 02:06:39.247" starttime="20201223 02:06:39.247"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:39.251" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-11702 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:42.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:42.525" level="INFO">${output} = 2020-12-23 02:06:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:06:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:06:42.525" starttime="20201223 02:06:39.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:42.526" level="INFO">2020-12-23 02:06:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:06:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:06:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:06:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:06:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-35C78FD51DAA-&gt;56690a3c-8739-4256-8829-8cd5ab8980d9
2020-12-23 02:06:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201223 02:06:42.526" starttime="20201223 02:06:42.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:42.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:42.527" starttime="20201223 02:06:42.527"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:42.527" starttime="20201223 02:06:39.248"></status>
</kw>
<msg timestamp="20201223 02:06:42.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:42.527" starttime="20201223 02:06:39.248"></status>
</kw>
<msg timestamp="20201223 02:06:42.528" level="INFO">${result} = 2020-12-23 02:06:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:06:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201223 02:06:42.528" starttime="20201223 02:06:39.247"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:42.532" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:44.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:44.133" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:06 o3fs://bucket1.volume1.om/ozone-11702
dr...</msg>
<status status="PASS" endtime="20201223 02:06:44.133" starttime="20201223 02:06:42.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:44.134" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:06 o3fs://bucket1.volume1.om/ozone-11702
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:06 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201223 02:06:44.134" starttime="20201223 02:06:44.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:44.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:44.135" starttime="20201223 02:06:44.134"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:44.135" starttime="20201223 02:06:42.530"></status>
</kw>
<msg timestamp="20201223 02:06:44.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:44.135" starttime="20201223 02:06:42.528"></status>
</kw>
<msg timestamp="20201223 02:06:44.135" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-23 02:06 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-23 02:06 o3fs://bucket1.volume1.om/ozone-11702
dr...</msg>
<status status="PASS" endtime="20201223 02:06:44.135" starttime="20201223 02:06:42.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:06:44.136" starttime="20201223 02:06:44.135"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201223 02:06:44.136" critical="yes" starttime="20201223 02:06:39.241"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201223 02:06:44.137" starttime="20201223 02:06:39.195"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:08:11.634" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:08:11.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:08:11.639" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:08:11.639" starttime="20201223 02:08:11.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:08:11.640" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:08:11.640" starttime="20201223 02:08:11.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:08:11.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:08:11.640" starttime="20201223 02:08:11.640"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:11.641" starttime="20201223 02:08:11.630"></status>
</kw>
<msg timestamp="20201223 02:08:11.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:08:11.641" starttime="20201223 02:08:11.630"></status>
</kw>
<msg timestamp="20201223 02:08:11.641" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:08:11.641" starttime="20201223 02:08:11.630"></status>
</kw>
<msg timestamp="20201223 02:08:11.641" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:08:11.641" starttime="20201223 02:08:11.629"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:08:11.646" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:08:11.646" starttime="20201223 02:08:11.645"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:08:11.646" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:08:11.646" starttime="20201223 02:08:11.646"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:11.646" starttime="20201223 02:08:11.644"></status>
</kw>
<msg timestamp="20201223 02:08:11.647" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:08:11.647" starttime="20201223 02:08:11.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:08:11.647" starttime="20201223 02:08:11.647"></status>
</kw>
<msg timestamp="20201223 02:08:11.647" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 02:08:11.647" starttime="20201223 02:08:11.647"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:11.648" starttime="20201223 02:08:11.643"></status>
</kw>
<msg timestamp="20201223 02:08:11.648" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:08:11.648" starttime="20201223 02:08:11.643"></status>
</kw>
<msg timestamp="20201223 02:08:11.648" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:08:11.648" starttime="20201223 02:08:11.641"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:08:11.651" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:08:45.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:08:45.427" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:08:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:08:13 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 02:08:45.428" starttime="20201223 02:08:11.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:08:45.429" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:08:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:08:13 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:08:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:08:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:08:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5AB1AD8D62F2-&gt;56690a3c-8739-4256-8829-8cd5ab8980d9
2020-12-23 02:08:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 02:08:14 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-23 02:08:14 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 02:08:14 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:08:14 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:08:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608689132084_0003
2020-12-23 02:08:15 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 02:08:15 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 02:08:15 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 02:08:15 INFO  YarnClientImpl:329 - Submitted application application_1608689132084_0003
2020-12-23 02:08:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608689132084_0003/
2020-12-23 02:08:15 INFO  Job:1619 - Running job: job_1608689132084_0003
2020-12-23 02:08:21 INFO  Job:1640 - Job job_1608689132084_0003 running in uber mode : false
2020-12-23 02:08:21 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:08:27 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:08:32 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:08:37 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:08:41 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:08:44 INFO  Job:1658 - Job job_1608689132084_0003 completed successfully
2020-12-23 02:08:44 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056269
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34548
		Total time spent by all reduces in occupied slots (ms)=12564
		Total time spent by all map tasks (ms)=8637
		Total time spent by all reduce tasks (ms)=3141
		Total vcore-milliseconds taken by all map tasks=8637
		Total vcore-milliseconds taken by all reduce tasks=3141
		Total megabyte-milliseconds taken by all map tasks=35377152
		Total megabyte-milliseconds taken by all reduce tasks=12865536
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=613
		CPU time spent (ms)=6190
		Physical memory (bytes) snapshot=1505021952
		Virtual memory (bytes) snapshot=15803428864
		Total committed heap usage (bytes)=1668284416
		Peak Map Physical memory (bytes)=379023360
		Peak Map Virtual memory (bytes)=3947429888
		Peak Reduce Physical memory (bytes)=381775872
		Peak Reduce Virtual memory (bytes)=3966771200
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.476 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 02:08:45.429" starttime="20201223 02:08:45.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:08:45.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:08:45.429" starttime="20201223 02:08:45.429"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.430" starttime="20201223 02:08:11.649"></status>
</kw>
<msg timestamp="20201223 02:08:45.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:08:45.430" starttime="20201223 02:08:11.649"></status>
</kw>
<msg timestamp="20201223 02:08:45.430" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:08:13 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:08:13 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 02:08:45.430" starttime="20201223 02:08:11.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:08:45.431" starttime="20201223 02:08:45.430"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:08:45.431" critical="yes" starttime="20201223 02:08:11.629"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:08:45.435" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:08:45.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:08:45.440" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:08:45.440" starttime="20201223 02:08:45.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:08:45.441" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:08:45.441" starttime="20201223 02:08:45.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:08:45.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:08:45.442" starttime="20201223 02:08:45.441"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.443" starttime="20201223 02:08:45.433"></status>
</kw>
<msg timestamp="20201223 02:08:45.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:08:45.444" starttime="20201223 02:08:45.433"></status>
</kw>
<msg timestamp="20201223 02:08:45.444" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:08:45.444" starttime="20201223 02:08:45.433"></status>
</kw>
<msg timestamp="20201223 02:08:45.444" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:08:45.444" starttime="20201223 02:08:45.432"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:08:45.445" level="INFO">${random} = 75</msg>
<status status="PASS" endtime="20201223 02:08:45.445" starttime="20201223 02:08:45.444"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:08:45.449" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:08:45.449" starttime="20201223 02:08:45.449"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:08:45.449" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:08:45.450" starttime="20201223 02:08:45.449"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.450" starttime="20201223 02:08:45.448"></status>
</kw>
<msg timestamp="20201223 02:08:45.450" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:08:45.450" starttime="20201223 02:08:45.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201223 02:08:45.451" starttime="20201223 02:08:45.450"></status>
</kw>
<msg timestamp="20201223 02:08:45.451" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201223 02:08:45.451" starttime="20201223 02:08:45.450"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.451" starttime="20201223 02:08:45.447"></status>
</kw>
<msg timestamp="20201223 02:08:45.451" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:08:45.451" starttime="20201223 02:08:45.446"></status>
</kw>
<msg timestamp="20201223 02:08:45.451" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201223 02:08:45.451" starttime="20201223 02:08:45.445"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:08:45.454" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:08:45.454" starttime="20201223 02:08:45.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:08:45.455" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:08:45.455" starttime="20201223 02:08:45.454"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.455" starttime="20201223 02:08:45.453"></status>
</kw>
<msg timestamp="20201223 02:08:45.455" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:08:45.455" starttime="20201223 02:08:45.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:08:45.457" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201223 02:08:45.457" starttime="20201223 02:08:45.456"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:08:45.457" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201223 02:08:45.457" starttime="20201223 02:08:45.457"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.457" starttime="20201223 02:08:45.456"></status>
</kw>
<msg timestamp="20201223 02:08:45.457" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201223 02:08:45.457" starttime="20201223 02:08:45.455"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.458" starttime="20201223 02:08:45.453"></status>
</kw>
<msg timestamp="20201223 02:08:45.458" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 02:08:45.458" starttime="20201223 02:08:45.452"></status>
</kw>
<msg timestamp="20201223 02:08:45.458" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201223 02:08:45.458" starttime="20201223 02:08:45.451"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201223 02:08:45.461" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201223 02:08:45.461" starttime="20201223 02:08:45.461"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:08:45.461" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201223 02:08:45.462" starttime="20201223 02:08:45.461"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.462" starttime="20201223 02:08:45.460"></status>
</kw>
<msg timestamp="20201223 02:08:45.462" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201223 02:08:45.462" starttime="20201223 02:08:45.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:08:45.463" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201223 02:08:45.463" starttime="20201223 02:08:45.463"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:08:45.464" level="INFO">${result} = /wordcount-75.txt</msg>
<status status="PASS" endtime="20201223 02:08:45.464" starttime="20201223 02:08:45.463"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.464" starttime="20201223 02:08:45.462"></status>
</kw>
<msg timestamp="20201223 02:08:45.464" level="INFO">${path_with_leading} = /wordcount-75.txt</msg>
<status status="PASS" endtime="20201223 02:08:45.464" starttime="20201223 02:08:45.462"></status>
</kw>
<status status="PASS" endtime="20201223 02:08:45.464" starttime="20201223 02:08:45.459"></status>
</kw>
<msg timestamp="20201223 02:08:45.464" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-75.txt</msg>
<status status="PASS" endtime="20201223 02:08:45.464" starttime="20201223 02:08:45.459"></status>
</kw>
<msg timestamp="20201223 02:08:45.464" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-75.txt</msg>
<status status="PASS" endtime="20201223 02:08:45.464" starttime="20201223 02:08:45.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:08:45.468" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-75.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:09:20.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:09:20.746" level="INFO">${output} = 2020-12-23 02:08:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-23 02:08:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201223 02:09:20.746" starttime="20201223 02:08:45.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:09:20.747" level="INFO">2020-12-23 02:08:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-23 02:08:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 02:08:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:08:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:08:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:08:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:08:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6DF969323EAE-&gt;56690a3c-8739-4256-8829-8cd5ab8980d9
2020-12-23 02:08:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 02:08:48 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:08:48 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:08:48 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608689132084_0004
2020-12-23 02:08:48 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 02:08:48 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 02:08:48 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 02:08:48 INFO  YarnClientImpl:329 - Submitted application application_1608689132084_0004
2020-12-23 02:08:48 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608689132084_0004/
2020-12-23 02:08:48 INFO  Job:1619 - Running job: job_1608689132084_0004
2020-12-23 02:08:57 INFO  Job:1640 - Job job_1608689132084_0004 running in uber mode : false
2020-12-23 02:08:57 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:09:03 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:09:09 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:09:13 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:09:20 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:09:20 INFO  Job:1658 - Job job_1608689132084_0004 completed successfully
2020-12-23 02:09:20 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1118923
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36840
		Total time spent by all reduces in occupied slots (ms)=22432
		Total time spent by all map tasks (ms)=9210
		Total time spent by all reduce tasks (ms)=5608
		Total vcore-milliseconds taken by all map tasks=9210
		Total vcore-milliseconds taken by all reduce tasks=5608
		Total megabyte-milliseconds taken by all map tasks=37724160
		Total megabyte-milliseconds taken by all reduce tasks=22970368
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=634
		CPU time spent (ms)=6710
		Physical memory (bytes) snapshot=1501896704
		Virtual memory (bytes) snapshot=15808299008
		Total committed heap usage (bytes)=1700265984
		Peak Map Physical memory (bytes)=382070784
		Peak Map Virtual memory (bytes)=3953463296
		Peak Reduce Physical memory (bytes)=377368576
		Peak Reduce Virtual memory (bytes)=3971452928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 02:09:20.747" starttime="20201223 02:09:20.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:09:20.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:09:20.748" starttime="20201223 02:09:20.748"></status>
</kw>
<status status="PASS" endtime="20201223 02:09:20.748" starttime="20201223 02:08:45.465"></status>
</kw>
<msg timestamp="20201223 02:09:20.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:09:20.749" starttime="20201223 02:08:45.465"></status>
</kw>
<msg timestamp="20201223 02:09:20.749" level="INFO">${output} = 2020-12-23 02:08:46 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-23 02:08:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201223 02:09:20.749" starttime="20201223 02:08:45.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 02:09:20.750" starttime="20201223 02:09:20.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:09:20.750" starttime="20201223 02:09:20.750"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:09:20.750" critical="yes" starttime="20201223 02:08:45.431"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 02:09:20.751" starttime="20201223 02:08:11.585"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:48.260" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:06:48.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:06:48.266" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:06:48.266" starttime="20201223 02:06:48.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:06:48.267" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:06:48.267" starttime="20201223 02:06:48.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:06:48.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:06:48.268" starttime="20201223 02:06:48.267"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:48.268" starttime="20201223 02:06:48.256"></status>
</kw>
<msg timestamp="20201223 02:06:48.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:06:48.268" starttime="20201223 02:06:48.256"></status>
</kw>
<msg timestamp="20201223 02:06:48.268" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:06:48.268" starttime="20201223 02:06:48.256"></status>
</kw>
<msg timestamp="20201223 02:06:48.268" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:06:48.268" starttime="20201223 02:06:48.255"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:06:48.272" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:06:48.273" starttime="20201223 02:06:48.272"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:06:48.273" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:06:48.273" starttime="20201223 02:06:48.273"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:48.273" starttime="20201223 02:06:48.271"></status>
</kw>
<msg timestamp="20201223 02:06:48.273" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:06:48.273" starttime="20201223 02:06:48.270"></status>
</kw>
<status status="PASS" endtime="20201223 02:06:48.274" starttime="20201223 02:06:48.270"></status>
</kw>
<msg timestamp="20201223 02:06:48.274" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:06:48.274" starttime="20201223 02:06:48.269"></status>
</kw>
<msg timestamp="20201223 02:06:48.274" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:06:48.274" starttime="20201223 02:06:48.269"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:06:48.277" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:07:25.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:07:25.450" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:06:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:06:49 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 02:07:25.450" starttime="20201223 02:06:48.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:07:25.451" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:06:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:06:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:06:49 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:06:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:06:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-47B343CCFF14-&gt;56690a3c-8739-4256-8829-8cd5ab8980d9
2020-12-23 02:06:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-23 02:06:51 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-23 02:06:51 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:06:51 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:06:51 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608689132084_0001
2020-12-23 02:06:51 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 02:06:52 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 02:06:52 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 02:06:52 INFO  YarnClientImpl:329 - Submitted application application_1608689132084_0001
2020-12-23 02:06:52 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608689132084_0001/
2020-12-23 02:06:52 INFO  Job:1619 - Running job: job_1608689132084_0001
2020-12-23 02:07:01 INFO  Job:1640 - Job job_1608689132084_0001 running in uber mode : false
2020-12-23 02:07:01 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:07:07 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:07:12 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:07:17 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:07:21 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:07:24 INFO  Job:1658 - Job job_1608689132084_0001 completed successfully
2020-12-23 02:07:24 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1056481
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35040
		Total time spent by all reduces in occupied slots (ms)=13252
		Total time spent by all map tasks (ms)=8760
		Total time spent by all reduce tasks (ms)=3313
		Total vcore-milliseconds taken by all map tasks=8760
		Total vcore-milliseconds taken by all reduce tasks=3313
		Total megabyte-milliseconds taken by all map tasks=35880960
		Total megabyte-milliseconds taken by all reduce tasks=13570048
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=563
		CPU time spent (ms)=5950
		Physical memory (bytes) snapshot=1474985984
		Virtual memory (bytes) snapshot=15797305344
		Total committed heap usage (bytes)=1713897472
		Peak Map Physical memory (bytes)=368713728
		Peak Map Virtual memory (bytes)=3947028480
		Peak Reduce Physical memory (bytes)=380051456
		Peak Reduce Virtual memory (bytes)=3970297856
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.929 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201223 02:07:25.451" starttime="20201223 02:07:25.450"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:07:25.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:07:25.452" starttime="20201223 02:07:25.452"></status>
</kw>
<status status="PASS" endtime="20201223 02:07:25.452" starttime="20201223 02:06:48.275"></status>
</kw>
<msg timestamp="20201223 02:07:25.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:07:25.453" starttime="20201223 02:06:48.275"></status>
</kw>
<msg timestamp="20201223 02:07:25.453" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-23 02:06:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:06:49 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201223 02:07:25.453" starttime="20201223 02:06:48.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:07:25.453" starttime="20201223 02:07:25.453"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:07:25.454" critical="yes" starttime="20201223 02:06:48.255"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:07:25.458" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:07:25.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:07:25.465" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:07:25.465" starttime="20201223 02:07:25.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:07:25.466" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:07:25.466" starttime="20201223 02:07:25.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:07:25.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:07:25.466" starttime="20201223 02:07:25.466"></status>
</kw>
<status status="PASS" endtime="20201223 02:07:25.467" starttime="20201223 02:07:25.456"></status>
</kw>
<msg timestamp="20201223 02:07:25.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:07:25.467" starttime="20201223 02:07:25.456"></status>
</kw>
<msg timestamp="20201223 02:07:25.467" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:07:25.467" starttime="20201223 02:07:25.455"></status>
</kw>
<msg timestamp="20201223 02:07:25.467" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201223 02:07:25.467" starttime="20201223 02:07:25.455"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201223 02:07:25.468" level="INFO">${random} = 46</msg>
<status status="PASS" endtime="20201223 02:07:25.468" starttime="20201223 02:07:25.467"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:07:25.471" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:07:25.471" starttime="20201223 02:07:25.471"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:07:25.472" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:07:25.472" starttime="20201223 02:07:25.471"></status>
</kw>
<status status="PASS" endtime="20201223 02:07:25.472" starttime="20201223 02:07:25.470"></status>
</kw>
<msg timestamp="20201223 02:07:25.472" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:07:25.472" starttime="20201223 02:07:25.470"></status>
</kw>
<status status="PASS" endtime="20201223 02:07:25.472" starttime="20201223 02:07:25.469"></status>
</kw>
<msg timestamp="20201223 02:07:25.472" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:07:25.472" starttime="20201223 02:07:25.469"></status>
</kw>
<msg timestamp="20201223 02:07:25.472" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201223 02:07:25.473" starttime="20201223 02:07:25.468"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:07:25.475" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:07:25.475" starttime="20201223 02:07:25.475"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:07:25.476" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:07:25.476" starttime="20201223 02:07:25.476"></status>
</kw>
<status status="PASS" endtime="20201223 02:07:25.476" starttime="20201223 02:07:25.475"></status>
</kw>
<msg timestamp="20201223 02:07:25.476" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:07:25.476" starttime="20201223 02:07:25.474"></status>
</kw>
<status status="PASS" endtime="20201223 02:07:25.476" starttime="20201223 02:07:25.474"></status>
</kw>
<msg timestamp="20201223 02:07:25.477" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 02:07:25.477" starttime="20201223 02:07:25.473"></status>
</kw>
<msg timestamp="20201223 02:07:25.477" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201223 02:07:25.477" starttime="20201223 02:07:25.473"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201223 02:07:25.480" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201223 02:07:25.480" starttime="20201223 02:07:25.479"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201223 02:07:25.480" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201223 02:07:25.480" starttime="20201223 02:07:25.480"></status>
</kw>
<status status="PASS" endtime="20201223 02:07:25.480" starttime="20201223 02:07:25.479"></status>
</kw>
<msg timestamp="20201223 02:07:25.480" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201223 02:07:25.480" starttime="20201223 02:07:25.478"></status>
</kw>
<status status="PASS" endtime="20201223 02:07:25.481" starttime="20201223 02:07:25.478"></status>
</kw>
<msg timestamp="20201223 02:07:25.481" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-46.txt</msg>
<status status="PASS" endtime="20201223 02:07:25.481" starttime="20201223 02:07:25.477"></status>
</kw>
<msg timestamp="20201223 02:07:25.481" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-46.txt</msg>
<status status="PASS" endtime="20201223 02:07:25.481" starttime="20201223 02:07:25.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201223 02:07:25.484" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-46.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201223 02:07:58.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20201223 02:07:58.825" level="INFO">${output} = 2020-12-23 02:07:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-23 02:07:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201223 02:07:58.825" starttime="20201223 02:07:25.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201223 02:07:58.826" level="INFO">2020-12-23 02:07:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-23 02:07:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-23 02:07:27 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-23 02:07:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-23 02:07:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-23 02:07:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-23 02:07:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-49D50EAF150E-&gt;56690a3c-8739-4256-8829-8cd5ab8980d9
2020-12-23 02:07:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-23 02:07:28 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-23 02:07:28 INFO  JobSubmitter:202 - number of splits:3
2020-12-23 02:07:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1608689132084_0002
2020-12-23 02:07:28 INFO  JobSubmitter:299 - Executing with tokens: []
2020-12-23 02:07:29 INFO  Configuration:2795 - resource-types.xml not found
2020-12-23 02:07:29 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-23 02:07:29 INFO  YarnClientImpl:329 - Submitted application application_1608689132084_0002
2020-12-23 02:07:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1608689132084_0002/
2020-12-23 02:07:29 INFO  Job:1619 - Running job: job_1608689132084_0002
2020-12-23 02:07:37 INFO  Job:1640 - Job job_1608689132084_0002 running in uber mode : false
2020-12-23 02:07:37 INFO  Job:1647 -  map 0% reduce 0%
2020-12-23 02:07:43 INFO  Job:1647 -  map 33% reduce 0%
2020-12-23 02:07:48 INFO  Job:1647 -  map 67% reduce 0%
2020-12-23 02:07:53 INFO  Job:1647 -  map 100% reduce 0%
2020-12-23 02:07:58 INFO  Job:1647 -  map 100% reduce 100%
2020-12-23 02:07:58 INFO  Job:1658 - Job job_1608689132084_0002 completed successfully
2020-12-23 02:07:58 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1119011
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34604
		Total time spent by all reduces in occupied slots (ms)=13368
		Total time spent by all map tasks (ms)=8651
		Total time spent by all reduce tasks (ms)=3342
		Total vcore-milliseconds taken by all map tasks=8651
		Total vcore-milliseconds taken by all reduce tasks=3342
		Total megabyte-milliseconds taken by all map tasks=35434496
		Total megabyte-milliseconds taken by all reduce tasks=13688832
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=558
		CPU time spent (ms)=5950
		Physical memory (bytes) snapshot=1469583360
		Virtual memory (bytes) snapshot=15796060160
		Total committed heap usage (bytes)=1691353088
		Peak Map Physical memory (bytes)=375382016
		Peak Map Virtual memory (bytes)=3944128512
		Peak Reduce Physical memory (bytes)=371826688
		Peak Reduce Virtual memory (bytes)=3968229376
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201223 02:07:58.826" starttime="20201223 02:07:58.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201223 02:07:58.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201223 02:07:58.827" starttime="20201223 02:07:58.826"></status>
</kw>
<status status="PASS" endtime="20201223 02:07:58.827" starttime="20201223 02:07:25.482"></status>
</kw>
<msg timestamp="20201223 02:07:58.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201223 02:07:58.827" starttime="20201223 02:07:25.482"></status>
</kw>
<msg timestamp="20201223 02:07:58.828" level="INFO">${output} = 2020-12-23 02:07:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.3:8032
2020-12-23 02:07:27 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20201223 02:07:58.828" starttime="20201223 02:07:25.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201223 02:07:58.828" starttime="20201223 02:07:58.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201223 02:07:58.829" starttime="20201223 02:07:58.828"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201223 02:07:58.829" critical="yes" starttime="20201223 02:07:25.454"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201223 02:07:58.830" starttime="20201223 02:06:48.210"></status>
</suite>
<status status="PASS" elapsedtime="184540" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="534205" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
