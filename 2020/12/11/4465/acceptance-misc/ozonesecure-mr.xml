<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20201211 02:20:59.078" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:13.302" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:17.723" level="INFO">${rc} = 255</msg>
<msg timestamp="20201211 02:16:17.723" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:17.723" starttime="20201211 02:16:13.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:17.725" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20201211 02:16:17.725" starttime="20201211 02:16:17.724"></status>
</kw>
<msg timestamp="20201211 02:16:17.726" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:17.726" starttime="20201211 02:16:13.289"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --count-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:17.732" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --count-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:21.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:21.767" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:21.767" starttime="20201211 02:16:17.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:21.768" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201211 02:16:21.768" starttime="20201211 02:16:21.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:21.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:21.769" starttime="20201211 02:16:21.768"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:21.769" starttime="20201211 02:16:17.728"></status>
</kw>
<msg timestamp="20201211 02:16:21.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:21.769" starttime="20201211 02:16:17.728"></status>
</kw>
<msg timestamp="20201211 02:16:21.769" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:21.770" starttime="20201211 02:16:17.727"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20201211 02:16:21.770" starttime="20201211 02:16:21.770"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:21.770" starttime="20201211 02:16:17.727"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:21.770" starttime="20201211 02:16:17.726"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:21.775" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:25.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:25.564" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:25.564" starttime="20201211 02:16:21.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:25.566" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201211 02:16:25.566" starttime="20201211 02:16:25.565"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:25.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:25.567" starttime="20201211 02:16:25.566"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:25.567" starttime="20201211 02:16:21.773"></status>
</kw>
<msg timestamp="20201211 02:16:25.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:25.567" starttime="20201211 02:16:21.772"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:25.568" starttime="20201211 02:16:21.772"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:25.568" starttime="20201211 02:16:21.771"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:25.568" starttime="20201211 02:16:21.771"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20201211 02:16:25.569" starttime="20201211 02:16:25.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:25.573" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:29.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:29.596" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:29.596" starttime="20201211 02:16:25.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:29.598" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "creationTime" : "2020-12-11T02:16:25.231Z",
  "modificationTime" : "2020-12-11T02:16:25.231Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInCounts" : -1
}</msg>
<status status="PASS" endtime="20201211 02:16:29.598" starttime="20201211 02:16:29.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:29.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:29.599" starttime="20201211 02:16:29.598"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:29.599" starttime="20201211 02:16:25.570"></status>
</kw>
<msg timestamp="20201211 02:16:29.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:29.599" starttime="20201211 02:16:25.570"></status>
</kw>
<msg timestamp="20201211 02:16:29.600" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:29.600" starttime="20201211 02:16:25.569"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20201211 02:16:29.600" starttime="20201211 02:16:29.600"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 02:16:29.605" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 02:16:29.605" starttime="20201211 02:16:29.605"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:16:29.606" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 02:16:29.606" starttime="20201211 02:16:29.606"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:29.606" starttime="20201211 02:16:29.604"></status>
</kw>
<msg timestamp="20201211 02:16:29.607" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 02:16:29.607" starttime="20201211 02:16:29.603"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:29.607" starttime="20201211 02:16:29.602"></status>
</kw>
<msg timestamp="20201211 02:16:29.607" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201211 02:16:29.607" starttime="20201211 02:16:29.601"></status>
</kw>
<msg timestamp="20201211 02:16:29.607" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20201211 02:16:29.607" starttime="20201211 02:16:29.600"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:29.611" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:33.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:33.336" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:33.336" starttime="20201211 02:16:29.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:33.337" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201211 02:16:33.338" starttime="20201211 02:16:33.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:33.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:33.339" starttime="20201211 02:16:33.338"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:33.339" starttime="20201211 02:16:29.609"></status>
</kw>
<msg timestamp="20201211 02:16:33.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:33.339" starttime="20201211 02:16:29.608"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:33.339" starttime="20201211 02:16:29.608"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:33.344" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:42.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:42.112" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:42.112" starttime="20201211 02:16:33.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:42.113" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201211 02:16:42.113" starttime="20201211 02:16:42.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:42.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:42.114" starttime="20201211 02:16:42.113"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:42.114" starttime="20201211 02:16:33.341"></status>
</kw>
<msg timestamp="20201211 02:16:42.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:42.114" starttime="20201211 02:16:33.340"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:42.115" starttime="20201211 02:16:33.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:42.118" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:47.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:47.886" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:47.886" starttime="20201211 02:16:42.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:47.888" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201211 02:16:47.888" starttime="20201211 02:16:47.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:47.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:47.889" starttime="20201211 02:16:47.888"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:47.889" starttime="20201211 02:16:42.116"></status>
</kw>
<msg timestamp="20201211 02:16:47.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:47.890" starttime="20201211 02:16:42.115"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:47.890" starttime="20201211 02:16:42.115"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:47.894" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:53.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:53.837" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:53.837" starttime="20201211 02:16:47.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:53.838" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201211 02:16:53.838" starttime="20201211 02:16:53.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:53.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:53.839" starttime="20201211 02:16:53.838"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:53.839" starttime="20201211 02:16:47.891"></status>
</kw>
<msg timestamp="20201211 02:16:53.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:53.840" starttime="20201211 02:16:47.891"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:53.840" starttime="20201211 02:16:47.890"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 02:16:53.840" critical="yes" starttime="20201211 02:16:13.288"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 02:16:53.846" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 02:16:53.846" starttime="20201211 02:16:53.845"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:16:53.847" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 02:16:53.847" starttime="20201211 02:16:53.846"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:53.847" starttime="20201211 02:16:53.845"></status>
</kw>
<msg timestamp="20201211 02:16:53.847" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 02:16:53.847" starttime="20201211 02:16:53.844"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:53.847" starttime="20201211 02:16:53.843"></status>
</kw>
<msg timestamp="20201211 02:16:53.847" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 02:16:53.847" starttime="20201211 02:16:53.843"></status>
</kw>
<msg timestamp="20201211 02:16:53.848" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 02:16:53.848" starttime="20201211 02:16:53.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:53.852" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:57.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:57.717" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:16:57.717" starttime="20201211 02:16:53.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:57.718" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201211 02:16:57.719" starttime="20201211 02:16:57.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:57.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:57.719" starttime="20201211 02:16:57.719"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:57.720" starttime="20201211 02:16:53.849"></status>
</kw>
<msg timestamp="20201211 02:16:57.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:57.720" starttime="20201211 02:16:53.849"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:57.720" starttime="20201211 02:16:53.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:57.725" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:17:01.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:17:01.374" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20201211 02:17:01.374" starttime="20201211 02:16:57.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:17:01.376" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.1.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20201211 02:17:01.376" starttime="20201211 02:17:01.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:17:01.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:17:01.378" starttime="20201211 02:17:01.377"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:01.378" starttime="20201211 02:16:57.722"></status>
</kw>
<msg timestamp="20201211 02:17:01.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:17:01.378" starttime="20201211 02:16:57.722"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:01.378" starttime="20201211 02:16:57.721"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 02:17:01.379" critical="yes" starttime="20201211 02:16:53.841"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20201211 02:17:01.380" starttime="20201211 02:16:13.222"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 02:19:22.860" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 02:19:22.860" starttime="20201211 02:19:22.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:19:22.861" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 02:19:22.861" starttime="20201211 02:19:22.861"></status>
</kw>
<status status="PASS" endtime="20201211 02:19:22.862" starttime="20201211 02:19:22.859"></status>
</kw>
<msg timestamp="20201211 02:19:22.862" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 02:19:22.862" starttime="20201211 02:19:22.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 02:19:22.863" starttime="20201211 02:19:22.862"></status>
</kw>
<msg timestamp="20201211 02:19:22.863" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 02:19:22.863" starttime="20201211 02:19:22.862"></status>
</kw>
<status status="PASS" endtime="20201211 02:19:22.863" starttime="20201211 02:19:22.858"></status>
</kw>
<msg timestamp="20201211 02:19:22.864" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 02:19:22.864" starttime="20201211 02:19:22.857"></status>
</kw>
<msg timestamp="20201211 02:19:22.864" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 02:19:22.864" starttime="20201211 02:19:22.856"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 02:19:22.865" level="INFO">${random} = 00832</msg>
<status status="PASS" endtime="20201211 02:19:22.865" starttime="20201211 02:19:22.864"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:19:22.871" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-00832 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:19:26.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:19:26.834" level="INFO">${output} = 2020-12-11 02:19:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:19:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201211 02:19:26.834" starttime="20201211 02:19:22.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:19:26.836" level="INFO">2020-12-11 02:19:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:19:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 02:19:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 02:19:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 02:19:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1087111EFC70-&gt;02964681-4d12-40a8-8b90-c3459b12dfa9
2020-12-11 02:19:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201211 02:19:26.836" starttime="20201211 02:19:26.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:19:26.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:19:26.836" starttime="20201211 02:19:26.836"></status>
</kw>
<status status="PASS" endtime="20201211 02:19:26.837" starttime="20201211 02:19:22.866"></status>
</kw>
<msg timestamp="20201211 02:19:26.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:19:26.837" starttime="20201211 02:19:22.866"></status>
</kw>
<msg timestamp="20201211 02:19:26.837" level="INFO">${result} = 2020-12-11 02:19:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:19:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201211 02:19:26.837" starttime="20201211 02:19:22.865"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:19:26.843" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:19:29.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:19:29.019" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 02:16 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 02:19 ofs://om/volume1/bucket1/ozone-00832
-rw-...</msg>
<status status="PASS" endtime="20201211 02:19:29.019" starttime="20201211 02:19:26.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:19:29.021" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 02:16 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 02:19 ofs://om/volume1/bucket1/ozone-00832
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 02:17 ofs://om/volume1/bucket1/ozone-96960
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 02:16 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 02:18 ofs://om/volume1/bucket1/wordcount-82.txt</msg>
<status status="PASS" endtime="20201211 02:19:29.021" starttime="20201211 02:19:29.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:19:29.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:19:29.022" starttime="20201211 02:19:29.021"></status>
</kw>
<status status="PASS" endtime="20201211 02:19:29.022" starttime="20201211 02:19:26.840"></status>
</kw>
<msg timestamp="20201211 02:19:29.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:19:29.022" starttime="20201211 02:19:26.840"></status>
</kw>
<msg timestamp="20201211 02:19:29.023" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 02:16 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 02:19 ofs://om/volume1/bucket1/ozone-00832
-rw-...</msg>
<status status="PASS" endtime="20201211 02:19:29.023" starttime="20201211 02:19:26.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201211 02:19:29.023" starttime="20201211 02:19:29.023"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201211 02:19:29.023" critical="yes" starttime="20201211 02:19:22.855"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201211 02:19:29.025" starttime="20201211 02:19:22.788"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 02:17:44.820" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 02:17:44.820" starttime="20201211 02:17:44.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:17:44.821" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 02:17:44.821" starttime="20201211 02:17:44.821"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:44.821" starttime="20201211 02:17:44.819"></status>
</kw>
<msg timestamp="20201211 02:17:44.821" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 02:17:44.822" starttime="20201211 02:17:44.819"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:44.822" starttime="20201211 02:17:44.818"></status>
</kw>
<msg timestamp="20201211 02:17:44.822" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 02:17:44.822" starttime="20201211 02:17:44.817"></status>
</kw>
<msg timestamp="20201211 02:17:44.822" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 02:17:44.822" starttime="20201211 02:17:44.816"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 02:17:44.823" level="INFO">${random} = 96960</msg>
<status status="PASS" endtime="20201211 02:17:44.823" starttime="20201211 02:17:44.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:17:44.830" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-96960 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:17:49.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:17:49.001" level="INFO">${output} = 2020-12-11 02:17:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:17:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201211 02:17:49.001" starttime="20201211 02:17:44.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:17:49.003" level="INFO">2020-12-11 02:17:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:17:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 02:17:47 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 02:17:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 02:17:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6B8E2E17773E-&gt;02964681-4d12-40a8-8b90-c3459b12dfa9
2020-12-11 02:17:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20201211 02:17:49.003" starttime="20201211 02:17:49.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:17:49.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:17:49.004" starttime="20201211 02:17:49.003"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:49.004" starttime="20201211 02:17:44.825"></status>
</kw>
<msg timestamp="20201211 02:17:49.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:17:49.004" starttime="20201211 02:17:44.824"></status>
</kw>
<msg timestamp="20201211 02:17:49.005" level="INFO">${result} = 2020-12-11 02:17:47 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:17:47 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020...</msg>
<status status="PASS" endtime="20201211 02:17:49.005" starttime="20201211 02:17:44.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:17:49.011" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:17:51.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:17:51.365" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 02:16 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 02:17 o3fs://bucket1.volume1.om/ozone-96960
dr...</msg>
<status status="PASS" endtime="20201211 02:17:51.365" starttime="20201211 02:17:49.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:17:51.367" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 02:16 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 02:17 o3fs://bucket1.volume1.om/ozone-96960
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 02:16 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20201211 02:17:51.367" starttime="20201211 02:17:51.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:17:51.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:17:51.367" starttime="20201211 02:17:51.367"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:51.368" starttime="20201211 02:17:49.007"></status>
</kw>
<msg timestamp="20201211 02:17:51.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:17:51.368" starttime="20201211 02:17:49.005"></status>
</kw>
<msg timestamp="20201211 02:17:51.368" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2020-12-11 02:16 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      22125 2020-12-11 02:17 o3fs://bucket1.volume1.om/ozone-96960
dr...</msg>
<status status="PASS" endtime="20201211 02:17:51.368" starttime="20201211 02:17:49.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20201211 02:17:51.369" starttime="20201211 02:17:51.368"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20201211 02:17:51.369" critical="yes" starttime="20201211 02:17:44.815"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20201211 02:17:51.371" starttime="20201211 02:17:44.747"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:17:39.048" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:17:39.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:17:39.050" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20201211 02:17:39.050" starttime="20201211 02:17:39.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:17:39.051" level="INFO">rm</msg>
<status status="PASS" endtime="20201211 02:17:39.052" starttime="20201211 02:17:39.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:17:39.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:17:39.052" starttime="20201211 02:17:39.052"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:39.053" starttime="20201211 02:17:39.043"></status>
</kw>
<msg timestamp="20201211 02:17:39.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:17:39.053" starttime="20201211 02:17:39.043"></status>
</kw>
<msg timestamp="20201211 02:17:39.053" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20201211 02:17:39.053" starttime="20201211 02:17:39.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201211 02:17:39.055" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201211 02:17:39.055" starttime="20201211 02:17:39.054"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:17:39.059" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:17:39.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:17:39.142" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 02:17:39.142" starttime="20201211 02:17:39.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:17:39.143" level="INFO"></msg>
<status status="PASS" endtime="20201211 02:17:39.143" starttime="20201211 02:17:39.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:17:39.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:17:39.144" starttime="20201211 02:17:39.143"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:39.144" starttime="20201211 02:17:39.056"></status>
</kw>
<msg timestamp="20201211 02:17:39.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:17:39.145" starttime="20201211 02:17:39.056"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:39.145" starttime="20201211 02:17:39.055"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:39.145" starttime="20201211 02:17:39.055"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:39.145" starttime="20201211 02:17:39.041"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 02:17:39.145" critical="yes" starttime="20201211 02:17:39.040"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201211 02:17:39.146" starttime="20201211 02:17:38.973"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:07.744" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:07.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:07.747" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20201211 02:16:07.747" starttime="20201211 02:16:07.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:07.748" level="INFO">om</msg>
<status status="PASS" endtime="20201211 02:16:07.748" starttime="20201211 02:16:07.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:07.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:07.749" starttime="20201211 02:16:07.748"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:07.750" starttime="20201211 02:16:07.739"></status>
</kw>
<msg timestamp="20201211 02:16:07.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:07.750" starttime="20201211 02:16:07.739"></status>
</kw>
<msg timestamp="20201211 02:16:07.750" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20201211 02:16:07.750" starttime="20201211 02:16:07.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20201211 02:16:07.751" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20201211 02:16:07.751" starttime="20201211 02:16:07.750"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:16:07.756" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:16:07.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:16:07.768" level="INFO">${output} = </msg>
<status status="PASS" endtime="20201211 02:16:07.768" starttime="20201211 02:16:07.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:16:07.769" level="INFO"></msg>
<status status="PASS" endtime="20201211 02:16:07.769" starttime="20201211 02:16:07.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:16:07.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:16:07.770" starttime="20201211 02:16:07.769"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:07.770" starttime="20201211 02:16:07.753"></status>
</kw>
<msg timestamp="20201211 02:16:07.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:16:07.770" starttime="20201211 02:16:07.752"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:07.771" starttime="20201211 02:16:07.751"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:07.771" starttime="20201211 02:16:07.751"></status>
</kw>
<status status="PASS" endtime="20201211 02:16:07.771" starttime="20201211 02:16:07.737"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20201211 02:16:07.771" critical="yes" starttime="20201211 02:16:07.736"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20201211 02:16:07.772" starttime="20201211 02:16:07.669"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:19:34.729" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:19:34.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:19:34.734" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:19:34.734" starttime="20201211 02:19:34.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:19:34.735" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:19:34.735" starttime="20201211 02:19:34.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:19:34.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:19:34.736" starttime="20201211 02:19:34.735"></status>
</kw>
<status status="PASS" endtime="20201211 02:19:34.736" starttime="20201211 02:19:34.723"></status>
</kw>
<msg timestamp="20201211 02:19:34.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:19:34.737" starttime="20201211 02:19:34.723"></status>
</kw>
<msg timestamp="20201211 02:19:34.737" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:19:34.737" starttime="20201211 02:19:34.722"></status>
</kw>
<msg timestamp="20201211 02:19:34.737" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:19:34.737" starttime="20201211 02:19:34.721"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 02:19:34.742" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 02:19:34.742" starttime="20201211 02:19:34.742"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:19:34.743" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 02:19:34.743" starttime="20201211 02:19:34.743"></status>
</kw>
<status status="PASS" endtime="20201211 02:19:34.744" starttime="20201211 02:19:34.740"></status>
</kw>
<msg timestamp="20201211 02:19:34.744" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 02:19:34.744" starttime="20201211 02:19:34.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 02:19:34.745" starttime="20201211 02:19:34.745"></status>
</kw>
<msg timestamp="20201211 02:19:34.745" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 02:19:34.745" starttime="20201211 02:19:34.744"></status>
</kw>
<status status="PASS" endtime="20201211 02:19:34.746" starttime="20201211 02:19:34.739"></status>
</kw>
<msg timestamp="20201211 02:19:34.746" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 02:19:34.746" starttime="20201211 02:19:34.738"></status>
</kw>
<msg timestamp="20201211 02:19:34.746" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 02:19:34.746" starttime="20201211 02:19:34.737"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:19:34.752" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:20:13.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:20:13.811" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 02:19:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:19:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201211 02:20:13.811" starttime="20201211 02:19:34.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:20:13.812" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-11 02:19:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:19:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 02:19:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 02:19:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 02:19:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B5C4BDD53DA3-&gt;02964681-4d12-40a8-8b90-c3459b12dfa9
2020-12-11 02:19:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-11 02:19:41 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-11 02:19:41 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-12-11 02:19:41 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653181708, maxDate=1608257981708, sequenceNumber=3, masterKeyId=2))
2020-12-11 02:19:41 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 82 91 e3 fc e4 2e 38 82 99 95 9d e7 2e 40 03 48 01 5a 0d 37 35 39 38 37 38 37 37 36 30 39 34 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-11 02:19:41 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653181708, maxDate=1608257981708, sequenceNumber=3, masterKeyId=2)
2020-12-11 02:19:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 02:19:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 02:19:42 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 02:19:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607652912489_0003
2020-12-11 02:19:42 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653181708, maxDate=1608257981708, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 82 91 e3 fc e4 2e 38 82 99 95 9d e7 2e 40 03 48 01 5a 0d 37 35 39 38 37 38 37 37 36 30 39 34 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-11 02:19:42 INFO  Configuration:2795 - resource-types.xml not found
2020-12-11 02:19:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-11 02:19:42 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-11 02:19:43 INFO  YarnClientImpl:329 - Submitted application application_1607652912489_0003
2020-12-11 02:19:43 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607652912489_0003/
2020-12-11 02:19:43 INFO  Job:1619 - Running job: job_1607652912489_0003
2020-12-11 02:19:51 INFO  Job:1640 - Job job_1607652912489_0003 running in uber mode : false
2020-12-11 02:19:51 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 02:20:03 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 02:20:05 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 02:20:07 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 02:20:12 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 02:20:13 INFO  Job:1658 - Job job_1607652912489_0003 completed successfully
2020-12-11 02:20:13 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56348
		Total time spent by all reduces in occupied slots (ms)=8732
		Total time spent by all map tasks (ms)=28174
		Total time spent by all reduce tasks (ms)=4366
		Total vcore-milliseconds taken by all map tasks=28174
		Total vcore-milliseconds taken by all reduce tasks=4366
		Total megabyte-milliseconds taken by all map tasks=57700352
		Total megabyte-milliseconds taken by all reduce tasks=8941568
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1735
		CPU time spent (ms)=9660
		Physical memory (bytes) snapshot=1621073920
		Virtual memory (bytes) snapshot=14064484352
		Total committed heap usage (bytes)=1399848960
		Peak Map Physical memory (bytes)=548478976
		Peak Map Virtual memory (bytes)=3512676352
		Peak Reduce Physical memory (bytes)=301228032
		Peak Reduce Virtual memory (bytes)=3532247040
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.111 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201211 02:20:13.812" starttime="20201211 02:20:13.811"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:20:13.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:20:13.813" starttime="20201211 02:20:13.813"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.814" starttime="20201211 02:19:34.747"></status>
</kw>
<msg timestamp="20201211 02:20:13.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:20:13.814" starttime="20201211 02:19:34.747"></status>
</kw>
<msg timestamp="20201211 02:20:13.815" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 02:19:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:19:37 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201211 02:20:13.815" starttime="20201211 02:19:34.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 02:20:13.815" starttime="20201211 02:20:13.815"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 02:20:13.816" critical="yes" starttime="20201211 02:19:34.721"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:20:13.823" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:20:13.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:20:13.830" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:20:13.830" starttime="20201211 02:20:13.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:20:13.831" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:20:13.831" starttime="20201211 02:20:13.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:20:13.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:20:13.832" starttime="20201211 02:20:13.831"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.832" starttime="20201211 02:20:13.820"></status>
</kw>
<msg timestamp="20201211 02:20:13.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:20:13.833" starttime="20201211 02:20:13.819"></status>
</kw>
<msg timestamp="20201211 02:20:13.833" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:20:13.833" starttime="20201211 02:20:13.819"></status>
</kw>
<msg timestamp="20201211 02:20:13.833" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:20:13.833" starttime="20201211 02:20:13.818"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 02:20:13.834" level="INFO">${random} = 86</msg>
<status status="PASS" endtime="20201211 02:20:13.834" starttime="20201211 02:20:13.833"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 02:20:13.839" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 02:20:13.839" starttime="20201211 02:20:13.838"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:20:13.840" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 02:20:13.840" starttime="20201211 02:20:13.839"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.840" starttime="20201211 02:20:13.838"></status>
</kw>
<msg timestamp="20201211 02:20:13.840" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 02:20:13.840" starttime="20201211 02:20:13.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20201211 02:20:13.841" starttime="20201211 02:20:13.841"></status>
</kw>
<msg timestamp="20201211 02:20:13.841" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20201211 02:20:13.841" starttime="20201211 02:20:13.840"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.842" starttime="20201211 02:20:13.836"></status>
</kw>
<msg timestamp="20201211 02:20:13.842" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 02:20:13.842" starttime="20201211 02:20:13.835"></status>
</kw>
<msg timestamp="20201211 02:20:13.842" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20201211 02:20:13.842" starttime="20201211 02:20:13.834"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 02:20:13.846" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 02:20:13.846" starttime="20201211 02:20:13.846"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:20:13.847" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 02:20:13.847" starttime="20201211 02:20:13.847"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.848" starttime="20201211 02:20:13.845"></status>
</kw>
<msg timestamp="20201211 02:20:13.848" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 02:20:13.848" starttime="20201211 02:20:13.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 02:20:13.850" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20201211 02:20:13.850" starttime="20201211 02:20:13.849"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:20:13.850" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20201211 02:20:13.850" starttime="20201211 02:20:13.850"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.851" starttime="20201211 02:20:13.849"></status>
</kw>
<msg timestamp="20201211 02:20:13.851" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20201211 02:20:13.851" starttime="20201211 02:20:13.848"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.851" starttime="20201211 02:20:13.844"></status>
</kw>
<msg timestamp="20201211 02:20:13.851" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201211 02:20:13.851" starttime="20201211 02:20:13.843"></status>
</kw>
<msg timestamp="20201211 02:20:13.852" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20201211 02:20:13.852" starttime="20201211 02:20:13.842"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20201211 02:20:13.856" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20201211 02:20:13.856" starttime="20201211 02:20:13.855"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:20:13.857" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20201211 02:20:13.857" starttime="20201211 02:20:13.856"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.857" starttime="20201211 02:20:13.855"></status>
</kw>
<msg timestamp="20201211 02:20:13.857" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20201211 02:20:13.857" starttime="20201211 02:20:13.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 02:20:13.859" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20201211 02:20:13.859" starttime="20201211 02:20:13.858"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:20:13.860" level="INFO">${result} = /wordcount-86.txt</msg>
<status status="PASS" endtime="20201211 02:20:13.860" starttime="20201211 02:20:13.859"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.860" starttime="20201211 02:20:13.858"></status>
</kw>
<msg timestamp="20201211 02:20:13.860" level="INFO">${path_with_leading} = /wordcount-86.txt</msg>
<status status="PASS" endtime="20201211 02:20:13.860" starttime="20201211 02:20:13.857"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:13.861" starttime="20201211 02:20:13.853"></status>
</kw>
<msg timestamp="20201211 02:20:13.861" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-86.txt</msg>
<status status="PASS" endtime="20201211 02:20:13.861" starttime="20201211 02:20:13.853"></status>
</kw>
<msg timestamp="20201211 02:20:13.861" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-86.txt</msg>
<status status="PASS" endtime="20201211 02:20:13.861" starttime="20201211 02:20:13.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:20:13.867" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-86.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:20:48.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:20:48.838" level="INFO">${output} = 2020-12-11 02:20:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-11 02:20:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
20...</msg>
<status status="PASS" endtime="20201211 02:20:48.838" starttime="20201211 02:20:13.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:20:48.840" level="INFO">2020-12-11 02:20:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-11 02:20:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-12-11 02:20:16 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653216416, maxDate=1608258016416, sequenceNumber=4, masterKeyId=2))
2020-12-11 02:20:16 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 cd a0 e5 fc e4 2e 38 cd a8 97 9d e7 2e 40 04 48 01 5a 0d 37 35 39 38 37 38 37 37 36 30 39 34 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-11 02:20:16 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653216416, maxDate=1608258016416, sequenceNumber=4, masterKeyId=2)
2020-12-11 02:20:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 02:20:16 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:20:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 02:20:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 02:20:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 02:20:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BE7E08A2563F-&gt;02964681-4d12-40a8-8b90-c3459b12dfa9
2020-12-11 02:20:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 02:20:18 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 02:20:18 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 02:20:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607652912489_0004
2020-12-11 02:20:18 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653216416, maxDate=1608258016416, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 cd a0 e5 fc e4 2e 38 cd a8 97 9d e7 2e 40 04 48 01 5a 0d 37 35 39 38 37 38 37 37 36 30 39 34 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-11 02:20:19 INFO  Configuration:2795 - resource-types.xml not found
2020-12-11 02:20:19 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-11 02:20:19 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-11 02:20:19 INFO  YarnClientImpl:329 - Submitted application application_1607652912489_0004
2020-12-11 02:20:19 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607652912489_0004/
2020-12-11 02:20:19 INFO  Job:1619 - Running job: job_1607652912489_0004
2020-12-11 02:20:29 INFO  Job:1640 - Job job_1607652912489_0004 running in uber mode : false
2020-12-11 02:20:29 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 02:20:40 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 02:20:42 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 02:20:47 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 02:20:48 INFO  Job:1658 - Job job_1607652912489_0004 completed successfully
2020-12-11 02:20:48 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128411
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52902
		Total time spent by all reduces in occupied slots (ms)=8294
		Total time spent by all map tasks (ms)=26451
		Total time spent by all reduce tasks (ms)=4147
		Total vcore-milliseconds taken by all map tasks=26451
		Total vcore-milliseconds taken by all reduce tasks=4147
		Total megabyte-milliseconds taken by all map tasks=54171648
		Total megabyte-milliseconds taken by all reduce tasks=8493056
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1674
		CPU time spent (ms)=8930
		Physical memory (bytes) snapshot=1596641280
		Virtual memory (bytes) snapshot=14053355520
		Total committed heap usage (bytes)=1427636224
		Peak Map Physical memory (bytes)=547172352
		Peak Map Virtual memory (bytes)=3511201792
		Peak Reduce Physical memory (bytes)=298278912
		Peak Reduce Virtual memory (bytes)=3522723840
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201211 02:20:48.840" starttime="20201211 02:20:48.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:20:48.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:20:48.841" starttime="20201211 02:20:48.840"></status>
</kw>
<status status="PASS" endtime="20201211 02:20:48.841" starttime="20201211 02:20:13.862"></status>
</kw>
<msg timestamp="20201211 02:20:48.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:20:48.841" starttime="20201211 02:20:13.862"></status>
</kw>
<msg timestamp="20201211 02:20:48.842" level="INFO">${output} = 2020-12-11 02:20:16 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-11 02:20:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
20...</msg>
<status status="PASS" endtime="20201211 02:20:48.842" starttime="20201211 02:20:13.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201211 02:20:48.843" starttime="20201211 02:20:48.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 02:20:48.844" starttime="20201211 02:20:48.843"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 02:20:48.844" critical="yes" starttime="20201211 02:20:13.817"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201211 02:20:48.846" starttime="20201211 02:19:34.651"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:17:57.088" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:17:57.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:17:57.094" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:17:57.094" starttime="20201211 02:17:57.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:17:57.095" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:17:57.095" starttime="20201211 02:17:57.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:17:57.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:17:57.096" starttime="20201211 02:17:57.096"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:57.097" starttime="20201211 02:17:57.082"></status>
</kw>
<msg timestamp="20201211 02:17:57.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:17:57.097" starttime="20201211 02:17:57.081"></status>
</kw>
<msg timestamp="20201211 02:17:57.097" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:17:57.097" starttime="20201211 02:17:57.081"></status>
</kw>
<msg timestamp="20201211 02:17:57.097" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:17:57.097" starttime="20201211 02:17:57.080"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 02:17:57.102" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 02:17:57.102" starttime="20201211 02:17:57.102"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:17:57.103" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 02:17:57.103" starttime="20201211 02:17:57.103"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:57.104" starttime="20201211 02:17:57.100"></status>
</kw>
<msg timestamp="20201211 02:17:57.104" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 02:17:57.104" starttime="20201211 02:17:57.099"></status>
</kw>
<status status="PASS" endtime="20201211 02:17:57.104" starttime="20201211 02:17:57.099"></status>
</kw>
<msg timestamp="20201211 02:17:57.104" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 02:17:57.104" starttime="20201211 02:17:57.098"></status>
</kw>
<msg timestamp="20201211 02:17:57.105" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 02:17:57.105" starttime="20201211 02:17:57.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:17:57.111" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:18:37.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:18:37.204" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 02:17:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:17:59 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201211 02:18:37.204" starttime="20201211 02:17:57.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:18:37.205" level="INFO">Number of Maps  = 3
Samples per Map = 3
2020-12-11 02:17:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:17:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 02:17:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 02:17:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 02:17:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F9B502B391CB-&gt;02964681-4d12-40a8-8b90-c3459b12dfa9
2020-12-11 02:17:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2020-12-11 02:18:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-11 02:18:01 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-12-11 02:18:01 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653081810, maxDate=1608257881810, sequenceNumber=1, masterKeyId=2))
2020-12-11 02:18:01 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 84 83 dd fc e4 2e 38 84 8b 8f 9d e7 2e 40 01 48 01 5a 0d 37 35 39 38 37 38 37 37 36 30 39 34 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-11 02:18:01 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653081810, maxDate=1608257881810, sequenceNumber=1, masterKeyId=2)
2020-12-11 02:18:02 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 02:18:02 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 02:18:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607652912489_0001
2020-12-11 02:18:02 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653081810, maxDate=1608257881810, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 84 83 dd fc e4 2e 38 84 8b 8f 9d e7 2e 40 01 48 01 5a 0d 37 35 39 38 37 38 37 37 36 30 39 34 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-11 02:18:03 INFO  Configuration:2795 - resource-types.xml not found
2020-12-11 02:18:03 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-11 02:18:03 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-11 02:18:04 INFO  YarnClientImpl:329 - Submitted application application_1607652912489_0001
2020-12-11 02:18:05 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607652912489_0001/
2020-12-11 02:18:05 INFO  Job:1619 - Running job: job_1607652912489_0001
2020-12-11 02:18:16 INFO  Job:1640 - Job job_1607652912489_0001 running in uber mode : false
2020-12-11 02:18:16 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 02:18:28 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 02:18:29 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 02:18:30 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 02:18:35 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 02:18:36 INFO  Job:1658 - Job job_1607652912489_0001 completed successfully
2020-12-11 02:18:36 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1065973
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=54806
		Total time spent by all reduces in occupied slots (ms)=8500
		Total time spent by all map tasks (ms)=27403
		Total time spent by all reduce tasks (ms)=4250
		Total vcore-milliseconds taken by all map tasks=27403
		Total vcore-milliseconds taken by all reduce tasks=4250
		Total megabyte-milliseconds taken by all map tasks=56121344
		Total megabyte-milliseconds taken by all reduce tasks=8704000
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1114
		CPU time spent (ms)=7980
		Physical memory (bytes) snapshot=1462370304
		Virtual memory (bytes) snapshot=14055772160
		Total committed heap usage (bytes)=1216872448
		Peak Map Physical memory (bytes)=385814528
		Peak Map Virtual memory (bytes)=3510022144
		Peak Reduce Physical memory (bytes)=308187136
		Peak Reduce Virtual memory (bytes)=3529564160
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.602 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20201211 02:18:37.206" starttime="20201211 02:18:37.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:18:37.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:18:37.206" starttime="20201211 02:18:37.206"></status>
</kw>
<status status="PASS" endtime="20201211 02:18:37.206" starttime="20201211 02:17:57.106"></status>
</kw>
<msg timestamp="20201211 02:18:37.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:18:37.207" starttime="20201211 02:17:57.106"></status>
</kw>
<msg timestamp="20201211 02:18:37.207" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2020-12-11 02:17:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:17:59 INFO  MetricsSystemImpl:374 - Scheduled Metr...</msg>
<status status="PASS" endtime="20201211 02:18:37.207" starttime="20201211 02:17:57.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 02:18:37.208" starttime="20201211 02:18:37.207"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 02:18:37.208" critical="yes" starttime="20201211 02:17:57.079"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:18:37.215" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:18:37.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:18:37.222" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:18:37.223" starttime="20201211 02:18:37.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:18:37.224" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:18:37.224" starttime="20201211 02:18:37.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:18:37.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:18:37.225" starttime="20201211 02:18:37.224"></status>
</kw>
<status status="PASS" endtime="20201211 02:18:37.225" starttime="20201211 02:18:37.212"></status>
</kw>
<msg timestamp="20201211 02:18:37.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:18:37.225" starttime="20201211 02:18:37.211"></status>
</kw>
<msg timestamp="20201211 02:18:37.225" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:18:37.225" starttime="20201211 02:18:37.211"></status>
</kw>
<msg timestamp="20201211 02:18:37.226" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar</msg>
<status status="PASS" endtime="20201211 02:18:37.226" starttime="20201211 02:18:37.210"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>2</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20201211 02:18:37.226" level="INFO">${random} = 82</msg>
<status status="PASS" endtime="20201211 02:18:37.227" starttime="20201211 02:18:37.226"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 02:18:37.232" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 02:18:37.232" starttime="20201211 02:18:37.231"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:18:37.233" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 02:18:37.233" starttime="20201211 02:18:37.232"></status>
</kw>
<status status="PASS" endtime="20201211 02:18:37.233" starttime="20201211 02:18:37.231"></status>
</kw>
<msg timestamp="20201211 02:18:37.233" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 02:18:37.233" starttime="20201211 02:18:37.230"></status>
</kw>
<status status="PASS" endtime="20201211 02:18:37.234" starttime="20201211 02:18:37.229"></status>
</kw>
<msg timestamp="20201211 02:18:37.234" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 02:18:37.234" starttime="20201211 02:18:37.228"></status>
</kw>
<msg timestamp="20201211 02:18:37.234" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20201211 02:18:37.234" starttime="20201211 02:18:37.227"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 02:18:37.238" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 02:18:37.238" starttime="20201211 02:18:37.238"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:18:37.239" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 02:18:37.239" starttime="20201211 02:18:37.238"></status>
</kw>
<status status="PASS" endtime="20201211 02:18:37.239" starttime="20201211 02:18:37.237"></status>
</kw>
<msg timestamp="20201211 02:18:37.239" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 02:18:37.239" starttime="20201211 02:18:37.236"></status>
</kw>
<status status="PASS" endtime="20201211 02:18:37.239" starttime="20201211 02:18:37.236"></status>
</kw>
<msg timestamp="20201211 02:18:37.240" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201211 02:18:37.240" starttime="20201211 02:18:37.235"></status>
</kw>
<msg timestamp="20201211 02:18:37.240" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20201211 02:18:37.240" starttime="20201211 02:18:37.234"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20201211 02:18:37.244" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20201211 02:18:37.244" starttime="20201211 02:18:37.243"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201211 02:18:37.246" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20201211 02:18:37.246" starttime="20201211 02:18:37.244"></status>
</kw>
<status status="PASS" endtime="20201211 02:18:37.246" starttime="20201211 02:18:37.242"></status>
</kw>
<msg timestamp="20201211 02:18:37.247" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20201211 02:18:37.247" starttime="20201211 02:18:37.242"></status>
</kw>
<status status="PASS" endtime="20201211 02:18:37.247" starttime="20201211 02:18:37.241"></status>
</kw>
<msg timestamp="20201211 02:18:37.247" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-82.txt</msg>
<status status="PASS" endtime="20201211 02:18:37.247" starttime="20201211 02:18:37.241"></status>
</kw>
<msg timestamp="20201211 02:18:37.247" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-82.txt</msg>
<status status="PASS" endtime="20201211 02:18:37.247" starttime="20201211 02:18:37.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20201211 02:18:37.252" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.1.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-82.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20201211 02:19:16.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20201211 02:19:16.521" level="INFO">${output} = 2020-12-11 02:18:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-11 02:18:39 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
20...</msg>
<status status="PASS" endtime="20201211 02:19:16.521" starttime="20201211 02:18:37.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20201211 02:19:16.522" level="INFO">2020-12-11 02:18:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-11 02:18:39 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
2020-12-11 02:18:40 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653120031, maxDate=1608257920031, sequenceNumber=2, masterKeyId=2))
2020-12-11 02:18:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a8 af df fc e4 2e 38 a8 b7 91 9d e7 2e 40 02 48 01 5a 0d 37 35 39 38 37 38 37 37 36 30 39 34 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2020-12-11 02:18:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653120031, maxDate=1608257920031, sequenceNumber=2, masterKeyId=2)
2020-12-11 02:18:40 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2020-12-11 02:18:40 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2020-12-11 02:18:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2020-12-11 02:18:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2020-12-11 02:18:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2020-12-11 02:18:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AE0518663ADA-&gt;02964681-4d12-40a8-8b90-c3459b12dfa9
2020-12-11 02:18:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2020-12-11 02:18:42 INFO  FileInputFormat:292 - Total input files to process : 3
2020-12-11 02:18:42 INFO  JobSubmitter:202 - number of splits:3
2020-12-11 02:18:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1607652912489_0002
2020-12-11 02:18:42 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1607653120031, maxDate=1608257920031, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.25.0.5:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a8 af df fc e4 2e 38 a8 b7 91 9d e7 2e 40 02 48 01 5a 0d 37 35 39 38 37 38 37 37 36 30 39 34 39 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2020-12-11 02:18:42 INFO  Configuration:2795 - resource-types.xml not found
2020-12-11 02:18:42 INFO  ResourceUtils:440 - Unable to find 'resource-types.xml'.
2020-12-11 02:18:42 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2020-12-11 02:18:44 INFO  YarnClientImpl:329 - Submitted application application_1607652912489_0002
2020-12-11 02:18:44 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1607652912489_0002/
2020-12-11 02:18:44 INFO  Job:1619 - Running job: job_1607652912489_0002
2020-12-11 02:18:53 INFO  Job:1640 - Job job_1607652912489_0002 running in uber mode : false
2020-12-11 02:18:53 INFO  Job:1647 -  map 0% reduce 0%
2020-12-11 02:19:04 INFO  Job:1647 -  map 33% reduce 0%
2020-12-11 02:19:06 INFO  Job:1647 -  map 67% reduce 0%
2020-12-11 02:19:07 INFO  Job:1647 -  map 100% reduce 0%
2020-12-11 02:19:11 INFO  Job:1647 -  map 100% reduce 100%
2020-12-11 02:19:16 INFO  Job:1658 - Job job_1607652912489_0002 completed successfully
2020-12-11 02:19:16 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1128495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=56310
		Total time spent by all reduces in occupied slots (ms)=8172
		Total time spent by all map tasks (ms)=28155
		Total time spent by all reduce tasks (ms)=4086
		Total vcore-milliseconds taken by all map tasks=28155
		Total vcore-milliseconds taken by all reduce tasks=4086
		Total megabyte-milliseconds taken by all map tasks=57661440
		Total megabyte-milliseconds taken by all reduce tasks=8368128
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1768
		CPU time spent (ms)=9320
		Physical memory (bytes) snapshot=1575460864
		Virtual memory (bytes) snapshot=14060376064
		Total committed heap usage (bytes)=1401421824
		Peak Map Physical memory (bytes)=547569664
		Peak Map Virtual memory (bytes)=3513114624
		Peak Reduce Physical memory (bytes)=299589632
		Peak Reduce Virtual memory (bytes)=3529117696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20201211 02:19:16.522" starttime="20201211 02:19:16.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20201211 02:19:16.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20201211 02:19:16.523" starttime="20201211 02:19:16.522"></status>
</kw>
<status status="PASS" endtime="20201211 02:19:16.523" starttime="20201211 02:18:37.249"></status>
</kw>
<msg timestamp="20201211 02:19:16.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20201211 02:19:16.524" starttime="20201211 02:18:37.248"></status>
</kw>
<msg timestamp="20201211 02:19:16.525" level="INFO">${output} = 2020-12-11 02:18:39 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.25.0.12:8032
2020-12-11 02:18:39 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.25.0.9:10200
20...</msg>
<status status="PASS" endtime="20201211 02:19:16.525" starttime="20201211 02:18:37.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20201211 02:19:16.525" starttime="20201211 02:19:16.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20201211 02:19:16.526" starttime="20201211 02:19:16.526"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20201211 02:19:16.526" critical="yes" starttime="20201211 02:18:37.209"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20201211 02:19:16.528" starttime="20201211 02:17:57.011"></status>
</suite>
<status status="PASS" elapsedtime="215007" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
